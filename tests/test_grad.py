import numpy as np
import pytest

from veloxchem.dispersionmodel import DispersionModel
from veloxchem.molecule import Molecule
from veloxchem.molecularbasis import MolecularBasis
from veloxchem.scfrestdriver import ScfRestrictedDriver
from veloxchem.scfgradientdriver import ScfGradientDriver


@pytest.mark.solvers
class TestGrad:

    def run_grad(self,
                 molecule,
                 xcfun_label,
                 basis_label,
                 ref_grad,
                 tol,
                 d4_flag='none'):

        basis = MolecularBasis.read(molecule, basis_label)

        scf_drv = ScfRestrictedDriver()
        scf_drv.ostream.mute()
        scf_drv.xcfun = xcfun_label
        scf_drv.dispersion = (d4_flag.lower() == 'd4')
        scf_results = scf_drv.compute(molecule, basis)

        grad_drv = ScfGradientDriver(scf_drv)
        grad_drv.compute(molecule, basis, scf_results)
        grad = grad_drv.get_gradient()

        assert np.max(np.abs(grad - ref_grad)) < tol

    def test_nh3_sto3g(self):

        molstr = """
        N         -1.96309        1.59755       -0.01963
        H         -1.95876        2.61528        0.03109
        H         -2.48929        1.27814        0.79244
        H         -2.52930        1.35928       -0.83265
        """
        mol = Molecule.read_molecule_string(molstr, units='bohr')

        ref_grad = np.array([
            [-2.888587557, 1.221331566, 0.132129132],
            [-0.105479436, -2.923179918, -0.143384888],
            [1.438804537, 0.969020086, -2.359547187],
            [1.555262551, 0.73282826, 2.370802938],
        ])

        self.run_grad(mol, 'hf', 'sto-3g', ref_grad, 1.0e-5)

        ref_grad = np.array([
            [-2.873799468, 1.215198063, 0.131585905],
            [-0.113565973, -2.928664889, -0.14345426],
            [1.435293848, 0.975265135, -2.366203284],
            [1.552071683, 0.738201687, 2.378071636],
        ])

        self.run_grad(mol, 'slater', 'sto-3g', ref_grad, 1.0e-3)

        ref_grad = np.array([
            [-2.876519928, 1.216364211, 0.131739421],
            [-0.108460154, -2.919174729, -0.1431125],
            [1.434336454, 0.969476068, -2.357160375],
            [1.550643723, 0.733334445, 2.36853345],
        ])

        self.run_grad(mol, 'b3lyp', 'sto-3g', ref_grad, 1.0e-3)

        ref_grad = np.array([
            [-2.878907996198, 1.217269805778, 0.131727256459],
            [-0.108011637021, -2.920207051051, -0.143159972801],
            [1.435293718618, 0.969491223046, -2.357940059536],
            [1.551626281223, 0.733445999103, 2.369372755918],
        ])

        self.run_grad(mol, 'tpssh', 'sto-3g', ref_grad, 1.0e-3)

    def test_nh3_def2svp(self):

        molstr = """
        N         -1.96309        1.59755       -0.01963
        H         -1.95876        2.61528        0.03109
        H         -2.48929        1.27814        0.79244
        H         -2.52930        1.35928       -0.83265
        """
        mol = Molecule.read_molecule_string(molstr, units='bohr')

        ref_grad = np.array([
            [-2.562618828, 1.083507795, 0.117218156],
            [-0.053356482, -2.49858497, -0.12346472],
            [1.258521466, 0.807861438, -2.006107219],
            [1.357453844, 0.607215804, 2.012353784],
        ])

        self.run_grad(mol, 'hf', 'def2-svp', ref_grad, 1.0e-5)

        ref_grad = np.array([
            [-2.581322923, 1.091539367, 0.11822825],
            [-0.05097685, -2.510432589, -0.124118285],
            [1.266492866, 0.810276952, -2.014801059],
            [1.365806903, 0.608616339, 2.020691095],
        ])

        self.run_grad(mol, 'slater', 'def2-svp', ref_grad, 1.0e-3)

        ref_grad = np.array([
            [-2.547170349, 1.077102097, 0.116671963],
            [-0.051578222, -2.480222494, -0.12259709],
            [1.250309951, 0.80119215, -1.990912643],
            [1.348438617, 0.601928317, 1.996837771],
        ])

        self.run_grad(mol, 'b3lyp', 'def2-svp', ref_grad, 1.0e-3)

        ref_grad = np.array([
            [-2.555885903796, 1.080707286327, 0.116874696857],
            [-0.051318147865, -2.487562129208, -0.122961219709],
            [1.254369938732, 0.803281622836, -1.996716969263],
            [1.352834099738, 0.603573491695, 2.002803496179],
        ])

        self.run_grad(mol, 'm06-l', 'def2-svp', ref_grad, 1.0e-3)

    def test_nh3_def2tzvp(self):

        molstr = """
        N         -1.96309        1.59755       -0.01963
        H         -1.95876        2.61528        0.03109
        H         -2.48929        1.27814        0.79244
        H         -2.52930        1.35928       -0.83265
        """
        mol = Molecule.read_molecule_string(molstr, units='bohr')

        ref_grad = np.array([
            [-2.478246946, 1.047834996, 0.113359555],
            [-0.069168194, -2.457697642, -0.121033449],
            [1.224912666, 0.80389326, -1.978135794],
            [1.322502472, 0.605969442, 1.985809689],
        ])

        self.run_grad(mol, 'hf', 'def2-tzvp', ref_grad, 1.0e-5)

        ref_grad = np.array([
            [-2.501928529, 1.057967134, 0.114588077],
            [-0.067408496, -2.475608776, -0.121973284],
            [1.235555346, 0.808541886, -1.9918392],
            [1.333781677, 0.60909981, 1.999224408],
        ])

        self.run_grad(mol, 'slater', 'def2-tzvp', ref_grad, 1.0e-3)

        ref_grad = np.array([
            [-2.465418321, 1.042533376, 0.112922677],
            [-0.068850758, -2.445197258, -0.120420134],
            [1.21861014, 0.799862455, -1.968032724],
            [1.315658937, 0.602801484, 1.975530182],
        ])

        self.run_grad(mol, 'b3lyp', 'def2-tzvp', ref_grad, 1.0e-3)

    def test_c2h4_sto3g(self):

        xyzstr = """
        6

        C      -0.667     -0.000     -0.000
        C       0.667      0.000     -0.000
        H      -1.227      0.930      0.000
        H      -1.227     -0.930     -0.000
        H       1.227      0.930     -0.000
        H       1.227     -0.930      0.000
        """
        mol = Molecule.read_xyz_string(xyzstr)

        ref_grad = np.array([
            [-0.044767308, -0., 0.],
            [0.044767309, 0., -0.],
            [0.001085613, 0.004870695, 0.],
            [0.001085613, -0.004870695, -0.],
            [-0.001085613, 0.004870695, 0.],
            [-0.001085613, -0.004870695, -0.],
        ])

        self.run_grad(mol, 'hf', 'sto-3g', ref_grad, 1.0e-6)

        ref_grad = np.array([
            [-0.009060148, -0., 0.],
            [0.009060148, -0., 0.],
            [0.011501495, -0.013764692, 0.],
            [0.011501495, 0.013764692, 0.],
            [-0.011501495, -0.013764692, -0.],
            [-0.011501495, 0.013764692, -0.],
        ])

        self.run_grad(mol, 'slater', 'sto-3g', ref_grad, 1.0e-4)

        ref_grad = np.array([
            [-0.013893467, 0., -0.],
            [0.013893467, 0., -0.],
            [0.007287869, -0.006172358, 0.],
            [0.007287869, 0.006172358, 0.],
            [-0.007287869, -0.006172358, 0.],
            [-0.007287869, 0.006172358, 0.],
        ])

        self.run_grad(mol, 'b3lyp', 'sto-3g', ref_grad, 1.0e-4)

    def test_dimer_def2svp(self):

        molstr_au = """
        N   -3.710    3.019   -0.037
        H   -3.702    4.942    0.059
        H   -4.704    2.415    1.497
        H   -4.780    2.569   -1.573
        C   -1.621   -5.080    0.444
        H   -0.819   -6.698   -0.465
        H   -3.412   -4.654   -0.393
        H   -0.381   -3.498    0.222
        H   -1.872   -5.468    2.413
        """
        mol = Molecule.read_molecule_string(molstr_au, units='bohr')

        ref_grad = np.array([
            [0.013189156, -0.005473663, -0.000536826],
            [-0.000550221, 0.011264141, 0.000565592],
            [-0.006167249, -0.003206608, 0.008748666],
            [-0.006640873, -0.002348776, -0.008778353],
            [-0.000696871, -0.000360951, -0.000103121],
            [-0.005825722, 0.012375651, 0.006763872],
            [0.013080977, -0.003251699, 0.006205005],
            [-0.008273194, -0.01196698, 0.00162161],
            [0.001883996, 0.002968893, -0.014486436],
        ])

        self.run_grad(mol, 'hf', 'def2-svp', ref_grad, 1.0e-6)

        ref_grad = np.array([
            [-0.02191031, 0.009828691, 0.001057775],
            [-0.00039106, -0.020394196, -0.001023344],
            [0.010562514, 0.00654966, -0.016390806],
            [0.011329561, 0.004875131, 0.016347406],
            [-0.000538406, 0.000034683, -0.000198635],
            [-0.014559311, 0.029849524, 0.016650973],
            [0.032460805, -0.008076788, 0.015284324],
            [-0.02151757, -0.029764751, 0.004065395],
            [0.004563774, 0.007098051, -0.035793084],
        ])

        self.run_grad(mol, 'slater', 'def2-svp', ref_grad, 1.0e-4)

        ref_grad = np.array([
            [-0.00437839, 0.002134209, 0.000256779],
            [0.000521184, -0.00230596, -0.000138807],
            [0.001790624, 0.000376476, -0.001705795],
            [0.001831088, 0.00019829, 0.00158385],
            [-0.000624488, -0.000163346, -0.000120067],
            [-0.008210996, 0.017102914, 0.009453618],
            [0.018324319, -0.00456262, 0.008653698],
            [-0.011858861, -0.01685942, 0.002288811],
            [0.002605518, 0.004079464, -0.02027208],
        ])

        self.run_grad(mol, 'b3lyp', 'def2-svp', ref_grad, 1.0e-4)

    @pytest.mark.skipif(not DispersionModel.is_available(),
                        reason='dftd4-python not available')
    def test_dimer_def2svp_d4(self):

        molstr_au = """
        N   -3.710    3.019   -0.037
        H   -3.702    4.942    0.059
        H   -4.704    2.415    1.497
        H   -4.780    2.569   -1.573
        C   -1.621   -5.080    0.444
        H   -0.819   -6.698   -0.465
        H   -3.412   -4.654   -0.393
        H   -0.381   -3.498    0.222
        H   -1.872   -5.468    2.413
        """
        mol = Molecule.read_molecule_string(molstr_au, units='bohr')

        ref_grad = np.array([[0.012820479, -0.005133886, -0.000532292],
                             [-0.000517402, 0.011062643, 0.000555069],
                             [-0.006051101, -0.003114417, 0.008595834],
                             [-0.006512872, -0.002283463, -0.008630396],
                             [-0.000656504, -0.000520428, -0.000092718],
                             [-0.005821206, 0.012370339, 0.006757606],
                             [0.013085469, -0.003310971, 0.006201275],
                             [-0.008234083, -0.012028037, 0.001623879],
                             [0.001887219, 0.002958227, -0.01447825]])

        self.run_grad(mol, 'hf', 'def2-svp', ref_grad, 1.0e-6, 'd4')

        ref_grad = np.array([[-0.004508326, 0.002351554, 0.000253069],
                             [0.000525179, -0.002348746, -0.000141812],
                             [0.001813106, 0.000424742, -0.001746064],
                             [0.001856943, 0.000235163, 0.001619904],
                             [-0.000587803, -0.000293513, -0.000114604],
                             [-0.008214226, 0.017107836, 0.009459502],
                             [0.018343682, -0.004617303, 0.008658392],
                             [-0.011840469, -0.016924871, 0.002292746],
                             [0.002611911, 0.004065144, -0.020281126]])

        self.run_grad(mol, 'b3lyp', 'def2-svp', ref_grad, 1.0e-4, 'd4')

        ref_grad = np.array([
            [-0.007110910062, 0.003458377677, 0.000381814516],
            [0.001043764328, -0.003519373607, -0.000214205137],
            [0.002833466148, 0.000528864447, -0.002555355216],
            [0.002905340686, 0.000258065768, 0.002372303044],
            [-0.000587933073, -0.000360689988, -0.000126342520],
            [-0.008165892076, 0.017019815687, 0.009411220624],
            [0.018286647077, -0.004592659366, 0.008624080010],
            [-0.011813668166, -0.016842207899, 0.002280767937],
            [0.002609174757, 0.004049834516, -0.020174252278],
        ])

        self.run_grad(mol, 'tpssh', 'def2-svp', ref_grad, 1.0e-4, 'd4')

    def test_dimer_def2tzvp(self):

        molstr_au = """
        N   -3.710    3.019   -0.037
        H   -3.702    4.942    0.059
        H   -4.704    2.415    1.497
        H   -4.780    2.569   -1.573
        C   -1.621   -5.080    0.444
        H   -0.819   -6.698   -0.465
        H   -3.412   -4.654   -0.393
        H   -0.381   -3.498    0.222
        H   -1.872   -5.468    2.413
        """
        mol = Molecule.read_molecule_string(molstr_au, units='bohr')

        ref_grad = np.array([
            [0.020675141, -0.008918088, -0.000876008],
            [-0.001616547, 0.015405216, 0.000800331],
            [-0.009261343, -0.00382839, 0.011706187],
            [-0.009862762, -0.002692708, -0.011627464],
            [-0.000679626, -0.000506479, -0.000071871],
            [-0.003615945, 0.007989962, 0.004262584],
            [0.008224555, -0.002019449, 0.00394373],
            [-0.005062917, -0.007375148, 0.001008668],
            [0.001199443, 0.001945091, -0.00914615],
        ])

        self.run_grad(mol, 'hf', 'def2-tzvp', ref_grad, 1.0e-6)

        ref_grad = np.array([
            [-0.012163333, 0.005300357, 0.000617602],
            [-0.002344309, -0.016386641, -0.000778049],
            [0.006830718, 0.006458227, -0.013763873],
            [0.007477586, 0.005038471, 0.013912884],
            [-0.000364013, -0.0001741, -0.000172554],
            [-0.011880051, 0.024533634, 0.013606389],
            [0.026590746, -0.006529057, 0.01255871],
            [-0.017870351, -0.024093804, 0.003331631],
            [0.003723004, 0.005852918, -0.029312732],
        ])

        self.run_grad(mol, 'slater', 'def2-tzvp', ref_grad, 1.0e-4)

        ref_grad = np.array([
            [0.006257461, -0.002788437, -0.000222177],
            [-0.00127525, 0.002893038, 0.00016584],
            [-0.00247066, -0.000141325, 0.001892861],
            [-0.002585582, 0.000021539, -0.001834001],
            [-0.000539675, -0.000317398, -0.0000847],
            [-0.005217455, 0.011146759, 0.006057603],
            [0.011717097, -0.00288349, 0.005580004],
            [-0.007556228, -0.010612928, 0.001459581],
            [0.001670289, 0.002682248, -0.013015004],
        ])

        self.run_grad(mol, 'b3lyp', 'def2-tzvp', ref_grad, 1.0e-4)
