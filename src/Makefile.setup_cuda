#
#                                   VELOXCHEM
#              ----------------------------------------------------
#                          An Electronic Structure Code
#
#  SPDX-License-Identifier: BSD-3-Clause
#
#  Copyright 2018-2025 VeloxChem developers
#
#  Redistribution and use in source and binary forms, with or without modification,
#  are permitted provided that the following conditions are met:
#
#  1. Redistributions of source code must retain the above copyright notice, this
#     list of conditions and the following disclaimer.
#  2. Redistributions in binary form must reproduce the above copyright notice,
#     this list of conditions and the following disclaimer in the documentation
#     and/or other materials provided with the distribution.
#  3. Neither the name of the copyright holder nor the names of its contributors
#     may be used to endorse or promote products derived from this software without
#     specific prior written permission.
#
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
#  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
#  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
#  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
#  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
#  DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
#  SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
#  HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
#  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
#  OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

USE_CUDA := true

CUDA_LIB_DIR := /path/to/cuda/lib64
LIBXC_HOME   := /path/to/libxc

CXX    := g++
PYTHON := python3
DEVCC  := nvcc -gencode arch=compute_80,code=sm_80

CXX_REL_FLG := -fopenmp -std=c++17
CXX_DEB_FLG := -fopenmp -std=c++17

PYTHON_INC += $(shell $(PYTHON) -m pybind11 --includes)

XC_INC := -I$(LIBXC_HOME)/include
XC_LIB := -L$(LIBXC_HOME)/lib -lxc

CXX_REL_FLG += -fPIC $(PYTHON_INC) $(XC_INC)
CXX_DEB_FLG += -fPIC $(PYTHON_INC) $(XC_INC)

DEVCC_REL_FLG := -Xcompiler -fPIC -Xcompiler -fopenmp -std=c++17 $(XC_INC)
DEVCC_DEB_FLG := -Xcompiler -fPIC -Xcompiler -fopenmp -std=c++17 $(XC_INC)
DEVICE_LIB := -L$(CUDA_LIB_DIR) -lcudart -lcublas -lcusolver

MACLIBS :=

LTOFLAG :=

# Generic settings

# Compiler flags

CXX_REL_FLG += -std=c++17 -O3 -Wall
CXX_DEB_FLG += -std=c++17 -O3 -Wall -g

# Preprocessor flags

CPP_REL_FLG := -DVLX_ALIGN=64
CPP_DEB_FLG := -DVLX_ALIGN=64 -DVAR_DEBUG=1

ifeq ($(USE_CUDA),true)
  CPP_REL_FLG += -DUSE_CUDA
  CPP_DEB_FLG += -DUSE_CUDA
else ifeq ($(USE_HIP),true)
  CPP_REL_FLG += -DUSE_HIP
  CPP_DEB_FLG += -DUSE_HIP
endif

# XC library

LIB_LIST := $(XC_LIB)

# Extra flag for MacOS

LIB_LIST += $(MACLIBS)

# flag for GPU devices

LIB_LIST += $(DEVICE_LIB)

# Native shell commands

CP := cp -f
MV := mv -f
RM := rm -f

# Native libraries generation tools

AR      := ar
ARFLAGS := rc
