#include "ElectronRepulsionGeom1010ContrRecFIXX.hpp"

#include "TensorComponents.hpp"

namespace erirec { // erirec namespace

auto
comp_bra_geom1010_hrr_electron_repulsion_fixx(CSimdArray<double>& cbuffer,
                                              const size_t idx_geom_1010_fixx,
                                              const size_t idx_geom_0010_dixx,
                                              const size_t idx_geom_1010_dixx,
                                              const size_t idx_geom_1010_dkxx,
                                              const TPoint<double>& r_ab,
                                              const int c_angmom,
                                              const int d_angmom) -> void
{
    const auto nelems = cbuffer.number_of_active_elements();

    const auto ccomps = tensor::number_of_spherical_components(std::array<int, 1>{c_angmom,});

    const auto dcomps = tensor::number_of_spherical_components(std::array<int, 1>{d_angmom,});

    // set up R(AB) distances

    const auto xyz = r_ab.coordinates();

    const auto ab_x = xyz[0];

    const auto ab_y = xyz[1];

    const auto ab_z = xyz[2];

    for (int i = 0; i < ccomps; i++)
    {
        for (int j = 0; j < dcomps; j++)
        {
            /// Set up components of auxilary buffer : DISS

            const auto di_geom_0010_off = idx_geom_0010_dixx + i * dcomps + j;

            auto g_0_0_x_0_xx_xxxxxx = cbuffer.data(di_geom_0010_off + 0 * ccomps * dcomps);

            auto g_0_0_x_0_xx_xxxxxy = cbuffer.data(di_geom_0010_off + 1 * ccomps * dcomps);

            auto g_0_0_x_0_xx_xxxxxz = cbuffer.data(di_geom_0010_off + 2 * ccomps * dcomps);

            auto g_0_0_x_0_xx_xxxxyy = cbuffer.data(di_geom_0010_off + 3 * ccomps * dcomps);

            auto g_0_0_x_0_xx_xxxxyz = cbuffer.data(di_geom_0010_off + 4 * ccomps * dcomps);

            auto g_0_0_x_0_xx_xxxxzz = cbuffer.data(di_geom_0010_off + 5 * ccomps * dcomps);

            auto g_0_0_x_0_xx_xxxyyy = cbuffer.data(di_geom_0010_off + 6 * ccomps * dcomps);

            auto g_0_0_x_0_xx_xxxyyz = cbuffer.data(di_geom_0010_off + 7 * ccomps * dcomps);

            auto g_0_0_x_0_xx_xxxyzz = cbuffer.data(di_geom_0010_off + 8 * ccomps * dcomps);

            auto g_0_0_x_0_xx_xxxzzz = cbuffer.data(di_geom_0010_off + 9 * ccomps * dcomps);

            auto g_0_0_x_0_xx_xxyyyy = cbuffer.data(di_geom_0010_off + 10 * ccomps * dcomps);

            auto g_0_0_x_0_xx_xxyyyz = cbuffer.data(di_geom_0010_off + 11 * ccomps * dcomps);

            auto g_0_0_x_0_xx_xxyyzz = cbuffer.data(di_geom_0010_off + 12 * ccomps * dcomps);

            auto g_0_0_x_0_xx_xxyzzz = cbuffer.data(di_geom_0010_off + 13 * ccomps * dcomps);

            auto g_0_0_x_0_xx_xxzzzz = cbuffer.data(di_geom_0010_off + 14 * ccomps * dcomps);

            auto g_0_0_x_0_xx_xyyyyy = cbuffer.data(di_geom_0010_off + 15 * ccomps * dcomps);

            auto g_0_0_x_0_xx_xyyyyz = cbuffer.data(di_geom_0010_off + 16 * ccomps * dcomps);

            auto g_0_0_x_0_xx_xyyyzz = cbuffer.data(di_geom_0010_off + 17 * ccomps * dcomps);

            auto g_0_0_x_0_xx_xyyzzz = cbuffer.data(di_geom_0010_off + 18 * ccomps * dcomps);

            auto g_0_0_x_0_xx_xyzzzz = cbuffer.data(di_geom_0010_off + 19 * ccomps * dcomps);

            auto g_0_0_x_0_xx_xzzzzz = cbuffer.data(di_geom_0010_off + 20 * ccomps * dcomps);

            auto g_0_0_x_0_xx_yyyyyy = cbuffer.data(di_geom_0010_off + 21 * ccomps * dcomps);

            auto g_0_0_x_0_xx_yyyyyz = cbuffer.data(di_geom_0010_off + 22 * ccomps * dcomps);

            auto g_0_0_x_0_xx_yyyyzz = cbuffer.data(di_geom_0010_off + 23 * ccomps * dcomps);

            auto g_0_0_x_0_xx_yyyzzz = cbuffer.data(di_geom_0010_off + 24 * ccomps * dcomps);

            auto g_0_0_x_0_xx_yyzzzz = cbuffer.data(di_geom_0010_off + 25 * ccomps * dcomps);

            auto g_0_0_x_0_xx_yzzzzz = cbuffer.data(di_geom_0010_off + 26 * ccomps * dcomps);

            auto g_0_0_x_0_xx_zzzzzz = cbuffer.data(di_geom_0010_off + 27 * ccomps * dcomps);

            auto g_0_0_x_0_xy_xxxxxx = cbuffer.data(di_geom_0010_off + 28 * ccomps * dcomps);

            auto g_0_0_x_0_xy_xxxxxy = cbuffer.data(di_geom_0010_off + 29 * ccomps * dcomps);

            auto g_0_0_x_0_xy_xxxxxz = cbuffer.data(di_geom_0010_off + 30 * ccomps * dcomps);

            auto g_0_0_x_0_xy_xxxxyy = cbuffer.data(di_geom_0010_off + 31 * ccomps * dcomps);

            auto g_0_0_x_0_xy_xxxxyz = cbuffer.data(di_geom_0010_off + 32 * ccomps * dcomps);

            auto g_0_0_x_0_xy_xxxxzz = cbuffer.data(di_geom_0010_off + 33 * ccomps * dcomps);

            auto g_0_0_x_0_xy_xxxyyy = cbuffer.data(di_geom_0010_off + 34 * ccomps * dcomps);

            auto g_0_0_x_0_xy_xxxyyz = cbuffer.data(di_geom_0010_off + 35 * ccomps * dcomps);

            auto g_0_0_x_0_xy_xxxyzz = cbuffer.data(di_geom_0010_off + 36 * ccomps * dcomps);

            auto g_0_0_x_0_xy_xxxzzz = cbuffer.data(di_geom_0010_off + 37 * ccomps * dcomps);

            auto g_0_0_x_0_xy_xxyyyy = cbuffer.data(di_geom_0010_off + 38 * ccomps * dcomps);

            auto g_0_0_x_0_xy_xxyyyz = cbuffer.data(di_geom_0010_off + 39 * ccomps * dcomps);

            auto g_0_0_x_0_xy_xxyyzz = cbuffer.data(di_geom_0010_off + 40 * ccomps * dcomps);

            auto g_0_0_x_0_xy_xxyzzz = cbuffer.data(di_geom_0010_off + 41 * ccomps * dcomps);

            auto g_0_0_x_0_xy_xxzzzz = cbuffer.data(di_geom_0010_off + 42 * ccomps * dcomps);

            auto g_0_0_x_0_xy_xyyyyy = cbuffer.data(di_geom_0010_off + 43 * ccomps * dcomps);

            auto g_0_0_x_0_xy_xyyyyz = cbuffer.data(di_geom_0010_off + 44 * ccomps * dcomps);

            auto g_0_0_x_0_xy_xyyyzz = cbuffer.data(di_geom_0010_off + 45 * ccomps * dcomps);

            auto g_0_0_x_0_xy_xyyzzz = cbuffer.data(di_geom_0010_off + 46 * ccomps * dcomps);

            auto g_0_0_x_0_xy_xyzzzz = cbuffer.data(di_geom_0010_off + 47 * ccomps * dcomps);

            auto g_0_0_x_0_xy_xzzzzz = cbuffer.data(di_geom_0010_off + 48 * ccomps * dcomps);

            auto g_0_0_x_0_xy_yyyyyy = cbuffer.data(di_geom_0010_off + 49 * ccomps * dcomps);

            auto g_0_0_x_0_xy_yyyyyz = cbuffer.data(di_geom_0010_off + 50 * ccomps * dcomps);

            auto g_0_0_x_0_xy_yyyyzz = cbuffer.data(di_geom_0010_off + 51 * ccomps * dcomps);

            auto g_0_0_x_0_xy_yyyzzz = cbuffer.data(di_geom_0010_off + 52 * ccomps * dcomps);

            auto g_0_0_x_0_xy_yyzzzz = cbuffer.data(di_geom_0010_off + 53 * ccomps * dcomps);

            auto g_0_0_x_0_xy_yzzzzz = cbuffer.data(di_geom_0010_off + 54 * ccomps * dcomps);

            auto g_0_0_x_0_xy_zzzzzz = cbuffer.data(di_geom_0010_off + 55 * ccomps * dcomps);

            auto g_0_0_x_0_xz_xxxxxx = cbuffer.data(di_geom_0010_off + 56 * ccomps * dcomps);

            auto g_0_0_x_0_xz_xxxxxy = cbuffer.data(di_geom_0010_off + 57 * ccomps * dcomps);

            auto g_0_0_x_0_xz_xxxxxz = cbuffer.data(di_geom_0010_off + 58 * ccomps * dcomps);

            auto g_0_0_x_0_xz_xxxxyy = cbuffer.data(di_geom_0010_off + 59 * ccomps * dcomps);

            auto g_0_0_x_0_xz_xxxxyz = cbuffer.data(di_geom_0010_off + 60 * ccomps * dcomps);

            auto g_0_0_x_0_xz_xxxxzz = cbuffer.data(di_geom_0010_off + 61 * ccomps * dcomps);

            auto g_0_0_x_0_xz_xxxyyy = cbuffer.data(di_geom_0010_off + 62 * ccomps * dcomps);

            auto g_0_0_x_0_xz_xxxyyz = cbuffer.data(di_geom_0010_off + 63 * ccomps * dcomps);

            auto g_0_0_x_0_xz_xxxyzz = cbuffer.data(di_geom_0010_off + 64 * ccomps * dcomps);

            auto g_0_0_x_0_xz_xxxzzz = cbuffer.data(di_geom_0010_off + 65 * ccomps * dcomps);

            auto g_0_0_x_0_xz_xxyyyy = cbuffer.data(di_geom_0010_off + 66 * ccomps * dcomps);

            auto g_0_0_x_0_xz_xxyyyz = cbuffer.data(di_geom_0010_off + 67 * ccomps * dcomps);

            auto g_0_0_x_0_xz_xxyyzz = cbuffer.data(di_geom_0010_off + 68 * ccomps * dcomps);

            auto g_0_0_x_0_xz_xxyzzz = cbuffer.data(di_geom_0010_off + 69 * ccomps * dcomps);

            auto g_0_0_x_0_xz_xxzzzz = cbuffer.data(di_geom_0010_off + 70 * ccomps * dcomps);

            auto g_0_0_x_0_xz_xyyyyy = cbuffer.data(di_geom_0010_off + 71 * ccomps * dcomps);

            auto g_0_0_x_0_xz_xyyyyz = cbuffer.data(di_geom_0010_off + 72 * ccomps * dcomps);

            auto g_0_0_x_0_xz_xyyyzz = cbuffer.data(di_geom_0010_off + 73 * ccomps * dcomps);

            auto g_0_0_x_0_xz_xyyzzz = cbuffer.data(di_geom_0010_off + 74 * ccomps * dcomps);

            auto g_0_0_x_0_xz_xyzzzz = cbuffer.data(di_geom_0010_off + 75 * ccomps * dcomps);

            auto g_0_0_x_0_xz_xzzzzz = cbuffer.data(di_geom_0010_off + 76 * ccomps * dcomps);

            auto g_0_0_x_0_xz_yyyyyy = cbuffer.data(di_geom_0010_off + 77 * ccomps * dcomps);

            auto g_0_0_x_0_xz_yyyyyz = cbuffer.data(di_geom_0010_off + 78 * ccomps * dcomps);

            auto g_0_0_x_0_xz_yyyyzz = cbuffer.data(di_geom_0010_off + 79 * ccomps * dcomps);

            auto g_0_0_x_0_xz_yyyzzz = cbuffer.data(di_geom_0010_off + 80 * ccomps * dcomps);

            auto g_0_0_x_0_xz_yyzzzz = cbuffer.data(di_geom_0010_off + 81 * ccomps * dcomps);

            auto g_0_0_x_0_xz_yzzzzz = cbuffer.data(di_geom_0010_off + 82 * ccomps * dcomps);

            auto g_0_0_x_0_xz_zzzzzz = cbuffer.data(di_geom_0010_off + 83 * ccomps * dcomps);

            auto g_0_0_x_0_yy_xxxxxx = cbuffer.data(di_geom_0010_off + 84 * ccomps * dcomps);

            auto g_0_0_x_0_yy_xxxxxy = cbuffer.data(di_geom_0010_off + 85 * ccomps * dcomps);

            auto g_0_0_x_0_yy_xxxxxz = cbuffer.data(di_geom_0010_off + 86 * ccomps * dcomps);

            auto g_0_0_x_0_yy_xxxxyy = cbuffer.data(di_geom_0010_off + 87 * ccomps * dcomps);

            auto g_0_0_x_0_yy_xxxxyz = cbuffer.data(di_geom_0010_off + 88 * ccomps * dcomps);

            auto g_0_0_x_0_yy_xxxxzz = cbuffer.data(di_geom_0010_off + 89 * ccomps * dcomps);

            auto g_0_0_x_0_yy_xxxyyy = cbuffer.data(di_geom_0010_off + 90 * ccomps * dcomps);

            auto g_0_0_x_0_yy_xxxyyz = cbuffer.data(di_geom_0010_off + 91 * ccomps * dcomps);

            auto g_0_0_x_0_yy_xxxyzz = cbuffer.data(di_geom_0010_off + 92 * ccomps * dcomps);

            auto g_0_0_x_0_yy_xxxzzz = cbuffer.data(di_geom_0010_off + 93 * ccomps * dcomps);

            auto g_0_0_x_0_yy_xxyyyy = cbuffer.data(di_geom_0010_off + 94 * ccomps * dcomps);

            auto g_0_0_x_0_yy_xxyyyz = cbuffer.data(di_geom_0010_off + 95 * ccomps * dcomps);

            auto g_0_0_x_0_yy_xxyyzz = cbuffer.data(di_geom_0010_off + 96 * ccomps * dcomps);

            auto g_0_0_x_0_yy_xxyzzz = cbuffer.data(di_geom_0010_off + 97 * ccomps * dcomps);

            auto g_0_0_x_0_yy_xxzzzz = cbuffer.data(di_geom_0010_off + 98 * ccomps * dcomps);

            auto g_0_0_x_0_yy_xyyyyy = cbuffer.data(di_geom_0010_off + 99 * ccomps * dcomps);

            auto g_0_0_x_0_yy_xyyyyz = cbuffer.data(di_geom_0010_off + 100 * ccomps * dcomps);

            auto g_0_0_x_0_yy_xyyyzz = cbuffer.data(di_geom_0010_off + 101 * ccomps * dcomps);

            auto g_0_0_x_0_yy_xyyzzz = cbuffer.data(di_geom_0010_off + 102 * ccomps * dcomps);

            auto g_0_0_x_0_yy_xyzzzz = cbuffer.data(di_geom_0010_off + 103 * ccomps * dcomps);

            auto g_0_0_x_0_yy_xzzzzz = cbuffer.data(di_geom_0010_off + 104 * ccomps * dcomps);

            auto g_0_0_x_0_yy_yyyyyy = cbuffer.data(di_geom_0010_off + 105 * ccomps * dcomps);

            auto g_0_0_x_0_yy_yyyyyz = cbuffer.data(di_geom_0010_off + 106 * ccomps * dcomps);

            auto g_0_0_x_0_yy_yyyyzz = cbuffer.data(di_geom_0010_off + 107 * ccomps * dcomps);

            auto g_0_0_x_0_yy_yyyzzz = cbuffer.data(di_geom_0010_off + 108 * ccomps * dcomps);

            auto g_0_0_x_0_yy_yyzzzz = cbuffer.data(di_geom_0010_off + 109 * ccomps * dcomps);

            auto g_0_0_x_0_yy_yzzzzz = cbuffer.data(di_geom_0010_off + 110 * ccomps * dcomps);

            auto g_0_0_x_0_yy_zzzzzz = cbuffer.data(di_geom_0010_off + 111 * ccomps * dcomps);

            auto g_0_0_x_0_yz_xxxxxx = cbuffer.data(di_geom_0010_off + 112 * ccomps * dcomps);

            auto g_0_0_x_0_yz_xxxxxy = cbuffer.data(di_geom_0010_off + 113 * ccomps * dcomps);

            auto g_0_0_x_0_yz_xxxxxz = cbuffer.data(di_geom_0010_off + 114 * ccomps * dcomps);

            auto g_0_0_x_0_yz_xxxxyy = cbuffer.data(di_geom_0010_off + 115 * ccomps * dcomps);

            auto g_0_0_x_0_yz_xxxxyz = cbuffer.data(di_geom_0010_off + 116 * ccomps * dcomps);

            auto g_0_0_x_0_yz_xxxxzz = cbuffer.data(di_geom_0010_off + 117 * ccomps * dcomps);

            auto g_0_0_x_0_yz_xxxyyy = cbuffer.data(di_geom_0010_off + 118 * ccomps * dcomps);

            auto g_0_0_x_0_yz_xxxyyz = cbuffer.data(di_geom_0010_off + 119 * ccomps * dcomps);

            auto g_0_0_x_0_yz_xxxyzz = cbuffer.data(di_geom_0010_off + 120 * ccomps * dcomps);

            auto g_0_0_x_0_yz_xxxzzz = cbuffer.data(di_geom_0010_off + 121 * ccomps * dcomps);

            auto g_0_0_x_0_yz_xxyyyy = cbuffer.data(di_geom_0010_off + 122 * ccomps * dcomps);

            auto g_0_0_x_0_yz_xxyyyz = cbuffer.data(di_geom_0010_off + 123 * ccomps * dcomps);

            auto g_0_0_x_0_yz_xxyyzz = cbuffer.data(di_geom_0010_off + 124 * ccomps * dcomps);

            auto g_0_0_x_0_yz_xxyzzz = cbuffer.data(di_geom_0010_off + 125 * ccomps * dcomps);

            auto g_0_0_x_0_yz_xxzzzz = cbuffer.data(di_geom_0010_off + 126 * ccomps * dcomps);

            auto g_0_0_x_0_yz_xyyyyy = cbuffer.data(di_geom_0010_off + 127 * ccomps * dcomps);

            auto g_0_0_x_0_yz_xyyyyz = cbuffer.data(di_geom_0010_off + 128 * ccomps * dcomps);

            auto g_0_0_x_0_yz_xyyyzz = cbuffer.data(di_geom_0010_off + 129 * ccomps * dcomps);

            auto g_0_0_x_0_yz_xyyzzz = cbuffer.data(di_geom_0010_off + 130 * ccomps * dcomps);

            auto g_0_0_x_0_yz_xyzzzz = cbuffer.data(di_geom_0010_off + 131 * ccomps * dcomps);

            auto g_0_0_x_0_yz_xzzzzz = cbuffer.data(di_geom_0010_off + 132 * ccomps * dcomps);

            auto g_0_0_x_0_yz_yyyyyy = cbuffer.data(di_geom_0010_off + 133 * ccomps * dcomps);

            auto g_0_0_x_0_yz_yyyyyz = cbuffer.data(di_geom_0010_off + 134 * ccomps * dcomps);

            auto g_0_0_x_0_yz_yyyyzz = cbuffer.data(di_geom_0010_off + 135 * ccomps * dcomps);

            auto g_0_0_x_0_yz_yyyzzz = cbuffer.data(di_geom_0010_off + 136 * ccomps * dcomps);

            auto g_0_0_x_0_yz_yyzzzz = cbuffer.data(di_geom_0010_off + 137 * ccomps * dcomps);

            auto g_0_0_x_0_yz_yzzzzz = cbuffer.data(di_geom_0010_off + 138 * ccomps * dcomps);

            auto g_0_0_x_0_yz_zzzzzz = cbuffer.data(di_geom_0010_off + 139 * ccomps * dcomps);

            auto g_0_0_x_0_zz_xxxxxx = cbuffer.data(di_geom_0010_off + 140 * ccomps * dcomps);

            auto g_0_0_x_0_zz_xxxxxy = cbuffer.data(di_geom_0010_off + 141 * ccomps * dcomps);

            auto g_0_0_x_0_zz_xxxxxz = cbuffer.data(di_geom_0010_off + 142 * ccomps * dcomps);

            auto g_0_0_x_0_zz_xxxxyy = cbuffer.data(di_geom_0010_off + 143 * ccomps * dcomps);

            auto g_0_0_x_0_zz_xxxxyz = cbuffer.data(di_geom_0010_off + 144 * ccomps * dcomps);

            auto g_0_0_x_0_zz_xxxxzz = cbuffer.data(di_geom_0010_off + 145 * ccomps * dcomps);

            auto g_0_0_x_0_zz_xxxyyy = cbuffer.data(di_geom_0010_off + 146 * ccomps * dcomps);

            auto g_0_0_x_0_zz_xxxyyz = cbuffer.data(di_geom_0010_off + 147 * ccomps * dcomps);

            auto g_0_0_x_0_zz_xxxyzz = cbuffer.data(di_geom_0010_off + 148 * ccomps * dcomps);

            auto g_0_0_x_0_zz_xxxzzz = cbuffer.data(di_geom_0010_off + 149 * ccomps * dcomps);

            auto g_0_0_x_0_zz_xxyyyy = cbuffer.data(di_geom_0010_off + 150 * ccomps * dcomps);

            auto g_0_0_x_0_zz_xxyyyz = cbuffer.data(di_geom_0010_off + 151 * ccomps * dcomps);

            auto g_0_0_x_0_zz_xxyyzz = cbuffer.data(di_geom_0010_off + 152 * ccomps * dcomps);

            auto g_0_0_x_0_zz_xxyzzz = cbuffer.data(di_geom_0010_off + 153 * ccomps * dcomps);

            auto g_0_0_x_0_zz_xxzzzz = cbuffer.data(di_geom_0010_off + 154 * ccomps * dcomps);

            auto g_0_0_x_0_zz_xyyyyy = cbuffer.data(di_geom_0010_off + 155 * ccomps * dcomps);

            auto g_0_0_x_0_zz_xyyyyz = cbuffer.data(di_geom_0010_off + 156 * ccomps * dcomps);

            auto g_0_0_x_0_zz_xyyyzz = cbuffer.data(di_geom_0010_off + 157 * ccomps * dcomps);

            auto g_0_0_x_0_zz_xyyzzz = cbuffer.data(di_geom_0010_off + 158 * ccomps * dcomps);

            auto g_0_0_x_0_zz_xyzzzz = cbuffer.data(di_geom_0010_off + 159 * ccomps * dcomps);

            auto g_0_0_x_0_zz_xzzzzz = cbuffer.data(di_geom_0010_off + 160 * ccomps * dcomps);

            auto g_0_0_x_0_zz_yyyyyy = cbuffer.data(di_geom_0010_off + 161 * ccomps * dcomps);

            auto g_0_0_x_0_zz_yyyyyz = cbuffer.data(di_geom_0010_off + 162 * ccomps * dcomps);

            auto g_0_0_x_0_zz_yyyyzz = cbuffer.data(di_geom_0010_off + 163 * ccomps * dcomps);

            auto g_0_0_x_0_zz_yyyzzz = cbuffer.data(di_geom_0010_off + 164 * ccomps * dcomps);

            auto g_0_0_x_0_zz_yyzzzz = cbuffer.data(di_geom_0010_off + 165 * ccomps * dcomps);

            auto g_0_0_x_0_zz_yzzzzz = cbuffer.data(di_geom_0010_off + 166 * ccomps * dcomps);

            auto g_0_0_x_0_zz_zzzzzz = cbuffer.data(di_geom_0010_off + 167 * ccomps * dcomps);

            auto g_0_0_y_0_xx_xxxxxx = cbuffer.data(di_geom_0010_off + 168 * ccomps * dcomps);

            auto g_0_0_y_0_xx_xxxxxy = cbuffer.data(di_geom_0010_off + 169 * ccomps * dcomps);

            auto g_0_0_y_0_xx_xxxxxz = cbuffer.data(di_geom_0010_off + 170 * ccomps * dcomps);

            auto g_0_0_y_0_xx_xxxxyy = cbuffer.data(di_geom_0010_off + 171 * ccomps * dcomps);

            auto g_0_0_y_0_xx_xxxxyz = cbuffer.data(di_geom_0010_off + 172 * ccomps * dcomps);

            auto g_0_0_y_0_xx_xxxxzz = cbuffer.data(di_geom_0010_off + 173 * ccomps * dcomps);

            auto g_0_0_y_0_xx_xxxyyy = cbuffer.data(di_geom_0010_off + 174 * ccomps * dcomps);

            auto g_0_0_y_0_xx_xxxyyz = cbuffer.data(di_geom_0010_off + 175 * ccomps * dcomps);

            auto g_0_0_y_0_xx_xxxyzz = cbuffer.data(di_geom_0010_off + 176 * ccomps * dcomps);

            auto g_0_0_y_0_xx_xxxzzz = cbuffer.data(di_geom_0010_off + 177 * ccomps * dcomps);

            auto g_0_0_y_0_xx_xxyyyy = cbuffer.data(di_geom_0010_off + 178 * ccomps * dcomps);

            auto g_0_0_y_0_xx_xxyyyz = cbuffer.data(di_geom_0010_off + 179 * ccomps * dcomps);

            auto g_0_0_y_0_xx_xxyyzz = cbuffer.data(di_geom_0010_off + 180 * ccomps * dcomps);

            auto g_0_0_y_0_xx_xxyzzz = cbuffer.data(di_geom_0010_off + 181 * ccomps * dcomps);

            auto g_0_0_y_0_xx_xxzzzz = cbuffer.data(di_geom_0010_off + 182 * ccomps * dcomps);

            auto g_0_0_y_0_xx_xyyyyy = cbuffer.data(di_geom_0010_off + 183 * ccomps * dcomps);

            auto g_0_0_y_0_xx_xyyyyz = cbuffer.data(di_geom_0010_off + 184 * ccomps * dcomps);

            auto g_0_0_y_0_xx_xyyyzz = cbuffer.data(di_geom_0010_off + 185 * ccomps * dcomps);

            auto g_0_0_y_0_xx_xyyzzz = cbuffer.data(di_geom_0010_off + 186 * ccomps * dcomps);

            auto g_0_0_y_0_xx_xyzzzz = cbuffer.data(di_geom_0010_off + 187 * ccomps * dcomps);

            auto g_0_0_y_0_xx_xzzzzz = cbuffer.data(di_geom_0010_off + 188 * ccomps * dcomps);

            auto g_0_0_y_0_xx_yyyyyy = cbuffer.data(di_geom_0010_off + 189 * ccomps * dcomps);

            auto g_0_0_y_0_xx_yyyyyz = cbuffer.data(di_geom_0010_off + 190 * ccomps * dcomps);

            auto g_0_0_y_0_xx_yyyyzz = cbuffer.data(di_geom_0010_off + 191 * ccomps * dcomps);

            auto g_0_0_y_0_xx_yyyzzz = cbuffer.data(di_geom_0010_off + 192 * ccomps * dcomps);

            auto g_0_0_y_0_xx_yyzzzz = cbuffer.data(di_geom_0010_off + 193 * ccomps * dcomps);

            auto g_0_0_y_0_xx_yzzzzz = cbuffer.data(di_geom_0010_off + 194 * ccomps * dcomps);

            auto g_0_0_y_0_xx_zzzzzz = cbuffer.data(di_geom_0010_off + 195 * ccomps * dcomps);

            auto g_0_0_y_0_xy_xxxxxx = cbuffer.data(di_geom_0010_off + 196 * ccomps * dcomps);

            auto g_0_0_y_0_xy_xxxxxy = cbuffer.data(di_geom_0010_off + 197 * ccomps * dcomps);

            auto g_0_0_y_0_xy_xxxxxz = cbuffer.data(di_geom_0010_off + 198 * ccomps * dcomps);

            auto g_0_0_y_0_xy_xxxxyy = cbuffer.data(di_geom_0010_off + 199 * ccomps * dcomps);

            auto g_0_0_y_0_xy_xxxxyz = cbuffer.data(di_geom_0010_off + 200 * ccomps * dcomps);

            auto g_0_0_y_0_xy_xxxxzz = cbuffer.data(di_geom_0010_off + 201 * ccomps * dcomps);

            auto g_0_0_y_0_xy_xxxyyy = cbuffer.data(di_geom_0010_off + 202 * ccomps * dcomps);

            auto g_0_0_y_0_xy_xxxyyz = cbuffer.data(di_geom_0010_off + 203 * ccomps * dcomps);

            auto g_0_0_y_0_xy_xxxyzz = cbuffer.data(di_geom_0010_off + 204 * ccomps * dcomps);

            auto g_0_0_y_0_xy_xxxzzz = cbuffer.data(di_geom_0010_off + 205 * ccomps * dcomps);

            auto g_0_0_y_0_xy_xxyyyy = cbuffer.data(di_geom_0010_off + 206 * ccomps * dcomps);

            auto g_0_0_y_0_xy_xxyyyz = cbuffer.data(di_geom_0010_off + 207 * ccomps * dcomps);

            auto g_0_0_y_0_xy_xxyyzz = cbuffer.data(di_geom_0010_off + 208 * ccomps * dcomps);

            auto g_0_0_y_0_xy_xxyzzz = cbuffer.data(di_geom_0010_off + 209 * ccomps * dcomps);

            auto g_0_0_y_0_xy_xxzzzz = cbuffer.data(di_geom_0010_off + 210 * ccomps * dcomps);

            auto g_0_0_y_0_xy_xyyyyy = cbuffer.data(di_geom_0010_off + 211 * ccomps * dcomps);

            auto g_0_0_y_0_xy_xyyyyz = cbuffer.data(di_geom_0010_off + 212 * ccomps * dcomps);

            auto g_0_0_y_0_xy_xyyyzz = cbuffer.data(di_geom_0010_off + 213 * ccomps * dcomps);

            auto g_0_0_y_0_xy_xyyzzz = cbuffer.data(di_geom_0010_off + 214 * ccomps * dcomps);

            auto g_0_0_y_0_xy_xyzzzz = cbuffer.data(di_geom_0010_off + 215 * ccomps * dcomps);

            auto g_0_0_y_0_xy_xzzzzz = cbuffer.data(di_geom_0010_off + 216 * ccomps * dcomps);

            auto g_0_0_y_0_xy_yyyyyy = cbuffer.data(di_geom_0010_off + 217 * ccomps * dcomps);

            auto g_0_0_y_0_xy_yyyyyz = cbuffer.data(di_geom_0010_off + 218 * ccomps * dcomps);

            auto g_0_0_y_0_xy_yyyyzz = cbuffer.data(di_geom_0010_off + 219 * ccomps * dcomps);

            auto g_0_0_y_0_xy_yyyzzz = cbuffer.data(di_geom_0010_off + 220 * ccomps * dcomps);

            auto g_0_0_y_0_xy_yyzzzz = cbuffer.data(di_geom_0010_off + 221 * ccomps * dcomps);

            auto g_0_0_y_0_xy_yzzzzz = cbuffer.data(di_geom_0010_off + 222 * ccomps * dcomps);

            auto g_0_0_y_0_xy_zzzzzz = cbuffer.data(di_geom_0010_off + 223 * ccomps * dcomps);

            auto g_0_0_y_0_xz_xxxxxx = cbuffer.data(di_geom_0010_off + 224 * ccomps * dcomps);

            auto g_0_0_y_0_xz_xxxxxy = cbuffer.data(di_geom_0010_off + 225 * ccomps * dcomps);

            auto g_0_0_y_0_xz_xxxxxz = cbuffer.data(di_geom_0010_off + 226 * ccomps * dcomps);

            auto g_0_0_y_0_xz_xxxxyy = cbuffer.data(di_geom_0010_off + 227 * ccomps * dcomps);

            auto g_0_0_y_0_xz_xxxxyz = cbuffer.data(di_geom_0010_off + 228 * ccomps * dcomps);

            auto g_0_0_y_0_xz_xxxxzz = cbuffer.data(di_geom_0010_off + 229 * ccomps * dcomps);

            auto g_0_0_y_0_xz_xxxyyy = cbuffer.data(di_geom_0010_off + 230 * ccomps * dcomps);

            auto g_0_0_y_0_xz_xxxyyz = cbuffer.data(di_geom_0010_off + 231 * ccomps * dcomps);

            auto g_0_0_y_0_xz_xxxyzz = cbuffer.data(di_geom_0010_off + 232 * ccomps * dcomps);

            auto g_0_0_y_0_xz_xxxzzz = cbuffer.data(di_geom_0010_off + 233 * ccomps * dcomps);

            auto g_0_0_y_0_xz_xxyyyy = cbuffer.data(di_geom_0010_off + 234 * ccomps * dcomps);

            auto g_0_0_y_0_xz_xxyyyz = cbuffer.data(di_geom_0010_off + 235 * ccomps * dcomps);

            auto g_0_0_y_0_xz_xxyyzz = cbuffer.data(di_geom_0010_off + 236 * ccomps * dcomps);

            auto g_0_0_y_0_xz_xxyzzz = cbuffer.data(di_geom_0010_off + 237 * ccomps * dcomps);

            auto g_0_0_y_0_xz_xxzzzz = cbuffer.data(di_geom_0010_off + 238 * ccomps * dcomps);

            auto g_0_0_y_0_xz_xyyyyy = cbuffer.data(di_geom_0010_off + 239 * ccomps * dcomps);

            auto g_0_0_y_0_xz_xyyyyz = cbuffer.data(di_geom_0010_off + 240 * ccomps * dcomps);

            auto g_0_0_y_0_xz_xyyyzz = cbuffer.data(di_geom_0010_off + 241 * ccomps * dcomps);

            auto g_0_0_y_0_xz_xyyzzz = cbuffer.data(di_geom_0010_off + 242 * ccomps * dcomps);

            auto g_0_0_y_0_xz_xyzzzz = cbuffer.data(di_geom_0010_off + 243 * ccomps * dcomps);

            auto g_0_0_y_0_xz_xzzzzz = cbuffer.data(di_geom_0010_off + 244 * ccomps * dcomps);

            auto g_0_0_y_0_xz_yyyyyy = cbuffer.data(di_geom_0010_off + 245 * ccomps * dcomps);

            auto g_0_0_y_0_xz_yyyyyz = cbuffer.data(di_geom_0010_off + 246 * ccomps * dcomps);

            auto g_0_0_y_0_xz_yyyyzz = cbuffer.data(di_geom_0010_off + 247 * ccomps * dcomps);

            auto g_0_0_y_0_xz_yyyzzz = cbuffer.data(di_geom_0010_off + 248 * ccomps * dcomps);

            auto g_0_0_y_0_xz_yyzzzz = cbuffer.data(di_geom_0010_off + 249 * ccomps * dcomps);

            auto g_0_0_y_0_xz_yzzzzz = cbuffer.data(di_geom_0010_off + 250 * ccomps * dcomps);

            auto g_0_0_y_0_xz_zzzzzz = cbuffer.data(di_geom_0010_off + 251 * ccomps * dcomps);

            auto g_0_0_y_0_yy_xxxxxx = cbuffer.data(di_geom_0010_off + 252 * ccomps * dcomps);

            auto g_0_0_y_0_yy_xxxxxy = cbuffer.data(di_geom_0010_off + 253 * ccomps * dcomps);

            auto g_0_0_y_0_yy_xxxxxz = cbuffer.data(di_geom_0010_off + 254 * ccomps * dcomps);

            auto g_0_0_y_0_yy_xxxxyy = cbuffer.data(di_geom_0010_off + 255 * ccomps * dcomps);

            auto g_0_0_y_0_yy_xxxxyz = cbuffer.data(di_geom_0010_off + 256 * ccomps * dcomps);

            auto g_0_0_y_0_yy_xxxxzz = cbuffer.data(di_geom_0010_off + 257 * ccomps * dcomps);

            auto g_0_0_y_0_yy_xxxyyy = cbuffer.data(di_geom_0010_off + 258 * ccomps * dcomps);

            auto g_0_0_y_0_yy_xxxyyz = cbuffer.data(di_geom_0010_off + 259 * ccomps * dcomps);

            auto g_0_0_y_0_yy_xxxyzz = cbuffer.data(di_geom_0010_off + 260 * ccomps * dcomps);

            auto g_0_0_y_0_yy_xxxzzz = cbuffer.data(di_geom_0010_off + 261 * ccomps * dcomps);

            auto g_0_0_y_0_yy_xxyyyy = cbuffer.data(di_geom_0010_off + 262 * ccomps * dcomps);

            auto g_0_0_y_0_yy_xxyyyz = cbuffer.data(di_geom_0010_off + 263 * ccomps * dcomps);

            auto g_0_0_y_0_yy_xxyyzz = cbuffer.data(di_geom_0010_off + 264 * ccomps * dcomps);

            auto g_0_0_y_0_yy_xxyzzz = cbuffer.data(di_geom_0010_off + 265 * ccomps * dcomps);

            auto g_0_0_y_0_yy_xxzzzz = cbuffer.data(di_geom_0010_off + 266 * ccomps * dcomps);

            auto g_0_0_y_0_yy_xyyyyy = cbuffer.data(di_geom_0010_off + 267 * ccomps * dcomps);

            auto g_0_0_y_0_yy_xyyyyz = cbuffer.data(di_geom_0010_off + 268 * ccomps * dcomps);

            auto g_0_0_y_0_yy_xyyyzz = cbuffer.data(di_geom_0010_off + 269 * ccomps * dcomps);

            auto g_0_0_y_0_yy_xyyzzz = cbuffer.data(di_geom_0010_off + 270 * ccomps * dcomps);

            auto g_0_0_y_0_yy_xyzzzz = cbuffer.data(di_geom_0010_off + 271 * ccomps * dcomps);

            auto g_0_0_y_0_yy_xzzzzz = cbuffer.data(di_geom_0010_off + 272 * ccomps * dcomps);

            auto g_0_0_y_0_yy_yyyyyy = cbuffer.data(di_geom_0010_off + 273 * ccomps * dcomps);

            auto g_0_0_y_0_yy_yyyyyz = cbuffer.data(di_geom_0010_off + 274 * ccomps * dcomps);

            auto g_0_0_y_0_yy_yyyyzz = cbuffer.data(di_geom_0010_off + 275 * ccomps * dcomps);

            auto g_0_0_y_0_yy_yyyzzz = cbuffer.data(di_geom_0010_off + 276 * ccomps * dcomps);

            auto g_0_0_y_0_yy_yyzzzz = cbuffer.data(di_geom_0010_off + 277 * ccomps * dcomps);

            auto g_0_0_y_0_yy_yzzzzz = cbuffer.data(di_geom_0010_off + 278 * ccomps * dcomps);

            auto g_0_0_y_0_yy_zzzzzz = cbuffer.data(di_geom_0010_off + 279 * ccomps * dcomps);

            auto g_0_0_y_0_yz_xxxxxx = cbuffer.data(di_geom_0010_off + 280 * ccomps * dcomps);

            auto g_0_0_y_0_yz_xxxxxy = cbuffer.data(di_geom_0010_off + 281 * ccomps * dcomps);

            auto g_0_0_y_0_yz_xxxxxz = cbuffer.data(di_geom_0010_off + 282 * ccomps * dcomps);

            auto g_0_0_y_0_yz_xxxxyy = cbuffer.data(di_geom_0010_off + 283 * ccomps * dcomps);

            auto g_0_0_y_0_yz_xxxxyz = cbuffer.data(di_geom_0010_off + 284 * ccomps * dcomps);

            auto g_0_0_y_0_yz_xxxxzz = cbuffer.data(di_geom_0010_off + 285 * ccomps * dcomps);

            auto g_0_0_y_0_yz_xxxyyy = cbuffer.data(di_geom_0010_off + 286 * ccomps * dcomps);

            auto g_0_0_y_0_yz_xxxyyz = cbuffer.data(di_geom_0010_off + 287 * ccomps * dcomps);

            auto g_0_0_y_0_yz_xxxyzz = cbuffer.data(di_geom_0010_off + 288 * ccomps * dcomps);

            auto g_0_0_y_0_yz_xxxzzz = cbuffer.data(di_geom_0010_off + 289 * ccomps * dcomps);

            auto g_0_0_y_0_yz_xxyyyy = cbuffer.data(di_geom_0010_off + 290 * ccomps * dcomps);

            auto g_0_0_y_0_yz_xxyyyz = cbuffer.data(di_geom_0010_off + 291 * ccomps * dcomps);

            auto g_0_0_y_0_yz_xxyyzz = cbuffer.data(di_geom_0010_off + 292 * ccomps * dcomps);

            auto g_0_0_y_0_yz_xxyzzz = cbuffer.data(di_geom_0010_off + 293 * ccomps * dcomps);

            auto g_0_0_y_0_yz_xxzzzz = cbuffer.data(di_geom_0010_off + 294 * ccomps * dcomps);

            auto g_0_0_y_0_yz_xyyyyy = cbuffer.data(di_geom_0010_off + 295 * ccomps * dcomps);

            auto g_0_0_y_0_yz_xyyyyz = cbuffer.data(di_geom_0010_off + 296 * ccomps * dcomps);

            auto g_0_0_y_0_yz_xyyyzz = cbuffer.data(di_geom_0010_off + 297 * ccomps * dcomps);

            auto g_0_0_y_0_yz_xyyzzz = cbuffer.data(di_geom_0010_off + 298 * ccomps * dcomps);

            auto g_0_0_y_0_yz_xyzzzz = cbuffer.data(di_geom_0010_off + 299 * ccomps * dcomps);

            auto g_0_0_y_0_yz_xzzzzz = cbuffer.data(di_geom_0010_off + 300 * ccomps * dcomps);

            auto g_0_0_y_0_yz_yyyyyy = cbuffer.data(di_geom_0010_off + 301 * ccomps * dcomps);

            auto g_0_0_y_0_yz_yyyyyz = cbuffer.data(di_geom_0010_off + 302 * ccomps * dcomps);

            auto g_0_0_y_0_yz_yyyyzz = cbuffer.data(di_geom_0010_off + 303 * ccomps * dcomps);

            auto g_0_0_y_0_yz_yyyzzz = cbuffer.data(di_geom_0010_off + 304 * ccomps * dcomps);

            auto g_0_0_y_0_yz_yyzzzz = cbuffer.data(di_geom_0010_off + 305 * ccomps * dcomps);

            auto g_0_0_y_0_yz_yzzzzz = cbuffer.data(di_geom_0010_off + 306 * ccomps * dcomps);

            auto g_0_0_y_0_yz_zzzzzz = cbuffer.data(di_geom_0010_off + 307 * ccomps * dcomps);

            auto g_0_0_y_0_zz_xxxxxx = cbuffer.data(di_geom_0010_off + 308 * ccomps * dcomps);

            auto g_0_0_y_0_zz_xxxxxy = cbuffer.data(di_geom_0010_off + 309 * ccomps * dcomps);

            auto g_0_0_y_0_zz_xxxxxz = cbuffer.data(di_geom_0010_off + 310 * ccomps * dcomps);

            auto g_0_0_y_0_zz_xxxxyy = cbuffer.data(di_geom_0010_off + 311 * ccomps * dcomps);

            auto g_0_0_y_0_zz_xxxxyz = cbuffer.data(di_geom_0010_off + 312 * ccomps * dcomps);

            auto g_0_0_y_0_zz_xxxxzz = cbuffer.data(di_geom_0010_off + 313 * ccomps * dcomps);

            auto g_0_0_y_0_zz_xxxyyy = cbuffer.data(di_geom_0010_off + 314 * ccomps * dcomps);

            auto g_0_0_y_0_zz_xxxyyz = cbuffer.data(di_geom_0010_off + 315 * ccomps * dcomps);

            auto g_0_0_y_0_zz_xxxyzz = cbuffer.data(di_geom_0010_off + 316 * ccomps * dcomps);

            auto g_0_0_y_0_zz_xxxzzz = cbuffer.data(di_geom_0010_off + 317 * ccomps * dcomps);

            auto g_0_0_y_0_zz_xxyyyy = cbuffer.data(di_geom_0010_off + 318 * ccomps * dcomps);

            auto g_0_0_y_0_zz_xxyyyz = cbuffer.data(di_geom_0010_off + 319 * ccomps * dcomps);

            auto g_0_0_y_0_zz_xxyyzz = cbuffer.data(di_geom_0010_off + 320 * ccomps * dcomps);

            auto g_0_0_y_0_zz_xxyzzz = cbuffer.data(di_geom_0010_off + 321 * ccomps * dcomps);

            auto g_0_0_y_0_zz_xxzzzz = cbuffer.data(di_geom_0010_off + 322 * ccomps * dcomps);

            auto g_0_0_y_0_zz_xyyyyy = cbuffer.data(di_geom_0010_off + 323 * ccomps * dcomps);

            auto g_0_0_y_0_zz_xyyyyz = cbuffer.data(di_geom_0010_off + 324 * ccomps * dcomps);

            auto g_0_0_y_0_zz_xyyyzz = cbuffer.data(di_geom_0010_off + 325 * ccomps * dcomps);

            auto g_0_0_y_0_zz_xyyzzz = cbuffer.data(di_geom_0010_off + 326 * ccomps * dcomps);

            auto g_0_0_y_0_zz_xyzzzz = cbuffer.data(di_geom_0010_off + 327 * ccomps * dcomps);

            auto g_0_0_y_0_zz_xzzzzz = cbuffer.data(di_geom_0010_off + 328 * ccomps * dcomps);

            auto g_0_0_y_0_zz_yyyyyy = cbuffer.data(di_geom_0010_off + 329 * ccomps * dcomps);

            auto g_0_0_y_0_zz_yyyyyz = cbuffer.data(di_geom_0010_off + 330 * ccomps * dcomps);

            auto g_0_0_y_0_zz_yyyyzz = cbuffer.data(di_geom_0010_off + 331 * ccomps * dcomps);

            auto g_0_0_y_0_zz_yyyzzz = cbuffer.data(di_geom_0010_off + 332 * ccomps * dcomps);

            auto g_0_0_y_0_zz_yyzzzz = cbuffer.data(di_geom_0010_off + 333 * ccomps * dcomps);

            auto g_0_0_y_0_zz_yzzzzz = cbuffer.data(di_geom_0010_off + 334 * ccomps * dcomps);

            auto g_0_0_y_0_zz_zzzzzz = cbuffer.data(di_geom_0010_off + 335 * ccomps * dcomps);

            auto g_0_0_z_0_xx_xxxxxx = cbuffer.data(di_geom_0010_off + 336 * ccomps * dcomps);

            auto g_0_0_z_0_xx_xxxxxy = cbuffer.data(di_geom_0010_off + 337 * ccomps * dcomps);

            auto g_0_0_z_0_xx_xxxxxz = cbuffer.data(di_geom_0010_off + 338 * ccomps * dcomps);

            auto g_0_0_z_0_xx_xxxxyy = cbuffer.data(di_geom_0010_off + 339 * ccomps * dcomps);

            auto g_0_0_z_0_xx_xxxxyz = cbuffer.data(di_geom_0010_off + 340 * ccomps * dcomps);

            auto g_0_0_z_0_xx_xxxxzz = cbuffer.data(di_geom_0010_off + 341 * ccomps * dcomps);

            auto g_0_0_z_0_xx_xxxyyy = cbuffer.data(di_geom_0010_off + 342 * ccomps * dcomps);

            auto g_0_0_z_0_xx_xxxyyz = cbuffer.data(di_geom_0010_off + 343 * ccomps * dcomps);

            auto g_0_0_z_0_xx_xxxyzz = cbuffer.data(di_geom_0010_off + 344 * ccomps * dcomps);

            auto g_0_0_z_0_xx_xxxzzz = cbuffer.data(di_geom_0010_off + 345 * ccomps * dcomps);

            auto g_0_0_z_0_xx_xxyyyy = cbuffer.data(di_geom_0010_off + 346 * ccomps * dcomps);

            auto g_0_0_z_0_xx_xxyyyz = cbuffer.data(di_geom_0010_off + 347 * ccomps * dcomps);

            auto g_0_0_z_0_xx_xxyyzz = cbuffer.data(di_geom_0010_off + 348 * ccomps * dcomps);

            auto g_0_0_z_0_xx_xxyzzz = cbuffer.data(di_geom_0010_off + 349 * ccomps * dcomps);

            auto g_0_0_z_0_xx_xxzzzz = cbuffer.data(di_geom_0010_off + 350 * ccomps * dcomps);

            auto g_0_0_z_0_xx_xyyyyy = cbuffer.data(di_geom_0010_off + 351 * ccomps * dcomps);

            auto g_0_0_z_0_xx_xyyyyz = cbuffer.data(di_geom_0010_off + 352 * ccomps * dcomps);

            auto g_0_0_z_0_xx_xyyyzz = cbuffer.data(di_geom_0010_off + 353 * ccomps * dcomps);

            auto g_0_0_z_0_xx_xyyzzz = cbuffer.data(di_geom_0010_off + 354 * ccomps * dcomps);

            auto g_0_0_z_0_xx_xyzzzz = cbuffer.data(di_geom_0010_off + 355 * ccomps * dcomps);

            auto g_0_0_z_0_xx_xzzzzz = cbuffer.data(di_geom_0010_off + 356 * ccomps * dcomps);

            auto g_0_0_z_0_xx_yyyyyy = cbuffer.data(di_geom_0010_off + 357 * ccomps * dcomps);

            auto g_0_0_z_0_xx_yyyyyz = cbuffer.data(di_geom_0010_off + 358 * ccomps * dcomps);

            auto g_0_0_z_0_xx_yyyyzz = cbuffer.data(di_geom_0010_off + 359 * ccomps * dcomps);

            auto g_0_0_z_0_xx_yyyzzz = cbuffer.data(di_geom_0010_off + 360 * ccomps * dcomps);

            auto g_0_0_z_0_xx_yyzzzz = cbuffer.data(di_geom_0010_off + 361 * ccomps * dcomps);

            auto g_0_0_z_0_xx_yzzzzz = cbuffer.data(di_geom_0010_off + 362 * ccomps * dcomps);

            auto g_0_0_z_0_xx_zzzzzz = cbuffer.data(di_geom_0010_off + 363 * ccomps * dcomps);

            auto g_0_0_z_0_xy_xxxxxx = cbuffer.data(di_geom_0010_off + 364 * ccomps * dcomps);

            auto g_0_0_z_0_xy_xxxxxy = cbuffer.data(di_geom_0010_off + 365 * ccomps * dcomps);

            auto g_0_0_z_0_xy_xxxxxz = cbuffer.data(di_geom_0010_off + 366 * ccomps * dcomps);

            auto g_0_0_z_0_xy_xxxxyy = cbuffer.data(di_geom_0010_off + 367 * ccomps * dcomps);

            auto g_0_0_z_0_xy_xxxxyz = cbuffer.data(di_geom_0010_off + 368 * ccomps * dcomps);

            auto g_0_0_z_0_xy_xxxxzz = cbuffer.data(di_geom_0010_off + 369 * ccomps * dcomps);

            auto g_0_0_z_0_xy_xxxyyy = cbuffer.data(di_geom_0010_off + 370 * ccomps * dcomps);

            auto g_0_0_z_0_xy_xxxyyz = cbuffer.data(di_geom_0010_off + 371 * ccomps * dcomps);

            auto g_0_0_z_0_xy_xxxyzz = cbuffer.data(di_geom_0010_off + 372 * ccomps * dcomps);

            auto g_0_0_z_0_xy_xxxzzz = cbuffer.data(di_geom_0010_off + 373 * ccomps * dcomps);

            auto g_0_0_z_0_xy_xxyyyy = cbuffer.data(di_geom_0010_off + 374 * ccomps * dcomps);

            auto g_0_0_z_0_xy_xxyyyz = cbuffer.data(di_geom_0010_off + 375 * ccomps * dcomps);

            auto g_0_0_z_0_xy_xxyyzz = cbuffer.data(di_geom_0010_off + 376 * ccomps * dcomps);

            auto g_0_0_z_0_xy_xxyzzz = cbuffer.data(di_geom_0010_off + 377 * ccomps * dcomps);

            auto g_0_0_z_0_xy_xxzzzz = cbuffer.data(di_geom_0010_off + 378 * ccomps * dcomps);

            auto g_0_0_z_0_xy_xyyyyy = cbuffer.data(di_geom_0010_off + 379 * ccomps * dcomps);

            auto g_0_0_z_0_xy_xyyyyz = cbuffer.data(di_geom_0010_off + 380 * ccomps * dcomps);

            auto g_0_0_z_0_xy_xyyyzz = cbuffer.data(di_geom_0010_off + 381 * ccomps * dcomps);

            auto g_0_0_z_0_xy_xyyzzz = cbuffer.data(di_geom_0010_off + 382 * ccomps * dcomps);

            auto g_0_0_z_0_xy_xyzzzz = cbuffer.data(di_geom_0010_off + 383 * ccomps * dcomps);

            auto g_0_0_z_0_xy_xzzzzz = cbuffer.data(di_geom_0010_off + 384 * ccomps * dcomps);

            auto g_0_0_z_0_xy_yyyyyy = cbuffer.data(di_geom_0010_off + 385 * ccomps * dcomps);

            auto g_0_0_z_0_xy_yyyyyz = cbuffer.data(di_geom_0010_off + 386 * ccomps * dcomps);

            auto g_0_0_z_0_xy_yyyyzz = cbuffer.data(di_geom_0010_off + 387 * ccomps * dcomps);

            auto g_0_0_z_0_xy_yyyzzz = cbuffer.data(di_geom_0010_off + 388 * ccomps * dcomps);

            auto g_0_0_z_0_xy_yyzzzz = cbuffer.data(di_geom_0010_off + 389 * ccomps * dcomps);

            auto g_0_0_z_0_xy_yzzzzz = cbuffer.data(di_geom_0010_off + 390 * ccomps * dcomps);

            auto g_0_0_z_0_xy_zzzzzz = cbuffer.data(di_geom_0010_off + 391 * ccomps * dcomps);

            auto g_0_0_z_0_xz_xxxxxx = cbuffer.data(di_geom_0010_off + 392 * ccomps * dcomps);

            auto g_0_0_z_0_xz_xxxxxy = cbuffer.data(di_geom_0010_off + 393 * ccomps * dcomps);

            auto g_0_0_z_0_xz_xxxxxz = cbuffer.data(di_geom_0010_off + 394 * ccomps * dcomps);

            auto g_0_0_z_0_xz_xxxxyy = cbuffer.data(di_geom_0010_off + 395 * ccomps * dcomps);

            auto g_0_0_z_0_xz_xxxxyz = cbuffer.data(di_geom_0010_off + 396 * ccomps * dcomps);

            auto g_0_0_z_0_xz_xxxxzz = cbuffer.data(di_geom_0010_off + 397 * ccomps * dcomps);

            auto g_0_0_z_0_xz_xxxyyy = cbuffer.data(di_geom_0010_off + 398 * ccomps * dcomps);

            auto g_0_0_z_0_xz_xxxyyz = cbuffer.data(di_geom_0010_off + 399 * ccomps * dcomps);

            auto g_0_0_z_0_xz_xxxyzz = cbuffer.data(di_geom_0010_off + 400 * ccomps * dcomps);

            auto g_0_0_z_0_xz_xxxzzz = cbuffer.data(di_geom_0010_off + 401 * ccomps * dcomps);

            auto g_0_0_z_0_xz_xxyyyy = cbuffer.data(di_geom_0010_off + 402 * ccomps * dcomps);

            auto g_0_0_z_0_xz_xxyyyz = cbuffer.data(di_geom_0010_off + 403 * ccomps * dcomps);

            auto g_0_0_z_0_xz_xxyyzz = cbuffer.data(di_geom_0010_off + 404 * ccomps * dcomps);

            auto g_0_0_z_0_xz_xxyzzz = cbuffer.data(di_geom_0010_off + 405 * ccomps * dcomps);

            auto g_0_0_z_0_xz_xxzzzz = cbuffer.data(di_geom_0010_off + 406 * ccomps * dcomps);

            auto g_0_0_z_0_xz_xyyyyy = cbuffer.data(di_geom_0010_off + 407 * ccomps * dcomps);

            auto g_0_0_z_0_xz_xyyyyz = cbuffer.data(di_geom_0010_off + 408 * ccomps * dcomps);

            auto g_0_0_z_0_xz_xyyyzz = cbuffer.data(di_geom_0010_off + 409 * ccomps * dcomps);

            auto g_0_0_z_0_xz_xyyzzz = cbuffer.data(di_geom_0010_off + 410 * ccomps * dcomps);

            auto g_0_0_z_0_xz_xyzzzz = cbuffer.data(di_geom_0010_off + 411 * ccomps * dcomps);

            auto g_0_0_z_0_xz_xzzzzz = cbuffer.data(di_geom_0010_off + 412 * ccomps * dcomps);

            auto g_0_0_z_0_xz_yyyyyy = cbuffer.data(di_geom_0010_off + 413 * ccomps * dcomps);

            auto g_0_0_z_0_xz_yyyyyz = cbuffer.data(di_geom_0010_off + 414 * ccomps * dcomps);

            auto g_0_0_z_0_xz_yyyyzz = cbuffer.data(di_geom_0010_off + 415 * ccomps * dcomps);

            auto g_0_0_z_0_xz_yyyzzz = cbuffer.data(di_geom_0010_off + 416 * ccomps * dcomps);

            auto g_0_0_z_0_xz_yyzzzz = cbuffer.data(di_geom_0010_off + 417 * ccomps * dcomps);

            auto g_0_0_z_0_xz_yzzzzz = cbuffer.data(di_geom_0010_off + 418 * ccomps * dcomps);

            auto g_0_0_z_0_xz_zzzzzz = cbuffer.data(di_geom_0010_off + 419 * ccomps * dcomps);

            auto g_0_0_z_0_yy_xxxxxx = cbuffer.data(di_geom_0010_off + 420 * ccomps * dcomps);

            auto g_0_0_z_0_yy_xxxxxy = cbuffer.data(di_geom_0010_off + 421 * ccomps * dcomps);

            auto g_0_0_z_0_yy_xxxxxz = cbuffer.data(di_geom_0010_off + 422 * ccomps * dcomps);

            auto g_0_0_z_0_yy_xxxxyy = cbuffer.data(di_geom_0010_off + 423 * ccomps * dcomps);

            auto g_0_0_z_0_yy_xxxxyz = cbuffer.data(di_geom_0010_off + 424 * ccomps * dcomps);

            auto g_0_0_z_0_yy_xxxxzz = cbuffer.data(di_geom_0010_off + 425 * ccomps * dcomps);

            auto g_0_0_z_0_yy_xxxyyy = cbuffer.data(di_geom_0010_off + 426 * ccomps * dcomps);

            auto g_0_0_z_0_yy_xxxyyz = cbuffer.data(di_geom_0010_off + 427 * ccomps * dcomps);

            auto g_0_0_z_0_yy_xxxyzz = cbuffer.data(di_geom_0010_off + 428 * ccomps * dcomps);

            auto g_0_0_z_0_yy_xxxzzz = cbuffer.data(di_geom_0010_off + 429 * ccomps * dcomps);

            auto g_0_0_z_0_yy_xxyyyy = cbuffer.data(di_geom_0010_off + 430 * ccomps * dcomps);

            auto g_0_0_z_0_yy_xxyyyz = cbuffer.data(di_geom_0010_off + 431 * ccomps * dcomps);

            auto g_0_0_z_0_yy_xxyyzz = cbuffer.data(di_geom_0010_off + 432 * ccomps * dcomps);

            auto g_0_0_z_0_yy_xxyzzz = cbuffer.data(di_geom_0010_off + 433 * ccomps * dcomps);

            auto g_0_0_z_0_yy_xxzzzz = cbuffer.data(di_geom_0010_off + 434 * ccomps * dcomps);

            auto g_0_0_z_0_yy_xyyyyy = cbuffer.data(di_geom_0010_off + 435 * ccomps * dcomps);

            auto g_0_0_z_0_yy_xyyyyz = cbuffer.data(di_geom_0010_off + 436 * ccomps * dcomps);

            auto g_0_0_z_0_yy_xyyyzz = cbuffer.data(di_geom_0010_off + 437 * ccomps * dcomps);

            auto g_0_0_z_0_yy_xyyzzz = cbuffer.data(di_geom_0010_off + 438 * ccomps * dcomps);

            auto g_0_0_z_0_yy_xyzzzz = cbuffer.data(di_geom_0010_off + 439 * ccomps * dcomps);

            auto g_0_0_z_0_yy_xzzzzz = cbuffer.data(di_geom_0010_off + 440 * ccomps * dcomps);

            auto g_0_0_z_0_yy_yyyyyy = cbuffer.data(di_geom_0010_off + 441 * ccomps * dcomps);

            auto g_0_0_z_0_yy_yyyyyz = cbuffer.data(di_geom_0010_off + 442 * ccomps * dcomps);

            auto g_0_0_z_0_yy_yyyyzz = cbuffer.data(di_geom_0010_off + 443 * ccomps * dcomps);

            auto g_0_0_z_0_yy_yyyzzz = cbuffer.data(di_geom_0010_off + 444 * ccomps * dcomps);

            auto g_0_0_z_0_yy_yyzzzz = cbuffer.data(di_geom_0010_off + 445 * ccomps * dcomps);

            auto g_0_0_z_0_yy_yzzzzz = cbuffer.data(di_geom_0010_off + 446 * ccomps * dcomps);

            auto g_0_0_z_0_yy_zzzzzz = cbuffer.data(di_geom_0010_off + 447 * ccomps * dcomps);

            auto g_0_0_z_0_yz_xxxxxx = cbuffer.data(di_geom_0010_off + 448 * ccomps * dcomps);

            auto g_0_0_z_0_yz_xxxxxy = cbuffer.data(di_geom_0010_off + 449 * ccomps * dcomps);

            auto g_0_0_z_0_yz_xxxxxz = cbuffer.data(di_geom_0010_off + 450 * ccomps * dcomps);

            auto g_0_0_z_0_yz_xxxxyy = cbuffer.data(di_geom_0010_off + 451 * ccomps * dcomps);

            auto g_0_0_z_0_yz_xxxxyz = cbuffer.data(di_geom_0010_off + 452 * ccomps * dcomps);

            auto g_0_0_z_0_yz_xxxxzz = cbuffer.data(di_geom_0010_off + 453 * ccomps * dcomps);

            auto g_0_0_z_0_yz_xxxyyy = cbuffer.data(di_geom_0010_off + 454 * ccomps * dcomps);

            auto g_0_0_z_0_yz_xxxyyz = cbuffer.data(di_geom_0010_off + 455 * ccomps * dcomps);

            auto g_0_0_z_0_yz_xxxyzz = cbuffer.data(di_geom_0010_off + 456 * ccomps * dcomps);

            auto g_0_0_z_0_yz_xxxzzz = cbuffer.data(di_geom_0010_off + 457 * ccomps * dcomps);

            auto g_0_0_z_0_yz_xxyyyy = cbuffer.data(di_geom_0010_off + 458 * ccomps * dcomps);

            auto g_0_0_z_0_yz_xxyyyz = cbuffer.data(di_geom_0010_off + 459 * ccomps * dcomps);

            auto g_0_0_z_0_yz_xxyyzz = cbuffer.data(di_geom_0010_off + 460 * ccomps * dcomps);

            auto g_0_0_z_0_yz_xxyzzz = cbuffer.data(di_geom_0010_off + 461 * ccomps * dcomps);

            auto g_0_0_z_0_yz_xxzzzz = cbuffer.data(di_geom_0010_off + 462 * ccomps * dcomps);

            auto g_0_0_z_0_yz_xyyyyy = cbuffer.data(di_geom_0010_off + 463 * ccomps * dcomps);

            auto g_0_0_z_0_yz_xyyyyz = cbuffer.data(di_geom_0010_off + 464 * ccomps * dcomps);

            auto g_0_0_z_0_yz_xyyyzz = cbuffer.data(di_geom_0010_off + 465 * ccomps * dcomps);

            auto g_0_0_z_0_yz_xyyzzz = cbuffer.data(di_geom_0010_off + 466 * ccomps * dcomps);

            auto g_0_0_z_0_yz_xyzzzz = cbuffer.data(di_geom_0010_off + 467 * ccomps * dcomps);

            auto g_0_0_z_0_yz_xzzzzz = cbuffer.data(di_geom_0010_off + 468 * ccomps * dcomps);

            auto g_0_0_z_0_yz_yyyyyy = cbuffer.data(di_geom_0010_off + 469 * ccomps * dcomps);

            auto g_0_0_z_0_yz_yyyyyz = cbuffer.data(di_geom_0010_off + 470 * ccomps * dcomps);

            auto g_0_0_z_0_yz_yyyyzz = cbuffer.data(di_geom_0010_off + 471 * ccomps * dcomps);

            auto g_0_0_z_0_yz_yyyzzz = cbuffer.data(di_geom_0010_off + 472 * ccomps * dcomps);

            auto g_0_0_z_0_yz_yyzzzz = cbuffer.data(di_geom_0010_off + 473 * ccomps * dcomps);

            auto g_0_0_z_0_yz_yzzzzz = cbuffer.data(di_geom_0010_off + 474 * ccomps * dcomps);

            auto g_0_0_z_0_yz_zzzzzz = cbuffer.data(di_geom_0010_off + 475 * ccomps * dcomps);

            auto g_0_0_z_0_zz_xxxxxx = cbuffer.data(di_geom_0010_off + 476 * ccomps * dcomps);

            auto g_0_0_z_0_zz_xxxxxy = cbuffer.data(di_geom_0010_off + 477 * ccomps * dcomps);

            auto g_0_0_z_0_zz_xxxxxz = cbuffer.data(di_geom_0010_off + 478 * ccomps * dcomps);

            auto g_0_0_z_0_zz_xxxxyy = cbuffer.data(di_geom_0010_off + 479 * ccomps * dcomps);

            auto g_0_0_z_0_zz_xxxxyz = cbuffer.data(di_geom_0010_off + 480 * ccomps * dcomps);

            auto g_0_0_z_0_zz_xxxxzz = cbuffer.data(di_geom_0010_off + 481 * ccomps * dcomps);

            auto g_0_0_z_0_zz_xxxyyy = cbuffer.data(di_geom_0010_off + 482 * ccomps * dcomps);

            auto g_0_0_z_0_zz_xxxyyz = cbuffer.data(di_geom_0010_off + 483 * ccomps * dcomps);

            auto g_0_0_z_0_zz_xxxyzz = cbuffer.data(di_geom_0010_off + 484 * ccomps * dcomps);

            auto g_0_0_z_0_zz_xxxzzz = cbuffer.data(di_geom_0010_off + 485 * ccomps * dcomps);

            auto g_0_0_z_0_zz_xxyyyy = cbuffer.data(di_geom_0010_off + 486 * ccomps * dcomps);

            auto g_0_0_z_0_zz_xxyyyz = cbuffer.data(di_geom_0010_off + 487 * ccomps * dcomps);

            auto g_0_0_z_0_zz_xxyyzz = cbuffer.data(di_geom_0010_off + 488 * ccomps * dcomps);

            auto g_0_0_z_0_zz_xxyzzz = cbuffer.data(di_geom_0010_off + 489 * ccomps * dcomps);

            auto g_0_0_z_0_zz_xxzzzz = cbuffer.data(di_geom_0010_off + 490 * ccomps * dcomps);

            auto g_0_0_z_0_zz_xyyyyy = cbuffer.data(di_geom_0010_off + 491 * ccomps * dcomps);

            auto g_0_0_z_0_zz_xyyyyz = cbuffer.data(di_geom_0010_off + 492 * ccomps * dcomps);

            auto g_0_0_z_0_zz_xyyyzz = cbuffer.data(di_geom_0010_off + 493 * ccomps * dcomps);

            auto g_0_0_z_0_zz_xyyzzz = cbuffer.data(di_geom_0010_off + 494 * ccomps * dcomps);

            auto g_0_0_z_0_zz_xyzzzz = cbuffer.data(di_geom_0010_off + 495 * ccomps * dcomps);

            auto g_0_0_z_0_zz_xzzzzz = cbuffer.data(di_geom_0010_off + 496 * ccomps * dcomps);

            auto g_0_0_z_0_zz_yyyyyy = cbuffer.data(di_geom_0010_off + 497 * ccomps * dcomps);

            auto g_0_0_z_0_zz_yyyyyz = cbuffer.data(di_geom_0010_off + 498 * ccomps * dcomps);

            auto g_0_0_z_0_zz_yyyyzz = cbuffer.data(di_geom_0010_off + 499 * ccomps * dcomps);

            auto g_0_0_z_0_zz_yyyzzz = cbuffer.data(di_geom_0010_off + 500 * ccomps * dcomps);

            auto g_0_0_z_0_zz_yyzzzz = cbuffer.data(di_geom_0010_off + 501 * ccomps * dcomps);

            auto g_0_0_z_0_zz_yzzzzz = cbuffer.data(di_geom_0010_off + 502 * ccomps * dcomps);

            auto g_0_0_z_0_zz_zzzzzz = cbuffer.data(di_geom_0010_off + 503 * ccomps * dcomps);

            /// Set up components of auxilary buffer : DISS

            const auto di_geom_1010_off = idx_geom_1010_dixx + i * dcomps + j;

            auto g_x_0_x_0_xx_xxxxxx = cbuffer.data(di_geom_1010_off + 0 * ccomps * dcomps);

            auto g_x_0_x_0_xx_xxxxxy = cbuffer.data(di_geom_1010_off + 1 * ccomps * dcomps);

            auto g_x_0_x_0_xx_xxxxxz = cbuffer.data(di_geom_1010_off + 2 * ccomps * dcomps);

            auto g_x_0_x_0_xx_xxxxyy = cbuffer.data(di_geom_1010_off + 3 * ccomps * dcomps);

            auto g_x_0_x_0_xx_xxxxyz = cbuffer.data(di_geom_1010_off + 4 * ccomps * dcomps);

            auto g_x_0_x_0_xx_xxxxzz = cbuffer.data(di_geom_1010_off + 5 * ccomps * dcomps);

            auto g_x_0_x_0_xx_xxxyyy = cbuffer.data(di_geom_1010_off + 6 * ccomps * dcomps);

            auto g_x_0_x_0_xx_xxxyyz = cbuffer.data(di_geom_1010_off + 7 * ccomps * dcomps);

            auto g_x_0_x_0_xx_xxxyzz = cbuffer.data(di_geom_1010_off + 8 * ccomps * dcomps);

            auto g_x_0_x_0_xx_xxxzzz = cbuffer.data(di_geom_1010_off + 9 * ccomps * dcomps);

            auto g_x_0_x_0_xx_xxyyyy = cbuffer.data(di_geom_1010_off + 10 * ccomps * dcomps);

            auto g_x_0_x_0_xx_xxyyyz = cbuffer.data(di_geom_1010_off + 11 * ccomps * dcomps);

            auto g_x_0_x_0_xx_xxyyzz = cbuffer.data(di_geom_1010_off + 12 * ccomps * dcomps);

            auto g_x_0_x_0_xx_xxyzzz = cbuffer.data(di_geom_1010_off + 13 * ccomps * dcomps);

            auto g_x_0_x_0_xx_xxzzzz = cbuffer.data(di_geom_1010_off + 14 * ccomps * dcomps);

            auto g_x_0_x_0_xx_xyyyyy = cbuffer.data(di_geom_1010_off + 15 * ccomps * dcomps);

            auto g_x_0_x_0_xx_xyyyyz = cbuffer.data(di_geom_1010_off + 16 * ccomps * dcomps);

            auto g_x_0_x_0_xx_xyyyzz = cbuffer.data(di_geom_1010_off + 17 * ccomps * dcomps);

            auto g_x_0_x_0_xx_xyyzzz = cbuffer.data(di_geom_1010_off + 18 * ccomps * dcomps);

            auto g_x_0_x_0_xx_xyzzzz = cbuffer.data(di_geom_1010_off + 19 * ccomps * dcomps);

            auto g_x_0_x_0_xx_xzzzzz = cbuffer.data(di_geom_1010_off + 20 * ccomps * dcomps);

            auto g_x_0_x_0_xx_yyyyyy = cbuffer.data(di_geom_1010_off + 21 * ccomps * dcomps);

            auto g_x_0_x_0_xx_yyyyyz = cbuffer.data(di_geom_1010_off + 22 * ccomps * dcomps);

            auto g_x_0_x_0_xx_yyyyzz = cbuffer.data(di_geom_1010_off + 23 * ccomps * dcomps);

            auto g_x_0_x_0_xx_yyyzzz = cbuffer.data(di_geom_1010_off + 24 * ccomps * dcomps);

            auto g_x_0_x_0_xx_yyzzzz = cbuffer.data(di_geom_1010_off + 25 * ccomps * dcomps);

            auto g_x_0_x_0_xx_yzzzzz = cbuffer.data(di_geom_1010_off + 26 * ccomps * dcomps);

            auto g_x_0_x_0_xx_zzzzzz = cbuffer.data(di_geom_1010_off + 27 * ccomps * dcomps);

            auto g_x_0_x_0_xy_xxxxxx = cbuffer.data(di_geom_1010_off + 28 * ccomps * dcomps);

            auto g_x_0_x_0_xy_xxxxxy = cbuffer.data(di_geom_1010_off + 29 * ccomps * dcomps);

            auto g_x_0_x_0_xy_xxxxxz = cbuffer.data(di_geom_1010_off + 30 * ccomps * dcomps);

            auto g_x_0_x_0_xy_xxxxyy = cbuffer.data(di_geom_1010_off + 31 * ccomps * dcomps);

            auto g_x_0_x_0_xy_xxxxyz = cbuffer.data(di_geom_1010_off + 32 * ccomps * dcomps);

            auto g_x_0_x_0_xy_xxxxzz = cbuffer.data(di_geom_1010_off + 33 * ccomps * dcomps);

            auto g_x_0_x_0_xy_xxxyyy = cbuffer.data(di_geom_1010_off + 34 * ccomps * dcomps);

            auto g_x_0_x_0_xy_xxxyyz = cbuffer.data(di_geom_1010_off + 35 * ccomps * dcomps);

            auto g_x_0_x_0_xy_xxxyzz = cbuffer.data(di_geom_1010_off + 36 * ccomps * dcomps);

            auto g_x_0_x_0_xy_xxxzzz = cbuffer.data(di_geom_1010_off + 37 * ccomps * dcomps);

            auto g_x_0_x_0_xy_xxyyyy = cbuffer.data(di_geom_1010_off + 38 * ccomps * dcomps);

            auto g_x_0_x_0_xy_xxyyyz = cbuffer.data(di_geom_1010_off + 39 * ccomps * dcomps);

            auto g_x_0_x_0_xy_xxyyzz = cbuffer.data(di_geom_1010_off + 40 * ccomps * dcomps);

            auto g_x_0_x_0_xy_xxyzzz = cbuffer.data(di_geom_1010_off + 41 * ccomps * dcomps);

            auto g_x_0_x_0_xy_xxzzzz = cbuffer.data(di_geom_1010_off + 42 * ccomps * dcomps);

            auto g_x_0_x_0_xy_xyyyyy = cbuffer.data(di_geom_1010_off + 43 * ccomps * dcomps);

            auto g_x_0_x_0_xy_xyyyyz = cbuffer.data(di_geom_1010_off + 44 * ccomps * dcomps);

            auto g_x_0_x_0_xy_xyyyzz = cbuffer.data(di_geom_1010_off + 45 * ccomps * dcomps);

            auto g_x_0_x_0_xy_xyyzzz = cbuffer.data(di_geom_1010_off + 46 * ccomps * dcomps);

            auto g_x_0_x_0_xy_xyzzzz = cbuffer.data(di_geom_1010_off + 47 * ccomps * dcomps);

            auto g_x_0_x_0_xy_xzzzzz = cbuffer.data(di_geom_1010_off + 48 * ccomps * dcomps);

            auto g_x_0_x_0_xy_yyyyyy = cbuffer.data(di_geom_1010_off + 49 * ccomps * dcomps);

            auto g_x_0_x_0_xy_yyyyyz = cbuffer.data(di_geom_1010_off + 50 * ccomps * dcomps);

            auto g_x_0_x_0_xy_yyyyzz = cbuffer.data(di_geom_1010_off + 51 * ccomps * dcomps);

            auto g_x_0_x_0_xy_yyyzzz = cbuffer.data(di_geom_1010_off + 52 * ccomps * dcomps);

            auto g_x_0_x_0_xy_yyzzzz = cbuffer.data(di_geom_1010_off + 53 * ccomps * dcomps);

            auto g_x_0_x_0_xy_yzzzzz = cbuffer.data(di_geom_1010_off + 54 * ccomps * dcomps);

            auto g_x_0_x_0_xy_zzzzzz = cbuffer.data(di_geom_1010_off + 55 * ccomps * dcomps);

            auto g_x_0_x_0_xz_xxxxxx = cbuffer.data(di_geom_1010_off + 56 * ccomps * dcomps);

            auto g_x_0_x_0_xz_xxxxxy = cbuffer.data(di_geom_1010_off + 57 * ccomps * dcomps);

            auto g_x_0_x_0_xz_xxxxxz = cbuffer.data(di_geom_1010_off + 58 * ccomps * dcomps);

            auto g_x_0_x_0_xz_xxxxyy = cbuffer.data(di_geom_1010_off + 59 * ccomps * dcomps);

            auto g_x_0_x_0_xz_xxxxyz = cbuffer.data(di_geom_1010_off + 60 * ccomps * dcomps);

            auto g_x_0_x_0_xz_xxxxzz = cbuffer.data(di_geom_1010_off + 61 * ccomps * dcomps);

            auto g_x_0_x_0_xz_xxxyyy = cbuffer.data(di_geom_1010_off + 62 * ccomps * dcomps);

            auto g_x_0_x_0_xz_xxxyyz = cbuffer.data(di_geom_1010_off + 63 * ccomps * dcomps);

            auto g_x_0_x_0_xz_xxxyzz = cbuffer.data(di_geom_1010_off + 64 * ccomps * dcomps);

            auto g_x_0_x_0_xz_xxxzzz = cbuffer.data(di_geom_1010_off + 65 * ccomps * dcomps);

            auto g_x_0_x_0_xz_xxyyyy = cbuffer.data(di_geom_1010_off + 66 * ccomps * dcomps);

            auto g_x_0_x_0_xz_xxyyyz = cbuffer.data(di_geom_1010_off + 67 * ccomps * dcomps);

            auto g_x_0_x_0_xz_xxyyzz = cbuffer.data(di_geom_1010_off + 68 * ccomps * dcomps);

            auto g_x_0_x_0_xz_xxyzzz = cbuffer.data(di_geom_1010_off + 69 * ccomps * dcomps);

            auto g_x_0_x_0_xz_xxzzzz = cbuffer.data(di_geom_1010_off + 70 * ccomps * dcomps);

            auto g_x_0_x_0_xz_xyyyyy = cbuffer.data(di_geom_1010_off + 71 * ccomps * dcomps);

            auto g_x_0_x_0_xz_xyyyyz = cbuffer.data(di_geom_1010_off + 72 * ccomps * dcomps);

            auto g_x_0_x_0_xz_xyyyzz = cbuffer.data(di_geom_1010_off + 73 * ccomps * dcomps);

            auto g_x_0_x_0_xz_xyyzzz = cbuffer.data(di_geom_1010_off + 74 * ccomps * dcomps);

            auto g_x_0_x_0_xz_xyzzzz = cbuffer.data(di_geom_1010_off + 75 * ccomps * dcomps);

            auto g_x_0_x_0_xz_xzzzzz = cbuffer.data(di_geom_1010_off + 76 * ccomps * dcomps);

            auto g_x_0_x_0_xz_yyyyyy = cbuffer.data(di_geom_1010_off + 77 * ccomps * dcomps);

            auto g_x_0_x_0_xz_yyyyyz = cbuffer.data(di_geom_1010_off + 78 * ccomps * dcomps);

            auto g_x_0_x_0_xz_yyyyzz = cbuffer.data(di_geom_1010_off + 79 * ccomps * dcomps);

            auto g_x_0_x_0_xz_yyyzzz = cbuffer.data(di_geom_1010_off + 80 * ccomps * dcomps);

            auto g_x_0_x_0_xz_yyzzzz = cbuffer.data(di_geom_1010_off + 81 * ccomps * dcomps);

            auto g_x_0_x_0_xz_yzzzzz = cbuffer.data(di_geom_1010_off + 82 * ccomps * dcomps);

            auto g_x_0_x_0_xz_zzzzzz = cbuffer.data(di_geom_1010_off + 83 * ccomps * dcomps);

            auto g_x_0_x_0_yy_xxxxxx = cbuffer.data(di_geom_1010_off + 84 * ccomps * dcomps);

            auto g_x_0_x_0_yy_xxxxxy = cbuffer.data(di_geom_1010_off + 85 * ccomps * dcomps);

            auto g_x_0_x_0_yy_xxxxxz = cbuffer.data(di_geom_1010_off + 86 * ccomps * dcomps);

            auto g_x_0_x_0_yy_xxxxyy = cbuffer.data(di_geom_1010_off + 87 * ccomps * dcomps);

            auto g_x_0_x_0_yy_xxxxyz = cbuffer.data(di_geom_1010_off + 88 * ccomps * dcomps);

            auto g_x_0_x_0_yy_xxxxzz = cbuffer.data(di_geom_1010_off + 89 * ccomps * dcomps);

            auto g_x_0_x_0_yy_xxxyyy = cbuffer.data(di_geom_1010_off + 90 * ccomps * dcomps);

            auto g_x_0_x_0_yy_xxxyyz = cbuffer.data(di_geom_1010_off + 91 * ccomps * dcomps);

            auto g_x_0_x_0_yy_xxxyzz = cbuffer.data(di_geom_1010_off + 92 * ccomps * dcomps);

            auto g_x_0_x_0_yy_xxxzzz = cbuffer.data(di_geom_1010_off + 93 * ccomps * dcomps);

            auto g_x_0_x_0_yy_xxyyyy = cbuffer.data(di_geom_1010_off + 94 * ccomps * dcomps);

            auto g_x_0_x_0_yy_xxyyyz = cbuffer.data(di_geom_1010_off + 95 * ccomps * dcomps);

            auto g_x_0_x_0_yy_xxyyzz = cbuffer.data(di_geom_1010_off + 96 * ccomps * dcomps);

            auto g_x_0_x_0_yy_xxyzzz = cbuffer.data(di_geom_1010_off + 97 * ccomps * dcomps);

            auto g_x_0_x_0_yy_xxzzzz = cbuffer.data(di_geom_1010_off + 98 * ccomps * dcomps);

            auto g_x_0_x_0_yy_xyyyyy = cbuffer.data(di_geom_1010_off + 99 * ccomps * dcomps);

            auto g_x_0_x_0_yy_xyyyyz = cbuffer.data(di_geom_1010_off + 100 * ccomps * dcomps);

            auto g_x_0_x_0_yy_xyyyzz = cbuffer.data(di_geom_1010_off + 101 * ccomps * dcomps);

            auto g_x_0_x_0_yy_xyyzzz = cbuffer.data(di_geom_1010_off + 102 * ccomps * dcomps);

            auto g_x_0_x_0_yy_xyzzzz = cbuffer.data(di_geom_1010_off + 103 * ccomps * dcomps);

            auto g_x_0_x_0_yy_xzzzzz = cbuffer.data(di_geom_1010_off + 104 * ccomps * dcomps);

            auto g_x_0_x_0_yy_yyyyyy = cbuffer.data(di_geom_1010_off + 105 * ccomps * dcomps);

            auto g_x_0_x_0_yy_yyyyyz = cbuffer.data(di_geom_1010_off + 106 * ccomps * dcomps);

            auto g_x_0_x_0_yy_yyyyzz = cbuffer.data(di_geom_1010_off + 107 * ccomps * dcomps);

            auto g_x_0_x_0_yy_yyyzzz = cbuffer.data(di_geom_1010_off + 108 * ccomps * dcomps);

            auto g_x_0_x_0_yy_yyzzzz = cbuffer.data(di_geom_1010_off + 109 * ccomps * dcomps);

            auto g_x_0_x_0_yy_yzzzzz = cbuffer.data(di_geom_1010_off + 110 * ccomps * dcomps);

            auto g_x_0_x_0_yy_zzzzzz = cbuffer.data(di_geom_1010_off + 111 * ccomps * dcomps);

            auto g_x_0_x_0_yz_xxxxxx = cbuffer.data(di_geom_1010_off + 112 * ccomps * dcomps);

            auto g_x_0_x_0_yz_xxxxxy = cbuffer.data(di_geom_1010_off + 113 * ccomps * dcomps);

            auto g_x_0_x_0_yz_xxxxxz = cbuffer.data(di_geom_1010_off + 114 * ccomps * dcomps);

            auto g_x_0_x_0_yz_xxxxyy = cbuffer.data(di_geom_1010_off + 115 * ccomps * dcomps);

            auto g_x_0_x_0_yz_xxxxyz = cbuffer.data(di_geom_1010_off + 116 * ccomps * dcomps);

            auto g_x_0_x_0_yz_xxxxzz = cbuffer.data(di_geom_1010_off + 117 * ccomps * dcomps);

            auto g_x_0_x_0_yz_xxxyyy = cbuffer.data(di_geom_1010_off + 118 * ccomps * dcomps);

            auto g_x_0_x_0_yz_xxxyyz = cbuffer.data(di_geom_1010_off + 119 * ccomps * dcomps);

            auto g_x_0_x_0_yz_xxxyzz = cbuffer.data(di_geom_1010_off + 120 * ccomps * dcomps);

            auto g_x_0_x_0_yz_xxxzzz = cbuffer.data(di_geom_1010_off + 121 * ccomps * dcomps);

            auto g_x_0_x_0_yz_xxyyyy = cbuffer.data(di_geom_1010_off + 122 * ccomps * dcomps);

            auto g_x_0_x_0_yz_xxyyyz = cbuffer.data(di_geom_1010_off + 123 * ccomps * dcomps);

            auto g_x_0_x_0_yz_xxyyzz = cbuffer.data(di_geom_1010_off + 124 * ccomps * dcomps);

            auto g_x_0_x_0_yz_xxyzzz = cbuffer.data(di_geom_1010_off + 125 * ccomps * dcomps);

            auto g_x_0_x_0_yz_xxzzzz = cbuffer.data(di_geom_1010_off + 126 * ccomps * dcomps);

            auto g_x_0_x_0_yz_xyyyyy = cbuffer.data(di_geom_1010_off + 127 * ccomps * dcomps);

            auto g_x_0_x_0_yz_xyyyyz = cbuffer.data(di_geom_1010_off + 128 * ccomps * dcomps);

            auto g_x_0_x_0_yz_xyyyzz = cbuffer.data(di_geom_1010_off + 129 * ccomps * dcomps);

            auto g_x_0_x_0_yz_xyyzzz = cbuffer.data(di_geom_1010_off + 130 * ccomps * dcomps);

            auto g_x_0_x_0_yz_xyzzzz = cbuffer.data(di_geom_1010_off + 131 * ccomps * dcomps);

            auto g_x_0_x_0_yz_xzzzzz = cbuffer.data(di_geom_1010_off + 132 * ccomps * dcomps);

            auto g_x_0_x_0_yz_yyyyyy = cbuffer.data(di_geom_1010_off + 133 * ccomps * dcomps);

            auto g_x_0_x_0_yz_yyyyyz = cbuffer.data(di_geom_1010_off + 134 * ccomps * dcomps);

            auto g_x_0_x_0_yz_yyyyzz = cbuffer.data(di_geom_1010_off + 135 * ccomps * dcomps);

            auto g_x_0_x_0_yz_yyyzzz = cbuffer.data(di_geom_1010_off + 136 * ccomps * dcomps);

            auto g_x_0_x_0_yz_yyzzzz = cbuffer.data(di_geom_1010_off + 137 * ccomps * dcomps);

            auto g_x_0_x_0_yz_yzzzzz = cbuffer.data(di_geom_1010_off + 138 * ccomps * dcomps);

            auto g_x_0_x_0_yz_zzzzzz = cbuffer.data(di_geom_1010_off + 139 * ccomps * dcomps);

            auto g_x_0_x_0_zz_xxxxxx = cbuffer.data(di_geom_1010_off + 140 * ccomps * dcomps);

            auto g_x_0_x_0_zz_xxxxxy = cbuffer.data(di_geom_1010_off + 141 * ccomps * dcomps);

            auto g_x_0_x_0_zz_xxxxxz = cbuffer.data(di_geom_1010_off + 142 * ccomps * dcomps);

            auto g_x_0_x_0_zz_xxxxyy = cbuffer.data(di_geom_1010_off + 143 * ccomps * dcomps);

            auto g_x_0_x_0_zz_xxxxyz = cbuffer.data(di_geom_1010_off + 144 * ccomps * dcomps);

            auto g_x_0_x_0_zz_xxxxzz = cbuffer.data(di_geom_1010_off + 145 * ccomps * dcomps);

            auto g_x_0_x_0_zz_xxxyyy = cbuffer.data(di_geom_1010_off + 146 * ccomps * dcomps);

            auto g_x_0_x_0_zz_xxxyyz = cbuffer.data(di_geom_1010_off + 147 * ccomps * dcomps);

            auto g_x_0_x_0_zz_xxxyzz = cbuffer.data(di_geom_1010_off + 148 * ccomps * dcomps);

            auto g_x_0_x_0_zz_xxxzzz = cbuffer.data(di_geom_1010_off + 149 * ccomps * dcomps);

            auto g_x_0_x_0_zz_xxyyyy = cbuffer.data(di_geom_1010_off + 150 * ccomps * dcomps);

            auto g_x_0_x_0_zz_xxyyyz = cbuffer.data(di_geom_1010_off + 151 * ccomps * dcomps);

            auto g_x_0_x_0_zz_xxyyzz = cbuffer.data(di_geom_1010_off + 152 * ccomps * dcomps);

            auto g_x_0_x_0_zz_xxyzzz = cbuffer.data(di_geom_1010_off + 153 * ccomps * dcomps);

            auto g_x_0_x_0_zz_xxzzzz = cbuffer.data(di_geom_1010_off + 154 * ccomps * dcomps);

            auto g_x_0_x_0_zz_xyyyyy = cbuffer.data(di_geom_1010_off + 155 * ccomps * dcomps);

            auto g_x_0_x_0_zz_xyyyyz = cbuffer.data(di_geom_1010_off + 156 * ccomps * dcomps);

            auto g_x_0_x_0_zz_xyyyzz = cbuffer.data(di_geom_1010_off + 157 * ccomps * dcomps);

            auto g_x_0_x_0_zz_xyyzzz = cbuffer.data(di_geom_1010_off + 158 * ccomps * dcomps);

            auto g_x_0_x_0_zz_xyzzzz = cbuffer.data(di_geom_1010_off + 159 * ccomps * dcomps);

            auto g_x_0_x_0_zz_xzzzzz = cbuffer.data(di_geom_1010_off + 160 * ccomps * dcomps);

            auto g_x_0_x_0_zz_yyyyyy = cbuffer.data(di_geom_1010_off + 161 * ccomps * dcomps);

            auto g_x_0_x_0_zz_yyyyyz = cbuffer.data(di_geom_1010_off + 162 * ccomps * dcomps);

            auto g_x_0_x_0_zz_yyyyzz = cbuffer.data(di_geom_1010_off + 163 * ccomps * dcomps);

            auto g_x_0_x_0_zz_yyyzzz = cbuffer.data(di_geom_1010_off + 164 * ccomps * dcomps);

            auto g_x_0_x_0_zz_yyzzzz = cbuffer.data(di_geom_1010_off + 165 * ccomps * dcomps);

            auto g_x_0_x_0_zz_yzzzzz = cbuffer.data(di_geom_1010_off + 166 * ccomps * dcomps);

            auto g_x_0_x_0_zz_zzzzzz = cbuffer.data(di_geom_1010_off + 167 * ccomps * dcomps);

            auto g_x_0_y_0_xx_xxxxxx = cbuffer.data(di_geom_1010_off + 168 * ccomps * dcomps);

            auto g_x_0_y_0_xx_xxxxxy = cbuffer.data(di_geom_1010_off + 169 * ccomps * dcomps);

            auto g_x_0_y_0_xx_xxxxxz = cbuffer.data(di_geom_1010_off + 170 * ccomps * dcomps);

            auto g_x_0_y_0_xx_xxxxyy = cbuffer.data(di_geom_1010_off + 171 * ccomps * dcomps);

            auto g_x_0_y_0_xx_xxxxyz = cbuffer.data(di_geom_1010_off + 172 * ccomps * dcomps);

            auto g_x_0_y_0_xx_xxxxzz = cbuffer.data(di_geom_1010_off + 173 * ccomps * dcomps);

            auto g_x_0_y_0_xx_xxxyyy = cbuffer.data(di_geom_1010_off + 174 * ccomps * dcomps);

            auto g_x_0_y_0_xx_xxxyyz = cbuffer.data(di_geom_1010_off + 175 * ccomps * dcomps);

            auto g_x_0_y_0_xx_xxxyzz = cbuffer.data(di_geom_1010_off + 176 * ccomps * dcomps);

            auto g_x_0_y_0_xx_xxxzzz = cbuffer.data(di_geom_1010_off + 177 * ccomps * dcomps);

            auto g_x_0_y_0_xx_xxyyyy = cbuffer.data(di_geom_1010_off + 178 * ccomps * dcomps);

            auto g_x_0_y_0_xx_xxyyyz = cbuffer.data(di_geom_1010_off + 179 * ccomps * dcomps);

            auto g_x_0_y_0_xx_xxyyzz = cbuffer.data(di_geom_1010_off + 180 * ccomps * dcomps);

            auto g_x_0_y_0_xx_xxyzzz = cbuffer.data(di_geom_1010_off + 181 * ccomps * dcomps);

            auto g_x_0_y_0_xx_xxzzzz = cbuffer.data(di_geom_1010_off + 182 * ccomps * dcomps);

            auto g_x_0_y_0_xx_xyyyyy = cbuffer.data(di_geom_1010_off + 183 * ccomps * dcomps);

            auto g_x_0_y_0_xx_xyyyyz = cbuffer.data(di_geom_1010_off + 184 * ccomps * dcomps);

            auto g_x_0_y_0_xx_xyyyzz = cbuffer.data(di_geom_1010_off + 185 * ccomps * dcomps);

            auto g_x_0_y_0_xx_xyyzzz = cbuffer.data(di_geom_1010_off + 186 * ccomps * dcomps);

            auto g_x_0_y_0_xx_xyzzzz = cbuffer.data(di_geom_1010_off + 187 * ccomps * dcomps);

            auto g_x_0_y_0_xx_xzzzzz = cbuffer.data(di_geom_1010_off + 188 * ccomps * dcomps);

            auto g_x_0_y_0_xx_yyyyyy = cbuffer.data(di_geom_1010_off + 189 * ccomps * dcomps);

            auto g_x_0_y_0_xx_yyyyyz = cbuffer.data(di_geom_1010_off + 190 * ccomps * dcomps);

            auto g_x_0_y_0_xx_yyyyzz = cbuffer.data(di_geom_1010_off + 191 * ccomps * dcomps);

            auto g_x_0_y_0_xx_yyyzzz = cbuffer.data(di_geom_1010_off + 192 * ccomps * dcomps);

            auto g_x_0_y_0_xx_yyzzzz = cbuffer.data(di_geom_1010_off + 193 * ccomps * dcomps);

            auto g_x_0_y_0_xx_yzzzzz = cbuffer.data(di_geom_1010_off + 194 * ccomps * dcomps);

            auto g_x_0_y_0_xx_zzzzzz = cbuffer.data(di_geom_1010_off + 195 * ccomps * dcomps);

            auto g_x_0_y_0_xy_xxxxxx = cbuffer.data(di_geom_1010_off + 196 * ccomps * dcomps);

            auto g_x_0_y_0_xy_xxxxxy = cbuffer.data(di_geom_1010_off + 197 * ccomps * dcomps);

            auto g_x_0_y_0_xy_xxxxxz = cbuffer.data(di_geom_1010_off + 198 * ccomps * dcomps);

            auto g_x_0_y_0_xy_xxxxyy = cbuffer.data(di_geom_1010_off + 199 * ccomps * dcomps);

            auto g_x_0_y_0_xy_xxxxyz = cbuffer.data(di_geom_1010_off + 200 * ccomps * dcomps);

            auto g_x_0_y_0_xy_xxxxzz = cbuffer.data(di_geom_1010_off + 201 * ccomps * dcomps);

            auto g_x_0_y_0_xy_xxxyyy = cbuffer.data(di_geom_1010_off + 202 * ccomps * dcomps);

            auto g_x_0_y_0_xy_xxxyyz = cbuffer.data(di_geom_1010_off + 203 * ccomps * dcomps);

            auto g_x_0_y_0_xy_xxxyzz = cbuffer.data(di_geom_1010_off + 204 * ccomps * dcomps);

            auto g_x_0_y_0_xy_xxxzzz = cbuffer.data(di_geom_1010_off + 205 * ccomps * dcomps);

            auto g_x_0_y_0_xy_xxyyyy = cbuffer.data(di_geom_1010_off + 206 * ccomps * dcomps);

            auto g_x_0_y_0_xy_xxyyyz = cbuffer.data(di_geom_1010_off + 207 * ccomps * dcomps);

            auto g_x_0_y_0_xy_xxyyzz = cbuffer.data(di_geom_1010_off + 208 * ccomps * dcomps);

            auto g_x_0_y_0_xy_xxyzzz = cbuffer.data(di_geom_1010_off + 209 * ccomps * dcomps);

            auto g_x_0_y_0_xy_xxzzzz = cbuffer.data(di_geom_1010_off + 210 * ccomps * dcomps);

            auto g_x_0_y_0_xy_xyyyyy = cbuffer.data(di_geom_1010_off + 211 * ccomps * dcomps);

            auto g_x_0_y_0_xy_xyyyyz = cbuffer.data(di_geom_1010_off + 212 * ccomps * dcomps);

            auto g_x_0_y_0_xy_xyyyzz = cbuffer.data(di_geom_1010_off + 213 * ccomps * dcomps);

            auto g_x_0_y_0_xy_xyyzzz = cbuffer.data(di_geom_1010_off + 214 * ccomps * dcomps);

            auto g_x_0_y_0_xy_xyzzzz = cbuffer.data(di_geom_1010_off + 215 * ccomps * dcomps);

            auto g_x_0_y_0_xy_xzzzzz = cbuffer.data(di_geom_1010_off + 216 * ccomps * dcomps);

            auto g_x_0_y_0_xy_yyyyyy = cbuffer.data(di_geom_1010_off + 217 * ccomps * dcomps);

            auto g_x_0_y_0_xy_yyyyyz = cbuffer.data(di_geom_1010_off + 218 * ccomps * dcomps);

            auto g_x_0_y_0_xy_yyyyzz = cbuffer.data(di_geom_1010_off + 219 * ccomps * dcomps);

            auto g_x_0_y_0_xy_yyyzzz = cbuffer.data(di_geom_1010_off + 220 * ccomps * dcomps);

            auto g_x_0_y_0_xy_yyzzzz = cbuffer.data(di_geom_1010_off + 221 * ccomps * dcomps);

            auto g_x_0_y_0_xy_yzzzzz = cbuffer.data(di_geom_1010_off + 222 * ccomps * dcomps);

            auto g_x_0_y_0_xy_zzzzzz = cbuffer.data(di_geom_1010_off + 223 * ccomps * dcomps);

            auto g_x_0_y_0_xz_xxxxxx = cbuffer.data(di_geom_1010_off + 224 * ccomps * dcomps);

            auto g_x_0_y_0_xz_xxxxxy = cbuffer.data(di_geom_1010_off + 225 * ccomps * dcomps);

            auto g_x_0_y_0_xz_xxxxxz = cbuffer.data(di_geom_1010_off + 226 * ccomps * dcomps);

            auto g_x_0_y_0_xz_xxxxyy = cbuffer.data(di_geom_1010_off + 227 * ccomps * dcomps);

            auto g_x_0_y_0_xz_xxxxyz = cbuffer.data(di_geom_1010_off + 228 * ccomps * dcomps);

            auto g_x_0_y_0_xz_xxxxzz = cbuffer.data(di_geom_1010_off + 229 * ccomps * dcomps);

            auto g_x_0_y_0_xz_xxxyyy = cbuffer.data(di_geom_1010_off + 230 * ccomps * dcomps);

            auto g_x_0_y_0_xz_xxxyyz = cbuffer.data(di_geom_1010_off + 231 * ccomps * dcomps);

            auto g_x_0_y_0_xz_xxxyzz = cbuffer.data(di_geom_1010_off + 232 * ccomps * dcomps);

            auto g_x_0_y_0_xz_xxxzzz = cbuffer.data(di_geom_1010_off + 233 * ccomps * dcomps);

            auto g_x_0_y_0_xz_xxyyyy = cbuffer.data(di_geom_1010_off + 234 * ccomps * dcomps);

            auto g_x_0_y_0_xz_xxyyyz = cbuffer.data(di_geom_1010_off + 235 * ccomps * dcomps);

            auto g_x_0_y_0_xz_xxyyzz = cbuffer.data(di_geom_1010_off + 236 * ccomps * dcomps);

            auto g_x_0_y_0_xz_xxyzzz = cbuffer.data(di_geom_1010_off + 237 * ccomps * dcomps);

            auto g_x_0_y_0_xz_xxzzzz = cbuffer.data(di_geom_1010_off + 238 * ccomps * dcomps);

            auto g_x_0_y_0_xz_xyyyyy = cbuffer.data(di_geom_1010_off + 239 * ccomps * dcomps);

            auto g_x_0_y_0_xz_xyyyyz = cbuffer.data(di_geom_1010_off + 240 * ccomps * dcomps);

            auto g_x_0_y_0_xz_xyyyzz = cbuffer.data(di_geom_1010_off + 241 * ccomps * dcomps);

            auto g_x_0_y_0_xz_xyyzzz = cbuffer.data(di_geom_1010_off + 242 * ccomps * dcomps);

            auto g_x_0_y_0_xz_xyzzzz = cbuffer.data(di_geom_1010_off + 243 * ccomps * dcomps);

            auto g_x_0_y_0_xz_xzzzzz = cbuffer.data(di_geom_1010_off + 244 * ccomps * dcomps);

            auto g_x_0_y_0_xz_yyyyyy = cbuffer.data(di_geom_1010_off + 245 * ccomps * dcomps);

            auto g_x_0_y_0_xz_yyyyyz = cbuffer.data(di_geom_1010_off + 246 * ccomps * dcomps);

            auto g_x_0_y_0_xz_yyyyzz = cbuffer.data(di_geom_1010_off + 247 * ccomps * dcomps);

            auto g_x_0_y_0_xz_yyyzzz = cbuffer.data(di_geom_1010_off + 248 * ccomps * dcomps);

            auto g_x_0_y_0_xz_yyzzzz = cbuffer.data(di_geom_1010_off + 249 * ccomps * dcomps);

            auto g_x_0_y_0_xz_yzzzzz = cbuffer.data(di_geom_1010_off + 250 * ccomps * dcomps);

            auto g_x_0_y_0_xz_zzzzzz = cbuffer.data(di_geom_1010_off + 251 * ccomps * dcomps);

            auto g_x_0_y_0_yy_xxxxxx = cbuffer.data(di_geom_1010_off + 252 * ccomps * dcomps);

            auto g_x_0_y_0_yy_xxxxxy = cbuffer.data(di_geom_1010_off + 253 * ccomps * dcomps);

            auto g_x_0_y_0_yy_xxxxxz = cbuffer.data(di_geom_1010_off + 254 * ccomps * dcomps);

            auto g_x_0_y_0_yy_xxxxyy = cbuffer.data(di_geom_1010_off + 255 * ccomps * dcomps);

            auto g_x_0_y_0_yy_xxxxyz = cbuffer.data(di_geom_1010_off + 256 * ccomps * dcomps);

            auto g_x_0_y_0_yy_xxxxzz = cbuffer.data(di_geom_1010_off + 257 * ccomps * dcomps);

            auto g_x_0_y_0_yy_xxxyyy = cbuffer.data(di_geom_1010_off + 258 * ccomps * dcomps);

            auto g_x_0_y_0_yy_xxxyyz = cbuffer.data(di_geom_1010_off + 259 * ccomps * dcomps);

            auto g_x_0_y_0_yy_xxxyzz = cbuffer.data(di_geom_1010_off + 260 * ccomps * dcomps);

            auto g_x_0_y_0_yy_xxxzzz = cbuffer.data(di_geom_1010_off + 261 * ccomps * dcomps);

            auto g_x_0_y_0_yy_xxyyyy = cbuffer.data(di_geom_1010_off + 262 * ccomps * dcomps);

            auto g_x_0_y_0_yy_xxyyyz = cbuffer.data(di_geom_1010_off + 263 * ccomps * dcomps);

            auto g_x_0_y_0_yy_xxyyzz = cbuffer.data(di_geom_1010_off + 264 * ccomps * dcomps);

            auto g_x_0_y_0_yy_xxyzzz = cbuffer.data(di_geom_1010_off + 265 * ccomps * dcomps);

            auto g_x_0_y_0_yy_xxzzzz = cbuffer.data(di_geom_1010_off + 266 * ccomps * dcomps);

            auto g_x_0_y_0_yy_xyyyyy = cbuffer.data(di_geom_1010_off + 267 * ccomps * dcomps);

            auto g_x_0_y_0_yy_xyyyyz = cbuffer.data(di_geom_1010_off + 268 * ccomps * dcomps);

            auto g_x_0_y_0_yy_xyyyzz = cbuffer.data(di_geom_1010_off + 269 * ccomps * dcomps);

            auto g_x_0_y_0_yy_xyyzzz = cbuffer.data(di_geom_1010_off + 270 * ccomps * dcomps);

            auto g_x_0_y_0_yy_xyzzzz = cbuffer.data(di_geom_1010_off + 271 * ccomps * dcomps);

            auto g_x_0_y_0_yy_xzzzzz = cbuffer.data(di_geom_1010_off + 272 * ccomps * dcomps);

            auto g_x_0_y_0_yy_yyyyyy = cbuffer.data(di_geom_1010_off + 273 * ccomps * dcomps);

            auto g_x_0_y_0_yy_yyyyyz = cbuffer.data(di_geom_1010_off + 274 * ccomps * dcomps);

            auto g_x_0_y_0_yy_yyyyzz = cbuffer.data(di_geom_1010_off + 275 * ccomps * dcomps);

            auto g_x_0_y_0_yy_yyyzzz = cbuffer.data(di_geom_1010_off + 276 * ccomps * dcomps);

            auto g_x_0_y_0_yy_yyzzzz = cbuffer.data(di_geom_1010_off + 277 * ccomps * dcomps);

            auto g_x_0_y_0_yy_yzzzzz = cbuffer.data(di_geom_1010_off + 278 * ccomps * dcomps);

            auto g_x_0_y_0_yy_zzzzzz = cbuffer.data(di_geom_1010_off + 279 * ccomps * dcomps);

            auto g_x_0_y_0_yz_xxxxxx = cbuffer.data(di_geom_1010_off + 280 * ccomps * dcomps);

            auto g_x_0_y_0_yz_xxxxxy = cbuffer.data(di_geom_1010_off + 281 * ccomps * dcomps);

            auto g_x_0_y_0_yz_xxxxxz = cbuffer.data(di_geom_1010_off + 282 * ccomps * dcomps);

            auto g_x_0_y_0_yz_xxxxyy = cbuffer.data(di_geom_1010_off + 283 * ccomps * dcomps);

            auto g_x_0_y_0_yz_xxxxyz = cbuffer.data(di_geom_1010_off + 284 * ccomps * dcomps);

            auto g_x_0_y_0_yz_xxxxzz = cbuffer.data(di_geom_1010_off + 285 * ccomps * dcomps);

            auto g_x_0_y_0_yz_xxxyyy = cbuffer.data(di_geom_1010_off + 286 * ccomps * dcomps);

            auto g_x_0_y_0_yz_xxxyyz = cbuffer.data(di_geom_1010_off + 287 * ccomps * dcomps);

            auto g_x_0_y_0_yz_xxxyzz = cbuffer.data(di_geom_1010_off + 288 * ccomps * dcomps);

            auto g_x_0_y_0_yz_xxxzzz = cbuffer.data(di_geom_1010_off + 289 * ccomps * dcomps);

            auto g_x_0_y_0_yz_xxyyyy = cbuffer.data(di_geom_1010_off + 290 * ccomps * dcomps);

            auto g_x_0_y_0_yz_xxyyyz = cbuffer.data(di_geom_1010_off + 291 * ccomps * dcomps);

            auto g_x_0_y_0_yz_xxyyzz = cbuffer.data(di_geom_1010_off + 292 * ccomps * dcomps);

            auto g_x_0_y_0_yz_xxyzzz = cbuffer.data(di_geom_1010_off + 293 * ccomps * dcomps);

            auto g_x_0_y_0_yz_xxzzzz = cbuffer.data(di_geom_1010_off + 294 * ccomps * dcomps);

            auto g_x_0_y_0_yz_xyyyyy = cbuffer.data(di_geom_1010_off + 295 * ccomps * dcomps);

            auto g_x_0_y_0_yz_xyyyyz = cbuffer.data(di_geom_1010_off + 296 * ccomps * dcomps);

            auto g_x_0_y_0_yz_xyyyzz = cbuffer.data(di_geom_1010_off + 297 * ccomps * dcomps);

            auto g_x_0_y_0_yz_xyyzzz = cbuffer.data(di_geom_1010_off + 298 * ccomps * dcomps);

            auto g_x_0_y_0_yz_xyzzzz = cbuffer.data(di_geom_1010_off + 299 * ccomps * dcomps);

            auto g_x_0_y_0_yz_xzzzzz = cbuffer.data(di_geom_1010_off + 300 * ccomps * dcomps);

            auto g_x_0_y_0_yz_yyyyyy = cbuffer.data(di_geom_1010_off + 301 * ccomps * dcomps);

            auto g_x_0_y_0_yz_yyyyyz = cbuffer.data(di_geom_1010_off + 302 * ccomps * dcomps);

            auto g_x_0_y_0_yz_yyyyzz = cbuffer.data(di_geom_1010_off + 303 * ccomps * dcomps);

            auto g_x_0_y_0_yz_yyyzzz = cbuffer.data(di_geom_1010_off + 304 * ccomps * dcomps);

            auto g_x_0_y_0_yz_yyzzzz = cbuffer.data(di_geom_1010_off + 305 * ccomps * dcomps);

            auto g_x_0_y_0_yz_yzzzzz = cbuffer.data(di_geom_1010_off + 306 * ccomps * dcomps);

            auto g_x_0_y_0_yz_zzzzzz = cbuffer.data(di_geom_1010_off + 307 * ccomps * dcomps);

            auto g_x_0_y_0_zz_xxxxxx = cbuffer.data(di_geom_1010_off + 308 * ccomps * dcomps);

            auto g_x_0_y_0_zz_xxxxxy = cbuffer.data(di_geom_1010_off + 309 * ccomps * dcomps);

            auto g_x_0_y_0_zz_xxxxxz = cbuffer.data(di_geom_1010_off + 310 * ccomps * dcomps);

            auto g_x_0_y_0_zz_xxxxyy = cbuffer.data(di_geom_1010_off + 311 * ccomps * dcomps);

            auto g_x_0_y_0_zz_xxxxyz = cbuffer.data(di_geom_1010_off + 312 * ccomps * dcomps);

            auto g_x_0_y_0_zz_xxxxzz = cbuffer.data(di_geom_1010_off + 313 * ccomps * dcomps);

            auto g_x_0_y_0_zz_xxxyyy = cbuffer.data(di_geom_1010_off + 314 * ccomps * dcomps);

            auto g_x_0_y_0_zz_xxxyyz = cbuffer.data(di_geom_1010_off + 315 * ccomps * dcomps);

            auto g_x_0_y_0_zz_xxxyzz = cbuffer.data(di_geom_1010_off + 316 * ccomps * dcomps);

            auto g_x_0_y_0_zz_xxxzzz = cbuffer.data(di_geom_1010_off + 317 * ccomps * dcomps);

            auto g_x_0_y_0_zz_xxyyyy = cbuffer.data(di_geom_1010_off + 318 * ccomps * dcomps);

            auto g_x_0_y_0_zz_xxyyyz = cbuffer.data(di_geom_1010_off + 319 * ccomps * dcomps);

            auto g_x_0_y_0_zz_xxyyzz = cbuffer.data(di_geom_1010_off + 320 * ccomps * dcomps);

            auto g_x_0_y_0_zz_xxyzzz = cbuffer.data(di_geom_1010_off + 321 * ccomps * dcomps);

            auto g_x_0_y_0_zz_xxzzzz = cbuffer.data(di_geom_1010_off + 322 * ccomps * dcomps);

            auto g_x_0_y_0_zz_xyyyyy = cbuffer.data(di_geom_1010_off + 323 * ccomps * dcomps);

            auto g_x_0_y_0_zz_xyyyyz = cbuffer.data(di_geom_1010_off + 324 * ccomps * dcomps);

            auto g_x_0_y_0_zz_xyyyzz = cbuffer.data(di_geom_1010_off + 325 * ccomps * dcomps);

            auto g_x_0_y_0_zz_xyyzzz = cbuffer.data(di_geom_1010_off + 326 * ccomps * dcomps);

            auto g_x_0_y_0_zz_xyzzzz = cbuffer.data(di_geom_1010_off + 327 * ccomps * dcomps);

            auto g_x_0_y_0_zz_xzzzzz = cbuffer.data(di_geom_1010_off + 328 * ccomps * dcomps);

            auto g_x_0_y_0_zz_yyyyyy = cbuffer.data(di_geom_1010_off + 329 * ccomps * dcomps);

            auto g_x_0_y_0_zz_yyyyyz = cbuffer.data(di_geom_1010_off + 330 * ccomps * dcomps);

            auto g_x_0_y_0_zz_yyyyzz = cbuffer.data(di_geom_1010_off + 331 * ccomps * dcomps);

            auto g_x_0_y_0_zz_yyyzzz = cbuffer.data(di_geom_1010_off + 332 * ccomps * dcomps);

            auto g_x_0_y_0_zz_yyzzzz = cbuffer.data(di_geom_1010_off + 333 * ccomps * dcomps);

            auto g_x_0_y_0_zz_yzzzzz = cbuffer.data(di_geom_1010_off + 334 * ccomps * dcomps);

            auto g_x_0_y_0_zz_zzzzzz = cbuffer.data(di_geom_1010_off + 335 * ccomps * dcomps);

            auto g_x_0_z_0_xx_xxxxxx = cbuffer.data(di_geom_1010_off + 336 * ccomps * dcomps);

            auto g_x_0_z_0_xx_xxxxxy = cbuffer.data(di_geom_1010_off + 337 * ccomps * dcomps);

            auto g_x_0_z_0_xx_xxxxxz = cbuffer.data(di_geom_1010_off + 338 * ccomps * dcomps);

            auto g_x_0_z_0_xx_xxxxyy = cbuffer.data(di_geom_1010_off + 339 * ccomps * dcomps);

            auto g_x_0_z_0_xx_xxxxyz = cbuffer.data(di_geom_1010_off + 340 * ccomps * dcomps);

            auto g_x_0_z_0_xx_xxxxzz = cbuffer.data(di_geom_1010_off + 341 * ccomps * dcomps);

            auto g_x_0_z_0_xx_xxxyyy = cbuffer.data(di_geom_1010_off + 342 * ccomps * dcomps);

            auto g_x_0_z_0_xx_xxxyyz = cbuffer.data(di_geom_1010_off + 343 * ccomps * dcomps);

            auto g_x_0_z_0_xx_xxxyzz = cbuffer.data(di_geom_1010_off + 344 * ccomps * dcomps);

            auto g_x_0_z_0_xx_xxxzzz = cbuffer.data(di_geom_1010_off + 345 * ccomps * dcomps);

            auto g_x_0_z_0_xx_xxyyyy = cbuffer.data(di_geom_1010_off + 346 * ccomps * dcomps);

            auto g_x_0_z_0_xx_xxyyyz = cbuffer.data(di_geom_1010_off + 347 * ccomps * dcomps);

            auto g_x_0_z_0_xx_xxyyzz = cbuffer.data(di_geom_1010_off + 348 * ccomps * dcomps);

            auto g_x_0_z_0_xx_xxyzzz = cbuffer.data(di_geom_1010_off + 349 * ccomps * dcomps);

            auto g_x_0_z_0_xx_xxzzzz = cbuffer.data(di_geom_1010_off + 350 * ccomps * dcomps);

            auto g_x_0_z_0_xx_xyyyyy = cbuffer.data(di_geom_1010_off + 351 * ccomps * dcomps);

            auto g_x_0_z_0_xx_xyyyyz = cbuffer.data(di_geom_1010_off + 352 * ccomps * dcomps);

            auto g_x_0_z_0_xx_xyyyzz = cbuffer.data(di_geom_1010_off + 353 * ccomps * dcomps);

            auto g_x_0_z_0_xx_xyyzzz = cbuffer.data(di_geom_1010_off + 354 * ccomps * dcomps);

            auto g_x_0_z_0_xx_xyzzzz = cbuffer.data(di_geom_1010_off + 355 * ccomps * dcomps);

            auto g_x_0_z_0_xx_xzzzzz = cbuffer.data(di_geom_1010_off + 356 * ccomps * dcomps);

            auto g_x_0_z_0_xx_yyyyyy = cbuffer.data(di_geom_1010_off + 357 * ccomps * dcomps);

            auto g_x_0_z_0_xx_yyyyyz = cbuffer.data(di_geom_1010_off + 358 * ccomps * dcomps);

            auto g_x_0_z_0_xx_yyyyzz = cbuffer.data(di_geom_1010_off + 359 * ccomps * dcomps);

            auto g_x_0_z_0_xx_yyyzzz = cbuffer.data(di_geom_1010_off + 360 * ccomps * dcomps);

            auto g_x_0_z_0_xx_yyzzzz = cbuffer.data(di_geom_1010_off + 361 * ccomps * dcomps);

            auto g_x_0_z_0_xx_yzzzzz = cbuffer.data(di_geom_1010_off + 362 * ccomps * dcomps);

            auto g_x_0_z_0_xx_zzzzzz = cbuffer.data(di_geom_1010_off + 363 * ccomps * dcomps);

            auto g_x_0_z_0_xy_xxxxxx = cbuffer.data(di_geom_1010_off + 364 * ccomps * dcomps);

            auto g_x_0_z_0_xy_xxxxxy = cbuffer.data(di_geom_1010_off + 365 * ccomps * dcomps);

            auto g_x_0_z_0_xy_xxxxxz = cbuffer.data(di_geom_1010_off + 366 * ccomps * dcomps);

            auto g_x_0_z_0_xy_xxxxyy = cbuffer.data(di_geom_1010_off + 367 * ccomps * dcomps);

            auto g_x_0_z_0_xy_xxxxyz = cbuffer.data(di_geom_1010_off + 368 * ccomps * dcomps);

            auto g_x_0_z_0_xy_xxxxzz = cbuffer.data(di_geom_1010_off + 369 * ccomps * dcomps);

            auto g_x_0_z_0_xy_xxxyyy = cbuffer.data(di_geom_1010_off + 370 * ccomps * dcomps);

            auto g_x_0_z_0_xy_xxxyyz = cbuffer.data(di_geom_1010_off + 371 * ccomps * dcomps);

            auto g_x_0_z_0_xy_xxxyzz = cbuffer.data(di_geom_1010_off + 372 * ccomps * dcomps);

            auto g_x_0_z_0_xy_xxxzzz = cbuffer.data(di_geom_1010_off + 373 * ccomps * dcomps);

            auto g_x_0_z_0_xy_xxyyyy = cbuffer.data(di_geom_1010_off + 374 * ccomps * dcomps);

            auto g_x_0_z_0_xy_xxyyyz = cbuffer.data(di_geom_1010_off + 375 * ccomps * dcomps);

            auto g_x_0_z_0_xy_xxyyzz = cbuffer.data(di_geom_1010_off + 376 * ccomps * dcomps);

            auto g_x_0_z_0_xy_xxyzzz = cbuffer.data(di_geom_1010_off + 377 * ccomps * dcomps);

            auto g_x_0_z_0_xy_xxzzzz = cbuffer.data(di_geom_1010_off + 378 * ccomps * dcomps);

            auto g_x_0_z_0_xy_xyyyyy = cbuffer.data(di_geom_1010_off + 379 * ccomps * dcomps);

            auto g_x_0_z_0_xy_xyyyyz = cbuffer.data(di_geom_1010_off + 380 * ccomps * dcomps);

            auto g_x_0_z_0_xy_xyyyzz = cbuffer.data(di_geom_1010_off + 381 * ccomps * dcomps);

            auto g_x_0_z_0_xy_xyyzzz = cbuffer.data(di_geom_1010_off + 382 * ccomps * dcomps);

            auto g_x_0_z_0_xy_xyzzzz = cbuffer.data(di_geom_1010_off + 383 * ccomps * dcomps);

            auto g_x_0_z_0_xy_xzzzzz = cbuffer.data(di_geom_1010_off + 384 * ccomps * dcomps);

            auto g_x_0_z_0_xy_yyyyyy = cbuffer.data(di_geom_1010_off + 385 * ccomps * dcomps);

            auto g_x_0_z_0_xy_yyyyyz = cbuffer.data(di_geom_1010_off + 386 * ccomps * dcomps);

            auto g_x_0_z_0_xy_yyyyzz = cbuffer.data(di_geom_1010_off + 387 * ccomps * dcomps);

            auto g_x_0_z_0_xy_yyyzzz = cbuffer.data(di_geom_1010_off + 388 * ccomps * dcomps);

            auto g_x_0_z_0_xy_yyzzzz = cbuffer.data(di_geom_1010_off + 389 * ccomps * dcomps);

            auto g_x_0_z_0_xy_yzzzzz = cbuffer.data(di_geom_1010_off + 390 * ccomps * dcomps);

            auto g_x_0_z_0_xy_zzzzzz = cbuffer.data(di_geom_1010_off + 391 * ccomps * dcomps);

            auto g_x_0_z_0_xz_xxxxxx = cbuffer.data(di_geom_1010_off + 392 * ccomps * dcomps);

            auto g_x_0_z_0_xz_xxxxxy = cbuffer.data(di_geom_1010_off + 393 * ccomps * dcomps);

            auto g_x_0_z_0_xz_xxxxxz = cbuffer.data(di_geom_1010_off + 394 * ccomps * dcomps);

            auto g_x_0_z_0_xz_xxxxyy = cbuffer.data(di_geom_1010_off + 395 * ccomps * dcomps);

            auto g_x_0_z_0_xz_xxxxyz = cbuffer.data(di_geom_1010_off + 396 * ccomps * dcomps);

            auto g_x_0_z_0_xz_xxxxzz = cbuffer.data(di_geom_1010_off + 397 * ccomps * dcomps);

            auto g_x_0_z_0_xz_xxxyyy = cbuffer.data(di_geom_1010_off + 398 * ccomps * dcomps);

            auto g_x_0_z_0_xz_xxxyyz = cbuffer.data(di_geom_1010_off + 399 * ccomps * dcomps);

            auto g_x_0_z_0_xz_xxxyzz = cbuffer.data(di_geom_1010_off + 400 * ccomps * dcomps);

            auto g_x_0_z_0_xz_xxxzzz = cbuffer.data(di_geom_1010_off + 401 * ccomps * dcomps);

            auto g_x_0_z_0_xz_xxyyyy = cbuffer.data(di_geom_1010_off + 402 * ccomps * dcomps);

            auto g_x_0_z_0_xz_xxyyyz = cbuffer.data(di_geom_1010_off + 403 * ccomps * dcomps);

            auto g_x_0_z_0_xz_xxyyzz = cbuffer.data(di_geom_1010_off + 404 * ccomps * dcomps);

            auto g_x_0_z_0_xz_xxyzzz = cbuffer.data(di_geom_1010_off + 405 * ccomps * dcomps);

            auto g_x_0_z_0_xz_xxzzzz = cbuffer.data(di_geom_1010_off + 406 * ccomps * dcomps);

            auto g_x_0_z_0_xz_xyyyyy = cbuffer.data(di_geom_1010_off + 407 * ccomps * dcomps);

            auto g_x_0_z_0_xz_xyyyyz = cbuffer.data(di_geom_1010_off + 408 * ccomps * dcomps);

            auto g_x_0_z_0_xz_xyyyzz = cbuffer.data(di_geom_1010_off + 409 * ccomps * dcomps);

            auto g_x_0_z_0_xz_xyyzzz = cbuffer.data(di_geom_1010_off + 410 * ccomps * dcomps);

            auto g_x_0_z_0_xz_xyzzzz = cbuffer.data(di_geom_1010_off + 411 * ccomps * dcomps);

            auto g_x_0_z_0_xz_xzzzzz = cbuffer.data(di_geom_1010_off + 412 * ccomps * dcomps);

            auto g_x_0_z_0_xz_yyyyyy = cbuffer.data(di_geom_1010_off + 413 * ccomps * dcomps);

            auto g_x_0_z_0_xz_yyyyyz = cbuffer.data(di_geom_1010_off + 414 * ccomps * dcomps);

            auto g_x_0_z_0_xz_yyyyzz = cbuffer.data(di_geom_1010_off + 415 * ccomps * dcomps);

            auto g_x_0_z_0_xz_yyyzzz = cbuffer.data(di_geom_1010_off + 416 * ccomps * dcomps);

            auto g_x_0_z_0_xz_yyzzzz = cbuffer.data(di_geom_1010_off + 417 * ccomps * dcomps);

            auto g_x_0_z_0_xz_yzzzzz = cbuffer.data(di_geom_1010_off + 418 * ccomps * dcomps);

            auto g_x_0_z_0_xz_zzzzzz = cbuffer.data(di_geom_1010_off + 419 * ccomps * dcomps);

            auto g_x_0_z_0_yy_xxxxxx = cbuffer.data(di_geom_1010_off + 420 * ccomps * dcomps);

            auto g_x_0_z_0_yy_xxxxxy = cbuffer.data(di_geom_1010_off + 421 * ccomps * dcomps);

            auto g_x_0_z_0_yy_xxxxxz = cbuffer.data(di_geom_1010_off + 422 * ccomps * dcomps);

            auto g_x_0_z_0_yy_xxxxyy = cbuffer.data(di_geom_1010_off + 423 * ccomps * dcomps);

            auto g_x_0_z_0_yy_xxxxyz = cbuffer.data(di_geom_1010_off + 424 * ccomps * dcomps);

            auto g_x_0_z_0_yy_xxxxzz = cbuffer.data(di_geom_1010_off + 425 * ccomps * dcomps);

            auto g_x_0_z_0_yy_xxxyyy = cbuffer.data(di_geom_1010_off + 426 * ccomps * dcomps);

            auto g_x_0_z_0_yy_xxxyyz = cbuffer.data(di_geom_1010_off + 427 * ccomps * dcomps);

            auto g_x_0_z_0_yy_xxxyzz = cbuffer.data(di_geom_1010_off + 428 * ccomps * dcomps);

            auto g_x_0_z_0_yy_xxxzzz = cbuffer.data(di_geom_1010_off + 429 * ccomps * dcomps);

            auto g_x_0_z_0_yy_xxyyyy = cbuffer.data(di_geom_1010_off + 430 * ccomps * dcomps);

            auto g_x_0_z_0_yy_xxyyyz = cbuffer.data(di_geom_1010_off + 431 * ccomps * dcomps);

            auto g_x_0_z_0_yy_xxyyzz = cbuffer.data(di_geom_1010_off + 432 * ccomps * dcomps);

            auto g_x_0_z_0_yy_xxyzzz = cbuffer.data(di_geom_1010_off + 433 * ccomps * dcomps);

            auto g_x_0_z_0_yy_xxzzzz = cbuffer.data(di_geom_1010_off + 434 * ccomps * dcomps);

            auto g_x_0_z_0_yy_xyyyyy = cbuffer.data(di_geom_1010_off + 435 * ccomps * dcomps);

            auto g_x_0_z_0_yy_xyyyyz = cbuffer.data(di_geom_1010_off + 436 * ccomps * dcomps);

            auto g_x_0_z_0_yy_xyyyzz = cbuffer.data(di_geom_1010_off + 437 * ccomps * dcomps);

            auto g_x_0_z_0_yy_xyyzzz = cbuffer.data(di_geom_1010_off + 438 * ccomps * dcomps);

            auto g_x_0_z_0_yy_xyzzzz = cbuffer.data(di_geom_1010_off + 439 * ccomps * dcomps);

            auto g_x_0_z_0_yy_xzzzzz = cbuffer.data(di_geom_1010_off + 440 * ccomps * dcomps);

            auto g_x_0_z_0_yy_yyyyyy = cbuffer.data(di_geom_1010_off + 441 * ccomps * dcomps);

            auto g_x_0_z_0_yy_yyyyyz = cbuffer.data(di_geom_1010_off + 442 * ccomps * dcomps);

            auto g_x_0_z_0_yy_yyyyzz = cbuffer.data(di_geom_1010_off + 443 * ccomps * dcomps);

            auto g_x_0_z_0_yy_yyyzzz = cbuffer.data(di_geom_1010_off + 444 * ccomps * dcomps);

            auto g_x_0_z_0_yy_yyzzzz = cbuffer.data(di_geom_1010_off + 445 * ccomps * dcomps);

            auto g_x_0_z_0_yy_yzzzzz = cbuffer.data(di_geom_1010_off + 446 * ccomps * dcomps);

            auto g_x_0_z_0_yy_zzzzzz = cbuffer.data(di_geom_1010_off + 447 * ccomps * dcomps);

            auto g_x_0_z_0_yz_xxxxxx = cbuffer.data(di_geom_1010_off + 448 * ccomps * dcomps);

            auto g_x_0_z_0_yz_xxxxxy = cbuffer.data(di_geom_1010_off + 449 * ccomps * dcomps);

            auto g_x_0_z_0_yz_xxxxxz = cbuffer.data(di_geom_1010_off + 450 * ccomps * dcomps);

            auto g_x_0_z_0_yz_xxxxyy = cbuffer.data(di_geom_1010_off + 451 * ccomps * dcomps);

            auto g_x_0_z_0_yz_xxxxyz = cbuffer.data(di_geom_1010_off + 452 * ccomps * dcomps);

            auto g_x_0_z_0_yz_xxxxzz = cbuffer.data(di_geom_1010_off + 453 * ccomps * dcomps);

            auto g_x_0_z_0_yz_xxxyyy = cbuffer.data(di_geom_1010_off + 454 * ccomps * dcomps);

            auto g_x_0_z_0_yz_xxxyyz = cbuffer.data(di_geom_1010_off + 455 * ccomps * dcomps);

            auto g_x_0_z_0_yz_xxxyzz = cbuffer.data(di_geom_1010_off + 456 * ccomps * dcomps);

            auto g_x_0_z_0_yz_xxxzzz = cbuffer.data(di_geom_1010_off + 457 * ccomps * dcomps);

            auto g_x_0_z_0_yz_xxyyyy = cbuffer.data(di_geom_1010_off + 458 * ccomps * dcomps);

            auto g_x_0_z_0_yz_xxyyyz = cbuffer.data(di_geom_1010_off + 459 * ccomps * dcomps);

            auto g_x_0_z_0_yz_xxyyzz = cbuffer.data(di_geom_1010_off + 460 * ccomps * dcomps);

            auto g_x_0_z_0_yz_xxyzzz = cbuffer.data(di_geom_1010_off + 461 * ccomps * dcomps);

            auto g_x_0_z_0_yz_xxzzzz = cbuffer.data(di_geom_1010_off + 462 * ccomps * dcomps);

            auto g_x_0_z_0_yz_xyyyyy = cbuffer.data(di_geom_1010_off + 463 * ccomps * dcomps);

            auto g_x_0_z_0_yz_xyyyyz = cbuffer.data(di_geom_1010_off + 464 * ccomps * dcomps);

            auto g_x_0_z_0_yz_xyyyzz = cbuffer.data(di_geom_1010_off + 465 * ccomps * dcomps);

            auto g_x_0_z_0_yz_xyyzzz = cbuffer.data(di_geom_1010_off + 466 * ccomps * dcomps);

            auto g_x_0_z_0_yz_xyzzzz = cbuffer.data(di_geom_1010_off + 467 * ccomps * dcomps);

            auto g_x_0_z_0_yz_xzzzzz = cbuffer.data(di_geom_1010_off + 468 * ccomps * dcomps);

            auto g_x_0_z_0_yz_yyyyyy = cbuffer.data(di_geom_1010_off + 469 * ccomps * dcomps);

            auto g_x_0_z_0_yz_yyyyyz = cbuffer.data(di_geom_1010_off + 470 * ccomps * dcomps);

            auto g_x_0_z_0_yz_yyyyzz = cbuffer.data(di_geom_1010_off + 471 * ccomps * dcomps);

            auto g_x_0_z_0_yz_yyyzzz = cbuffer.data(di_geom_1010_off + 472 * ccomps * dcomps);

            auto g_x_0_z_0_yz_yyzzzz = cbuffer.data(di_geom_1010_off + 473 * ccomps * dcomps);

            auto g_x_0_z_0_yz_yzzzzz = cbuffer.data(di_geom_1010_off + 474 * ccomps * dcomps);

            auto g_x_0_z_0_yz_zzzzzz = cbuffer.data(di_geom_1010_off + 475 * ccomps * dcomps);

            auto g_x_0_z_0_zz_xxxxxx = cbuffer.data(di_geom_1010_off + 476 * ccomps * dcomps);

            auto g_x_0_z_0_zz_xxxxxy = cbuffer.data(di_geom_1010_off + 477 * ccomps * dcomps);

            auto g_x_0_z_0_zz_xxxxxz = cbuffer.data(di_geom_1010_off + 478 * ccomps * dcomps);

            auto g_x_0_z_0_zz_xxxxyy = cbuffer.data(di_geom_1010_off + 479 * ccomps * dcomps);

            auto g_x_0_z_0_zz_xxxxyz = cbuffer.data(di_geom_1010_off + 480 * ccomps * dcomps);

            auto g_x_0_z_0_zz_xxxxzz = cbuffer.data(di_geom_1010_off + 481 * ccomps * dcomps);

            auto g_x_0_z_0_zz_xxxyyy = cbuffer.data(di_geom_1010_off + 482 * ccomps * dcomps);

            auto g_x_0_z_0_zz_xxxyyz = cbuffer.data(di_geom_1010_off + 483 * ccomps * dcomps);

            auto g_x_0_z_0_zz_xxxyzz = cbuffer.data(di_geom_1010_off + 484 * ccomps * dcomps);

            auto g_x_0_z_0_zz_xxxzzz = cbuffer.data(di_geom_1010_off + 485 * ccomps * dcomps);

            auto g_x_0_z_0_zz_xxyyyy = cbuffer.data(di_geom_1010_off + 486 * ccomps * dcomps);

            auto g_x_0_z_0_zz_xxyyyz = cbuffer.data(di_geom_1010_off + 487 * ccomps * dcomps);

            auto g_x_0_z_0_zz_xxyyzz = cbuffer.data(di_geom_1010_off + 488 * ccomps * dcomps);

            auto g_x_0_z_0_zz_xxyzzz = cbuffer.data(di_geom_1010_off + 489 * ccomps * dcomps);

            auto g_x_0_z_0_zz_xxzzzz = cbuffer.data(di_geom_1010_off + 490 * ccomps * dcomps);

            auto g_x_0_z_0_zz_xyyyyy = cbuffer.data(di_geom_1010_off + 491 * ccomps * dcomps);

            auto g_x_0_z_0_zz_xyyyyz = cbuffer.data(di_geom_1010_off + 492 * ccomps * dcomps);

            auto g_x_0_z_0_zz_xyyyzz = cbuffer.data(di_geom_1010_off + 493 * ccomps * dcomps);

            auto g_x_0_z_0_zz_xyyzzz = cbuffer.data(di_geom_1010_off + 494 * ccomps * dcomps);

            auto g_x_0_z_0_zz_xyzzzz = cbuffer.data(di_geom_1010_off + 495 * ccomps * dcomps);

            auto g_x_0_z_0_zz_xzzzzz = cbuffer.data(di_geom_1010_off + 496 * ccomps * dcomps);

            auto g_x_0_z_0_zz_yyyyyy = cbuffer.data(di_geom_1010_off + 497 * ccomps * dcomps);

            auto g_x_0_z_0_zz_yyyyyz = cbuffer.data(di_geom_1010_off + 498 * ccomps * dcomps);

            auto g_x_0_z_0_zz_yyyyzz = cbuffer.data(di_geom_1010_off + 499 * ccomps * dcomps);

            auto g_x_0_z_0_zz_yyyzzz = cbuffer.data(di_geom_1010_off + 500 * ccomps * dcomps);

            auto g_x_0_z_0_zz_yyzzzz = cbuffer.data(di_geom_1010_off + 501 * ccomps * dcomps);

            auto g_x_0_z_0_zz_yzzzzz = cbuffer.data(di_geom_1010_off + 502 * ccomps * dcomps);

            auto g_x_0_z_0_zz_zzzzzz = cbuffer.data(di_geom_1010_off + 503 * ccomps * dcomps);

            auto g_y_0_x_0_xx_xxxxxx = cbuffer.data(di_geom_1010_off + 504 * ccomps * dcomps);

            auto g_y_0_x_0_xx_xxxxxy = cbuffer.data(di_geom_1010_off + 505 * ccomps * dcomps);

            auto g_y_0_x_0_xx_xxxxxz = cbuffer.data(di_geom_1010_off + 506 * ccomps * dcomps);

            auto g_y_0_x_0_xx_xxxxyy = cbuffer.data(di_geom_1010_off + 507 * ccomps * dcomps);

            auto g_y_0_x_0_xx_xxxxyz = cbuffer.data(di_geom_1010_off + 508 * ccomps * dcomps);

            auto g_y_0_x_0_xx_xxxxzz = cbuffer.data(di_geom_1010_off + 509 * ccomps * dcomps);

            auto g_y_0_x_0_xx_xxxyyy = cbuffer.data(di_geom_1010_off + 510 * ccomps * dcomps);

            auto g_y_0_x_0_xx_xxxyyz = cbuffer.data(di_geom_1010_off + 511 * ccomps * dcomps);

            auto g_y_0_x_0_xx_xxxyzz = cbuffer.data(di_geom_1010_off + 512 * ccomps * dcomps);

            auto g_y_0_x_0_xx_xxxzzz = cbuffer.data(di_geom_1010_off + 513 * ccomps * dcomps);

            auto g_y_0_x_0_xx_xxyyyy = cbuffer.data(di_geom_1010_off + 514 * ccomps * dcomps);

            auto g_y_0_x_0_xx_xxyyyz = cbuffer.data(di_geom_1010_off + 515 * ccomps * dcomps);

            auto g_y_0_x_0_xx_xxyyzz = cbuffer.data(di_geom_1010_off + 516 * ccomps * dcomps);

            auto g_y_0_x_0_xx_xxyzzz = cbuffer.data(di_geom_1010_off + 517 * ccomps * dcomps);

            auto g_y_0_x_0_xx_xxzzzz = cbuffer.data(di_geom_1010_off + 518 * ccomps * dcomps);

            auto g_y_0_x_0_xx_xyyyyy = cbuffer.data(di_geom_1010_off + 519 * ccomps * dcomps);

            auto g_y_0_x_0_xx_xyyyyz = cbuffer.data(di_geom_1010_off + 520 * ccomps * dcomps);

            auto g_y_0_x_0_xx_xyyyzz = cbuffer.data(di_geom_1010_off + 521 * ccomps * dcomps);

            auto g_y_0_x_0_xx_xyyzzz = cbuffer.data(di_geom_1010_off + 522 * ccomps * dcomps);

            auto g_y_0_x_0_xx_xyzzzz = cbuffer.data(di_geom_1010_off + 523 * ccomps * dcomps);

            auto g_y_0_x_0_xx_xzzzzz = cbuffer.data(di_geom_1010_off + 524 * ccomps * dcomps);

            auto g_y_0_x_0_xx_yyyyyy = cbuffer.data(di_geom_1010_off + 525 * ccomps * dcomps);

            auto g_y_0_x_0_xx_yyyyyz = cbuffer.data(di_geom_1010_off + 526 * ccomps * dcomps);

            auto g_y_0_x_0_xx_yyyyzz = cbuffer.data(di_geom_1010_off + 527 * ccomps * dcomps);

            auto g_y_0_x_0_xx_yyyzzz = cbuffer.data(di_geom_1010_off + 528 * ccomps * dcomps);

            auto g_y_0_x_0_xx_yyzzzz = cbuffer.data(di_geom_1010_off + 529 * ccomps * dcomps);

            auto g_y_0_x_0_xx_yzzzzz = cbuffer.data(di_geom_1010_off + 530 * ccomps * dcomps);

            auto g_y_0_x_0_xx_zzzzzz = cbuffer.data(di_geom_1010_off + 531 * ccomps * dcomps);

            auto g_y_0_x_0_xy_xxxxxx = cbuffer.data(di_geom_1010_off + 532 * ccomps * dcomps);

            auto g_y_0_x_0_xy_xxxxxy = cbuffer.data(di_geom_1010_off + 533 * ccomps * dcomps);

            auto g_y_0_x_0_xy_xxxxxz = cbuffer.data(di_geom_1010_off + 534 * ccomps * dcomps);

            auto g_y_0_x_0_xy_xxxxyy = cbuffer.data(di_geom_1010_off + 535 * ccomps * dcomps);

            auto g_y_0_x_0_xy_xxxxyz = cbuffer.data(di_geom_1010_off + 536 * ccomps * dcomps);

            auto g_y_0_x_0_xy_xxxxzz = cbuffer.data(di_geom_1010_off + 537 * ccomps * dcomps);

            auto g_y_0_x_0_xy_xxxyyy = cbuffer.data(di_geom_1010_off + 538 * ccomps * dcomps);

            auto g_y_0_x_0_xy_xxxyyz = cbuffer.data(di_geom_1010_off + 539 * ccomps * dcomps);

            auto g_y_0_x_0_xy_xxxyzz = cbuffer.data(di_geom_1010_off + 540 * ccomps * dcomps);

            auto g_y_0_x_0_xy_xxxzzz = cbuffer.data(di_geom_1010_off + 541 * ccomps * dcomps);

            auto g_y_0_x_0_xy_xxyyyy = cbuffer.data(di_geom_1010_off + 542 * ccomps * dcomps);

            auto g_y_0_x_0_xy_xxyyyz = cbuffer.data(di_geom_1010_off + 543 * ccomps * dcomps);

            auto g_y_0_x_0_xy_xxyyzz = cbuffer.data(di_geom_1010_off + 544 * ccomps * dcomps);

            auto g_y_0_x_0_xy_xxyzzz = cbuffer.data(di_geom_1010_off + 545 * ccomps * dcomps);

            auto g_y_0_x_0_xy_xxzzzz = cbuffer.data(di_geom_1010_off + 546 * ccomps * dcomps);

            auto g_y_0_x_0_xy_xyyyyy = cbuffer.data(di_geom_1010_off + 547 * ccomps * dcomps);

            auto g_y_0_x_0_xy_xyyyyz = cbuffer.data(di_geom_1010_off + 548 * ccomps * dcomps);

            auto g_y_0_x_0_xy_xyyyzz = cbuffer.data(di_geom_1010_off + 549 * ccomps * dcomps);

            auto g_y_0_x_0_xy_xyyzzz = cbuffer.data(di_geom_1010_off + 550 * ccomps * dcomps);

            auto g_y_0_x_0_xy_xyzzzz = cbuffer.data(di_geom_1010_off + 551 * ccomps * dcomps);

            auto g_y_0_x_0_xy_xzzzzz = cbuffer.data(di_geom_1010_off + 552 * ccomps * dcomps);

            auto g_y_0_x_0_xy_yyyyyy = cbuffer.data(di_geom_1010_off + 553 * ccomps * dcomps);

            auto g_y_0_x_0_xy_yyyyyz = cbuffer.data(di_geom_1010_off + 554 * ccomps * dcomps);

            auto g_y_0_x_0_xy_yyyyzz = cbuffer.data(di_geom_1010_off + 555 * ccomps * dcomps);

            auto g_y_0_x_0_xy_yyyzzz = cbuffer.data(di_geom_1010_off + 556 * ccomps * dcomps);

            auto g_y_0_x_0_xy_yyzzzz = cbuffer.data(di_geom_1010_off + 557 * ccomps * dcomps);

            auto g_y_0_x_0_xy_yzzzzz = cbuffer.data(di_geom_1010_off + 558 * ccomps * dcomps);

            auto g_y_0_x_0_xy_zzzzzz = cbuffer.data(di_geom_1010_off + 559 * ccomps * dcomps);

            auto g_y_0_x_0_xz_xxxxxx = cbuffer.data(di_geom_1010_off + 560 * ccomps * dcomps);

            auto g_y_0_x_0_xz_xxxxxy = cbuffer.data(di_geom_1010_off + 561 * ccomps * dcomps);

            auto g_y_0_x_0_xz_xxxxxz = cbuffer.data(di_geom_1010_off + 562 * ccomps * dcomps);

            auto g_y_0_x_0_xz_xxxxyy = cbuffer.data(di_geom_1010_off + 563 * ccomps * dcomps);

            auto g_y_0_x_0_xz_xxxxyz = cbuffer.data(di_geom_1010_off + 564 * ccomps * dcomps);

            auto g_y_0_x_0_xz_xxxxzz = cbuffer.data(di_geom_1010_off + 565 * ccomps * dcomps);

            auto g_y_0_x_0_xz_xxxyyy = cbuffer.data(di_geom_1010_off + 566 * ccomps * dcomps);

            auto g_y_0_x_0_xz_xxxyyz = cbuffer.data(di_geom_1010_off + 567 * ccomps * dcomps);

            auto g_y_0_x_0_xz_xxxyzz = cbuffer.data(di_geom_1010_off + 568 * ccomps * dcomps);

            auto g_y_0_x_0_xz_xxxzzz = cbuffer.data(di_geom_1010_off + 569 * ccomps * dcomps);

            auto g_y_0_x_0_xz_xxyyyy = cbuffer.data(di_geom_1010_off + 570 * ccomps * dcomps);

            auto g_y_0_x_0_xz_xxyyyz = cbuffer.data(di_geom_1010_off + 571 * ccomps * dcomps);

            auto g_y_0_x_0_xz_xxyyzz = cbuffer.data(di_geom_1010_off + 572 * ccomps * dcomps);

            auto g_y_0_x_0_xz_xxyzzz = cbuffer.data(di_geom_1010_off + 573 * ccomps * dcomps);

            auto g_y_0_x_0_xz_xxzzzz = cbuffer.data(di_geom_1010_off + 574 * ccomps * dcomps);

            auto g_y_0_x_0_xz_xyyyyy = cbuffer.data(di_geom_1010_off + 575 * ccomps * dcomps);

            auto g_y_0_x_0_xz_xyyyyz = cbuffer.data(di_geom_1010_off + 576 * ccomps * dcomps);

            auto g_y_0_x_0_xz_xyyyzz = cbuffer.data(di_geom_1010_off + 577 * ccomps * dcomps);

            auto g_y_0_x_0_xz_xyyzzz = cbuffer.data(di_geom_1010_off + 578 * ccomps * dcomps);

            auto g_y_0_x_0_xz_xyzzzz = cbuffer.data(di_geom_1010_off + 579 * ccomps * dcomps);

            auto g_y_0_x_0_xz_xzzzzz = cbuffer.data(di_geom_1010_off + 580 * ccomps * dcomps);

            auto g_y_0_x_0_xz_yyyyyy = cbuffer.data(di_geom_1010_off + 581 * ccomps * dcomps);

            auto g_y_0_x_0_xz_yyyyyz = cbuffer.data(di_geom_1010_off + 582 * ccomps * dcomps);

            auto g_y_0_x_0_xz_yyyyzz = cbuffer.data(di_geom_1010_off + 583 * ccomps * dcomps);

            auto g_y_0_x_0_xz_yyyzzz = cbuffer.data(di_geom_1010_off + 584 * ccomps * dcomps);

            auto g_y_0_x_0_xz_yyzzzz = cbuffer.data(di_geom_1010_off + 585 * ccomps * dcomps);

            auto g_y_0_x_0_xz_yzzzzz = cbuffer.data(di_geom_1010_off + 586 * ccomps * dcomps);

            auto g_y_0_x_0_xz_zzzzzz = cbuffer.data(di_geom_1010_off + 587 * ccomps * dcomps);

            auto g_y_0_x_0_yy_xxxxxx = cbuffer.data(di_geom_1010_off + 588 * ccomps * dcomps);

            auto g_y_0_x_0_yy_xxxxxy = cbuffer.data(di_geom_1010_off + 589 * ccomps * dcomps);

            auto g_y_0_x_0_yy_xxxxxz = cbuffer.data(di_geom_1010_off + 590 * ccomps * dcomps);

            auto g_y_0_x_0_yy_xxxxyy = cbuffer.data(di_geom_1010_off + 591 * ccomps * dcomps);

            auto g_y_0_x_0_yy_xxxxyz = cbuffer.data(di_geom_1010_off + 592 * ccomps * dcomps);

            auto g_y_0_x_0_yy_xxxxzz = cbuffer.data(di_geom_1010_off + 593 * ccomps * dcomps);

            auto g_y_0_x_0_yy_xxxyyy = cbuffer.data(di_geom_1010_off + 594 * ccomps * dcomps);

            auto g_y_0_x_0_yy_xxxyyz = cbuffer.data(di_geom_1010_off + 595 * ccomps * dcomps);

            auto g_y_0_x_0_yy_xxxyzz = cbuffer.data(di_geom_1010_off + 596 * ccomps * dcomps);

            auto g_y_0_x_0_yy_xxxzzz = cbuffer.data(di_geom_1010_off + 597 * ccomps * dcomps);

            auto g_y_0_x_0_yy_xxyyyy = cbuffer.data(di_geom_1010_off + 598 * ccomps * dcomps);

            auto g_y_0_x_0_yy_xxyyyz = cbuffer.data(di_geom_1010_off + 599 * ccomps * dcomps);

            auto g_y_0_x_0_yy_xxyyzz = cbuffer.data(di_geom_1010_off + 600 * ccomps * dcomps);

            auto g_y_0_x_0_yy_xxyzzz = cbuffer.data(di_geom_1010_off + 601 * ccomps * dcomps);

            auto g_y_0_x_0_yy_xxzzzz = cbuffer.data(di_geom_1010_off + 602 * ccomps * dcomps);

            auto g_y_0_x_0_yy_xyyyyy = cbuffer.data(di_geom_1010_off + 603 * ccomps * dcomps);

            auto g_y_0_x_0_yy_xyyyyz = cbuffer.data(di_geom_1010_off + 604 * ccomps * dcomps);

            auto g_y_0_x_0_yy_xyyyzz = cbuffer.data(di_geom_1010_off + 605 * ccomps * dcomps);

            auto g_y_0_x_0_yy_xyyzzz = cbuffer.data(di_geom_1010_off + 606 * ccomps * dcomps);

            auto g_y_0_x_0_yy_xyzzzz = cbuffer.data(di_geom_1010_off + 607 * ccomps * dcomps);

            auto g_y_0_x_0_yy_xzzzzz = cbuffer.data(di_geom_1010_off + 608 * ccomps * dcomps);

            auto g_y_0_x_0_yy_yyyyyy = cbuffer.data(di_geom_1010_off + 609 * ccomps * dcomps);

            auto g_y_0_x_0_yy_yyyyyz = cbuffer.data(di_geom_1010_off + 610 * ccomps * dcomps);

            auto g_y_0_x_0_yy_yyyyzz = cbuffer.data(di_geom_1010_off + 611 * ccomps * dcomps);

            auto g_y_0_x_0_yy_yyyzzz = cbuffer.data(di_geom_1010_off + 612 * ccomps * dcomps);

            auto g_y_0_x_0_yy_yyzzzz = cbuffer.data(di_geom_1010_off + 613 * ccomps * dcomps);

            auto g_y_0_x_0_yy_yzzzzz = cbuffer.data(di_geom_1010_off + 614 * ccomps * dcomps);

            auto g_y_0_x_0_yy_zzzzzz = cbuffer.data(di_geom_1010_off + 615 * ccomps * dcomps);

            auto g_y_0_x_0_yz_xxxxxx = cbuffer.data(di_geom_1010_off + 616 * ccomps * dcomps);

            auto g_y_0_x_0_yz_xxxxxy = cbuffer.data(di_geom_1010_off + 617 * ccomps * dcomps);

            auto g_y_0_x_0_yz_xxxxxz = cbuffer.data(di_geom_1010_off + 618 * ccomps * dcomps);

            auto g_y_0_x_0_yz_xxxxyy = cbuffer.data(di_geom_1010_off + 619 * ccomps * dcomps);

            auto g_y_0_x_0_yz_xxxxyz = cbuffer.data(di_geom_1010_off + 620 * ccomps * dcomps);

            auto g_y_0_x_0_yz_xxxxzz = cbuffer.data(di_geom_1010_off + 621 * ccomps * dcomps);

            auto g_y_0_x_0_yz_xxxyyy = cbuffer.data(di_geom_1010_off + 622 * ccomps * dcomps);

            auto g_y_0_x_0_yz_xxxyyz = cbuffer.data(di_geom_1010_off + 623 * ccomps * dcomps);

            auto g_y_0_x_0_yz_xxxyzz = cbuffer.data(di_geom_1010_off + 624 * ccomps * dcomps);

            auto g_y_0_x_0_yz_xxxzzz = cbuffer.data(di_geom_1010_off + 625 * ccomps * dcomps);

            auto g_y_0_x_0_yz_xxyyyy = cbuffer.data(di_geom_1010_off + 626 * ccomps * dcomps);

            auto g_y_0_x_0_yz_xxyyyz = cbuffer.data(di_geom_1010_off + 627 * ccomps * dcomps);

            auto g_y_0_x_0_yz_xxyyzz = cbuffer.data(di_geom_1010_off + 628 * ccomps * dcomps);

            auto g_y_0_x_0_yz_xxyzzz = cbuffer.data(di_geom_1010_off + 629 * ccomps * dcomps);

            auto g_y_0_x_0_yz_xxzzzz = cbuffer.data(di_geom_1010_off + 630 * ccomps * dcomps);

            auto g_y_0_x_0_yz_xyyyyy = cbuffer.data(di_geom_1010_off + 631 * ccomps * dcomps);

            auto g_y_0_x_0_yz_xyyyyz = cbuffer.data(di_geom_1010_off + 632 * ccomps * dcomps);

            auto g_y_0_x_0_yz_xyyyzz = cbuffer.data(di_geom_1010_off + 633 * ccomps * dcomps);

            auto g_y_0_x_0_yz_xyyzzz = cbuffer.data(di_geom_1010_off + 634 * ccomps * dcomps);

            auto g_y_0_x_0_yz_xyzzzz = cbuffer.data(di_geom_1010_off + 635 * ccomps * dcomps);

            auto g_y_0_x_0_yz_xzzzzz = cbuffer.data(di_geom_1010_off + 636 * ccomps * dcomps);

            auto g_y_0_x_0_yz_yyyyyy = cbuffer.data(di_geom_1010_off + 637 * ccomps * dcomps);

            auto g_y_0_x_0_yz_yyyyyz = cbuffer.data(di_geom_1010_off + 638 * ccomps * dcomps);

            auto g_y_0_x_0_yz_yyyyzz = cbuffer.data(di_geom_1010_off + 639 * ccomps * dcomps);

            auto g_y_0_x_0_yz_yyyzzz = cbuffer.data(di_geom_1010_off + 640 * ccomps * dcomps);

            auto g_y_0_x_0_yz_yyzzzz = cbuffer.data(di_geom_1010_off + 641 * ccomps * dcomps);

            auto g_y_0_x_0_yz_yzzzzz = cbuffer.data(di_geom_1010_off + 642 * ccomps * dcomps);

            auto g_y_0_x_0_yz_zzzzzz = cbuffer.data(di_geom_1010_off + 643 * ccomps * dcomps);

            auto g_y_0_x_0_zz_xxxxxx = cbuffer.data(di_geom_1010_off + 644 * ccomps * dcomps);

            auto g_y_0_x_0_zz_xxxxxy = cbuffer.data(di_geom_1010_off + 645 * ccomps * dcomps);

            auto g_y_0_x_0_zz_xxxxxz = cbuffer.data(di_geom_1010_off + 646 * ccomps * dcomps);

            auto g_y_0_x_0_zz_xxxxyy = cbuffer.data(di_geom_1010_off + 647 * ccomps * dcomps);

            auto g_y_0_x_0_zz_xxxxyz = cbuffer.data(di_geom_1010_off + 648 * ccomps * dcomps);

            auto g_y_0_x_0_zz_xxxxzz = cbuffer.data(di_geom_1010_off + 649 * ccomps * dcomps);

            auto g_y_0_x_0_zz_xxxyyy = cbuffer.data(di_geom_1010_off + 650 * ccomps * dcomps);

            auto g_y_0_x_0_zz_xxxyyz = cbuffer.data(di_geom_1010_off + 651 * ccomps * dcomps);

            auto g_y_0_x_0_zz_xxxyzz = cbuffer.data(di_geom_1010_off + 652 * ccomps * dcomps);

            auto g_y_0_x_0_zz_xxxzzz = cbuffer.data(di_geom_1010_off + 653 * ccomps * dcomps);

            auto g_y_0_x_0_zz_xxyyyy = cbuffer.data(di_geom_1010_off + 654 * ccomps * dcomps);

            auto g_y_0_x_0_zz_xxyyyz = cbuffer.data(di_geom_1010_off + 655 * ccomps * dcomps);

            auto g_y_0_x_0_zz_xxyyzz = cbuffer.data(di_geom_1010_off + 656 * ccomps * dcomps);

            auto g_y_0_x_0_zz_xxyzzz = cbuffer.data(di_geom_1010_off + 657 * ccomps * dcomps);

            auto g_y_0_x_0_zz_xxzzzz = cbuffer.data(di_geom_1010_off + 658 * ccomps * dcomps);

            auto g_y_0_x_0_zz_xyyyyy = cbuffer.data(di_geom_1010_off + 659 * ccomps * dcomps);

            auto g_y_0_x_0_zz_xyyyyz = cbuffer.data(di_geom_1010_off + 660 * ccomps * dcomps);

            auto g_y_0_x_0_zz_xyyyzz = cbuffer.data(di_geom_1010_off + 661 * ccomps * dcomps);

            auto g_y_0_x_0_zz_xyyzzz = cbuffer.data(di_geom_1010_off + 662 * ccomps * dcomps);

            auto g_y_0_x_0_zz_xyzzzz = cbuffer.data(di_geom_1010_off + 663 * ccomps * dcomps);

            auto g_y_0_x_0_zz_xzzzzz = cbuffer.data(di_geom_1010_off + 664 * ccomps * dcomps);

            auto g_y_0_x_0_zz_yyyyyy = cbuffer.data(di_geom_1010_off + 665 * ccomps * dcomps);

            auto g_y_0_x_0_zz_yyyyyz = cbuffer.data(di_geom_1010_off + 666 * ccomps * dcomps);

            auto g_y_0_x_0_zz_yyyyzz = cbuffer.data(di_geom_1010_off + 667 * ccomps * dcomps);

            auto g_y_0_x_0_zz_yyyzzz = cbuffer.data(di_geom_1010_off + 668 * ccomps * dcomps);

            auto g_y_0_x_0_zz_yyzzzz = cbuffer.data(di_geom_1010_off + 669 * ccomps * dcomps);

            auto g_y_0_x_0_zz_yzzzzz = cbuffer.data(di_geom_1010_off + 670 * ccomps * dcomps);

            auto g_y_0_x_0_zz_zzzzzz = cbuffer.data(di_geom_1010_off + 671 * ccomps * dcomps);

            auto g_y_0_y_0_xx_xxxxxx = cbuffer.data(di_geom_1010_off + 672 * ccomps * dcomps);

            auto g_y_0_y_0_xx_xxxxxy = cbuffer.data(di_geom_1010_off + 673 * ccomps * dcomps);

            auto g_y_0_y_0_xx_xxxxxz = cbuffer.data(di_geom_1010_off + 674 * ccomps * dcomps);

            auto g_y_0_y_0_xx_xxxxyy = cbuffer.data(di_geom_1010_off + 675 * ccomps * dcomps);

            auto g_y_0_y_0_xx_xxxxyz = cbuffer.data(di_geom_1010_off + 676 * ccomps * dcomps);

            auto g_y_0_y_0_xx_xxxxzz = cbuffer.data(di_geom_1010_off + 677 * ccomps * dcomps);

            auto g_y_0_y_0_xx_xxxyyy = cbuffer.data(di_geom_1010_off + 678 * ccomps * dcomps);

            auto g_y_0_y_0_xx_xxxyyz = cbuffer.data(di_geom_1010_off + 679 * ccomps * dcomps);

            auto g_y_0_y_0_xx_xxxyzz = cbuffer.data(di_geom_1010_off + 680 * ccomps * dcomps);

            auto g_y_0_y_0_xx_xxxzzz = cbuffer.data(di_geom_1010_off + 681 * ccomps * dcomps);

            auto g_y_0_y_0_xx_xxyyyy = cbuffer.data(di_geom_1010_off + 682 * ccomps * dcomps);

            auto g_y_0_y_0_xx_xxyyyz = cbuffer.data(di_geom_1010_off + 683 * ccomps * dcomps);

            auto g_y_0_y_0_xx_xxyyzz = cbuffer.data(di_geom_1010_off + 684 * ccomps * dcomps);

            auto g_y_0_y_0_xx_xxyzzz = cbuffer.data(di_geom_1010_off + 685 * ccomps * dcomps);

            auto g_y_0_y_0_xx_xxzzzz = cbuffer.data(di_geom_1010_off + 686 * ccomps * dcomps);

            auto g_y_0_y_0_xx_xyyyyy = cbuffer.data(di_geom_1010_off + 687 * ccomps * dcomps);

            auto g_y_0_y_0_xx_xyyyyz = cbuffer.data(di_geom_1010_off + 688 * ccomps * dcomps);

            auto g_y_0_y_0_xx_xyyyzz = cbuffer.data(di_geom_1010_off + 689 * ccomps * dcomps);

            auto g_y_0_y_0_xx_xyyzzz = cbuffer.data(di_geom_1010_off + 690 * ccomps * dcomps);

            auto g_y_0_y_0_xx_xyzzzz = cbuffer.data(di_geom_1010_off + 691 * ccomps * dcomps);

            auto g_y_0_y_0_xx_xzzzzz = cbuffer.data(di_geom_1010_off + 692 * ccomps * dcomps);

            auto g_y_0_y_0_xx_yyyyyy = cbuffer.data(di_geom_1010_off + 693 * ccomps * dcomps);

            auto g_y_0_y_0_xx_yyyyyz = cbuffer.data(di_geom_1010_off + 694 * ccomps * dcomps);

            auto g_y_0_y_0_xx_yyyyzz = cbuffer.data(di_geom_1010_off + 695 * ccomps * dcomps);

            auto g_y_0_y_0_xx_yyyzzz = cbuffer.data(di_geom_1010_off + 696 * ccomps * dcomps);

            auto g_y_0_y_0_xx_yyzzzz = cbuffer.data(di_geom_1010_off + 697 * ccomps * dcomps);

            auto g_y_0_y_0_xx_yzzzzz = cbuffer.data(di_geom_1010_off + 698 * ccomps * dcomps);

            auto g_y_0_y_0_xx_zzzzzz = cbuffer.data(di_geom_1010_off + 699 * ccomps * dcomps);

            auto g_y_0_y_0_xy_xxxxxx = cbuffer.data(di_geom_1010_off + 700 * ccomps * dcomps);

            auto g_y_0_y_0_xy_xxxxxy = cbuffer.data(di_geom_1010_off + 701 * ccomps * dcomps);

            auto g_y_0_y_0_xy_xxxxxz = cbuffer.data(di_geom_1010_off + 702 * ccomps * dcomps);

            auto g_y_0_y_0_xy_xxxxyy = cbuffer.data(di_geom_1010_off + 703 * ccomps * dcomps);

            auto g_y_0_y_0_xy_xxxxyz = cbuffer.data(di_geom_1010_off + 704 * ccomps * dcomps);

            auto g_y_0_y_0_xy_xxxxzz = cbuffer.data(di_geom_1010_off + 705 * ccomps * dcomps);

            auto g_y_0_y_0_xy_xxxyyy = cbuffer.data(di_geom_1010_off + 706 * ccomps * dcomps);

            auto g_y_0_y_0_xy_xxxyyz = cbuffer.data(di_geom_1010_off + 707 * ccomps * dcomps);

            auto g_y_0_y_0_xy_xxxyzz = cbuffer.data(di_geom_1010_off + 708 * ccomps * dcomps);

            auto g_y_0_y_0_xy_xxxzzz = cbuffer.data(di_geom_1010_off + 709 * ccomps * dcomps);

            auto g_y_0_y_0_xy_xxyyyy = cbuffer.data(di_geom_1010_off + 710 * ccomps * dcomps);

            auto g_y_0_y_0_xy_xxyyyz = cbuffer.data(di_geom_1010_off + 711 * ccomps * dcomps);

            auto g_y_0_y_0_xy_xxyyzz = cbuffer.data(di_geom_1010_off + 712 * ccomps * dcomps);

            auto g_y_0_y_0_xy_xxyzzz = cbuffer.data(di_geom_1010_off + 713 * ccomps * dcomps);

            auto g_y_0_y_0_xy_xxzzzz = cbuffer.data(di_geom_1010_off + 714 * ccomps * dcomps);

            auto g_y_0_y_0_xy_xyyyyy = cbuffer.data(di_geom_1010_off + 715 * ccomps * dcomps);

            auto g_y_0_y_0_xy_xyyyyz = cbuffer.data(di_geom_1010_off + 716 * ccomps * dcomps);

            auto g_y_0_y_0_xy_xyyyzz = cbuffer.data(di_geom_1010_off + 717 * ccomps * dcomps);

            auto g_y_0_y_0_xy_xyyzzz = cbuffer.data(di_geom_1010_off + 718 * ccomps * dcomps);

            auto g_y_0_y_0_xy_xyzzzz = cbuffer.data(di_geom_1010_off + 719 * ccomps * dcomps);

            auto g_y_0_y_0_xy_xzzzzz = cbuffer.data(di_geom_1010_off + 720 * ccomps * dcomps);

            auto g_y_0_y_0_xy_yyyyyy = cbuffer.data(di_geom_1010_off + 721 * ccomps * dcomps);

            auto g_y_0_y_0_xy_yyyyyz = cbuffer.data(di_geom_1010_off + 722 * ccomps * dcomps);

            auto g_y_0_y_0_xy_yyyyzz = cbuffer.data(di_geom_1010_off + 723 * ccomps * dcomps);

            auto g_y_0_y_0_xy_yyyzzz = cbuffer.data(di_geom_1010_off + 724 * ccomps * dcomps);

            auto g_y_0_y_0_xy_yyzzzz = cbuffer.data(di_geom_1010_off + 725 * ccomps * dcomps);

            auto g_y_0_y_0_xy_yzzzzz = cbuffer.data(di_geom_1010_off + 726 * ccomps * dcomps);

            auto g_y_0_y_0_xy_zzzzzz = cbuffer.data(di_geom_1010_off + 727 * ccomps * dcomps);

            auto g_y_0_y_0_xz_xxxxxx = cbuffer.data(di_geom_1010_off + 728 * ccomps * dcomps);

            auto g_y_0_y_0_xz_xxxxxy = cbuffer.data(di_geom_1010_off + 729 * ccomps * dcomps);

            auto g_y_0_y_0_xz_xxxxxz = cbuffer.data(di_geom_1010_off + 730 * ccomps * dcomps);

            auto g_y_0_y_0_xz_xxxxyy = cbuffer.data(di_geom_1010_off + 731 * ccomps * dcomps);

            auto g_y_0_y_0_xz_xxxxyz = cbuffer.data(di_geom_1010_off + 732 * ccomps * dcomps);

            auto g_y_0_y_0_xz_xxxxzz = cbuffer.data(di_geom_1010_off + 733 * ccomps * dcomps);

            auto g_y_0_y_0_xz_xxxyyy = cbuffer.data(di_geom_1010_off + 734 * ccomps * dcomps);

            auto g_y_0_y_0_xz_xxxyyz = cbuffer.data(di_geom_1010_off + 735 * ccomps * dcomps);

            auto g_y_0_y_0_xz_xxxyzz = cbuffer.data(di_geom_1010_off + 736 * ccomps * dcomps);

            auto g_y_0_y_0_xz_xxxzzz = cbuffer.data(di_geom_1010_off + 737 * ccomps * dcomps);

            auto g_y_0_y_0_xz_xxyyyy = cbuffer.data(di_geom_1010_off + 738 * ccomps * dcomps);

            auto g_y_0_y_0_xz_xxyyyz = cbuffer.data(di_geom_1010_off + 739 * ccomps * dcomps);

            auto g_y_0_y_0_xz_xxyyzz = cbuffer.data(di_geom_1010_off + 740 * ccomps * dcomps);

            auto g_y_0_y_0_xz_xxyzzz = cbuffer.data(di_geom_1010_off + 741 * ccomps * dcomps);

            auto g_y_0_y_0_xz_xxzzzz = cbuffer.data(di_geom_1010_off + 742 * ccomps * dcomps);

            auto g_y_0_y_0_xz_xyyyyy = cbuffer.data(di_geom_1010_off + 743 * ccomps * dcomps);

            auto g_y_0_y_0_xz_xyyyyz = cbuffer.data(di_geom_1010_off + 744 * ccomps * dcomps);

            auto g_y_0_y_0_xz_xyyyzz = cbuffer.data(di_geom_1010_off + 745 * ccomps * dcomps);

            auto g_y_0_y_0_xz_xyyzzz = cbuffer.data(di_geom_1010_off + 746 * ccomps * dcomps);

            auto g_y_0_y_0_xz_xyzzzz = cbuffer.data(di_geom_1010_off + 747 * ccomps * dcomps);

            auto g_y_0_y_0_xz_xzzzzz = cbuffer.data(di_geom_1010_off + 748 * ccomps * dcomps);

            auto g_y_0_y_0_xz_yyyyyy = cbuffer.data(di_geom_1010_off + 749 * ccomps * dcomps);

            auto g_y_0_y_0_xz_yyyyyz = cbuffer.data(di_geom_1010_off + 750 * ccomps * dcomps);

            auto g_y_0_y_0_xz_yyyyzz = cbuffer.data(di_geom_1010_off + 751 * ccomps * dcomps);

            auto g_y_0_y_0_xz_yyyzzz = cbuffer.data(di_geom_1010_off + 752 * ccomps * dcomps);

            auto g_y_0_y_0_xz_yyzzzz = cbuffer.data(di_geom_1010_off + 753 * ccomps * dcomps);

            auto g_y_0_y_0_xz_yzzzzz = cbuffer.data(di_geom_1010_off + 754 * ccomps * dcomps);

            auto g_y_0_y_0_xz_zzzzzz = cbuffer.data(di_geom_1010_off + 755 * ccomps * dcomps);

            auto g_y_0_y_0_yy_xxxxxx = cbuffer.data(di_geom_1010_off + 756 * ccomps * dcomps);

            auto g_y_0_y_0_yy_xxxxxy = cbuffer.data(di_geom_1010_off + 757 * ccomps * dcomps);

            auto g_y_0_y_0_yy_xxxxxz = cbuffer.data(di_geom_1010_off + 758 * ccomps * dcomps);

            auto g_y_0_y_0_yy_xxxxyy = cbuffer.data(di_geom_1010_off + 759 * ccomps * dcomps);

            auto g_y_0_y_0_yy_xxxxyz = cbuffer.data(di_geom_1010_off + 760 * ccomps * dcomps);

            auto g_y_0_y_0_yy_xxxxzz = cbuffer.data(di_geom_1010_off + 761 * ccomps * dcomps);

            auto g_y_0_y_0_yy_xxxyyy = cbuffer.data(di_geom_1010_off + 762 * ccomps * dcomps);

            auto g_y_0_y_0_yy_xxxyyz = cbuffer.data(di_geom_1010_off + 763 * ccomps * dcomps);

            auto g_y_0_y_0_yy_xxxyzz = cbuffer.data(di_geom_1010_off + 764 * ccomps * dcomps);

            auto g_y_0_y_0_yy_xxxzzz = cbuffer.data(di_geom_1010_off + 765 * ccomps * dcomps);

            auto g_y_0_y_0_yy_xxyyyy = cbuffer.data(di_geom_1010_off + 766 * ccomps * dcomps);

            auto g_y_0_y_0_yy_xxyyyz = cbuffer.data(di_geom_1010_off + 767 * ccomps * dcomps);

            auto g_y_0_y_0_yy_xxyyzz = cbuffer.data(di_geom_1010_off + 768 * ccomps * dcomps);

            auto g_y_0_y_0_yy_xxyzzz = cbuffer.data(di_geom_1010_off + 769 * ccomps * dcomps);

            auto g_y_0_y_0_yy_xxzzzz = cbuffer.data(di_geom_1010_off + 770 * ccomps * dcomps);

            auto g_y_0_y_0_yy_xyyyyy = cbuffer.data(di_geom_1010_off + 771 * ccomps * dcomps);

            auto g_y_0_y_0_yy_xyyyyz = cbuffer.data(di_geom_1010_off + 772 * ccomps * dcomps);

            auto g_y_0_y_0_yy_xyyyzz = cbuffer.data(di_geom_1010_off + 773 * ccomps * dcomps);

            auto g_y_0_y_0_yy_xyyzzz = cbuffer.data(di_geom_1010_off + 774 * ccomps * dcomps);

            auto g_y_0_y_0_yy_xyzzzz = cbuffer.data(di_geom_1010_off + 775 * ccomps * dcomps);

            auto g_y_0_y_0_yy_xzzzzz = cbuffer.data(di_geom_1010_off + 776 * ccomps * dcomps);

            auto g_y_0_y_0_yy_yyyyyy = cbuffer.data(di_geom_1010_off + 777 * ccomps * dcomps);

            auto g_y_0_y_0_yy_yyyyyz = cbuffer.data(di_geom_1010_off + 778 * ccomps * dcomps);

            auto g_y_0_y_0_yy_yyyyzz = cbuffer.data(di_geom_1010_off + 779 * ccomps * dcomps);

            auto g_y_0_y_0_yy_yyyzzz = cbuffer.data(di_geom_1010_off + 780 * ccomps * dcomps);

            auto g_y_0_y_0_yy_yyzzzz = cbuffer.data(di_geom_1010_off + 781 * ccomps * dcomps);

            auto g_y_0_y_0_yy_yzzzzz = cbuffer.data(di_geom_1010_off + 782 * ccomps * dcomps);

            auto g_y_0_y_0_yy_zzzzzz = cbuffer.data(di_geom_1010_off + 783 * ccomps * dcomps);

            auto g_y_0_y_0_yz_xxxxxx = cbuffer.data(di_geom_1010_off + 784 * ccomps * dcomps);

            auto g_y_0_y_0_yz_xxxxxy = cbuffer.data(di_geom_1010_off + 785 * ccomps * dcomps);

            auto g_y_0_y_0_yz_xxxxxz = cbuffer.data(di_geom_1010_off + 786 * ccomps * dcomps);

            auto g_y_0_y_0_yz_xxxxyy = cbuffer.data(di_geom_1010_off + 787 * ccomps * dcomps);

            auto g_y_0_y_0_yz_xxxxyz = cbuffer.data(di_geom_1010_off + 788 * ccomps * dcomps);

            auto g_y_0_y_0_yz_xxxxzz = cbuffer.data(di_geom_1010_off + 789 * ccomps * dcomps);

            auto g_y_0_y_0_yz_xxxyyy = cbuffer.data(di_geom_1010_off + 790 * ccomps * dcomps);

            auto g_y_0_y_0_yz_xxxyyz = cbuffer.data(di_geom_1010_off + 791 * ccomps * dcomps);

            auto g_y_0_y_0_yz_xxxyzz = cbuffer.data(di_geom_1010_off + 792 * ccomps * dcomps);

            auto g_y_0_y_0_yz_xxxzzz = cbuffer.data(di_geom_1010_off + 793 * ccomps * dcomps);

            auto g_y_0_y_0_yz_xxyyyy = cbuffer.data(di_geom_1010_off + 794 * ccomps * dcomps);

            auto g_y_0_y_0_yz_xxyyyz = cbuffer.data(di_geom_1010_off + 795 * ccomps * dcomps);

            auto g_y_0_y_0_yz_xxyyzz = cbuffer.data(di_geom_1010_off + 796 * ccomps * dcomps);

            auto g_y_0_y_0_yz_xxyzzz = cbuffer.data(di_geom_1010_off + 797 * ccomps * dcomps);

            auto g_y_0_y_0_yz_xxzzzz = cbuffer.data(di_geom_1010_off + 798 * ccomps * dcomps);

            auto g_y_0_y_0_yz_xyyyyy = cbuffer.data(di_geom_1010_off + 799 * ccomps * dcomps);

            auto g_y_0_y_0_yz_xyyyyz = cbuffer.data(di_geom_1010_off + 800 * ccomps * dcomps);

            auto g_y_0_y_0_yz_xyyyzz = cbuffer.data(di_geom_1010_off + 801 * ccomps * dcomps);

            auto g_y_0_y_0_yz_xyyzzz = cbuffer.data(di_geom_1010_off + 802 * ccomps * dcomps);

            auto g_y_0_y_0_yz_xyzzzz = cbuffer.data(di_geom_1010_off + 803 * ccomps * dcomps);

            auto g_y_0_y_0_yz_xzzzzz = cbuffer.data(di_geom_1010_off + 804 * ccomps * dcomps);

            auto g_y_0_y_0_yz_yyyyyy = cbuffer.data(di_geom_1010_off + 805 * ccomps * dcomps);

            auto g_y_0_y_0_yz_yyyyyz = cbuffer.data(di_geom_1010_off + 806 * ccomps * dcomps);

            auto g_y_0_y_0_yz_yyyyzz = cbuffer.data(di_geom_1010_off + 807 * ccomps * dcomps);

            auto g_y_0_y_0_yz_yyyzzz = cbuffer.data(di_geom_1010_off + 808 * ccomps * dcomps);

            auto g_y_0_y_0_yz_yyzzzz = cbuffer.data(di_geom_1010_off + 809 * ccomps * dcomps);

            auto g_y_0_y_0_yz_yzzzzz = cbuffer.data(di_geom_1010_off + 810 * ccomps * dcomps);

            auto g_y_0_y_0_yz_zzzzzz = cbuffer.data(di_geom_1010_off + 811 * ccomps * dcomps);

            auto g_y_0_y_0_zz_xxxxxx = cbuffer.data(di_geom_1010_off + 812 * ccomps * dcomps);

            auto g_y_0_y_0_zz_xxxxxy = cbuffer.data(di_geom_1010_off + 813 * ccomps * dcomps);

            auto g_y_0_y_0_zz_xxxxxz = cbuffer.data(di_geom_1010_off + 814 * ccomps * dcomps);

            auto g_y_0_y_0_zz_xxxxyy = cbuffer.data(di_geom_1010_off + 815 * ccomps * dcomps);

            auto g_y_0_y_0_zz_xxxxyz = cbuffer.data(di_geom_1010_off + 816 * ccomps * dcomps);

            auto g_y_0_y_0_zz_xxxxzz = cbuffer.data(di_geom_1010_off + 817 * ccomps * dcomps);

            auto g_y_0_y_0_zz_xxxyyy = cbuffer.data(di_geom_1010_off + 818 * ccomps * dcomps);

            auto g_y_0_y_0_zz_xxxyyz = cbuffer.data(di_geom_1010_off + 819 * ccomps * dcomps);

            auto g_y_0_y_0_zz_xxxyzz = cbuffer.data(di_geom_1010_off + 820 * ccomps * dcomps);

            auto g_y_0_y_0_zz_xxxzzz = cbuffer.data(di_geom_1010_off + 821 * ccomps * dcomps);

            auto g_y_0_y_0_zz_xxyyyy = cbuffer.data(di_geom_1010_off + 822 * ccomps * dcomps);

            auto g_y_0_y_0_zz_xxyyyz = cbuffer.data(di_geom_1010_off + 823 * ccomps * dcomps);

            auto g_y_0_y_0_zz_xxyyzz = cbuffer.data(di_geom_1010_off + 824 * ccomps * dcomps);

            auto g_y_0_y_0_zz_xxyzzz = cbuffer.data(di_geom_1010_off + 825 * ccomps * dcomps);

            auto g_y_0_y_0_zz_xxzzzz = cbuffer.data(di_geom_1010_off + 826 * ccomps * dcomps);

            auto g_y_0_y_0_zz_xyyyyy = cbuffer.data(di_geom_1010_off + 827 * ccomps * dcomps);

            auto g_y_0_y_0_zz_xyyyyz = cbuffer.data(di_geom_1010_off + 828 * ccomps * dcomps);

            auto g_y_0_y_0_zz_xyyyzz = cbuffer.data(di_geom_1010_off + 829 * ccomps * dcomps);

            auto g_y_0_y_0_zz_xyyzzz = cbuffer.data(di_geom_1010_off + 830 * ccomps * dcomps);

            auto g_y_0_y_0_zz_xyzzzz = cbuffer.data(di_geom_1010_off + 831 * ccomps * dcomps);

            auto g_y_0_y_0_zz_xzzzzz = cbuffer.data(di_geom_1010_off + 832 * ccomps * dcomps);

            auto g_y_0_y_0_zz_yyyyyy = cbuffer.data(di_geom_1010_off + 833 * ccomps * dcomps);

            auto g_y_0_y_0_zz_yyyyyz = cbuffer.data(di_geom_1010_off + 834 * ccomps * dcomps);

            auto g_y_0_y_0_zz_yyyyzz = cbuffer.data(di_geom_1010_off + 835 * ccomps * dcomps);

            auto g_y_0_y_0_zz_yyyzzz = cbuffer.data(di_geom_1010_off + 836 * ccomps * dcomps);

            auto g_y_0_y_0_zz_yyzzzz = cbuffer.data(di_geom_1010_off + 837 * ccomps * dcomps);

            auto g_y_0_y_0_zz_yzzzzz = cbuffer.data(di_geom_1010_off + 838 * ccomps * dcomps);

            auto g_y_0_y_0_zz_zzzzzz = cbuffer.data(di_geom_1010_off + 839 * ccomps * dcomps);

            auto g_y_0_z_0_xx_xxxxxx = cbuffer.data(di_geom_1010_off + 840 * ccomps * dcomps);

            auto g_y_0_z_0_xx_xxxxxy = cbuffer.data(di_geom_1010_off + 841 * ccomps * dcomps);

            auto g_y_0_z_0_xx_xxxxxz = cbuffer.data(di_geom_1010_off + 842 * ccomps * dcomps);

            auto g_y_0_z_0_xx_xxxxyy = cbuffer.data(di_geom_1010_off + 843 * ccomps * dcomps);

            auto g_y_0_z_0_xx_xxxxyz = cbuffer.data(di_geom_1010_off + 844 * ccomps * dcomps);

            auto g_y_0_z_0_xx_xxxxzz = cbuffer.data(di_geom_1010_off + 845 * ccomps * dcomps);

            auto g_y_0_z_0_xx_xxxyyy = cbuffer.data(di_geom_1010_off + 846 * ccomps * dcomps);

            auto g_y_0_z_0_xx_xxxyyz = cbuffer.data(di_geom_1010_off + 847 * ccomps * dcomps);

            auto g_y_0_z_0_xx_xxxyzz = cbuffer.data(di_geom_1010_off + 848 * ccomps * dcomps);

            auto g_y_0_z_0_xx_xxxzzz = cbuffer.data(di_geom_1010_off + 849 * ccomps * dcomps);

            auto g_y_0_z_0_xx_xxyyyy = cbuffer.data(di_geom_1010_off + 850 * ccomps * dcomps);

            auto g_y_0_z_0_xx_xxyyyz = cbuffer.data(di_geom_1010_off + 851 * ccomps * dcomps);

            auto g_y_0_z_0_xx_xxyyzz = cbuffer.data(di_geom_1010_off + 852 * ccomps * dcomps);

            auto g_y_0_z_0_xx_xxyzzz = cbuffer.data(di_geom_1010_off + 853 * ccomps * dcomps);

            auto g_y_0_z_0_xx_xxzzzz = cbuffer.data(di_geom_1010_off + 854 * ccomps * dcomps);

            auto g_y_0_z_0_xx_xyyyyy = cbuffer.data(di_geom_1010_off + 855 * ccomps * dcomps);

            auto g_y_0_z_0_xx_xyyyyz = cbuffer.data(di_geom_1010_off + 856 * ccomps * dcomps);

            auto g_y_0_z_0_xx_xyyyzz = cbuffer.data(di_geom_1010_off + 857 * ccomps * dcomps);

            auto g_y_0_z_0_xx_xyyzzz = cbuffer.data(di_geom_1010_off + 858 * ccomps * dcomps);

            auto g_y_0_z_0_xx_xyzzzz = cbuffer.data(di_geom_1010_off + 859 * ccomps * dcomps);

            auto g_y_0_z_0_xx_xzzzzz = cbuffer.data(di_geom_1010_off + 860 * ccomps * dcomps);

            auto g_y_0_z_0_xx_yyyyyy = cbuffer.data(di_geom_1010_off + 861 * ccomps * dcomps);

            auto g_y_0_z_0_xx_yyyyyz = cbuffer.data(di_geom_1010_off + 862 * ccomps * dcomps);

            auto g_y_0_z_0_xx_yyyyzz = cbuffer.data(di_geom_1010_off + 863 * ccomps * dcomps);

            auto g_y_0_z_0_xx_yyyzzz = cbuffer.data(di_geom_1010_off + 864 * ccomps * dcomps);

            auto g_y_0_z_0_xx_yyzzzz = cbuffer.data(di_geom_1010_off + 865 * ccomps * dcomps);

            auto g_y_0_z_0_xx_yzzzzz = cbuffer.data(di_geom_1010_off + 866 * ccomps * dcomps);

            auto g_y_0_z_0_xx_zzzzzz = cbuffer.data(di_geom_1010_off + 867 * ccomps * dcomps);

            auto g_y_0_z_0_xy_xxxxxx = cbuffer.data(di_geom_1010_off + 868 * ccomps * dcomps);

            auto g_y_0_z_0_xy_xxxxxy = cbuffer.data(di_geom_1010_off + 869 * ccomps * dcomps);

            auto g_y_0_z_0_xy_xxxxxz = cbuffer.data(di_geom_1010_off + 870 * ccomps * dcomps);

            auto g_y_0_z_0_xy_xxxxyy = cbuffer.data(di_geom_1010_off + 871 * ccomps * dcomps);

            auto g_y_0_z_0_xy_xxxxyz = cbuffer.data(di_geom_1010_off + 872 * ccomps * dcomps);

            auto g_y_0_z_0_xy_xxxxzz = cbuffer.data(di_geom_1010_off + 873 * ccomps * dcomps);

            auto g_y_0_z_0_xy_xxxyyy = cbuffer.data(di_geom_1010_off + 874 * ccomps * dcomps);

            auto g_y_0_z_0_xy_xxxyyz = cbuffer.data(di_geom_1010_off + 875 * ccomps * dcomps);

            auto g_y_0_z_0_xy_xxxyzz = cbuffer.data(di_geom_1010_off + 876 * ccomps * dcomps);

            auto g_y_0_z_0_xy_xxxzzz = cbuffer.data(di_geom_1010_off + 877 * ccomps * dcomps);

            auto g_y_0_z_0_xy_xxyyyy = cbuffer.data(di_geom_1010_off + 878 * ccomps * dcomps);

            auto g_y_0_z_0_xy_xxyyyz = cbuffer.data(di_geom_1010_off + 879 * ccomps * dcomps);

            auto g_y_0_z_0_xy_xxyyzz = cbuffer.data(di_geom_1010_off + 880 * ccomps * dcomps);

            auto g_y_0_z_0_xy_xxyzzz = cbuffer.data(di_geom_1010_off + 881 * ccomps * dcomps);

            auto g_y_0_z_0_xy_xxzzzz = cbuffer.data(di_geom_1010_off + 882 * ccomps * dcomps);

            auto g_y_0_z_0_xy_xyyyyy = cbuffer.data(di_geom_1010_off + 883 * ccomps * dcomps);

            auto g_y_0_z_0_xy_xyyyyz = cbuffer.data(di_geom_1010_off + 884 * ccomps * dcomps);

            auto g_y_0_z_0_xy_xyyyzz = cbuffer.data(di_geom_1010_off + 885 * ccomps * dcomps);

            auto g_y_0_z_0_xy_xyyzzz = cbuffer.data(di_geom_1010_off + 886 * ccomps * dcomps);

            auto g_y_0_z_0_xy_xyzzzz = cbuffer.data(di_geom_1010_off + 887 * ccomps * dcomps);

            auto g_y_0_z_0_xy_xzzzzz = cbuffer.data(di_geom_1010_off + 888 * ccomps * dcomps);

            auto g_y_0_z_0_xy_yyyyyy = cbuffer.data(di_geom_1010_off + 889 * ccomps * dcomps);

            auto g_y_0_z_0_xy_yyyyyz = cbuffer.data(di_geom_1010_off + 890 * ccomps * dcomps);

            auto g_y_0_z_0_xy_yyyyzz = cbuffer.data(di_geom_1010_off + 891 * ccomps * dcomps);

            auto g_y_0_z_0_xy_yyyzzz = cbuffer.data(di_geom_1010_off + 892 * ccomps * dcomps);

            auto g_y_0_z_0_xy_yyzzzz = cbuffer.data(di_geom_1010_off + 893 * ccomps * dcomps);

            auto g_y_0_z_0_xy_yzzzzz = cbuffer.data(di_geom_1010_off + 894 * ccomps * dcomps);

            auto g_y_0_z_0_xy_zzzzzz = cbuffer.data(di_geom_1010_off + 895 * ccomps * dcomps);

            auto g_y_0_z_0_xz_xxxxxx = cbuffer.data(di_geom_1010_off + 896 * ccomps * dcomps);

            auto g_y_0_z_0_xz_xxxxxy = cbuffer.data(di_geom_1010_off + 897 * ccomps * dcomps);

            auto g_y_0_z_0_xz_xxxxxz = cbuffer.data(di_geom_1010_off + 898 * ccomps * dcomps);

            auto g_y_0_z_0_xz_xxxxyy = cbuffer.data(di_geom_1010_off + 899 * ccomps * dcomps);

            auto g_y_0_z_0_xz_xxxxyz = cbuffer.data(di_geom_1010_off + 900 * ccomps * dcomps);

            auto g_y_0_z_0_xz_xxxxzz = cbuffer.data(di_geom_1010_off + 901 * ccomps * dcomps);

            auto g_y_0_z_0_xz_xxxyyy = cbuffer.data(di_geom_1010_off + 902 * ccomps * dcomps);

            auto g_y_0_z_0_xz_xxxyyz = cbuffer.data(di_geom_1010_off + 903 * ccomps * dcomps);

            auto g_y_0_z_0_xz_xxxyzz = cbuffer.data(di_geom_1010_off + 904 * ccomps * dcomps);

            auto g_y_0_z_0_xz_xxxzzz = cbuffer.data(di_geom_1010_off + 905 * ccomps * dcomps);

            auto g_y_0_z_0_xz_xxyyyy = cbuffer.data(di_geom_1010_off + 906 * ccomps * dcomps);

            auto g_y_0_z_0_xz_xxyyyz = cbuffer.data(di_geom_1010_off + 907 * ccomps * dcomps);

            auto g_y_0_z_0_xz_xxyyzz = cbuffer.data(di_geom_1010_off + 908 * ccomps * dcomps);

            auto g_y_0_z_0_xz_xxyzzz = cbuffer.data(di_geom_1010_off + 909 * ccomps * dcomps);

            auto g_y_0_z_0_xz_xxzzzz = cbuffer.data(di_geom_1010_off + 910 * ccomps * dcomps);

            auto g_y_0_z_0_xz_xyyyyy = cbuffer.data(di_geom_1010_off + 911 * ccomps * dcomps);

            auto g_y_0_z_0_xz_xyyyyz = cbuffer.data(di_geom_1010_off + 912 * ccomps * dcomps);

            auto g_y_0_z_0_xz_xyyyzz = cbuffer.data(di_geom_1010_off + 913 * ccomps * dcomps);

            auto g_y_0_z_0_xz_xyyzzz = cbuffer.data(di_geom_1010_off + 914 * ccomps * dcomps);

            auto g_y_0_z_0_xz_xyzzzz = cbuffer.data(di_geom_1010_off + 915 * ccomps * dcomps);

            auto g_y_0_z_0_xz_xzzzzz = cbuffer.data(di_geom_1010_off + 916 * ccomps * dcomps);

            auto g_y_0_z_0_xz_yyyyyy = cbuffer.data(di_geom_1010_off + 917 * ccomps * dcomps);

            auto g_y_0_z_0_xz_yyyyyz = cbuffer.data(di_geom_1010_off + 918 * ccomps * dcomps);

            auto g_y_0_z_0_xz_yyyyzz = cbuffer.data(di_geom_1010_off + 919 * ccomps * dcomps);

            auto g_y_0_z_0_xz_yyyzzz = cbuffer.data(di_geom_1010_off + 920 * ccomps * dcomps);

            auto g_y_0_z_0_xz_yyzzzz = cbuffer.data(di_geom_1010_off + 921 * ccomps * dcomps);

            auto g_y_0_z_0_xz_yzzzzz = cbuffer.data(di_geom_1010_off + 922 * ccomps * dcomps);

            auto g_y_0_z_0_xz_zzzzzz = cbuffer.data(di_geom_1010_off + 923 * ccomps * dcomps);

            auto g_y_0_z_0_yy_xxxxxx = cbuffer.data(di_geom_1010_off + 924 * ccomps * dcomps);

            auto g_y_0_z_0_yy_xxxxxy = cbuffer.data(di_geom_1010_off + 925 * ccomps * dcomps);

            auto g_y_0_z_0_yy_xxxxxz = cbuffer.data(di_geom_1010_off + 926 * ccomps * dcomps);

            auto g_y_0_z_0_yy_xxxxyy = cbuffer.data(di_geom_1010_off + 927 * ccomps * dcomps);

            auto g_y_0_z_0_yy_xxxxyz = cbuffer.data(di_geom_1010_off + 928 * ccomps * dcomps);

            auto g_y_0_z_0_yy_xxxxzz = cbuffer.data(di_geom_1010_off + 929 * ccomps * dcomps);

            auto g_y_0_z_0_yy_xxxyyy = cbuffer.data(di_geom_1010_off + 930 * ccomps * dcomps);

            auto g_y_0_z_0_yy_xxxyyz = cbuffer.data(di_geom_1010_off + 931 * ccomps * dcomps);

            auto g_y_0_z_0_yy_xxxyzz = cbuffer.data(di_geom_1010_off + 932 * ccomps * dcomps);

            auto g_y_0_z_0_yy_xxxzzz = cbuffer.data(di_geom_1010_off + 933 * ccomps * dcomps);

            auto g_y_0_z_0_yy_xxyyyy = cbuffer.data(di_geom_1010_off + 934 * ccomps * dcomps);

            auto g_y_0_z_0_yy_xxyyyz = cbuffer.data(di_geom_1010_off + 935 * ccomps * dcomps);

            auto g_y_0_z_0_yy_xxyyzz = cbuffer.data(di_geom_1010_off + 936 * ccomps * dcomps);

            auto g_y_0_z_0_yy_xxyzzz = cbuffer.data(di_geom_1010_off + 937 * ccomps * dcomps);

            auto g_y_0_z_0_yy_xxzzzz = cbuffer.data(di_geom_1010_off + 938 * ccomps * dcomps);

            auto g_y_0_z_0_yy_xyyyyy = cbuffer.data(di_geom_1010_off + 939 * ccomps * dcomps);

            auto g_y_0_z_0_yy_xyyyyz = cbuffer.data(di_geom_1010_off + 940 * ccomps * dcomps);

            auto g_y_0_z_0_yy_xyyyzz = cbuffer.data(di_geom_1010_off + 941 * ccomps * dcomps);

            auto g_y_0_z_0_yy_xyyzzz = cbuffer.data(di_geom_1010_off + 942 * ccomps * dcomps);

            auto g_y_0_z_0_yy_xyzzzz = cbuffer.data(di_geom_1010_off + 943 * ccomps * dcomps);

            auto g_y_0_z_0_yy_xzzzzz = cbuffer.data(di_geom_1010_off + 944 * ccomps * dcomps);

            auto g_y_0_z_0_yy_yyyyyy = cbuffer.data(di_geom_1010_off + 945 * ccomps * dcomps);

            auto g_y_0_z_0_yy_yyyyyz = cbuffer.data(di_geom_1010_off + 946 * ccomps * dcomps);

            auto g_y_0_z_0_yy_yyyyzz = cbuffer.data(di_geom_1010_off + 947 * ccomps * dcomps);

            auto g_y_0_z_0_yy_yyyzzz = cbuffer.data(di_geom_1010_off + 948 * ccomps * dcomps);

            auto g_y_0_z_0_yy_yyzzzz = cbuffer.data(di_geom_1010_off + 949 * ccomps * dcomps);

            auto g_y_0_z_0_yy_yzzzzz = cbuffer.data(di_geom_1010_off + 950 * ccomps * dcomps);

            auto g_y_0_z_0_yy_zzzzzz = cbuffer.data(di_geom_1010_off + 951 * ccomps * dcomps);

            auto g_y_0_z_0_yz_xxxxxx = cbuffer.data(di_geom_1010_off + 952 * ccomps * dcomps);

            auto g_y_0_z_0_yz_xxxxxy = cbuffer.data(di_geom_1010_off + 953 * ccomps * dcomps);

            auto g_y_0_z_0_yz_xxxxxz = cbuffer.data(di_geom_1010_off + 954 * ccomps * dcomps);

            auto g_y_0_z_0_yz_xxxxyy = cbuffer.data(di_geom_1010_off + 955 * ccomps * dcomps);

            auto g_y_0_z_0_yz_xxxxyz = cbuffer.data(di_geom_1010_off + 956 * ccomps * dcomps);

            auto g_y_0_z_0_yz_xxxxzz = cbuffer.data(di_geom_1010_off + 957 * ccomps * dcomps);

            auto g_y_0_z_0_yz_xxxyyy = cbuffer.data(di_geom_1010_off + 958 * ccomps * dcomps);

            auto g_y_0_z_0_yz_xxxyyz = cbuffer.data(di_geom_1010_off + 959 * ccomps * dcomps);

            auto g_y_0_z_0_yz_xxxyzz = cbuffer.data(di_geom_1010_off + 960 * ccomps * dcomps);

            auto g_y_0_z_0_yz_xxxzzz = cbuffer.data(di_geom_1010_off + 961 * ccomps * dcomps);

            auto g_y_0_z_0_yz_xxyyyy = cbuffer.data(di_geom_1010_off + 962 * ccomps * dcomps);

            auto g_y_0_z_0_yz_xxyyyz = cbuffer.data(di_geom_1010_off + 963 * ccomps * dcomps);

            auto g_y_0_z_0_yz_xxyyzz = cbuffer.data(di_geom_1010_off + 964 * ccomps * dcomps);

            auto g_y_0_z_0_yz_xxyzzz = cbuffer.data(di_geom_1010_off + 965 * ccomps * dcomps);

            auto g_y_0_z_0_yz_xxzzzz = cbuffer.data(di_geom_1010_off + 966 * ccomps * dcomps);

            auto g_y_0_z_0_yz_xyyyyy = cbuffer.data(di_geom_1010_off + 967 * ccomps * dcomps);

            auto g_y_0_z_0_yz_xyyyyz = cbuffer.data(di_geom_1010_off + 968 * ccomps * dcomps);

            auto g_y_0_z_0_yz_xyyyzz = cbuffer.data(di_geom_1010_off + 969 * ccomps * dcomps);

            auto g_y_0_z_0_yz_xyyzzz = cbuffer.data(di_geom_1010_off + 970 * ccomps * dcomps);

            auto g_y_0_z_0_yz_xyzzzz = cbuffer.data(di_geom_1010_off + 971 * ccomps * dcomps);

            auto g_y_0_z_0_yz_xzzzzz = cbuffer.data(di_geom_1010_off + 972 * ccomps * dcomps);

            auto g_y_0_z_0_yz_yyyyyy = cbuffer.data(di_geom_1010_off + 973 * ccomps * dcomps);

            auto g_y_0_z_0_yz_yyyyyz = cbuffer.data(di_geom_1010_off + 974 * ccomps * dcomps);

            auto g_y_0_z_0_yz_yyyyzz = cbuffer.data(di_geom_1010_off + 975 * ccomps * dcomps);

            auto g_y_0_z_0_yz_yyyzzz = cbuffer.data(di_geom_1010_off + 976 * ccomps * dcomps);

            auto g_y_0_z_0_yz_yyzzzz = cbuffer.data(di_geom_1010_off + 977 * ccomps * dcomps);

            auto g_y_0_z_0_yz_yzzzzz = cbuffer.data(di_geom_1010_off + 978 * ccomps * dcomps);

            auto g_y_0_z_0_yz_zzzzzz = cbuffer.data(di_geom_1010_off + 979 * ccomps * dcomps);

            auto g_y_0_z_0_zz_xxxxxx = cbuffer.data(di_geom_1010_off + 980 * ccomps * dcomps);

            auto g_y_0_z_0_zz_xxxxxy = cbuffer.data(di_geom_1010_off + 981 * ccomps * dcomps);

            auto g_y_0_z_0_zz_xxxxxz = cbuffer.data(di_geom_1010_off + 982 * ccomps * dcomps);

            auto g_y_0_z_0_zz_xxxxyy = cbuffer.data(di_geom_1010_off + 983 * ccomps * dcomps);

            auto g_y_0_z_0_zz_xxxxyz = cbuffer.data(di_geom_1010_off + 984 * ccomps * dcomps);

            auto g_y_0_z_0_zz_xxxxzz = cbuffer.data(di_geom_1010_off + 985 * ccomps * dcomps);

            auto g_y_0_z_0_zz_xxxyyy = cbuffer.data(di_geom_1010_off + 986 * ccomps * dcomps);

            auto g_y_0_z_0_zz_xxxyyz = cbuffer.data(di_geom_1010_off + 987 * ccomps * dcomps);

            auto g_y_0_z_0_zz_xxxyzz = cbuffer.data(di_geom_1010_off + 988 * ccomps * dcomps);

            auto g_y_0_z_0_zz_xxxzzz = cbuffer.data(di_geom_1010_off + 989 * ccomps * dcomps);

            auto g_y_0_z_0_zz_xxyyyy = cbuffer.data(di_geom_1010_off + 990 * ccomps * dcomps);

            auto g_y_0_z_0_zz_xxyyyz = cbuffer.data(di_geom_1010_off + 991 * ccomps * dcomps);

            auto g_y_0_z_0_zz_xxyyzz = cbuffer.data(di_geom_1010_off + 992 * ccomps * dcomps);

            auto g_y_0_z_0_zz_xxyzzz = cbuffer.data(di_geom_1010_off + 993 * ccomps * dcomps);

            auto g_y_0_z_0_zz_xxzzzz = cbuffer.data(di_geom_1010_off + 994 * ccomps * dcomps);

            auto g_y_0_z_0_zz_xyyyyy = cbuffer.data(di_geom_1010_off + 995 * ccomps * dcomps);

            auto g_y_0_z_0_zz_xyyyyz = cbuffer.data(di_geom_1010_off + 996 * ccomps * dcomps);

            auto g_y_0_z_0_zz_xyyyzz = cbuffer.data(di_geom_1010_off + 997 * ccomps * dcomps);

            auto g_y_0_z_0_zz_xyyzzz = cbuffer.data(di_geom_1010_off + 998 * ccomps * dcomps);

            auto g_y_0_z_0_zz_xyzzzz = cbuffer.data(di_geom_1010_off + 999 * ccomps * dcomps);

            auto g_y_0_z_0_zz_xzzzzz = cbuffer.data(di_geom_1010_off + 1000 * ccomps * dcomps);

            auto g_y_0_z_0_zz_yyyyyy = cbuffer.data(di_geom_1010_off + 1001 * ccomps * dcomps);

            auto g_y_0_z_0_zz_yyyyyz = cbuffer.data(di_geom_1010_off + 1002 * ccomps * dcomps);

            auto g_y_0_z_0_zz_yyyyzz = cbuffer.data(di_geom_1010_off + 1003 * ccomps * dcomps);

            auto g_y_0_z_0_zz_yyyzzz = cbuffer.data(di_geom_1010_off + 1004 * ccomps * dcomps);

            auto g_y_0_z_0_zz_yyzzzz = cbuffer.data(di_geom_1010_off + 1005 * ccomps * dcomps);

            auto g_y_0_z_0_zz_yzzzzz = cbuffer.data(di_geom_1010_off + 1006 * ccomps * dcomps);

            auto g_y_0_z_0_zz_zzzzzz = cbuffer.data(di_geom_1010_off + 1007 * ccomps * dcomps);

            auto g_z_0_x_0_xx_xxxxxx = cbuffer.data(di_geom_1010_off + 1008 * ccomps * dcomps);

            auto g_z_0_x_0_xx_xxxxxy = cbuffer.data(di_geom_1010_off + 1009 * ccomps * dcomps);

            auto g_z_0_x_0_xx_xxxxxz = cbuffer.data(di_geom_1010_off + 1010 * ccomps * dcomps);

            auto g_z_0_x_0_xx_xxxxyy = cbuffer.data(di_geom_1010_off + 1011 * ccomps * dcomps);

            auto g_z_0_x_0_xx_xxxxyz = cbuffer.data(di_geom_1010_off + 1012 * ccomps * dcomps);

            auto g_z_0_x_0_xx_xxxxzz = cbuffer.data(di_geom_1010_off + 1013 * ccomps * dcomps);

            auto g_z_0_x_0_xx_xxxyyy = cbuffer.data(di_geom_1010_off + 1014 * ccomps * dcomps);

            auto g_z_0_x_0_xx_xxxyyz = cbuffer.data(di_geom_1010_off + 1015 * ccomps * dcomps);

            auto g_z_0_x_0_xx_xxxyzz = cbuffer.data(di_geom_1010_off + 1016 * ccomps * dcomps);

            auto g_z_0_x_0_xx_xxxzzz = cbuffer.data(di_geom_1010_off + 1017 * ccomps * dcomps);

            auto g_z_0_x_0_xx_xxyyyy = cbuffer.data(di_geom_1010_off + 1018 * ccomps * dcomps);

            auto g_z_0_x_0_xx_xxyyyz = cbuffer.data(di_geom_1010_off + 1019 * ccomps * dcomps);

            auto g_z_0_x_0_xx_xxyyzz = cbuffer.data(di_geom_1010_off + 1020 * ccomps * dcomps);

            auto g_z_0_x_0_xx_xxyzzz = cbuffer.data(di_geom_1010_off + 1021 * ccomps * dcomps);

            auto g_z_0_x_0_xx_xxzzzz = cbuffer.data(di_geom_1010_off + 1022 * ccomps * dcomps);

            auto g_z_0_x_0_xx_xyyyyy = cbuffer.data(di_geom_1010_off + 1023 * ccomps * dcomps);

            auto g_z_0_x_0_xx_xyyyyz = cbuffer.data(di_geom_1010_off + 1024 * ccomps * dcomps);

            auto g_z_0_x_0_xx_xyyyzz = cbuffer.data(di_geom_1010_off + 1025 * ccomps * dcomps);

            auto g_z_0_x_0_xx_xyyzzz = cbuffer.data(di_geom_1010_off + 1026 * ccomps * dcomps);

            auto g_z_0_x_0_xx_xyzzzz = cbuffer.data(di_geom_1010_off + 1027 * ccomps * dcomps);

            auto g_z_0_x_0_xx_xzzzzz = cbuffer.data(di_geom_1010_off + 1028 * ccomps * dcomps);

            auto g_z_0_x_0_xx_yyyyyy = cbuffer.data(di_geom_1010_off + 1029 * ccomps * dcomps);

            auto g_z_0_x_0_xx_yyyyyz = cbuffer.data(di_geom_1010_off + 1030 * ccomps * dcomps);

            auto g_z_0_x_0_xx_yyyyzz = cbuffer.data(di_geom_1010_off + 1031 * ccomps * dcomps);

            auto g_z_0_x_0_xx_yyyzzz = cbuffer.data(di_geom_1010_off + 1032 * ccomps * dcomps);

            auto g_z_0_x_0_xx_yyzzzz = cbuffer.data(di_geom_1010_off + 1033 * ccomps * dcomps);

            auto g_z_0_x_0_xx_yzzzzz = cbuffer.data(di_geom_1010_off + 1034 * ccomps * dcomps);

            auto g_z_0_x_0_xx_zzzzzz = cbuffer.data(di_geom_1010_off + 1035 * ccomps * dcomps);

            auto g_z_0_x_0_xy_xxxxxx = cbuffer.data(di_geom_1010_off + 1036 * ccomps * dcomps);

            auto g_z_0_x_0_xy_xxxxxy = cbuffer.data(di_geom_1010_off + 1037 * ccomps * dcomps);

            auto g_z_0_x_0_xy_xxxxxz = cbuffer.data(di_geom_1010_off + 1038 * ccomps * dcomps);

            auto g_z_0_x_0_xy_xxxxyy = cbuffer.data(di_geom_1010_off + 1039 * ccomps * dcomps);

            auto g_z_0_x_0_xy_xxxxyz = cbuffer.data(di_geom_1010_off + 1040 * ccomps * dcomps);

            auto g_z_0_x_0_xy_xxxxzz = cbuffer.data(di_geom_1010_off + 1041 * ccomps * dcomps);

            auto g_z_0_x_0_xy_xxxyyy = cbuffer.data(di_geom_1010_off + 1042 * ccomps * dcomps);

            auto g_z_0_x_0_xy_xxxyyz = cbuffer.data(di_geom_1010_off + 1043 * ccomps * dcomps);

            auto g_z_0_x_0_xy_xxxyzz = cbuffer.data(di_geom_1010_off + 1044 * ccomps * dcomps);

            auto g_z_0_x_0_xy_xxxzzz = cbuffer.data(di_geom_1010_off + 1045 * ccomps * dcomps);

            auto g_z_0_x_0_xy_xxyyyy = cbuffer.data(di_geom_1010_off + 1046 * ccomps * dcomps);

            auto g_z_0_x_0_xy_xxyyyz = cbuffer.data(di_geom_1010_off + 1047 * ccomps * dcomps);

            auto g_z_0_x_0_xy_xxyyzz = cbuffer.data(di_geom_1010_off + 1048 * ccomps * dcomps);

            auto g_z_0_x_0_xy_xxyzzz = cbuffer.data(di_geom_1010_off + 1049 * ccomps * dcomps);

            auto g_z_0_x_0_xy_xxzzzz = cbuffer.data(di_geom_1010_off + 1050 * ccomps * dcomps);

            auto g_z_0_x_0_xy_xyyyyy = cbuffer.data(di_geom_1010_off + 1051 * ccomps * dcomps);

            auto g_z_0_x_0_xy_xyyyyz = cbuffer.data(di_geom_1010_off + 1052 * ccomps * dcomps);

            auto g_z_0_x_0_xy_xyyyzz = cbuffer.data(di_geom_1010_off + 1053 * ccomps * dcomps);

            auto g_z_0_x_0_xy_xyyzzz = cbuffer.data(di_geom_1010_off + 1054 * ccomps * dcomps);

            auto g_z_0_x_0_xy_xyzzzz = cbuffer.data(di_geom_1010_off + 1055 * ccomps * dcomps);

            auto g_z_0_x_0_xy_xzzzzz = cbuffer.data(di_geom_1010_off + 1056 * ccomps * dcomps);

            auto g_z_0_x_0_xy_yyyyyy = cbuffer.data(di_geom_1010_off + 1057 * ccomps * dcomps);

            auto g_z_0_x_0_xy_yyyyyz = cbuffer.data(di_geom_1010_off + 1058 * ccomps * dcomps);

            auto g_z_0_x_0_xy_yyyyzz = cbuffer.data(di_geom_1010_off + 1059 * ccomps * dcomps);

            auto g_z_0_x_0_xy_yyyzzz = cbuffer.data(di_geom_1010_off + 1060 * ccomps * dcomps);

            auto g_z_0_x_0_xy_yyzzzz = cbuffer.data(di_geom_1010_off + 1061 * ccomps * dcomps);

            auto g_z_0_x_0_xy_yzzzzz = cbuffer.data(di_geom_1010_off + 1062 * ccomps * dcomps);

            auto g_z_0_x_0_xy_zzzzzz = cbuffer.data(di_geom_1010_off + 1063 * ccomps * dcomps);

            auto g_z_0_x_0_xz_xxxxxx = cbuffer.data(di_geom_1010_off + 1064 * ccomps * dcomps);

            auto g_z_0_x_0_xz_xxxxxy = cbuffer.data(di_geom_1010_off + 1065 * ccomps * dcomps);

            auto g_z_0_x_0_xz_xxxxxz = cbuffer.data(di_geom_1010_off + 1066 * ccomps * dcomps);

            auto g_z_0_x_0_xz_xxxxyy = cbuffer.data(di_geom_1010_off + 1067 * ccomps * dcomps);

            auto g_z_0_x_0_xz_xxxxyz = cbuffer.data(di_geom_1010_off + 1068 * ccomps * dcomps);

            auto g_z_0_x_0_xz_xxxxzz = cbuffer.data(di_geom_1010_off + 1069 * ccomps * dcomps);

            auto g_z_0_x_0_xz_xxxyyy = cbuffer.data(di_geom_1010_off + 1070 * ccomps * dcomps);

            auto g_z_0_x_0_xz_xxxyyz = cbuffer.data(di_geom_1010_off + 1071 * ccomps * dcomps);

            auto g_z_0_x_0_xz_xxxyzz = cbuffer.data(di_geom_1010_off + 1072 * ccomps * dcomps);

            auto g_z_0_x_0_xz_xxxzzz = cbuffer.data(di_geom_1010_off + 1073 * ccomps * dcomps);

            auto g_z_0_x_0_xz_xxyyyy = cbuffer.data(di_geom_1010_off + 1074 * ccomps * dcomps);

            auto g_z_0_x_0_xz_xxyyyz = cbuffer.data(di_geom_1010_off + 1075 * ccomps * dcomps);

            auto g_z_0_x_0_xz_xxyyzz = cbuffer.data(di_geom_1010_off + 1076 * ccomps * dcomps);

            auto g_z_0_x_0_xz_xxyzzz = cbuffer.data(di_geom_1010_off + 1077 * ccomps * dcomps);

            auto g_z_0_x_0_xz_xxzzzz = cbuffer.data(di_geom_1010_off + 1078 * ccomps * dcomps);

            auto g_z_0_x_0_xz_xyyyyy = cbuffer.data(di_geom_1010_off + 1079 * ccomps * dcomps);

            auto g_z_0_x_0_xz_xyyyyz = cbuffer.data(di_geom_1010_off + 1080 * ccomps * dcomps);

            auto g_z_0_x_0_xz_xyyyzz = cbuffer.data(di_geom_1010_off + 1081 * ccomps * dcomps);

            auto g_z_0_x_0_xz_xyyzzz = cbuffer.data(di_geom_1010_off + 1082 * ccomps * dcomps);

            auto g_z_0_x_0_xz_xyzzzz = cbuffer.data(di_geom_1010_off + 1083 * ccomps * dcomps);

            auto g_z_0_x_0_xz_xzzzzz = cbuffer.data(di_geom_1010_off + 1084 * ccomps * dcomps);

            auto g_z_0_x_0_xz_yyyyyy = cbuffer.data(di_geom_1010_off + 1085 * ccomps * dcomps);

            auto g_z_0_x_0_xz_yyyyyz = cbuffer.data(di_geom_1010_off + 1086 * ccomps * dcomps);

            auto g_z_0_x_0_xz_yyyyzz = cbuffer.data(di_geom_1010_off + 1087 * ccomps * dcomps);

            auto g_z_0_x_0_xz_yyyzzz = cbuffer.data(di_geom_1010_off + 1088 * ccomps * dcomps);

            auto g_z_0_x_0_xz_yyzzzz = cbuffer.data(di_geom_1010_off + 1089 * ccomps * dcomps);

            auto g_z_0_x_0_xz_yzzzzz = cbuffer.data(di_geom_1010_off + 1090 * ccomps * dcomps);

            auto g_z_0_x_0_xz_zzzzzz = cbuffer.data(di_geom_1010_off + 1091 * ccomps * dcomps);

            auto g_z_0_x_0_yy_xxxxxx = cbuffer.data(di_geom_1010_off + 1092 * ccomps * dcomps);

            auto g_z_0_x_0_yy_xxxxxy = cbuffer.data(di_geom_1010_off + 1093 * ccomps * dcomps);

            auto g_z_0_x_0_yy_xxxxxz = cbuffer.data(di_geom_1010_off + 1094 * ccomps * dcomps);

            auto g_z_0_x_0_yy_xxxxyy = cbuffer.data(di_geom_1010_off + 1095 * ccomps * dcomps);

            auto g_z_0_x_0_yy_xxxxyz = cbuffer.data(di_geom_1010_off + 1096 * ccomps * dcomps);

            auto g_z_0_x_0_yy_xxxxzz = cbuffer.data(di_geom_1010_off + 1097 * ccomps * dcomps);

            auto g_z_0_x_0_yy_xxxyyy = cbuffer.data(di_geom_1010_off + 1098 * ccomps * dcomps);

            auto g_z_0_x_0_yy_xxxyyz = cbuffer.data(di_geom_1010_off + 1099 * ccomps * dcomps);

            auto g_z_0_x_0_yy_xxxyzz = cbuffer.data(di_geom_1010_off + 1100 * ccomps * dcomps);

            auto g_z_0_x_0_yy_xxxzzz = cbuffer.data(di_geom_1010_off + 1101 * ccomps * dcomps);

            auto g_z_0_x_0_yy_xxyyyy = cbuffer.data(di_geom_1010_off + 1102 * ccomps * dcomps);

            auto g_z_0_x_0_yy_xxyyyz = cbuffer.data(di_geom_1010_off + 1103 * ccomps * dcomps);

            auto g_z_0_x_0_yy_xxyyzz = cbuffer.data(di_geom_1010_off + 1104 * ccomps * dcomps);

            auto g_z_0_x_0_yy_xxyzzz = cbuffer.data(di_geom_1010_off + 1105 * ccomps * dcomps);

            auto g_z_0_x_0_yy_xxzzzz = cbuffer.data(di_geom_1010_off + 1106 * ccomps * dcomps);

            auto g_z_0_x_0_yy_xyyyyy = cbuffer.data(di_geom_1010_off + 1107 * ccomps * dcomps);

            auto g_z_0_x_0_yy_xyyyyz = cbuffer.data(di_geom_1010_off + 1108 * ccomps * dcomps);

            auto g_z_0_x_0_yy_xyyyzz = cbuffer.data(di_geom_1010_off + 1109 * ccomps * dcomps);

            auto g_z_0_x_0_yy_xyyzzz = cbuffer.data(di_geom_1010_off + 1110 * ccomps * dcomps);

            auto g_z_0_x_0_yy_xyzzzz = cbuffer.data(di_geom_1010_off + 1111 * ccomps * dcomps);

            auto g_z_0_x_0_yy_xzzzzz = cbuffer.data(di_geom_1010_off + 1112 * ccomps * dcomps);

            auto g_z_0_x_0_yy_yyyyyy = cbuffer.data(di_geom_1010_off + 1113 * ccomps * dcomps);

            auto g_z_0_x_0_yy_yyyyyz = cbuffer.data(di_geom_1010_off + 1114 * ccomps * dcomps);

            auto g_z_0_x_0_yy_yyyyzz = cbuffer.data(di_geom_1010_off + 1115 * ccomps * dcomps);

            auto g_z_0_x_0_yy_yyyzzz = cbuffer.data(di_geom_1010_off + 1116 * ccomps * dcomps);

            auto g_z_0_x_0_yy_yyzzzz = cbuffer.data(di_geom_1010_off + 1117 * ccomps * dcomps);

            auto g_z_0_x_0_yy_yzzzzz = cbuffer.data(di_geom_1010_off + 1118 * ccomps * dcomps);

            auto g_z_0_x_0_yy_zzzzzz = cbuffer.data(di_geom_1010_off + 1119 * ccomps * dcomps);

            auto g_z_0_x_0_yz_xxxxxx = cbuffer.data(di_geom_1010_off + 1120 * ccomps * dcomps);

            auto g_z_0_x_0_yz_xxxxxy = cbuffer.data(di_geom_1010_off + 1121 * ccomps * dcomps);

            auto g_z_0_x_0_yz_xxxxxz = cbuffer.data(di_geom_1010_off + 1122 * ccomps * dcomps);

            auto g_z_0_x_0_yz_xxxxyy = cbuffer.data(di_geom_1010_off + 1123 * ccomps * dcomps);

            auto g_z_0_x_0_yz_xxxxyz = cbuffer.data(di_geom_1010_off + 1124 * ccomps * dcomps);

            auto g_z_0_x_0_yz_xxxxzz = cbuffer.data(di_geom_1010_off + 1125 * ccomps * dcomps);

            auto g_z_0_x_0_yz_xxxyyy = cbuffer.data(di_geom_1010_off + 1126 * ccomps * dcomps);

            auto g_z_0_x_0_yz_xxxyyz = cbuffer.data(di_geom_1010_off + 1127 * ccomps * dcomps);

            auto g_z_0_x_0_yz_xxxyzz = cbuffer.data(di_geom_1010_off + 1128 * ccomps * dcomps);

            auto g_z_0_x_0_yz_xxxzzz = cbuffer.data(di_geom_1010_off + 1129 * ccomps * dcomps);

            auto g_z_0_x_0_yz_xxyyyy = cbuffer.data(di_geom_1010_off + 1130 * ccomps * dcomps);

            auto g_z_0_x_0_yz_xxyyyz = cbuffer.data(di_geom_1010_off + 1131 * ccomps * dcomps);

            auto g_z_0_x_0_yz_xxyyzz = cbuffer.data(di_geom_1010_off + 1132 * ccomps * dcomps);

            auto g_z_0_x_0_yz_xxyzzz = cbuffer.data(di_geom_1010_off + 1133 * ccomps * dcomps);

            auto g_z_0_x_0_yz_xxzzzz = cbuffer.data(di_geom_1010_off + 1134 * ccomps * dcomps);

            auto g_z_0_x_0_yz_xyyyyy = cbuffer.data(di_geom_1010_off + 1135 * ccomps * dcomps);

            auto g_z_0_x_0_yz_xyyyyz = cbuffer.data(di_geom_1010_off + 1136 * ccomps * dcomps);

            auto g_z_0_x_0_yz_xyyyzz = cbuffer.data(di_geom_1010_off + 1137 * ccomps * dcomps);

            auto g_z_0_x_0_yz_xyyzzz = cbuffer.data(di_geom_1010_off + 1138 * ccomps * dcomps);

            auto g_z_0_x_0_yz_xyzzzz = cbuffer.data(di_geom_1010_off + 1139 * ccomps * dcomps);

            auto g_z_0_x_0_yz_xzzzzz = cbuffer.data(di_geom_1010_off + 1140 * ccomps * dcomps);

            auto g_z_0_x_0_yz_yyyyyy = cbuffer.data(di_geom_1010_off + 1141 * ccomps * dcomps);

            auto g_z_0_x_0_yz_yyyyyz = cbuffer.data(di_geom_1010_off + 1142 * ccomps * dcomps);

            auto g_z_0_x_0_yz_yyyyzz = cbuffer.data(di_geom_1010_off + 1143 * ccomps * dcomps);

            auto g_z_0_x_0_yz_yyyzzz = cbuffer.data(di_geom_1010_off + 1144 * ccomps * dcomps);

            auto g_z_0_x_0_yz_yyzzzz = cbuffer.data(di_geom_1010_off + 1145 * ccomps * dcomps);

            auto g_z_0_x_0_yz_yzzzzz = cbuffer.data(di_geom_1010_off + 1146 * ccomps * dcomps);

            auto g_z_0_x_0_yz_zzzzzz = cbuffer.data(di_geom_1010_off + 1147 * ccomps * dcomps);

            auto g_z_0_x_0_zz_xxxxxx = cbuffer.data(di_geom_1010_off + 1148 * ccomps * dcomps);

            auto g_z_0_x_0_zz_xxxxxy = cbuffer.data(di_geom_1010_off + 1149 * ccomps * dcomps);

            auto g_z_0_x_0_zz_xxxxxz = cbuffer.data(di_geom_1010_off + 1150 * ccomps * dcomps);

            auto g_z_0_x_0_zz_xxxxyy = cbuffer.data(di_geom_1010_off + 1151 * ccomps * dcomps);

            auto g_z_0_x_0_zz_xxxxyz = cbuffer.data(di_geom_1010_off + 1152 * ccomps * dcomps);

            auto g_z_0_x_0_zz_xxxxzz = cbuffer.data(di_geom_1010_off + 1153 * ccomps * dcomps);

            auto g_z_0_x_0_zz_xxxyyy = cbuffer.data(di_geom_1010_off + 1154 * ccomps * dcomps);

            auto g_z_0_x_0_zz_xxxyyz = cbuffer.data(di_geom_1010_off + 1155 * ccomps * dcomps);

            auto g_z_0_x_0_zz_xxxyzz = cbuffer.data(di_geom_1010_off + 1156 * ccomps * dcomps);

            auto g_z_0_x_0_zz_xxxzzz = cbuffer.data(di_geom_1010_off + 1157 * ccomps * dcomps);

            auto g_z_0_x_0_zz_xxyyyy = cbuffer.data(di_geom_1010_off + 1158 * ccomps * dcomps);

            auto g_z_0_x_0_zz_xxyyyz = cbuffer.data(di_geom_1010_off + 1159 * ccomps * dcomps);

            auto g_z_0_x_0_zz_xxyyzz = cbuffer.data(di_geom_1010_off + 1160 * ccomps * dcomps);

            auto g_z_0_x_0_zz_xxyzzz = cbuffer.data(di_geom_1010_off + 1161 * ccomps * dcomps);

            auto g_z_0_x_0_zz_xxzzzz = cbuffer.data(di_geom_1010_off + 1162 * ccomps * dcomps);

            auto g_z_0_x_0_zz_xyyyyy = cbuffer.data(di_geom_1010_off + 1163 * ccomps * dcomps);

            auto g_z_0_x_0_zz_xyyyyz = cbuffer.data(di_geom_1010_off + 1164 * ccomps * dcomps);

            auto g_z_0_x_0_zz_xyyyzz = cbuffer.data(di_geom_1010_off + 1165 * ccomps * dcomps);

            auto g_z_0_x_0_zz_xyyzzz = cbuffer.data(di_geom_1010_off + 1166 * ccomps * dcomps);

            auto g_z_0_x_0_zz_xyzzzz = cbuffer.data(di_geom_1010_off + 1167 * ccomps * dcomps);

            auto g_z_0_x_0_zz_xzzzzz = cbuffer.data(di_geom_1010_off + 1168 * ccomps * dcomps);

            auto g_z_0_x_0_zz_yyyyyy = cbuffer.data(di_geom_1010_off + 1169 * ccomps * dcomps);

            auto g_z_0_x_0_zz_yyyyyz = cbuffer.data(di_geom_1010_off + 1170 * ccomps * dcomps);

            auto g_z_0_x_0_zz_yyyyzz = cbuffer.data(di_geom_1010_off + 1171 * ccomps * dcomps);

            auto g_z_0_x_0_zz_yyyzzz = cbuffer.data(di_geom_1010_off + 1172 * ccomps * dcomps);

            auto g_z_0_x_0_zz_yyzzzz = cbuffer.data(di_geom_1010_off + 1173 * ccomps * dcomps);

            auto g_z_0_x_0_zz_yzzzzz = cbuffer.data(di_geom_1010_off + 1174 * ccomps * dcomps);

            auto g_z_0_x_0_zz_zzzzzz = cbuffer.data(di_geom_1010_off + 1175 * ccomps * dcomps);

            auto g_z_0_y_0_xx_xxxxxx = cbuffer.data(di_geom_1010_off + 1176 * ccomps * dcomps);

            auto g_z_0_y_0_xx_xxxxxy = cbuffer.data(di_geom_1010_off + 1177 * ccomps * dcomps);

            auto g_z_0_y_0_xx_xxxxxz = cbuffer.data(di_geom_1010_off + 1178 * ccomps * dcomps);

            auto g_z_0_y_0_xx_xxxxyy = cbuffer.data(di_geom_1010_off + 1179 * ccomps * dcomps);

            auto g_z_0_y_0_xx_xxxxyz = cbuffer.data(di_geom_1010_off + 1180 * ccomps * dcomps);

            auto g_z_0_y_0_xx_xxxxzz = cbuffer.data(di_geom_1010_off + 1181 * ccomps * dcomps);

            auto g_z_0_y_0_xx_xxxyyy = cbuffer.data(di_geom_1010_off + 1182 * ccomps * dcomps);

            auto g_z_0_y_0_xx_xxxyyz = cbuffer.data(di_geom_1010_off + 1183 * ccomps * dcomps);

            auto g_z_0_y_0_xx_xxxyzz = cbuffer.data(di_geom_1010_off + 1184 * ccomps * dcomps);

            auto g_z_0_y_0_xx_xxxzzz = cbuffer.data(di_geom_1010_off + 1185 * ccomps * dcomps);

            auto g_z_0_y_0_xx_xxyyyy = cbuffer.data(di_geom_1010_off + 1186 * ccomps * dcomps);

            auto g_z_0_y_0_xx_xxyyyz = cbuffer.data(di_geom_1010_off + 1187 * ccomps * dcomps);

            auto g_z_0_y_0_xx_xxyyzz = cbuffer.data(di_geom_1010_off + 1188 * ccomps * dcomps);

            auto g_z_0_y_0_xx_xxyzzz = cbuffer.data(di_geom_1010_off + 1189 * ccomps * dcomps);

            auto g_z_0_y_0_xx_xxzzzz = cbuffer.data(di_geom_1010_off + 1190 * ccomps * dcomps);

            auto g_z_0_y_0_xx_xyyyyy = cbuffer.data(di_geom_1010_off + 1191 * ccomps * dcomps);

            auto g_z_0_y_0_xx_xyyyyz = cbuffer.data(di_geom_1010_off + 1192 * ccomps * dcomps);

            auto g_z_0_y_0_xx_xyyyzz = cbuffer.data(di_geom_1010_off + 1193 * ccomps * dcomps);

            auto g_z_0_y_0_xx_xyyzzz = cbuffer.data(di_geom_1010_off + 1194 * ccomps * dcomps);

            auto g_z_0_y_0_xx_xyzzzz = cbuffer.data(di_geom_1010_off + 1195 * ccomps * dcomps);

            auto g_z_0_y_0_xx_xzzzzz = cbuffer.data(di_geom_1010_off + 1196 * ccomps * dcomps);

            auto g_z_0_y_0_xx_yyyyyy = cbuffer.data(di_geom_1010_off + 1197 * ccomps * dcomps);

            auto g_z_0_y_0_xx_yyyyyz = cbuffer.data(di_geom_1010_off + 1198 * ccomps * dcomps);

            auto g_z_0_y_0_xx_yyyyzz = cbuffer.data(di_geom_1010_off + 1199 * ccomps * dcomps);

            auto g_z_0_y_0_xx_yyyzzz = cbuffer.data(di_geom_1010_off + 1200 * ccomps * dcomps);

            auto g_z_0_y_0_xx_yyzzzz = cbuffer.data(di_geom_1010_off + 1201 * ccomps * dcomps);

            auto g_z_0_y_0_xx_yzzzzz = cbuffer.data(di_geom_1010_off + 1202 * ccomps * dcomps);

            auto g_z_0_y_0_xx_zzzzzz = cbuffer.data(di_geom_1010_off + 1203 * ccomps * dcomps);

            auto g_z_0_y_0_xy_xxxxxx = cbuffer.data(di_geom_1010_off + 1204 * ccomps * dcomps);

            auto g_z_0_y_0_xy_xxxxxy = cbuffer.data(di_geom_1010_off + 1205 * ccomps * dcomps);

            auto g_z_0_y_0_xy_xxxxxz = cbuffer.data(di_geom_1010_off + 1206 * ccomps * dcomps);

            auto g_z_0_y_0_xy_xxxxyy = cbuffer.data(di_geom_1010_off + 1207 * ccomps * dcomps);

            auto g_z_0_y_0_xy_xxxxyz = cbuffer.data(di_geom_1010_off + 1208 * ccomps * dcomps);

            auto g_z_0_y_0_xy_xxxxzz = cbuffer.data(di_geom_1010_off + 1209 * ccomps * dcomps);

            auto g_z_0_y_0_xy_xxxyyy = cbuffer.data(di_geom_1010_off + 1210 * ccomps * dcomps);

            auto g_z_0_y_0_xy_xxxyyz = cbuffer.data(di_geom_1010_off + 1211 * ccomps * dcomps);

            auto g_z_0_y_0_xy_xxxyzz = cbuffer.data(di_geom_1010_off + 1212 * ccomps * dcomps);

            auto g_z_0_y_0_xy_xxxzzz = cbuffer.data(di_geom_1010_off + 1213 * ccomps * dcomps);

            auto g_z_0_y_0_xy_xxyyyy = cbuffer.data(di_geom_1010_off + 1214 * ccomps * dcomps);

            auto g_z_0_y_0_xy_xxyyyz = cbuffer.data(di_geom_1010_off + 1215 * ccomps * dcomps);

            auto g_z_0_y_0_xy_xxyyzz = cbuffer.data(di_geom_1010_off + 1216 * ccomps * dcomps);

            auto g_z_0_y_0_xy_xxyzzz = cbuffer.data(di_geom_1010_off + 1217 * ccomps * dcomps);

            auto g_z_0_y_0_xy_xxzzzz = cbuffer.data(di_geom_1010_off + 1218 * ccomps * dcomps);

            auto g_z_0_y_0_xy_xyyyyy = cbuffer.data(di_geom_1010_off + 1219 * ccomps * dcomps);

            auto g_z_0_y_0_xy_xyyyyz = cbuffer.data(di_geom_1010_off + 1220 * ccomps * dcomps);

            auto g_z_0_y_0_xy_xyyyzz = cbuffer.data(di_geom_1010_off + 1221 * ccomps * dcomps);

            auto g_z_0_y_0_xy_xyyzzz = cbuffer.data(di_geom_1010_off + 1222 * ccomps * dcomps);

            auto g_z_0_y_0_xy_xyzzzz = cbuffer.data(di_geom_1010_off + 1223 * ccomps * dcomps);

            auto g_z_0_y_0_xy_xzzzzz = cbuffer.data(di_geom_1010_off + 1224 * ccomps * dcomps);

            auto g_z_0_y_0_xy_yyyyyy = cbuffer.data(di_geom_1010_off + 1225 * ccomps * dcomps);

            auto g_z_0_y_0_xy_yyyyyz = cbuffer.data(di_geom_1010_off + 1226 * ccomps * dcomps);

            auto g_z_0_y_0_xy_yyyyzz = cbuffer.data(di_geom_1010_off + 1227 * ccomps * dcomps);

            auto g_z_0_y_0_xy_yyyzzz = cbuffer.data(di_geom_1010_off + 1228 * ccomps * dcomps);

            auto g_z_0_y_0_xy_yyzzzz = cbuffer.data(di_geom_1010_off + 1229 * ccomps * dcomps);

            auto g_z_0_y_0_xy_yzzzzz = cbuffer.data(di_geom_1010_off + 1230 * ccomps * dcomps);

            auto g_z_0_y_0_xy_zzzzzz = cbuffer.data(di_geom_1010_off + 1231 * ccomps * dcomps);

            auto g_z_0_y_0_xz_xxxxxx = cbuffer.data(di_geom_1010_off + 1232 * ccomps * dcomps);

            auto g_z_0_y_0_xz_xxxxxy = cbuffer.data(di_geom_1010_off + 1233 * ccomps * dcomps);

            auto g_z_0_y_0_xz_xxxxxz = cbuffer.data(di_geom_1010_off + 1234 * ccomps * dcomps);

            auto g_z_0_y_0_xz_xxxxyy = cbuffer.data(di_geom_1010_off + 1235 * ccomps * dcomps);

            auto g_z_0_y_0_xz_xxxxyz = cbuffer.data(di_geom_1010_off + 1236 * ccomps * dcomps);

            auto g_z_0_y_0_xz_xxxxzz = cbuffer.data(di_geom_1010_off + 1237 * ccomps * dcomps);

            auto g_z_0_y_0_xz_xxxyyy = cbuffer.data(di_geom_1010_off + 1238 * ccomps * dcomps);

            auto g_z_0_y_0_xz_xxxyyz = cbuffer.data(di_geom_1010_off + 1239 * ccomps * dcomps);

            auto g_z_0_y_0_xz_xxxyzz = cbuffer.data(di_geom_1010_off + 1240 * ccomps * dcomps);

            auto g_z_0_y_0_xz_xxxzzz = cbuffer.data(di_geom_1010_off + 1241 * ccomps * dcomps);

            auto g_z_0_y_0_xz_xxyyyy = cbuffer.data(di_geom_1010_off + 1242 * ccomps * dcomps);

            auto g_z_0_y_0_xz_xxyyyz = cbuffer.data(di_geom_1010_off + 1243 * ccomps * dcomps);

            auto g_z_0_y_0_xz_xxyyzz = cbuffer.data(di_geom_1010_off + 1244 * ccomps * dcomps);

            auto g_z_0_y_0_xz_xxyzzz = cbuffer.data(di_geom_1010_off + 1245 * ccomps * dcomps);

            auto g_z_0_y_0_xz_xxzzzz = cbuffer.data(di_geom_1010_off + 1246 * ccomps * dcomps);

            auto g_z_0_y_0_xz_xyyyyy = cbuffer.data(di_geom_1010_off + 1247 * ccomps * dcomps);

            auto g_z_0_y_0_xz_xyyyyz = cbuffer.data(di_geom_1010_off + 1248 * ccomps * dcomps);

            auto g_z_0_y_0_xz_xyyyzz = cbuffer.data(di_geom_1010_off + 1249 * ccomps * dcomps);

            auto g_z_0_y_0_xz_xyyzzz = cbuffer.data(di_geom_1010_off + 1250 * ccomps * dcomps);

            auto g_z_0_y_0_xz_xyzzzz = cbuffer.data(di_geom_1010_off + 1251 * ccomps * dcomps);

            auto g_z_0_y_0_xz_xzzzzz = cbuffer.data(di_geom_1010_off + 1252 * ccomps * dcomps);

            auto g_z_0_y_0_xz_yyyyyy = cbuffer.data(di_geom_1010_off + 1253 * ccomps * dcomps);

            auto g_z_0_y_0_xz_yyyyyz = cbuffer.data(di_geom_1010_off + 1254 * ccomps * dcomps);

            auto g_z_0_y_0_xz_yyyyzz = cbuffer.data(di_geom_1010_off + 1255 * ccomps * dcomps);

            auto g_z_0_y_0_xz_yyyzzz = cbuffer.data(di_geom_1010_off + 1256 * ccomps * dcomps);

            auto g_z_0_y_0_xz_yyzzzz = cbuffer.data(di_geom_1010_off + 1257 * ccomps * dcomps);

            auto g_z_0_y_0_xz_yzzzzz = cbuffer.data(di_geom_1010_off + 1258 * ccomps * dcomps);

            auto g_z_0_y_0_xz_zzzzzz = cbuffer.data(di_geom_1010_off + 1259 * ccomps * dcomps);

            auto g_z_0_y_0_yy_xxxxxx = cbuffer.data(di_geom_1010_off + 1260 * ccomps * dcomps);

            auto g_z_0_y_0_yy_xxxxxy = cbuffer.data(di_geom_1010_off + 1261 * ccomps * dcomps);

            auto g_z_0_y_0_yy_xxxxxz = cbuffer.data(di_geom_1010_off + 1262 * ccomps * dcomps);

            auto g_z_0_y_0_yy_xxxxyy = cbuffer.data(di_geom_1010_off + 1263 * ccomps * dcomps);

            auto g_z_0_y_0_yy_xxxxyz = cbuffer.data(di_geom_1010_off + 1264 * ccomps * dcomps);

            auto g_z_0_y_0_yy_xxxxzz = cbuffer.data(di_geom_1010_off + 1265 * ccomps * dcomps);

            auto g_z_0_y_0_yy_xxxyyy = cbuffer.data(di_geom_1010_off + 1266 * ccomps * dcomps);

            auto g_z_0_y_0_yy_xxxyyz = cbuffer.data(di_geom_1010_off + 1267 * ccomps * dcomps);

            auto g_z_0_y_0_yy_xxxyzz = cbuffer.data(di_geom_1010_off + 1268 * ccomps * dcomps);

            auto g_z_0_y_0_yy_xxxzzz = cbuffer.data(di_geom_1010_off + 1269 * ccomps * dcomps);

            auto g_z_0_y_0_yy_xxyyyy = cbuffer.data(di_geom_1010_off + 1270 * ccomps * dcomps);

            auto g_z_0_y_0_yy_xxyyyz = cbuffer.data(di_geom_1010_off + 1271 * ccomps * dcomps);

            auto g_z_0_y_0_yy_xxyyzz = cbuffer.data(di_geom_1010_off + 1272 * ccomps * dcomps);

            auto g_z_0_y_0_yy_xxyzzz = cbuffer.data(di_geom_1010_off + 1273 * ccomps * dcomps);

            auto g_z_0_y_0_yy_xxzzzz = cbuffer.data(di_geom_1010_off + 1274 * ccomps * dcomps);

            auto g_z_0_y_0_yy_xyyyyy = cbuffer.data(di_geom_1010_off + 1275 * ccomps * dcomps);

            auto g_z_0_y_0_yy_xyyyyz = cbuffer.data(di_geom_1010_off + 1276 * ccomps * dcomps);

            auto g_z_0_y_0_yy_xyyyzz = cbuffer.data(di_geom_1010_off + 1277 * ccomps * dcomps);

            auto g_z_0_y_0_yy_xyyzzz = cbuffer.data(di_geom_1010_off + 1278 * ccomps * dcomps);

            auto g_z_0_y_0_yy_xyzzzz = cbuffer.data(di_geom_1010_off + 1279 * ccomps * dcomps);

            auto g_z_0_y_0_yy_xzzzzz = cbuffer.data(di_geom_1010_off + 1280 * ccomps * dcomps);

            auto g_z_0_y_0_yy_yyyyyy = cbuffer.data(di_geom_1010_off + 1281 * ccomps * dcomps);

            auto g_z_0_y_0_yy_yyyyyz = cbuffer.data(di_geom_1010_off + 1282 * ccomps * dcomps);

            auto g_z_0_y_0_yy_yyyyzz = cbuffer.data(di_geom_1010_off + 1283 * ccomps * dcomps);

            auto g_z_0_y_0_yy_yyyzzz = cbuffer.data(di_geom_1010_off + 1284 * ccomps * dcomps);

            auto g_z_0_y_0_yy_yyzzzz = cbuffer.data(di_geom_1010_off + 1285 * ccomps * dcomps);

            auto g_z_0_y_0_yy_yzzzzz = cbuffer.data(di_geom_1010_off + 1286 * ccomps * dcomps);

            auto g_z_0_y_0_yy_zzzzzz = cbuffer.data(di_geom_1010_off + 1287 * ccomps * dcomps);

            auto g_z_0_y_0_yz_xxxxxx = cbuffer.data(di_geom_1010_off + 1288 * ccomps * dcomps);

            auto g_z_0_y_0_yz_xxxxxy = cbuffer.data(di_geom_1010_off + 1289 * ccomps * dcomps);

            auto g_z_0_y_0_yz_xxxxxz = cbuffer.data(di_geom_1010_off + 1290 * ccomps * dcomps);

            auto g_z_0_y_0_yz_xxxxyy = cbuffer.data(di_geom_1010_off + 1291 * ccomps * dcomps);

            auto g_z_0_y_0_yz_xxxxyz = cbuffer.data(di_geom_1010_off + 1292 * ccomps * dcomps);

            auto g_z_0_y_0_yz_xxxxzz = cbuffer.data(di_geom_1010_off + 1293 * ccomps * dcomps);

            auto g_z_0_y_0_yz_xxxyyy = cbuffer.data(di_geom_1010_off + 1294 * ccomps * dcomps);

            auto g_z_0_y_0_yz_xxxyyz = cbuffer.data(di_geom_1010_off + 1295 * ccomps * dcomps);

            auto g_z_0_y_0_yz_xxxyzz = cbuffer.data(di_geom_1010_off + 1296 * ccomps * dcomps);

            auto g_z_0_y_0_yz_xxxzzz = cbuffer.data(di_geom_1010_off + 1297 * ccomps * dcomps);

            auto g_z_0_y_0_yz_xxyyyy = cbuffer.data(di_geom_1010_off + 1298 * ccomps * dcomps);

            auto g_z_0_y_0_yz_xxyyyz = cbuffer.data(di_geom_1010_off + 1299 * ccomps * dcomps);

            auto g_z_0_y_0_yz_xxyyzz = cbuffer.data(di_geom_1010_off + 1300 * ccomps * dcomps);

            auto g_z_0_y_0_yz_xxyzzz = cbuffer.data(di_geom_1010_off + 1301 * ccomps * dcomps);

            auto g_z_0_y_0_yz_xxzzzz = cbuffer.data(di_geom_1010_off + 1302 * ccomps * dcomps);

            auto g_z_0_y_0_yz_xyyyyy = cbuffer.data(di_geom_1010_off + 1303 * ccomps * dcomps);

            auto g_z_0_y_0_yz_xyyyyz = cbuffer.data(di_geom_1010_off + 1304 * ccomps * dcomps);

            auto g_z_0_y_0_yz_xyyyzz = cbuffer.data(di_geom_1010_off + 1305 * ccomps * dcomps);

            auto g_z_0_y_0_yz_xyyzzz = cbuffer.data(di_geom_1010_off + 1306 * ccomps * dcomps);

            auto g_z_0_y_0_yz_xyzzzz = cbuffer.data(di_geom_1010_off + 1307 * ccomps * dcomps);

            auto g_z_0_y_0_yz_xzzzzz = cbuffer.data(di_geom_1010_off + 1308 * ccomps * dcomps);

            auto g_z_0_y_0_yz_yyyyyy = cbuffer.data(di_geom_1010_off + 1309 * ccomps * dcomps);

            auto g_z_0_y_0_yz_yyyyyz = cbuffer.data(di_geom_1010_off + 1310 * ccomps * dcomps);

            auto g_z_0_y_0_yz_yyyyzz = cbuffer.data(di_geom_1010_off + 1311 * ccomps * dcomps);

            auto g_z_0_y_0_yz_yyyzzz = cbuffer.data(di_geom_1010_off + 1312 * ccomps * dcomps);

            auto g_z_0_y_0_yz_yyzzzz = cbuffer.data(di_geom_1010_off + 1313 * ccomps * dcomps);

            auto g_z_0_y_0_yz_yzzzzz = cbuffer.data(di_geom_1010_off + 1314 * ccomps * dcomps);

            auto g_z_0_y_0_yz_zzzzzz = cbuffer.data(di_geom_1010_off + 1315 * ccomps * dcomps);

            auto g_z_0_y_0_zz_xxxxxx = cbuffer.data(di_geom_1010_off + 1316 * ccomps * dcomps);

            auto g_z_0_y_0_zz_xxxxxy = cbuffer.data(di_geom_1010_off + 1317 * ccomps * dcomps);

            auto g_z_0_y_0_zz_xxxxxz = cbuffer.data(di_geom_1010_off + 1318 * ccomps * dcomps);

            auto g_z_0_y_0_zz_xxxxyy = cbuffer.data(di_geom_1010_off + 1319 * ccomps * dcomps);

            auto g_z_0_y_0_zz_xxxxyz = cbuffer.data(di_geom_1010_off + 1320 * ccomps * dcomps);

            auto g_z_0_y_0_zz_xxxxzz = cbuffer.data(di_geom_1010_off + 1321 * ccomps * dcomps);

            auto g_z_0_y_0_zz_xxxyyy = cbuffer.data(di_geom_1010_off + 1322 * ccomps * dcomps);

            auto g_z_0_y_0_zz_xxxyyz = cbuffer.data(di_geom_1010_off + 1323 * ccomps * dcomps);

            auto g_z_0_y_0_zz_xxxyzz = cbuffer.data(di_geom_1010_off + 1324 * ccomps * dcomps);

            auto g_z_0_y_0_zz_xxxzzz = cbuffer.data(di_geom_1010_off + 1325 * ccomps * dcomps);

            auto g_z_0_y_0_zz_xxyyyy = cbuffer.data(di_geom_1010_off + 1326 * ccomps * dcomps);

            auto g_z_0_y_0_zz_xxyyyz = cbuffer.data(di_geom_1010_off + 1327 * ccomps * dcomps);

            auto g_z_0_y_0_zz_xxyyzz = cbuffer.data(di_geom_1010_off + 1328 * ccomps * dcomps);

            auto g_z_0_y_0_zz_xxyzzz = cbuffer.data(di_geom_1010_off + 1329 * ccomps * dcomps);

            auto g_z_0_y_0_zz_xxzzzz = cbuffer.data(di_geom_1010_off + 1330 * ccomps * dcomps);

            auto g_z_0_y_0_zz_xyyyyy = cbuffer.data(di_geom_1010_off + 1331 * ccomps * dcomps);

            auto g_z_0_y_0_zz_xyyyyz = cbuffer.data(di_geom_1010_off + 1332 * ccomps * dcomps);

            auto g_z_0_y_0_zz_xyyyzz = cbuffer.data(di_geom_1010_off + 1333 * ccomps * dcomps);

            auto g_z_0_y_0_zz_xyyzzz = cbuffer.data(di_geom_1010_off + 1334 * ccomps * dcomps);

            auto g_z_0_y_0_zz_xyzzzz = cbuffer.data(di_geom_1010_off + 1335 * ccomps * dcomps);

            auto g_z_0_y_0_zz_xzzzzz = cbuffer.data(di_geom_1010_off + 1336 * ccomps * dcomps);

            auto g_z_0_y_0_zz_yyyyyy = cbuffer.data(di_geom_1010_off + 1337 * ccomps * dcomps);

            auto g_z_0_y_0_zz_yyyyyz = cbuffer.data(di_geom_1010_off + 1338 * ccomps * dcomps);

            auto g_z_0_y_0_zz_yyyyzz = cbuffer.data(di_geom_1010_off + 1339 * ccomps * dcomps);

            auto g_z_0_y_0_zz_yyyzzz = cbuffer.data(di_geom_1010_off + 1340 * ccomps * dcomps);

            auto g_z_0_y_0_zz_yyzzzz = cbuffer.data(di_geom_1010_off + 1341 * ccomps * dcomps);

            auto g_z_0_y_0_zz_yzzzzz = cbuffer.data(di_geom_1010_off + 1342 * ccomps * dcomps);

            auto g_z_0_y_0_zz_zzzzzz = cbuffer.data(di_geom_1010_off + 1343 * ccomps * dcomps);

            auto g_z_0_z_0_xx_xxxxxx = cbuffer.data(di_geom_1010_off + 1344 * ccomps * dcomps);

            auto g_z_0_z_0_xx_xxxxxy = cbuffer.data(di_geom_1010_off + 1345 * ccomps * dcomps);

            auto g_z_0_z_0_xx_xxxxxz = cbuffer.data(di_geom_1010_off + 1346 * ccomps * dcomps);

            auto g_z_0_z_0_xx_xxxxyy = cbuffer.data(di_geom_1010_off + 1347 * ccomps * dcomps);

            auto g_z_0_z_0_xx_xxxxyz = cbuffer.data(di_geom_1010_off + 1348 * ccomps * dcomps);

            auto g_z_0_z_0_xx_xxxxzz = cbuffer.data(di_geom_1010_off + 1349 * ccomps * dcomps);

            auto g_z_0_z_0_xx_xxxyyy = cbuffer.data(di_geom_1010_off + 1350 * ccomps * dcomps);

            auto g_z_0_z_0_xx_xxxyyz = cbuffer.data(di_geom_1010_off + 1351 * ccomps * dcomps);

            auto g_z_0_z_0_xx_xxxyzz = cbuffer.data(di_geom_1010_off + 1352 * ccomps * dcomps);

            auto g_z_0_z_0_xx_xxxzzz = cbuffer.data(di_geom_1010_off + 1353 * ccomps * dcomps);

            auto g_z_0_z_0_xx_xxyyyy = cbuffer.data(di_geom_1010_off + 1354 * ccomps * dcomps);

            auto g_z_0_z_0_xx_xxyyyz = cbuffer.data(di_geom_1010_off + 1355 * ccomps * dcomps);

            auto g_z_0_z_0_xx_xxyyzz = cbuffer.data(di_geom_1010_off + 1356 * ccomps * dcomps);

            auto g_z_0_z_0_xx_xxyzzz = cbuffer.data(di_geom_1010_off + 1357 * ccomps * dcomps);

            auto g_z_0_z_0_xx_xxzzzz = cbuffer.data(di_geom_1010_off + 1358 * ccomps * dcomps);

            auto g_z_0_z_0_xx_xyyyyy = cbuffer.data(di_geom_1010_off + 1359 * ccomps * dcomps);

            auto g_z_0_z_0_xx_xyyyyz = cbuffer.data(di_geom_1010_off + 1360 * ccomps * dcomps);

            auto g_z_0_z_0_xx_xyyyzz = cbuffer.data(di_geom_1010_off + 1361 * ccomps * dcomps);

            auto g_z_0_z_0_xx_xyyzzz = cbuffer.data(di_geom_1010_off + 1362 * ccomps * dcomps);

            auto g_z_0_z_0_xx_xyzzzz = cbuffer.data(di_geom_1010_off + 1363 * ccomps * dcomps);

            auto g_z_0_z_0_xx_xzzzzz = cbuffer.data(di_geom_1010_off + 1364 * ccomps * dcomps);

            auto g_z_0_z_0_xx_yyyyyy = cbuffer.data(di_geom_1010_off + 1365 * ccomps * dcomps);

            auto g_z_0_z_0_xx_yyyyyz = cbuffer.data(di_geom_1010_off + 1366 * ccomps * dcomps);

            auto g_z_0_z_0_xx_yyyyzz = cbuffer.data(di_geom_1010_off + 1367 * ccomps * dcomps);

            auto g_z_0_z_0_xx_yyyzzz = cbuffer.data(di_geom_1010_off + 1368 * ccomps * dcomps);

            auto g_z_0_z_0_xx_yyzzzz = cbuffer.data(di_geom_1010_off + 1369 * ccomps * dcomps);

            auto g_z_0_z_0_xx_yzzzzz = cbuffer.data(di_geom_1010_off + 1370 * ccomps * dcomps);

            auto g_z_0_z_0_xx_zzzzzz = cbuffer.data(di_geom_1010_off + 1371 * ccomps * dcomps);

            auto g_z_0_z_0_xy_xxxxxx = cbuffer.data(di_geom_1010_off + 1372 * ccomps * dcomps);

            auto g_z_0_z_0_xy_xxxxxy = cbuffer.data(di_geom_1010_off + 1373 * ccomps * dcomps);

            auto g_z_0_z_0_xy_xxxxxz = cbuffer.data(di_geom_1010_off + 1374 * ccomps * dcomps);

            auto g_z_0_z_0_xy_xxxxyy = cbuffer.data(di_geom_1010_off + 1375 * ccomps * dcomps);

            auto g_z_0_z_0_xy_xxxxyz = cbuffer.data(di_geom_1010_off + 1376 * ccomps * dcomps);

            auto g_z_0_z_0_xy_xxxxzz = cbuffer.data(di_geom_1010_off + 1377 * ccomps * dcomps);

            auto g_z_0_z_0_xy_xxxyyy = cbuffer.data(di_geom_1010_off + 1378 * ccomps * dcomps);

            auto g_z_0_z_0_xy_xxxyyz = cbuffer.data(di_geom_1010_off + 1379 * ccomps * dcomps);

            auto g_z_0_z_0_xy_xxxyzz = cbuffer.data(di_geom_1010_off + 1380 * ccomps * dcomps);

            auto g_z_0_z_0_xy_xxxzzz = cbuffer.data(di_geom_1010_off + 1381 * ccomps * dcomps);

            auto g_z_0_z_0_xy_xxyyyy = cbuffer.data(di_geom_1010_off + 1382 * ccomps * dcomps);

            auto g_z_0_z_0_xy_xxyyyz = cbuffer.data(di_geom_1010_off + 1383 * ccomps * dcomps);

            auto g_z_0_z_0_xy_xxyyzz = cbuffer.data(di_geom_1010_off + 1384 * ccomps * dcomps);

            auto g_z_0_z_0_xy_xxyzzz = cbuffer.data(di_geom_1010_off + 1385 * ccomps * dcomps);

            auto g_z_0_z_0_xy_xxzzzz = cbuffer.data(di_geom_1010_off + 1386 * ccomps * dcomps);

            auto g_z_0_z_0_xy_xyyyyy = cbuffer.data(di_geom_1010_off + 1387 * ccomps * dcomps);

            auto g_z_0_z_0_xy_xyyyyz = cbuffer.data(di_geom_1010_off + 1388 * ccomps * dcomps);

            auto g_z_0_z_0_xy_xyyyzz = cbuffer.data(di_geom_1010_off + 1389 * ccomps * dcomps);

            auto g_z_0_z_0_xy_xyyzzz = cbuffer.data(di_geom_1010_off + 1390 * ccomps * dcomps);

            auto g_z_0_z_0_xy_xyzzzz = cbuffer.data(di_geom_1010_off + 1391 * ccomps * dcomps);

            auto g_z_0_z_0_xy_xzzzzz = cbuffer.data(di_geom_1010_off + 1392 * ccomps * dcomps);

            auto g_z_0_z_0_xy_yyyyyy = cbuffer.data(di_geom_1010_off + 1393 * ccomps * dcomps);

            auto g_z_0_z_0_xy_yyyyyz = cbuffer.data(di_geom_1010_off + 1394 * ccomps * dcomps);

            auto g_z_0_z_0_xy_yyyyzz = cbuffer.data(di_geom_1010_off + 1395 * ccomps * dcomps);

            auto g_z_0_z_0_xy_yyyzzz = cbuffer.data(di_geom_1010_off + 1396 * ccomps * dcomps);

            auto g_z_0_z_0_xy_yyzzzz = cbuffer.data(di_geom_1010_off + 1397 * ccomps * dcomps);

            auto g_z_0_z_0_xy_yzzzzz = cbuffer.data(di_geom_1010_off + 1398 * ccomps * dcomps);

            auto g_z_0_z_0_xy_zzzzzz = cbuffer.data(di_geom_1010_off + 1399 * ccomps * dcomps);

            auto g_z_0_z_0_xz_xxxxxx = cbuffer.data(di_geom_1010_off + 1400 * ccomps * dcomps);

            auto g_z_0_z_0_xz_xxxxxy = cbuffer.data(di_geom_1010_off + 1401 * ccomps * dcomps);

            auto g_z_0_z_0_xz_xxxxxz = cbuffer.data(di_geom_1010_off + 1402 * ccomps * dcomps);

            auto g_z_0_z_0_xz_xxxxyy = cbuffer.data(di_geom_1010_off + 1403 * ccomps * dcomps);

            auto g_z_0_z_0_xz_xxxxyz = cbuffer.data(di_geom_1010_off + 1404 * ccomps * dcomps);

            auto g_z_0_z_0_xz_xxxxzz = cbuffer.data(di_geom_1010_off + 1405 * ccomps * dcomps);

            auto g_z_0_z_0_xz_xxxyyy = cbuffer.data(di_geom_1010_off + 1406 * ccomps * dcomps);

            auto g_z_0_z_0_xz_xxxyyz = cbuffer.data(di_geom_1010_off + 1407 * ccomps * dcomps);

            auto g_z_0_z_0_xz_xxxyzz = cbuffer.data(di_geom_1010_off + 1408 * ccomps * dcomps);

            auto g_z_0_z_0_xz_xxxzzz = cbuffer.data(di_geom_1010_off + 1409 * ccomps * dcomps);

            auto g_z_0_z_0_xz_xxyyyy = cbuffer.data(di_geom_1010_off + 1410 * ccomps * dcomps);

            auto g_z_0_z_0_xz_xxyyyz = cbuffer.data(di_geom_1010_off + 1411 * ccomps * dcomps);

            auto g_z_0_z_0_xz_xxyyzz = cbuffer.data(di_geom_1010_off + 1412 * ccomps * dcomps);

            auto g_z_0_z_0_xz_xxyzzz = cbuffer.data(di_geom_1010_off + 1413 * ccomps * dcomps);

            auto g_z_0_z_0_xz_xxzzzz = cbuffer.data(di_geom_1010_off + 1414 * ccomps * dcomps);

            auto g_z_0_z_0_xz_xyyyyy = cbuffer.data(di_geom_1010_off + 1415 * ccomps * dcomps);

            auto g_z_0_z_0_xz_xyyyyz = cbuffer.data(di_geom_1010_off + 1416 * ccomps * dcomps);

            auto g_z_0_z_0_xz_xyyyzz = cbuffer.data(di_geom_1010_off + 1417 * ccomps * dcomps);

            auto g_z_0_z_0_xz_xyyzzz = cbuffer.data(di_geom_1010_off + 1418 * ccomps * dcomps);

            auto g_z_0_z_0_xz_xyzzzz = cbuffer.data(di_geom_1010_off + 1419 * ccomps * dcomps);

            auto g_z_0_z_0_xz_xzzzzz = cbuffer.data(di_geom_1010_off + 1420 * ccomps * dcomps);

            auto g_z_0_z_0_xz_yyyyyy = cbuffer.data(di_geom_1010_off + 1421 * ccomps * dcomps);

            auto g_z_0_z_0_xz_yyyyyz = cbuffer.data(di_geom_1010_off + 1422 * ccomps * dcomps);

            auto g_z_0_z_0_xz_yyyyzz = cbuffer.data(di_geom_1010_off + 1423 * ccomps * dcomps);

            auto g_z_0_z_0_xz_yyyzzz = cbuffer.data(di_geom_1010_off + 1424 * ccomps * dcomps);

            auto g_z_0_z_0_xz_yyzzzz = cbuffer.data(di_geom_1010_off + 1425 * ccomps * dcomps);

            auto g_z_0_z_0_xz_yzzzzz = cbuffer.data(di_geom_1010_off + 1426 * ccomps * dcomps);

            auto g_z_0_z_0_xz_zzzzzz = cbuffer.data(di_geom_1010_off + 1427 * ccomps * dcomps);

            auto g_z_0_z_0_yy_xxxxxx = cbuffer.data(di_geom_1010_off + 1428 * ccomps * dcomps);

            auto g_z_0_z_0_yy_xxxxxy = cbuffer.data(di_geom_1010_off + 1429 * ccomps * dcomps);

            auto g_z_0_z_0_yy_xxxxxz = cbuffer.data(di_geom_1010_off + 1430 * ccomps * dcomps);

            auto g_z_0_z_0_yy_xxxxyy = cbuffer.data(di_geom_1010_off + 1431 * ccomps * dcomps);

            auto g_z_0_z_0_yy_xxxxyz = cbuffer.data(di_geom_1010_off + 1432 * ccomps * dcomps);

            auto g_z_0_z_0_yy_xxxxzz = cbuffer.data(di_geom_1010_off + 1433 * ccomps * dcomps);

            auto g_z_0_z_0_yy_xxxyyy = cbuffer.data(di_geom_1010_off + 1434 * ccomps * dcomps);

            auto g_z_0_z_0_yy_xxxyyz = cbuffer.data(di_geom_1010_off + 1435 * ccomps * dcomps);

            auto g_z_0_z_0_yy_xxxyzz = cbuffer.data(di_geom_1010_off + 1436 * ccomps * dcomps);

            auto g_z_0_z_0_yy_xxxzzz = cbuffer.data(di_geom_1010_off + 1437 * ccomps * dcomps);

            auto g_z_0_z_0_yy_xxyyyy = cbuffer.data(di_geom_1010_off + 1438 * ccomps * dcomps);

            auto g_z_0_z_0_yy_xxyyyz = cbuffer.data(di_geom_1010_off + 1439 * ccomps * dcomps);

            auto g_z_0_z_0_yy_xxyyzz = cbuffer.data(di_geom_1010_off + 1440 * ccomps * dcomps);

            auto g_z_0_z_0_yy_xxyzzz = cbuffer.data(di_geom_1010_off + 1441 * ccomps * dcomps);

            auto g_z_0_z_0_yy_xxzzzz = cbuffer.data(di_geom_1010_off + 1442 * ccomps * dcomps);

            auto g_z_0_z_0_yy_xyyyyy = cbuffer.data(di_geom_1010_off + 1443 * ccomps * dcomps);

            auto g_z_0_z_0_yy_xyyyyz = cbuffer.data(di_geom_1010_off + 1444 * ccomps * dcomps);

            auto g_z_0_z_0_yy_xyyyzz = cbuffer.data(di_geom_1010_off + 1445 * ccomps * dcomps);

            auto g_z_0_z_0_yy_xyyzzz = cbuffer.data(di_geom_1010_off + 1446 * ccomps * dcomps);

            auto g_z_0_z_0_yy_xyzzzz = cbuffer.data(di_geom_1010_off + 1447 * ccomps * dcomps);

            auto g_z_0_z_0_yy_xzzzzz = cbuffer.data(di_geom_1010_off + 1448 * ccomps * dcomps);

            auto g_z_0_z_0_yy_yyyyyy = cbuffer.data(di_geom_1010_off + 1449 * ccomps * dcomps);

            auto g_z_0_z_0_yy_yyyyyz = cbuffer.data(di_geom_1010_off + 1450 * ccomps * dcomps);

            auto g_z_0_z_0_yy_yyyyzz = cbuffer.data(di_geom_1010_off + 1451 * ccomps * dcomps);

            auto g_z_0_z_0_yy_yyyzzz = cbuffer.data(di_geom_1010_off + 1452 * ccomps * dcomps);

            auto g_z_0_z_0_yy_yyzzzz = cbuffer.data(di_geom_1010_off + 1453 * ccomps * dcomps);

            auto g_z_0_z_0_yy_yzzzzz = cbuffer.data(di_geom_1010_off + 1454 * ccomps * dcomps);

            auto g_z_0_z_0_yy_zzzzzz = cbuffer.data(di_geom_1010_off + 1455 * ccomps * dcomps);

            auto g_z_0_z_0_yz_xxxxxx = cbuffer.data(di_geom_1010_off + 1456 * ccomps * dcomps);

            auto g_z_0_z_0_yz_xxxxxy = cbuffer.data(di_geom_1010_off + 1457 * ccomps * dcomps);

            auto g_z_0_z_0_yz_xxxxxz = cbuffer.data(di_geom_1010_off + 1458 * ccomps * dcomps);

            auto g_z_0_z_0_yz_xxxxyy = cbuffer.data(di_geom_1010_off + 1459 * ccomps * dcomps);

            auto g_z_0_z_0_yz_xxxxyz = cbuffer.data(di_geom_1010_off + 1460 * ccomps * dcomps);

            auto g_z_0_z_0_yz_xxxxzz = cbuffer.data(di_geom_1010_off + 1461 * ccomps * dcomps);

            auto g_z_0_z_0_yz_xxxyyy = cbuffer.data(di_geom_1010_off + 1462 * ccomps * dcomps);

            auto g_z_0_z_0_yz_xxxyyz = cbuffer.data(di_geom_1010_off + 1463 * ccomps * dcomps);

            auto g_z_0_z_0_yz_xxxyzz = cbuffer.data(di_geom_1010_off + 1464 * ccomps * dcomps);

            auto g_z_0_z_0_yz_xxxzzz = cbuffer.data(di_geom_1010_off + 1465 * ccomps * dcomps);

            auto g_z_0_z_0_yz_xxyyyy = cbuffer.data(di_geom_1010_off + 1466 * ccomps * dcomps);

            auto g_z_0_z_0_yz_xxyyyz = cbuffer.data(di_geom_1010_off + 1467 * ccomps * dcomps);

            auto g_z_0_z_0_yz_xxyyzz = cbuffer.data(di_geom_1010_off + 1468 * ccomps * dcomps);

            auto g_z_0_z_0_yz_xxyzzz = cbuffer.data(di_geom_1010_off + 1469 * ccomps * dcomps);

            auto g_z_0_z_0_yz_xxzzzz = cbuffer.data(di_geom_1010_off + 1470 * ccomps * dcomps);

            auto g_z_0_z_0_yz_xyyyyy = cbuffer.data(di_geom_1010_off + 1471 * ccomps * dcomps);

            auto g_z_0_z_0_yz_xyyyyz = cbuffer.data(di_geom_1010_off + 1472 * ccomps * dcomps);

            auto g_z_0_z_0_yz_xyyyzz = cbuffer.data(di_geom_1010_off + 1473 * ccomps * dcomps);

            auto g_z_0_z_0_yz_xyyzzz = cbuffer.data(di_geom_1010_off + 1474 * ccomps * dcomps);

            auto g_z_0_z_0_yz_xyzzzz = cbuffer.data(di_geom_1010_off + 1475 * ccomps * dcomps);

            auto g_z_0_z_0_yz_xzzzzz = cbuffer.data(di_geom_1010_off + 1476 * ccomps * dcomps);

            auto g_z_0_z_0_yz_yyyyyy = cbuffer.data(di_geom_1010_off + 1477 * ccomps * dcomps);

            auto g_z_0_z_0_yz_yyyyyz = cbuffer.data(di_geom_1010_off + 1478 * ccomps * dcomps);

            auto g_z_0_z_0_yz_yyyyzz = cbuffer.data(di_geom_1010_off + 1479 * ccomps * dcomps);

            auto g_z_0_z_0_yz_yyyzzz = cbuffer.data(di_geom_1010_off + 1480 * ccomps * dcomps);

            auto g_z_0_z_0_yz_yyzzzz = cbuffer.data(di_geom_1010_off + 1481 * ccomps * dcomps);

            auto g_z_0_z_0_yz_yzzzzz = cbuffer.data(di_geom_1010_off + 1482 * ccomps * dcomps);

            auto g_z_0_z_0_yz_zzzzzz = cbuffer.data(di_geom_1010_off + 1483 * ccomps * dcomps);

            auto g_z_0_z_0_zz_xxxxxx = cbuffer.data(di_geom_1010_off + 1484 * ccomps * dcomps);

            auto g_z_0_z_0_zz_xxxxxy = cbuffer.data(di_geom_1010_off + 1485 * ccomps * dcomps);

            auto g_z_0_z_0_zz_xxxxxz = cbuffer.data(di_geom_1010_off + 1486 * ccomps * dcomps);

            auto g_z_0_z_0_zz_xxxxyy = cbuffer.data(di_geom_1010_off + 1487 * ccomps * dcomps);

            auto g_z_0_z_0_zz_xxxxyz = cbuffer.data(di_geom_1010_off + 1488 * ccomps * dcomps);

            auto g_z_0_z_0_zz_xxxxzz = cbuffer.data(di_geom_1010_off + 1489 * ccomps * dcomps);

            auto g_z_0_z_0_zz_xxxyyy = cbuffer.data(di_geom_1010_off + 1490 * ccomps * dcomps);

            auto g_z_0_z_0_zz_xxxyyz = cbuffer.data(di_geom_1010_off + 1491 * ccomps * dcomps);

            auto g_z_0_z_0_zz_xxxyzz = cbuffer.data(di_geom_1010_off + 1492 * ccomps * dcomps);

            auto g_z_0_z_0_zz_xxxzzz = cbuffer.data(di_geom_1010_off + 1493 * ccomps * dcomps);

            auto g_z_0_z_0_zz_xxyyyy = cbuffer.data(di_geom_1010_off + 1494 * ccomps * dcomps);

            auto g_z_0_z_0_zz_xxyyyz = cbuffer.data(di_geom_1010_off + 1495 * ccomps * dcomps);

            auto g_z_0_z_0_zz_xxyyzz = cbuffer.data(di_geom_1010_off + 1496 * ccomps * dcomps);

            auto g_z_0_z_0_zz_xxyzzz = cbuffer.data(di_geom_1010_off + 1497 * ccomps * dcomps);

            auto g_z_0_z_0_zz_xxzzzz = cbuffer.data(di_geom_1010_off + 1498 * ccomps * dcomps);

            auto g_z_0_z_0_zz_xyyyyy = cbuffer.data(di_geom_1010_off + 1499 * ccomps * dcomps);

            auto g_z_0_z_0_zz_xyyyyz = cbuffer.data(di_geom_1010_off + 1500 * ccomps * dcomps);

            auto g_z_0_z_0_zz_xyyyzz = cbuffer.data(di_geom_1010_off + 1501 * ccomps * dcomps);

            auto g_z_0_z_0_zz_xyyzzz = cbuffer.data(di_geom_1010_off + 1502 * ccomps * dcomps);

            auto g_z_0_z_0_zz_xyzzzz = cbuffer.data(di_geom_1010_off + 1503 * ccomps * dcomps);

            auto g_z_0_z_0_zz_xzzzzz = cbuffer.data(di_geom_1010_off + 1504 * ccomps * dcomps);

            auto g_z_0_z_0_zz_yyyyyy = cbuffer.data(di_geom_1010_off + 1505 * ccomps * dcomps);

            auto g_z_0_z_0_zz_yyyyyz = cbuffer.data(di_geom_1010_off + 1506 * ccomps * dcomps);

            auto g_z_0_z_0_zz_yyyyzz = cbuffer.data(di_geom_1010_off + 1507 * ccomps * dcomps);

            auto g_z_0_z_0_zz_yyyzzz = cbuffer.data(di_geom_1010_off + 1508 * ccomps * dcomps);

            auto g_z_0_z_0_zz_yyzzzz = cbuffer.data(di_geom_1010_off + 1509 * ccomps * dcomps);

            auto g_z_0_z_0_zz_yzzzzz = cbuffer.data(di_geom_1010_off + 1510 * ccomps * dcomps);

            auto g_z_0_z_0_zz_zzzzzz = cbuffer.data(di_geom_1010_off + 1511 * ccomps * dcomps);

            /// Set up components of auxilary buffer : DKSS

            const auto dk_geom_1010_off = idx_geom_1010_dkxx + i * dcomps + j;

            auto g_x_0_x_0_xx_xxxxxxx = cbuffer.data(dk_geom_1010_off + 0 * ccomps * dcomps);

            auto g_x_0_x_0_xx_xxxxxxy = cbuffer.data(dk_geom_1010_off + 1 * ccomps * dcomps);

            auto g_x_0_x_0_xx_xxxxxxz = cbuffer.data(dk_geom_1010_off + 2 * ccomps * dcomps);

            auto g_x_0_x_0_xx_xxxxxyy = cbuffer.data(dk_geom_1010_off + 3 * ccomps * dcomps);

            auto g_x_0_x_0_xx_xxxxxyz = cbuffer.data(dk_geom_1010_off + 4 * ccomps * dcomps);

            auto g_x_0_x_0_xx_xxxxxzz = cbuffer.data(dk_geom_1010_off + 5 * ccomps * dcomps);

            auto g_x_0_x_0_xx_xxxxyyy = cbuffer.data(dk_geom_1010_off + 6 * ccomps * dcomps);

            auto g_x_0_x_0_xx_xxxxyyz = cbuffer.data(dk_geom_1010_off + 7 * ccomps * dcomps);

            auto g_x_0_x_0_xx_xxxxyzz = cbuffer.data(dk_geom_1010_off + 8 * ccomps * dcomps);

            auto g_x_0_x_0_xx_xxxxzzz = cbuffer.data(dk_geom_1010_off + 9 * ccomps * dcomps);

            auto g_x_0_x_0_xx_xxxyyyy = cbuffer.data(dk_geom_1010_off + 10 * ccomps * dcomps);

            auto g_x_0_x_0_xx_xxxyyyz = cbuffer.data(dk_geom_1010_off + 11 * ccomps * dcomps);

            auto g_x_0_x_0_xx_xxxyyzz = cbuffer.data(dk_geom_1010_off + 12 * ccomps * dcomps);

            auto g_x_0_x_0_xx_xxxyzzz = cbuffer.data(dk_geom_1010_off + 13 * ccomps * dcomps);

            auto g_x_0_x_0_xx_xxxzzzz = cbuffer.data(dk_geom_1010_off + 14 * ccomps * dcomps);

            auto g_x_0_x_0_xx_xxyyyyy = cbuffer.data(dk_geom_1010_off + 15 * ccomps * dcomps);

            auto g_x_0_x_0_xx_xxyyyyz = cbuffer.data(dk_geom_1010_off + 16 * ccomps * dcomps);

            auto g_x_0_x_0_xx_xxyyyzz = cbuffer.data(dk_geom_1010_off + 17 * ccomps * dcomps);

            auto g_x_0_x_0_xx_xxyyzzz = cbuffer.data(dk_geom_1010_off + 18 * ccomps * dcomps);

            auto g_x_0_x_0_xx_xxyzzzz = cbuffer.data(dk_geom_1010_off + 19 * ccomps * dcomps);

            auto g_x_0_x_0_xx_xxzzzzz = cbuffer.data(dk_geom_1010_off + 20 * ccomps * dcomps);

            auto g_x_0_x_0_xx_xyyyyyy = cbuffer.data(dk_geom_1010_off + 21 * ccomps * dcomps);

            auto g_x_0_x_0_xx_xyyyyyz = cbuffer.data(dk_geom_1010_off + 22 * ccomps * dcomps);

            auto g_x_0_x_0_xx_xyyyyzz = cbuffer.data(dk_geom_1010_off + 23 * ccomps * dcomps);

            auto g_x_0_x_0_xx_xyyyzzz = cbuffer.data(dk_geom_1010_off + 24 * ccomps * dcomps);

            auto g_x_0_x_0_xx_xyyzzzz = cbuffer.data(dk_geom_1010_off + 25 * ccomps * dcomps);

            auto g_x_0_x_0_xx_xyzzzzz = cbuffer.data(dk_geom_1010_off + 26 * ccomps * dcomps);

            auto g_x_0_x_0_xx_xzzzzzz = cbuffer.data(dk_geom_1010_off + 27 * ccomps * dcomps);

            auto g_x_0_x_0_xx_yyyyyyy = cbuffer.data(dk_geom_1010_off + 28 * ccomps * dcomps);

            auto g_x_0_x_0_xx_yyyyyyz = cbuffer.data(dk_geom_1010_off + 29 * ccomps * dcomps);

            auto g_x_0_x_0_xx_yyyyyzz = cbuffer.data(dk_geom_1010_off + 30 * ccomps * dcomps);

            auto g_x_0_x_0_xx_yyyyzzz = cbuffer.data(dk_geom_1010_off + 31 * ccomps * dcomps);

            auto g_x_0_x_0_xx_yyyzzzz = cbuffer.data(dk_geom_1010_off + 32 * ccomps * dcomps);

            auto g_x_0_x_0_xx_yyzzzzz = cbuffer.data(dk_geom_1010_off + 33 * ccomps * dcomps);

            auto g_x_0_x_0_xx_yzzzzzz = cbuffer.data(dk_geom_1010_off + 34 * ccomps * dcomps);

            auto g_x_0_x_0_xx_zzzzzzz = cbuffer.data(dk_geom_1010_off + 35 * ccomps * dcomps);

            auto g_x_0_x_0_xy_xxxxxxx = cbuffer.data(dk_geom_1010_off + 36 * ccomps * dcomps);

            auto g_x_0_x_0_xy_xxxxxxy = cbuffer.data(dk_geom_1010_off + 37 * ccomps * dcomps);

            auto g_x_0_x_0_xy_xxxxxxz = cbuffer.data(dk_geom_1010_off + 38 * ccomps * dcomps);

            auto g_x_0_x_0_xy_xxxxxyy = cbuffer.data(dk_geom_1010_off + 39 * ccomps * dcomps);

            auto g_x_0_x_0_xy_xxxxxyz = cbuffer.data(dk_geom_1010_off + 40 * ccomps * dcomps);

            auto g_x_0_x_0_xy_xxxxxzz = cbuffer.data(dk_geom_1010_off + 41 * ccomps * dcomps);

            auto g_x_0_x_0_xy_xxxxyyy = cbuffer.data(dk_geom_1010_off + 42 * ccomps * dcomps);

            auto g_x_0_x_0_xy_xxxxyyz = cbuffer.data(dk_geom_1010_off + 43 * ccomps * dcomps);

            auto g_x_0_x_0_xy_xxxxyzz = cbuffer.data(dk_geom_1010_off + 44 * ccomps * dcomps);

            auto g_x_0_x_0_xy_xxxxzzz = cbuffer.data(dk_geom_1010_off + 45 * ccomps * dcomps);

            auto g_x_0_x_0_xy_xxxyyyy = cbuffer.data(dk_geom_1010_off + 46 * ccomps * dcomps);

            auto g_x_0_x_0_xy_xxxyyyz = cbuffer.data(dk_geom_1010_off + 47 * ccomps * dcomps);

            auto g_x_0_x_0_xy_xxxyyzz = cbuffer.data(dk_geom_1010_off + 48 * ccomps * dcomps);

            auto g_x_0_x_0_xy_xxxyzzz = cbuffer.data(dk_geom_1010_off + 49 * ccomps * dcomps);

            auto g_x_0_x_0_xy_xxxzzzz = cbuffer.data(dk_geom_1010_off + 50 * ccomps * dcomps);

            auto g_x_0_x_0_xy_xxyyyyy = cbuffer.data(dk_geom_1010_off + 51 * ccomps * dcomps);

            auto g_x_0_x_0_xy_xxyyyyz = cbuffer.data(dk_geom_1010_off + 52 * ccomps * dcomps);

            auto g_x_0_x_0_xy_xxyyyzz = cbuffer.data(dk_geom_1010_off + 53 * ccomps * dcomps);

            auto g_x_0_x_0_xy_xxyyzzz = cbuffer.data(dk_geom_1010_off + 54 * ccomps * dcomps);

            auto g_x_0_x_0_xy_xxyzzzz = cbuffer.data(dk_geom_1010_off + 55 * ccomps * dcomps);

            auto g_x_0_x_0_xy_xxzzzzz = cbuffer.data(dk_geom_1010_off + 56 * ccomps * dcomps);

            auto g_x_0_x_0_xy_xyyyyyy = cbuffer.data(dk_geom_1010_off + 57 * ccomps * dcomps);

            auto g_x_0_x_0_xy_xyyyyyz = cbuffer.data(dk_geom_1010_off + 58 * ccomps * dcomps);

            auto g_x_0_x_0_xy_xyyyyzz = cbuffer.data(dk_geom_1010_off + 59 * ccomps * dcomps);

            auto g_x_0_x_0_xy_xyyyzzz = cbuffer.data(dk_geom_1010_off + 60 * ccomps * dcomps);

            auto g_x_0_x_0_xy_xyyzzzz = cbuffer.data(dk_geom_1010_off + 61 * ccomps * dcomps);

            auto g_x_0_x_0_xy_xyzzzzz = cbuffer.data(dk_geom_1010_off + 62 * ccomps * dcomps);

            auto g_x_0_x_0_xy_xzzzzzz = cbuffer.data(dk_geom_1010_off + 63 * ccomps * dcomps);

            auto g_x_0_x_0_xy_yyyyyyy = cbuffer.data(dk_geom_1010_off + 64 * ccomps * dcomps);

            auto g_x_0_x_0_xy_yyyyyyz = cbuffer.data(dk_geom_1010_off + 65 * ccomps * dcomps);

            auto g_x_0_x_0_xy_yyyyyzz = cbuffer.data(dk_geom_1010_off + 66 * ccomps * dcomps);

            auto g_x_0_x_0_xy_yyyyzzz = cbuffer.data(dk_geom_1010_off + 67 * ccomps * dcomps);

            auto g_x_0_x_0_xy_yyyzzzz = cbuffer.data(dk_geom_1010_off + 68 * ccomps * dcomps);

            auto g_x_0_x_0_xy_yyzzzzz = cbuffer.data(dk_geom_1010_off + 69 * ccomps * dcomps);

            auto g_x_0_x_0_xy_yzzzzzz = cbuffer.data(dk_geom_1010_off + 70 * ccomps * dcomps);

            auto g_x_0_x_0_xy_zzzzzzz = cbuffer.data(dk_geom_1010_off + 71 * ccomps * dcomps);

            auto g_x_0_x_0_xz_xxxxxxx = cbuffer.data(dk_geom_1010_off + 72 * ccomps * dcomps);

            auto g_x_0_x_0_xz_xxxxxxy = cbuffer.data(dk_geom_1010_off + 73 * ccomps * dcomps);

            auto g_x_0_x_0_xz_xxxxxxz = cbuffer.data(dk_geom_1010_off + 74 * ccomps * dcomps);

            auto g_x_0_x_0_xz_xxxxxyy = cbuffer.data(dk_geom_1010_off + 75 * ccomps * dcomps);

            auto g_x_0_x_0_xz_xxxxxyz = cbuffer.data(dk_geom_1010_off + 76 * ccomps * dcomps);

            auto g_x_0_x_0_xz_xxxxxzz = cbuffer.data(dk_geom_1010_off + 77 * ccomps * dcomps);

            auto g_x_0_x_0_xz_xxxxyyy = cbuffer.data(dk_geom_1010_off + 78 * ccomps * dcomps);

            auto g_x_0_x_0_xz_xxxxyyz = cbuffer.data(dk_geom_1010_off + 79 * ccomps * dcomps);

            auto g_x_0_x_0_xz_xxxxyzz = cbuffer.data(dk_geom_1010_off + 80 * ccomps * dcomps);

            auto g_x_0_x_0_xz_xxxxzzz = cbuffer.data(dk_geom_1010_off + 81 * ccomps * dcomps);

            auto g_x_0_x_0_xz_xxxyyyy = cbuffer.data(dk_geom_1010_off + 82 * ccomps * dcomps);

            auto g_x_0_x_0_xz_xxxyyyz = cbuffer.data(dk_geom_1010_off + 83 * ccomps * dcomps);

            auto g_x_0_x_0_xz_xxxyyzz = cbuffer.data(dk_geom_1010_off + 84 * ccomps * dcomps);

            auto g_x_0_x_0_xz_xxxyzzz = cbuffer.data(dk_geom_1010_off + 85 * ccomps * dcomps);

            auto g_x_0_x_0_xz_xxxzzzz = cbuffer.data(dk_geom_1010_off + 86 * ccomps * dcomps);

            auto g_x_0_x_0_xz_xxyyyyy = cbuffer.data(dk_geom_1010_off + 87 * ccomps * dcomps);

            auto g_x_0_x_0_xz_xxyyyyz = cbuffer.data(dk_geom_1010_off + 88 * ccomps * dcomps);

            auto g_x_0_x_0_xz_xxyyyzz = cbuffer.data(dk_geom_1010_off + 89 * ccomps * dcomps);

            auto g_x_0_x_0_xz_xxyyzzz = cbuffer.data(dk_geom_1010_off + 90 * ccomps * dcomps);

            auto g_x_0_x_0_xz_xxyzzzz = cbuffer.data(dk_geom_1010_off + 91 * ccomps * dcomps);

            auto g_x_0_x_0_xz_xxzzzzz = cbuffer.data(dk_geom_1010_off + 92 * ccomps * dcomps);

            auto g_x_0_x_0_xz_xyyyyyy = cbuffer.data(dk_geom_1010_off + 93 * ccomps * dcomps);

            auto g_x_0_x_0_xz_xyyyyyz = cbuffer.data(dk_geom_1010_off + 94 * ccomps * dcomps);

            auto g_x_0_x_0_xz_xyyyyzz = cbuffer.data(dk_geom_1010_off + 95 * ccomps * dcomps);

            auto g_x_0_x_0_xz_xyyyzzz = cbuffer.data(dk_geom_1010_off + 96 * ccomps * dcomps);

            auto g_x_0_x_0_xz_xyyzzzz = cbuffer.data(dk_geom_1010_off + 97 * ccomps * dcomps);

            auto g_x_0_x_0_xz_xyzzzzz = cbuffer.data(dk_geom_1010_off + 98 * ccomps * dcomps);

            auto g_x_0_x_0_xz_xzzzzzz = cbuffer.data(dk_geom_1010_off + 99 * ccomps * dcomps);

            auto g_x_0_x_0_xz_yyyyyyy = cbuffer.data(dk_geom_1010_off + 100 * ccomps * dcomps);

            auto g_x_0_x_0_xz_yyyyyyz = cbuffer.data(dk_geom_1010_off + 101 * ccomps * dcomps);

            auto g_x_0_x_0_xz_yyyyyzz = cbuffer.data(dk_geom_1010_off + 102 * ccomps * dcomps);

            auto g_x_0_x_0_xz_yyyyzzz = cbuffer.data(dk_geom_1010_off + 103 * ccomps * dcomps);

            auto g_x_0_x_0_xz_yyyzzzz = cbuffer.data(dk_geom_1010_off + 104 * ccomps * dcomps);

            auto g_x_0_x_0_xz_yyzzzzz = cbuffer.data(dk_geom_1010_off + 105 * ccomps * dcomps);

            auto g_x_0_x_0_xz_yzzzzzz = cbuffer.data(dk_geom_1010_off + 106 * ccomps * dcomps);

            auto g_x_0_x_0_xz_zzzzzzz = cbuffer.data(dk_geom_1010_off + 107 * ccomps * dcomps);

            auto g_x_0_x_0_yy_xxxxxxx = cbuffer.data(dk_geom_1010_off + 108 * ccomps * dcomps);

            auto g_x_0_x_0_yy_xxxxxxy = cbuffer.data(dk_geom_1010_off + 109 * ccomps * dcomps);

            auto g_x_0_x_0_yy_xxxxxxz = cbuffer.data(dk_geom_1010_off + 110 * ccomps * dcomps);

            auto g_x_0_x_0_yy_xxxxxyy = cbuffer.data(dk_geom_1010_off + 111 * ccomps * dcomps);

            auto g_x_0_x_0_yy_xxxxxyz = cbuffer.data(dk_geom_1010_off + 112 * ccomps * dcomps);

            auto g_x_0_x_0_yy_xxxxxzz = cbuffer.data(dk_geom_1010_off + 113 * ccomps * dcomps);

            auto g_x_0_x_0_yy_xxxxyyy = cbuffer.data(dk_geom_1010_off + 114 * ccomps * dcomps);

            auto g_x_0_x_0_yy_xxxxyyz = cbuffer.data(dk_geom_1010_off + 115 * ccomps * dcomps);

            auto g_x_0_x_0_yy_xxxxyzz = cbuffer.data(dk_geom_1010_off + 116 * ccomps * dcomps);

            auto g_x_0_x_0_yy_xxxxzzz = cbuffer.data(dk_geom_1010_off + 117 * ccomps * dcomps);

            auto g_x_0_x_0_yy_xxxyyyy = cbuffer.data(dk_geom_1010_off + 118 * ccomps * dcomps);

            auto g_x_0_x_0_yy_xxxyyyz = cbuffer.data(dk_geom_1010_off + 119 * ccomps * dcomps);

            auto g_x_0_x_0_yy_xxxyyzz = cbuffer.data(dk_geom_1010_off + 120 * ccomps * dcomps);

            auto g_x_0_x_0_yy_xxxyzzz = cbuffer.data(dk_geom_1010_off + 121 * ccomps * dcomps);

            auto g_x_0_x_0_yy_xxxzzzz = cbuffer.data(dk_geom_1010_off + 122 * ccomps * dcomps);

            auto g_x_0_x_0_yy_xxyyyyy = cbuffer.data(dk_geom_1010_off + 123 * ccomps * dcomps);

            auto g_x_0_x_0_yy_xxyyyyz = cbuffer.data(dk_geom_1010_off + 124 * ccomps * dcomps);

            auto g_x_0_x_0_yy_xxyyyzz = cbuffer.data(dk_geom_1010_off + 125 * ccomps * dcomps);

            auto g_x_0_x_0_yy_xxyyzzz = cbuffer.data(dk_geom_1010_off + 126 * ccomps * dcomps);

            auto g_x_0_x_0_yy_xxyzzzz = cbuffer.data(dk_geom_1010_off + 127 * ccomps * dcomps);

            auto g_x_0_x_0_yy_xxzzzzz = cbuffer.data(dk_geom_1010_off + 128 * ccomps * dcomps);

            auto g_x_0_x_0_yy_xyyyyyy = cbuffer.data(dk_geom_1010_off + 129 * ccomps * dcomps);

            auto g_x_0_x_0_yy_xyyyyyz = cbuffer.data(dk_geom_1010_off + 130 * ccomps * dcomps);

            auto g_x_0_x_0_yy_xyyyyzz = cbuffer.data(dk_geom_1010_off + 131 * ccomps * dcomps);

            auto g_x_0_x_0_yy_xyyyzzz = cbuffer.data(dk_geom_1010_off + 132 * ccomps * dcomps);

            auto g_x_0_x_0_yy_xyyzzzz = cbuffer.data(dk_geom_1010_off + 133 * ccomps * dcomps);

            auto g_x_0_x_0_yy_xyzzzzz = cbuffer.data(dk_geom_1010_off + 134 * ccomps * dcomps);

            auto g_x_0_x_0_yy_xzzzzzz = cbuffer.data(dk_geom_1010_off + 135 * ccomps * dcomps);

            auto g_x_0_x_0_yy_yyyyyyy = cbuffer.data(dk_geom_1010_off + 136 * ccomps * dcomps);

            auto g_x_0_x_0_yy_yyyyyyz = cbuffer.data(dk_geom_1010_off + 137 * ccomps * dcomps);

            auto g_x_0_x_0_yy_yyyyyzz = cbuffer.data(dk_geom_1010_off + 138 * ccomps * dcomps);

            auto g_x_0_x_0_yy_yyyyzzz = cbuffer.data(dk_geom_1010_off + 139 * ccomps * dcomps);

            auto g_x_0_x_0_yy_yyyzzzz = cbuffer.data(dk_geom_1010_off + 140 * ccomps * dcomps);

            auto g_x_0_x_0_yy_yyzzzzz = cbuffer.data(dk_geom_1010_off + 141 * ccomps * dcomps);

            auto g_x_0_x_0_yy_yzzzzzz = cbuffer.data(dk_geom_1010_off + 142 * ccomps * dcomps);

            auto g_x_0_x_0_yy_zzzzzzz = cbuffer.data(dk_geom_1010_off + 143 * ccomps * dcomps);

            auto g_x_0_x_0_yz_xxxxxxx = cbuffer.data(dk_geom_1010_off + 144 * ccomps * dcomps);

            auto g_x_0_x_0_yz_xxxxxxy = cbuffer.data(dk_geom_1010_off + 145 * ccomps * dcomps);

            auto g_x_0_x_0_yz_xxxxxxz = cbuffer.data(dk_geom_1010_off + 146 * ccomps * dcomps);

            auto g_x_0_x_0_yz_xxxxxyy = cbuffer.data(dk_geom_1010_off + 147 * ccomps * dcomps);

            auto g_x_0_x_0_yz_xxxxxyz = cbuffer.data(dk_geom_1010_off + 148 * ccomps * dcomps);

            auto g_x_0_x_0_yz_xxxxxzz = cbuffer.data(dk_geom_1010_off + 149 * ccomps * dcomps);

            auto g_x_0_x_0_yz_xxxxyyy = cbuffer.data(dk_geom_1010_off + 150 * ccomps * dcomps);

            auto g_x_0_x_0_yz_xxxxyyz = cbuffer.data(dk_geom_1010_off + 151 * ccomps * dcomps);

            auto g_x_0_x_0_yz_xxxxyzz = cbuffer.data(dk_geom_1010_off + 152 * ccomps * dcomps);

            auto g_x_0_x_0_yz_xxxxzzz = cbuffer.data(dk_geom_1010_off + 153 * ccomps * dcomps);

            auto g_x_0_x_0_yz_xxxyyyy = cbuffer.data(dk_geom_1010_off + 154 * ccomps * dcomps);

            auto g_x_0_x_0_yz_xxxyyyz = cbuffer.data(dk_geom_1010_off + 155 * ccomps * dcomps);

            auto g_x_0_x_0_yz_xxxyyzz = cbuffer.data(dk_geom_1010_off + 156 * ccomps * dcomps);

            auto g_x_0_x_0_yz_xxxyzzz = cbuffer.data(dk_geom_1010_off + 157 * ccomps * dcomps);

            auto g_x_0_x_0_yz_xxxzzzz = cbuffer.data(dk_geom_1010_off + 158 * ccomps * dcomps);

            auto g_x_0_x_0_yz_xxyyyyy = cbuffer.data(dk_geom_1010_off + 159 * ccomps * dcomps);

            auto g_x_0_x_0_yz_xxyyyyz = cbuffer.data(dk_geom_1010_off + 160 * ccomps * dcomps);

            auto g_x_0_x_0_yz_xxyyyzz = cbuffer.data(dk_geom_1010_off + 161 * ccomps * dcomps);

            auto g_x_0_x_0_yz_xxyyzzz = cbuffer.data(dk_geom_1010_off + 162 * ccomps * dcomps);

            auto g_x_0_x_0_yz_xxyzzzz = cbuffer.data(dk_geom_1010_off + 163 * ccomps * dcomps);

            auto g_x_0_x_0_yz_xxzzzzz = cbuffer.data(dk_geom_1010_off + 164 * ccomps * dcomps);

            auto g_x_0_x_0_yz_xyyyyyy = cbuffer.data(dk_geom_1010_off + 165 * ccomps * dcomps);

            auto g_x_0_x_0_yz_xyyyyyz = cbuffer.data(dk_geom_1010_off + 166 * ccomps * dcomps);

            auto g_x_0_x_0_yz_xyyyyzz = cbuffer.data(dk_geom_1010_off + 167 * ccomps * dcomps);

            auto g_x_0_x_0_yz_xyyyzzz = cbuffer.data(dk_geom_1010_off + 168 * ccomps * dcomps);

            auto g_x_0_x_0_yz_xyyzzzz = cbuffer.data(dk_geom_1010_off + 169 * ccomps * dcomps);

            auto g_x_0_x_0_yz_xyzzzzz = cbuffer.data(dk_geom_1010_off + 170 * ccomps * dcomps);

            auto g_x_0_x_0_yz_xzzzzzz = cbuffer.data(dk_geom_1010_off + 171 * ccomps * dcomps);

            auto g_x_0_x_0_yz_yyyyyyy = cbuffer.data(dk_geom_1010_off + 172 * ccomps * dcomps);

            auto g_x_0_x_0_yz_yyyyyyz = cbuffer.data(dk_geom_1010_off + 173 * ccomps * dcomps);

            auto g_x_0_x_0_yz_yyyyyzz = cbuffer.data(dk_geom_1010_off + 174 * ccomps * dcomps);

            auto g_x_0_x_0_yz_yyyyzzz = cbuffer.data(dk_geom_1010_off + 175 * ccomps * dcomps);

            auto g_x_0_x_0_yz_yyyzzzz = cbuffer.data(dk_geom_1010_off + 176 * ccomps * dcomps);

            auto g_x_0_x_0_yz_yyzzzzz = cbuffer.data(dk_geom_1010_off + 177 * ccomps * dcomps);

            auto g_x_0_x_0_yz_yzzzzzz = cbuffer.data(dk_geom_1010_off + 178 * ccomps * dcomps);

            auto g_x_0_x_0_yz_zzzzzzz = cbuffer.data(dk_geom_1010_off + 179 * ccomps * dcomps);

            auto g_x_0_x_0_zz_xxxxxxx = cbuffer.data(dk_geom_1010_off + 180 * ccomps * dcomps);

            auto g_x_0_x_0_zz_xxxxxxy = cbuffer.data(dk_geom_1010_off + 181 * ccomps * dcomps);

            auto g_x_0_x_0_zz_xxxxxxz = cbuffer.data(dk_geom_1010_off + 182 * ccomps * dcomps);

            auto g_x_0_x_0_zz_xxxxxyy = cbuffer.data(dk_geom_1010_off + 183 * ccomps * dcomps);

            auto g_x_0_x_0_zz_xxxxxyz = cbuffer.data(dk_geom_1010_off + 184 * ccomps * dcomps);

            auto g_x_0_x_0_zz_xxxxxzz = cbuffer.data(dk_geom_1010_off + 185 * ccomps * dcomps);

            auto g_x_0_x_0_zz_xxxxyyy = cbuffer.data(dk_geom_1010_off + 186 * ccomps * dcomps);

            auto g_x_0_x_0_zz_xxxxyyz = cbuffer.data(dk_geom_1010_off + 187 * ccomps * dcomps);

            auto g_x_0_x_0_zz_xxxxyzz = cbuffer.data(dk_geom_1010_off + 188 * ccomps * dcomps);

            auto g_x_0_x_0_zz_xxxxzzz = cbuffer.data(dk_geom_1010_off + 189 * ccomps * dcomps);

            auto g_x_0_x_0_zz_xxxyyyy = cbuffer.data(dk_geom_1010_off + 190 * ccomps * dcomps);

            auto g_x_0_x_0_zz_xxxyyyz = cbuffer.data(dk_geom_1010_off + 191 * ccomps * dcomps);

            auto g_x_0_x_0_zz_xxxyyzz = cbuffer.data(dk_geom_1010_off + 192 * ccomps * dcomps);

            auto g_x_0_x_0_zz_xxxyzzz = cbuffer.data(dk_geom_1010_off + 193 * ccomps * dcomps);

            auto g_x_0_x_0_zz_xxxzzzz = cbuffer.data(dk_geom_1010_off + 194 * ccomps * dcomps);

            auto g_x_0_x_0_zz_xxyyyyy = cbuffer.data(dk_geom_1010_off + 195 * ccomps * dcomps);

            auto g_x_0_x_0_zz_xxyyyyz = cbuffer.data(dk_geom_1010_off + 196 * ccomps * dcomps);

            auto g_x_0_x_0_zz_xxyyyzz = cbuffer.data(dk_geom_1010_off + 197 * ccomps * dcomps);

            auto g_x_0_x_0_zz_xxyyzzz = cbuffer.data(dk_geom_1010_off + 198 * ccomps * dcomps);

            auto g_x_0_x_0_zz_xxyzzzz = cbuffer.data(dk_geom_1010_off + 199 * ccomps * dcomps);

            auto g_x_0_x_0_zz_xxzzzzz = cbuffer.data(dk_geom_1010_off + 200 * ccomps * dcomps);

            auto g_x_0_x_0_zz_xyyyyyy = cbuffer.data(dk_geom_1010_off + 201 * ccomps * dcomps);

            auto g_x_0_x_0_zz_xyyyyyz = cbuffer.data(dk_geom_1010_off + 202 * ccomps * dcomps);

            auto g_x_0_x_0_zz_xyyyyzz = cbuffer.data(dk_geom_1010_off + 203 * ccomps * dcomps);

            auto g_x_0_x_0_zz_xyyyzzz = cbuffer.data(dk_geom_1010_off + 204 * ccomps * dcomps);

            auto g_x_0_x_0_zz_xyyzzzz = cbuffer.data(dk_geom_1010_off + 205 * ccomps * dcomps);

            auto g_x_0_x_0_zz_xyzzzzz = cbuffer.data(dk_geom_1010_off + 206 * ccomps * dcomps);

            auto g_x_0_x_0_zz_xzzzzzz = cbuffer.data(dk_geom_1010_off + 207 * ccomps * dcomps);

            auto g_x_0_x_0_zz_yyyyyyy = cbuffer.data(dk_geom_1010_off + 208 * ccomps * dcomps);

            auto g_x_0_x_0_zz_yyyyyyz = cbuffer.data(dk_geom_1010_off + 209 * ccomps * dcomps);

            auto g_x_0_x_0_zz_yyyyyzz = cbuffer.data(dk_geom_1010_off + 210 * ccomps * dcomps);

            auto g_x_0_x_0_zz_yyyyzzz = cbuffer.data(dk_geom_1010_off + 211 * ccomps * dcomps);

            auto g_x_0_x_0_zz_yyyzzzz = cbuffer.data(dk_geom_1010_off + 212 * ccomps * dcomps);

            auto g_x_0_x_0_zz_yyzzzzz = cbuffer.data(dk_geom_1010_off + 213 * ccomps * dcomps);

            auto g_x_0_x_0_zz_yzzzzzz = cbuffer.data(dk_geom_1010_off + 214 * ccomps * dcomps);

            auto g_x_0_x_0_zz_zzzzzzz = cbuffer.data(dk_geom_1010_off + 215 * ccomps * dcomps);

            auto g_x_0_y_0_xx_xxxxxxx = cbuffer.data(dk_geom_1010_off + 216 * ccomps * dcomps);

            auto g_x_0_y_0_xx_xxxxxxy = cbuffer.data(dk_geom_1010_off + 217 * ccomps * dcomps);

            auto g_x_0_y_0_xx_xxxxxxz = cbuffer.data(dk_geom_1010_off + 218 * ccomps * dcomps);

            auto g_x_0_y_0_xx_xxxxxyy = cbuffer.data(dk_geom_1010_off + 219 * ccomps * dcomps);

            auto g_x_0_y_0_xx_xxxxxyz = cbuffer.data(dk_geom_1010_off + 220 * ccomps * dcomps);

            auto g_x_0_y_0_xx_xxxxxzz = cbuffer.data(dk_geom_1010_off + 221 * ccomps * dcomps);

            auto g_x_0_y_0_xx_xxxxyyy = cbuffer.data(dk_geom_1010_off + 222 * ccomps * dcomps);

            auto g_x_0_y_0_xx_xxxxyyz = cbuffer.data(dk_geom_1010_off + 223 * ccomps * dcomps);

            auto g_x_0_y_0_xx_xxxxyzz = cbuffer.data(dk_geom_1010_off + 224 * ccomps * dcomps);

            auto g_x_0_y_0_xx_xxxxzzz = cbuffer.data(dk_geom_1010_off + 225 * ccomps * dcomps);

            auto g_x_0_y_0_xx_xxxyyyy = cbuffer.data(dk_geom_1010_off + 226 * ccomps * dcomps);

            auto g_x_0_y_0_xx_xxxyyyz = cbuffer.data(dk_geom_1010_off + 227 * ccomps * dcomps);

            auto g_x_0_y_0_xx_xxxyyzz = cbuffer.data(dk_geom_1010_off + 228 * ccomps * dcomps);

            auto g_x_0_y_0_xx_xxxyzzz = cbuffer.data(dk_geom_1010_off + 229 * ccomps * dcomps);

            auto g_x_0_y_0_xx_xxxzzzz = cbuffer.data(dk_geom_1010_off + 230 * ccomps * dcomps);

            auto g_x_0_y_0_xx_xxyyyyy = cbuffer.data(dk_geom_1010_off + 231 * ccomps * dcomps);

            auto g_x_0_y_0_xx_xxyyyyz = cbuffer.data(dk_geom_1010_off + 232 * ccomps * dcomps);

            auto g_x_0_y_0_xx_xxyyyzz = cbuffer.data(dk_geom_1010_off + 233 * ccomps * dcomps);

            auto g_x_0_y_0_xx_xxyyzzz = cbuffer.data(dk_geom_1010_off + 234 * ccomps * dcomps);

            auto g_x_0_y_0_xx_xxyzzzz = cbuffer.data(dk_geom_1010_off + 235 * ccomps * dcomps);

            auto g_x_0_y_0_xx_xxzzzzz = cbuffer.data(dk_geom_1010_off + 236 * ccomps * dcomps);

            auto g_x_0_y_0_xx_xyyyyyy = cbuffer.data(dk_geom_1010_off + 237 * ccomps * dcomps);

            auto g_x_0_y_0_xx_xyyyyyz = cbuffer.data(dk_geom_1010_off + 238 * ccomps * dcomps);

            auto g_x_0_y_0_xx_xyyyyzz = cbuffer.data(dk_geom_1010_off + 239 * ccomps * dcomps);

            auto g_x_0_y_0_xx_xyyyzzz = cbuffer.data(dk_geom_1010_off + 240 * ccomps * dcomps);

            auto g_x_0_y_0_xx_xyyzzzz = cbuffer.data(dk_geom_1010_off + 241 * ccomps * dcomps);

            auto g_x_0_y_0_xx_xyzzzzz = cbuffer.data(dk_geom_1010_off + 242 * ccomps * dcomps);

            auto g_x_0_y_0_xx_xzzzzzz = cbuffer.data(dk_geom_1010_off + 243 * ccomps * dcomps);

            auto g_x_0_y_0_xx_yyyyyyy = cbuffer.data(dk_geom_1010_off + 244 * ccomps * dcomps);

            auto g_x_0_y_0_xx_yyyyyyz = cbuffer.data(dk_geom_1010_off + 245 * ccomps * dcomps);

            auto g_x_0_y_0_xx_yyyyyzz = cbuffer.data(dk_geom_1010_off + 246 * ccomps * dcomps);

            auto g_x_0_y_0_xx_yyyyzzz = cbuffer.data(dk_geom_1010_off + 247 * ccomps * dcomps);

            auto g_x_0_y_0_xx_yyyzzzz = cbuffer.data(dk_geom_1010_off + 248 * ccomps * dcomps);

            auto g_x_0_y_0_xx_yyzzzzz = cbuffer.data(dk_geom_1010_off + 249 * ccomps * dcomps);

            auto g_x_0_y_0_xx_yzzzzzz = cbuffer.data(dk_geom_1010_off + 250 * ccomps * dcomps);

            auto g_x_0_y_0_xx_zzzzzzz = cbuffer.data(dk_geom_1010_off + 251 * ccomps * dcomps);

            auto g_x_0_y_0_xy_xxxxxxx = cbuffer.data(dk_geom_1010_off + 252 * ccomps * dcomps);

            auto g_x_0_y_0_xy_xxxxxxy = cbuffer.data(dk_geom_1010_off + 253 * ccomps * dcomps);

            auto g_x_0_y_0_xy_xxxxxxz = cbuffer.data(dk_geom_1010_off + 254 * ccomps * dcomps);

            auto g_x_0_y_0_xy_xxxxxyy = cbuffer.data(dk_geom_1010_off + 255 * ccomps * dcomps);

            auto g_x_0_y_0_xy_xxxxxyz = cbuffer.data(dk_geom_1010_off + 256 * ccomps * dcomps);

            auto g_x_0_y_0_xy_xxxxxzz = cbuffer.data(dk_geom_1010_off + 257 * ccomps * dcomps);

            auto g_x_0_y_0_xy_xxxxyyy = cbuffer.data(dk_geom_1010_off + 258 * ccomps * dcomps);

            auto g_x_0_y_0_xy_xxxxyyz = cbuffer.data(dk_geom_1010_off + 259 * ccomps * dcomps);

            auto g_x_0_y_0_xy_xxxxyzz = cbuffer.data(dk_geom_1010_off + 260 * ccomps * dcomps);

            auto g_x_0_y_0_xy_xxxxzzz = cbuffer.data(dk_geom_1010_off + 261 * ccomps * dcomps);

            auto g_x_0_y_0_xy_xxxyyyy = cbuffer.data(dk_geom_1010_off + 262 * ccomps * dcomps);

            auto g_x_0_y_0_xy_xxxyyyz = cbuffer.data(dk_geom_1010_off + 263 * ccomps * dcomps);

            auto g_x_0_y_0_xy_xxxyyzz = cbuffer.data(dk_geom_1010_off + 264 * ccomps * dcomps);

            auto g_x_0_y_0_xy_xxxyzzz = cbuffer.data(dk_geom_1010_off + 265 * ccomps * dcomps);

            auto g_x_0_y_0_xy_xxxzzzz = cbuffer.data(dk_geom_1010_off + 266 * ccomps * dcomps);

            auto g_x_0_y_0_xy_xxyyyyy = cbuffer.data(dk_geom_1010_off + 267 * ccomps * dcomps);

            auto g_x_0_y_0_xy_xxyyyyz = cbuffer.data(dk_geom_1010_off + 268 * ccomps * dcomps);

            auto g_x_0_y_0_xy_xxyyyzz = cbuffer.data(dk_geom_1010_off + 269 * ccomps * dcomps);

            auto g_x_0_y_0_xy_xxyyzzz = cbuffer.data(dk_geom_1010_off + 270 * ccomps * dcomps);

            auto g_x_0_y_0_xy_xxyzzzz = cbuffer.data(dk_geom_1010_off + 271 * ccomps * dcomps);

            auto g_x_0_y_0_xy_xxzzzzz = cbuffer.data(dk_geom_1010_off + 272 * ccomps * dcomps);

            auto g_x_0_y_0_xy_xyyyyyy = cbuffer.data(dk_geom_1010_off + 273 * ccomps * dcomps);

            auto g_x_0_y_0_xy_xyyyyyz = cbuffer.data(dk_geom_1010_off + 274 * ccomps * dcomps);

            auto g_x_0_y_0_xy_xyyyyzz = cbuffer.data(dk_geom_1010_off + 275 * ccomps * dcomps);

            auto g_x_0_y_0_xy_xyyyzzz = cbuffer.data(dk_geom_1010_off + 276 * ccomps * dcomps);

            auto g_x_0_y_0_xy_xyyzzzz = cbuffer.data(dk_geom_1010_off + 277 * ccomps * dcomps);

            auto g_x_0_y_0_xy_xyzzzzz = cbuffer.data(dk_geom_1010_off + 278 * ccomps * dcomps);

            auto g_x_0_y_0_xy_xzzzzzz = cbuffer.data(dk_geom_1010_off + 279 * ccomps * dcomps);

            auto g_x_0_y_0_xy_yyyyyyy = cbuffer.data(dk_geom_1010_off + 280 * ccomps * dcomps);

            auto g_x_0_y_0_xy_yyyyyyz = cbuffer.data(dk_geom_1010_off + 281 * ccomps * dcomps);

            auto g_x_0_y_0_xy_yyyyyzz = cbuffer.data(dk_geom_1010_off + 282 * ccomps * dcomps);

            auto g_x_0_y_0_xy_yyyyzzz = cbuffer.data(dk_geom_1010_off + 283 * ccomps * dcomps);

            auto g_x_0_y_0_xy_yyyzzzz = cbuffer.data(dk_geom_1010_off + 284 * ccomps * dcomps);

            auto g_x_0_y_0_xy_yyzzzzz = cbuffer.data(dk_geom_1010_off + 285 * ccomps * dcomps);

            auto g_x_0_y_0_xy_yzzzzzz = cbuffer.data(dk_geom_1010_off + 286 * ccomps * dcomps);

            auto g_x_0_y_0_xy_zzzzzzz = cbuffer.data(dk_geom_1010_off + 287 * ccomps * dcomps);

            auto g_x_0_y_0_xz_xxxxxxx = cbuffer.data(dk_geom_1010_off + 288 * ccomps * dcomps);

            auto g_x_0_y_0_xz_xxxxxxy = cbuffer.data(dk_geom_1010_off + 289 * ccomps * dcomps);

            auto g_x_0_y_0_xz_xxxxxxz = cbuffer.data(dk_geom_1010_off + 290 * ccomps * dcomps);

            auto g_x_0_y_0_xz_xxxxxyy = cbuffer.data(dk_geom_1010_off + 291 * ccomps * dcomps);

            auto g_x_0_y_0_xz_xxxxxyz = cbuffer.data(dk_geom_1010_off + 292 * ccomps * dcomps);

            auto g_x_0_y_0_xz_xxxxxzz = cbuffer.data(dk_geom_1010_off + 293 * ccomps * dcomps);

            auto g_x_0_y_0_xz_xxxxyyy = cbuffer.data(dk_geom_1010_off + 294 * ccomps * dcomps);

            auto g_x_0_y_0_xz_xxxxyyz = cbuffer.data(dk_geom_1010_off + 295 * ccomps * dcomps);

            auto g_x_0_y_0_xz_xxxxyzz = cbuffer.data(dk_geom_1010_off + 296 * ccomps * dcomps);

            auto g_x_0_y_0_xz_xxxxzzz = cbuffer.data(dk_geom_1010_off + 297 * ccomps * dcomps);

            auto g_x_0_y_0_xz_xxxyyyy = cbuffer.data(dk_geom_1010_off + 298 * ccomps * dcomps);

            auto g_x_0_y_0_xz_xxxyyyz = cbuffer.data(dk_geom_1010_off + 299 * ccomps * dcomps);

            auto g_x_0_y_0_xz_xxxyyzz = cbuffer.data(dk_geom_1010_off + 300 * ccomps * dcomps);

            auto g_x_0_y_0_xz_xxxyzzz = cbuffer.data(dk_geom_1010_off + 301 * ccomps * dcomps);

            auto g_x_0_y_0_xz_xxxzzzz = cbuffer.data(dk_geom_1010_off + 302 * ccomps * dcomps);

            auto g_x_0_y_0_xz_xxyyyyy = cbuffer.data(dk_geom_1010_off + 303 * ccomps * dcomps);

            auto g_x_0_y_0_xz_xxyyyyz = cbuffer.data(dk_geom_1010_off + 304 * ccomps * dcomps);

            auto g_x_0_y_0_xz_xxyyyzz = cbuffer.data(dk_geom_1010_off + 305 * ccomps * dcomps);

            auto g_x_0_y_0_xz_xxyyzzz = cbuffer.data(dk_geom_1010_off + 306 * ccomps * dcomps);

            auto g_x_0_y_0_xz_xxyzzzz = cbuffer.data(dk_geom_1010_off + 307 * ccomps * dcomps);

            auto g_x_0_y_0_xz_xxzzzzz = cbuffer.data(dk_geom_1010_off + 308 * ccomps * dcomps);

            auto g_x_0_y_0_xz_xyyyyyy = cbuffer.data(dk_geom_1010_off + 309 * ccomps * dcomps);

            auto g_x_0_y_0_xz_xyyyyyz = cbuffer.data(dk_geom_1010_off + 310 * ccomps * dcomps);

            auto g_x_0_y_0_xz_xyyyyzz = cbuffer.data(dk_geom_1010_off + 311 * ccomps * dcomps);

            auto g_x_0_y_0_xz_xyyyzzz = cbuffer.data(dk_geom_1010_off + 312 * ccomps * dcomps);

            auto g_x_0_y_0_xz_xyyzzzz = cbuffer.data(dk_geom_1010_off + 313 * ccomps * dcomps);

            auto g_x_0_y_0_xz_xyzzzzz = cbuffer.data(dk_geom_1010_off + 314 * ccomps * dcomps);

            auto g_x_0_y_0_xz_xzzzzzz = cbuffer.data(dk_geom_1010_off + 315 * ccomps * dcomps);

            auto g_x_0_y_0_xz_yyyyyyy = cbuffer.data(dk_geom_1010_off + 316 * ccomps * dcomps);

            auto g_x_0_y_0_xz_yyyyyyz = cbuffer.data(dk_geom_1010_off + 317 * ccomps * dcomps);

            auto g_x_0_y_0_xz_yyyyyzz = cbuffer.data(dk_geom_1010_off + 318 * ccomps * dcomps);

            auto g_x_0_y_0_xz_yyyyzzz = cbuffer.data(dk_geom_1010_off + 319 * ccomps * dcomps);

            auto g_x_0_y_0_xz_yyyzzzz = cbuffer.data(dk_geom_1010_off + 320 * ccomps * dcomps);

            auto g_x_0_y_0_xz_yyzzzzz = cbuffer.data(dk_geom_1010_off + 321 * ccomps * dcomps);

            auto g_x_0_y_0_xz_yzzzzzz = cbuffer.data(dk_geom_1010_off + 322 * ccomps * dcomps);

            auto g_x_0_y_0_xz_zzzzzzz = cbuffer.data(dk_geom_1010_off + 323 * ccomps * dcomps);

            auto g_x_0_y_0_yy_xxxxxxx = cbuffer.data(dk_geom_1010_off + 324 * ccomps * dcomps);

            auto g_x_0_y_0_yy_xxxxxxy = cbuffer.data(dk_geom_1010_off + 325 * ccomps * dcomps);

            auto g_x_0_y_0_yy_xxxxxxz = cbuffer.data(dk_geom_1010_off + 326 * ccomps * dcomps);

            auto g_x_0_y_0_yy_xxxxxyy = cbuffer.data(dk_geom_1010_off + 327 * ccomps * dcomps);

            auto g_x_0_y_0_yy_xxxxxyz = cbuffer.data(dk_geom_1010_off + 328 * ccomps * dcomps);

            auto g_x_0_y_0_yy_xxxxxzz = cbuffer.data(dk_geom_1010_off + 329 * ccomps * dcomps);

            auto g_x_0_y_0_yy_xxxxyyy = cbuffer.data(dk_geom_1010_off + 330 * ccomps * dcomps);

            auto g_x_0_y_0_yy_xxxxyyz = cbuffer.data(dk_geom_1010_off + 331 * ccomps * dcomps);

            auto g_x_0_y_0_yy_xxxxyzz = cbuffer.data(dk_geom_1010_off + 332 * ccomps * dcomps);

            auto g_x_0_y_0_yy_xxxxzzz = cbuffer.data(dk_geom_1010_off + 333 * ccomps * dcomps);

            auto g_x_0_y_0_yy_xxxyyyy = cbuffer.data(dk_geom_1010_off + 334 * ccomps * dcomps);

            auto g_x_0_y_0_yy_xxxyyyz = cbuffer.data(dk_geom_1010_off + 335 * ccomps * dcomps);

            auto g_x_0_y_0_yy_xxxyyzz = cbuffer.data(dk_geom_1010_off + 336 * ccomps * dcomps);

            auto g_x_0_y_0_yy_xxxyzzz = cbuffer.data(dk_geom_1010_off + 337 * ccomps * dcomps);

            auto g_x_0_y_0_yy_xxxzzzz = cbuffer.data(dk_geom_1010_off + 338 * ccomps * dcomps);

            auto g_x_0_y_0_yy_xxyyyyy = cbuffer.data(dk_geom_1010_off + 339 * ccomps * dcomps);

            auto g_x_0_y_0_yy_xxyyyyz = cbuffer.data(dk_geom_1010_off + 340 * ccomps * dcomps);

            auto g_x_0_y_0_yy_xxyyyzz = cbuffer.data(dk_geom_1010_off + 341 * ccomps * dcomps);

            auto g_x_0_y_0_yy_xxyyzzz = cbuffer.data(dk_geom_1010_off + 342 * ccomps * dcomps);

            auto g_x_0_y_0_yy_xxyzzzz = cbuffer.data(dk_geom_1010_off + 343 * ccomps * dcomps);

            auto g_x_0_y_0_yy_xxzzzzz = cbuffer.data(dk_geom_1010_off + 344 * ccomps * dcomps);

            auto g_x_0_y_0_yy_xyyyyyy = cbuffer.data(dk_geom_1010_off + 345 * ccomps * dcomps);

            auto g_x_0_y_0_yy_xyyyyyz = cbuffer.data(dk_geom_1010_off + 346 * ccomps * dcomps);

            auto g_x_0_y_0_yy_xyyyyzz = cbuffer.data(dk_geom_1010_off + 347 * ccomps * dcomps);

            auto g_x_0_y_0_yy_xyyyzzz = cbuffer.data(dk_geom_1010_off + 348 * ccomps * dcomps);

            auto g_x_0_y_0_yy_xyyzzzz = cbuffer.data(dk_geom_1010_off + 349 * ccomps * dcomps);

            auto g_x_0_y_0_yy_xyzzzzz = cbuffer.data(dk_geom_1010_off + 350 * ccomps * dcomps);

            auto g_x_0_y_0_yy_xzzzzzz = cbuffer.data(dk_geom_1010_off + 351 * ccomps * dcomps);

            auto g_x_0_y_0_yy_yyyyyyy = cbuffer.data(dk_geom_1010_off + 352 * ccomps * dcomps);

            auto g_x_0_y_0_yy_yyyyyyz = cbuffer.data(dk_geom_1010_off + 353 * ccomps * dcomps);

            auto g_x_0_y_0_yy_yyyyyzz = cbuffer.data(dk_geom_1010_off + 354 * ccomps * dcomps);

            auto g_x_0_y_0_yy_yyyyzzz = cbuffer.data(dk_geom_1010_off + 355 * ccomps * dcomps);

            auto g_x_0_y_0_yy_yyyzzzz = cbuffer.data(dk_geom_1010_off + 356 * ccomps * dcomps);

            auto g_x_0_y_0_yy_yyzzzzz = cbuffer.data(dk_geom_1010_off + 357 * ccomps * dcomps);

            auto g_x_0_y_0_yy_yzzzzzz = cbuffer.data(dk_geom_1010_off + 358 * ccomps * dcomps);

            auto g_x_0_y_0_yy_zzzzzzz = cbuffer.data(dk_geom_1010_off + 359 * ccomps * dcomps);

            auto g_x_0_y_0_yz_xxxxxxx = cbuffer.data(dk_geom_1010_off + 360 * ccomps * dcomps);

            auto g_x_0_y_0_yz_xxxxxxy = cbuffer.data(dk_geom_1010_off + 361 * ccomps * dcomps);

            auto g_x_0_y_0_yz_xxxxxxz = cbuffer.data(dk_geom_1010_off + 362 * ccomps * dcomps);

            auto g_x_0_y_0_yz_xxxxxyy = cbuffer.data(dk_geom_1010_off + 363 * ccomps * dcomps);

            auto g_x_0_y_0_yz_xxxxxyz = cbuffer.data(dk_geom_1010_off + 364 * ccomps * dcomps);

            auto g_x_0_y_0_yz_xxxxxzz = cbuffer.data(dk_geom_1010_off + 365 * ccomps * dcomps);

            auto g_x_0_y_0_yz_xxxxyyy = cbuffer.data(dk_geom_1010_off + 366 * ccomps * dcomps);

            auto g_x_0_y_0_yz_xxxxyyz = cbuffer.data(dk_geom_1010_off + 367 * ccomps * dcomps);

            auto g_x_0_y_0_yz_xxxxyzz = cbuffer.data(dk_geom_1010_off + 368 * ccomps * dcomps);

            auto g_x_0_y_0_yz_xxxxzzz = cbuffer.data(dk_geom_1010_off + 369 * ccomps * dcomps);

            auto g_x_0_y_0_yz_xxxyyyy = cbuffer.data(dk_geom_1010_off + 370 * ccomps * dcomps);

            auto g_x_0_y_0_yz_xxxyyyz = cbuffer.data(dk_geom_1010_off + 371 * ccomps * dcomps);

            auto g_x_0_y_0_yz_xxxyyzz = cbuffer.data(dk_geom_1010_off + 372 * ccomps * dcomps);

            auto g_x_0_y_0_yz_xxxyzzz = cbuffer.data(dk_geom_1010_off + 373 * ccomps * dcomps);

            auto g_x_0_y_0_yz_xxxzzzz = cbuffer.data(dk_geom_1010_off + 374 * ccomps * dcomps);

            auto g_x_0_y_0_yz_xxyyyyy = cbuffer.data(dk_geom_1010_off + 375 * ccomps * dcomps);

            auto g_x_0_y_0_yz_xxyyyyz = cbuffer.data(dk_geom_1010_off + 376 * ccomps * dcomps);

            auto g_x_0_y_0_yz_xxyyyzz = cbuffer.data(dk_geom_1010_off + 377 * ccomps * dcomps);

            auto g_x_0_y_0_yz_xxyyzzz = cbuffer.data(dk_geom_1010_off + 378 * ccomps * dcomps);

            auto g_x_0_y_0_yz_xxyzzzz = cbuffer.data(dk_geom_1010_off + 379 * ccomps * dcomps);

            auto g_x_0_y_0_yz_xxzzzzz = cbuffer.data(dk_geom_1010_off + 380 * ccomps * dcomps);

            auto g_x_0_y_0_yz_xyyyyyy = cbuffer.data(dk_geom_1010_off + 381 * ccomps * dcomps);

            auto g_x_0_y_0_yz_xyyyyyz = cbuffer.data(dk_geom_1010_off + 382 * ccomps * dcomps);

            auto g_x_0_y_0_yz_xyyyyzz = cbuffer.data(dk_geom_1010_off + 383 * ccomps * dcomps);

            auto g_x_0_y_0_yz_xyyyzzz = cbuffer.data(dk_geom_1010_off + 384 * ccomps * dcomps);

            auto g_x_0_y_0_yz_xyyzzzz = cbuffer.data(dk_geom_1010_off + 385 * ccomps * dcomps);

            auto g_x_0_y_0_yz_xyzzzzz = cbuffer.data(dk_geom_1010_off + 386 * ccomps * dcomps);

            auto g_x_0_y_0_yz_xzzzzzz = cbuffer.data(dk_geom_1010_off + 387 * ccomps * dcomps);

            auto g_x_0_y_0_yz_yyyyyyy = cbuffer.data(dk_geom_1010_off + 388 * ccomps * dcomps);

            auto g_x_0_y_0_yz_yyyyyyz = cbuffer.data(dk_geom_1010_off + 389 * ccomps * dcomps);

            auto g_x_0_y_0_yz_yyyyyzz = cbuffer.data(dk_geom_1010_off + 390 * ccomps * dcomps);

            auto g_x_0_y_0_yz_yyyyzzz = cbuffer.data(dk_geom_1010_off + 391 * ccomps * dcomps);

            auto g_x_0_y_0_yz_yyyzzzz = cbuffer.data(dk_geom_1010_off + 392 * ccomps * dcomps);

            auto g_x_0_y_0_yz_yyzzzzz = cbuffer.data(dk_geom_1010_off + 393 * ccomps * dcomps);

            auto g_x_0_y_0_yz_yzzzzzz = cbuffer.data(dk_geom_1010_off + 394 * ccomps * dcomps);

            auto g_x_0_y_0_yz_zzzzzzz = cbuffer.data(dk_geom_1010_off + 395 * ccomps * dcomps);

            auto g_x_0_y_0_zz_xxxxxxx = cbuffer.data(dk_geom_1010_off + 396 * ccomps * dcomps);

            auto g_x_0_y_0_zz_xxxxxxy = cbuffer.data(dk_geom_1010_off + 397 * ccomps * dcomps);

            auto g_x_0_y_0_zz_xxxxxxz = cbuffer.data(dk_geom_1010_off + 398 * ccomps * dcomps);

            auto g_x_0_y_0_zz_xxxxxyy = cbuffer.data(dk_geom_1010_off + 399 * ccomps * dcomps);

            auto g_x_0_y_0_zz_xxxxxyz = cbuffer.data(dk_geom_1010_off + 400 * ccomps * dcomps);

            auto g_x_0_y_0_zz_xxxxxzz = cbuffer.data(dk_geom_1010_off + 401 * ccomps * dcomps);

            auto g_x_0_y_0_zz_xxxxyyy = cbuffer.data(dk_geom_1010_off + 402 * ccomps * dcomps);

            auto g_x_0_y_0_zz_xxxxyyz = cbuffer.data(dk_geom_1010_off + 403 * ccomps * dcomps);

            auto g_x_0_y_0_zz_xxxxyzz = cbuffer.data(dk_geom_1010_off + 404 * ccomps * dcomps);

            auto g_x_0_y_0_zz_xxxxzzz = cbuffer.data(dk_geom_1010_off + 405 * ccomps * dcomps);

            auto g_x_0_y_0_zz_xxxyyyy = cbuffer.data(dk_geom_1010_off + 406 * ccomps * dcomps);

            auto g_x_0_y_0_zz_xxxyyyz = cbuffer.data(dk_geom_1010_off + 407 * ccomps * dcomps);

            auto g_x_0_y_0_zz_xxxyyzz = cbuffer.data(dk_geom_1010_off + 408 * ccomps * dcomps);

            auto g_x_0_y_0_zz_xxxyzzz = cbuffer.data(dk_geom_1010_off + 409 * ccomps * dcomps);

            auto g_x_0_y_0_zz_xxxzzzz = cbuffer.data(dk_geom_1010_off + 410 * ccomps * dcomps);

            auto g_x_0_y_0_zz_xxyyyyy = cbuffer.data(dk_geom_1010_off + 411 * ccomps * dcomps);

            auto g_x_0_y_0_zz_xxyyyyz = cbuffer.data(dk_geom_1010_off + 412 * ccomps * dcomps);

            auto g_x_0_y_0_zz_xxyyyzz = cbuffer.data(dk_geom_1010_off + 413 * ccomps * dcomps);

            auto g_x_0_y_0_zz_xxyyzzz = cbuffer.data(dk_geom_1010_off + 414 * ccomps * dcomps);

            auto g_x_0_y_0_zz_xxyzzzz = cbuffer.data(dk_geom_1010_off + 415 * ccomps * dcomps);

            auto g_x_0_y_0_zz_xxzzzzz = cbuffer.data(dk_geom_1010_off + 416 * ccomps * dcomps);

            auto g_x_0_y_0_zz_xyyyyyy = cbuffer.data(dk_geom_1010_off + 417 * ccomps * dcomps);

            auto g_x_0_y_0_zz_xyyyyyz = cbuffer.data(dk_geom_1010_off + 418 * ccomps * dcomps);

            auto g_x_0_y_0_zz_xyyyyzz = cbuffer.data(dk_geom_1010_off + 419 * ccomps * dcomps);

            auto g_x_0_y_0_zz_xyyyzzz = cbuffer.data(dk_geom_1010_off + 420 * ccomps * dcomps);

            auto g_x_0_y_0_zz_xyyzzzz = cbuffer.data(dk_geom_1010_off + 421 * ccomps * dcomps);

            auto g_x_0_y_0_zz_xyzzzzz = cbuffer.data(dk_geom_1010_off + 422 * ccomps * dcomps);

            auto g_x_0_y_0_zz_xzzzzzz = cbuffer.data(dk_geom_1010_off + 423 * ccomps * dcomps);

            auto g_x_0_y_0_zz_yyyyyyy = cbuffer.data(dk_geom_1010_off + 424 * ccomps * dcomps);

            auto g_x_0_y_0_zz_yyyyyyz = cbuffer.data(dk_geom_1010_off + 425 * ccomps * dcomps);

            auto g_x_0_y_0_zz_yyyyyzz = cbuffer.data(dk_geom_1010_off + 426 * ccomps * dcomps);

            auto g_x_0_y_0_zz_yyyyzzz = cbuffer.data(dk_geom_1010_off + 427 * ccomps * dcomps);

            auto g_x_0_y_0_zz_yyyzzzz = cbuffer.data(dk_geom_1010_off + 428 * ccomps * dcomps);

            auto g_x_0_y_0_zz_yyzzzzz = cbuffer.data(dk_geom_1010_off + 429 * ccomps * dcomps);

            auto g_x_0_y_0_zz_yzzzzzz = cbuffer.data(dk_geom_1010_off + 430 * ccomps * dcomps);

            auto g_x_0_y_0_zz_zzzzzzz = cbuffer.data(dk_geom_1010_off + 431 * ccomps * dcomps);

            auto g_x_0_z_0_xx_xxxxxxx = cbuffer.data(dk_geom_1010_off + 432 * ccomps * dcomps);

            auto g_x_0_z_0_xx_xxxxxxy = cbuffer.data(dk_geom_1010_off + 433 * ccomps * dcomps);

            auto g_x_0_z_0_xx_xxxxxxz = cbuffer.data(dk_geom_1010_off + 434 * ccomps * dcomps);

            auto g_x_0_z_0_xx_xxxxxyy = cbuffer.data(dk_geom_1010_off + 435 * ccomps * dcomps);

            auto g_x_0_z_0_xx_xxxxxyz = cbuffer.data(dk_geom_1010_off + 436 * ccomps * dcomps);

            auto g_x_0_z_0_xx_xxxxxzz = cbuffer.data(dk_geom_1010_off + 437 * ccomps * dcomps);

            auto g_x_0_z_0_xx_xxxxyyy = cbuffer.data(dk_geom_1010_off + 438 * ccomps * dcomps);

            auto g_x_0_z_0_xx_xxxxyyz = cbuffer.data(dk_geom_1010_off + 439 * ccomps * dcomps);

            auto g_x_0_z_0_xx_xxxxyzz = cbuffer.data(dk_geom_1010_off + 440 * ccomps * dcomps);

            auto g_x_0_z_0_xx_xxxxzzz = cbuffer.data(dk_geom_1010_off + 441 * ccomps * dcomps);

            auto g_x_0_z_0_xx_xxxyyyy = cbuffer.data(dk_geom_1010_off + 442 * ccomps * dcomps);

            auto g_x_0_z_0_xx_xxxyyyz = cbuffer.data(dk_geom_1010_off + 443 * ccomps * dcomps);

            auto g_x_0_z_0_xx_xxxyyzz = cbuffer.data(dk_geom_1010_off + 444 * ccomps * dcomps);

            auto g_x_0_z_0_xx_xxxyzzz = cbuffer.data(dk_geom_1010_off + 445 * ccomps * dcomps);

            auto g_x_0_z_0_xx_xxxzzzz = cbuffer.data(dk_geom_1010_off + 446 * ccomps * dcomps);

            auto g_x_0_z_0_xx_xxyyyyy = cbuffer.data(dk_geom_1010_off + 447 * ccomps * dcomps);

            auto g_x_0_z_0_xx_xxyyyyz = cbuffer.data(dk_geom_1010_off + 448 * ccomps * dcomps);

            auto g_x_0_z_0_xx_xxyyyzz = cbuffer.data(dk_geom_1010_off + 449 * ccomps * dcomps);

            auto g_x_0_z_0_xx_xxyyzzz = cbuffer.data(dk_geom_1010_off + 450 * ccomps * dcomps);

            auto g_x_0_z_0_xx_xxyzzzz = cbuffer.data(dk_geom_1010_off + 451 * ccomps * dcomps);

            auto g_x_0_z_0_xx_xxzzzzz = cbuffer.data(dk_geom_1010_off + 452 * ccomps * dcomps);

            auto g_x_0_z_0_xx_xyyyyyy = cbuffer.data(dk_geom_1010_off + 453 * ccomps * dcomps);

            auto g_x_0_z_0_xx_xyyyyyz = cbuffer.data(dk_geom_1010_off + 454 * ccomps * dcomps);

            auto g_x_0_z_0_xx_xyyyyzz = cbuffer.data(dk_geom_1010_off + 455 * ccomps * dcomps);

            auto g_x_0_z_0_xx_xyyyzzz = cbuffer.data(dk_geom_1010_off + 456 * ccomps * dcomps);

            auto g_x_0_z_0_xx_xyyzzzz = cbuffer.data(dk_geom_1010_off + 457 * ccomps * dcomps);

            auto g_x_0_z_0_xx_xyzzzzz = cbuffer.data(dk_geom_1010_off + 458 * ccomps * dcomps);

            auto g_x_0_z_0_xx_xzzzzzz = cbuffer.data(dk_geom_1010_off + 459 * ccomps * dcomps);

            auto g_x_0_z_0_xx_yyyyyyy = cbuffer.data(dk_geom_1010_off + 460 * ccomps * dcomps);

            auto g_x_0_z_0_xx_yyyyyyz = cbuffer.data(dk_geom_1010_off + 461 * ccomps * dcomps);

            auto g_x_0_z_0_xx_yyyyyzz = cbuffer.data(dk_geom_1010_off + 462 * ccomps * dcomps);

            auto g_x_0_z_0_xx_yyyyzzz = cbuffer.data(dk_geom_1010_off + 463 * ccomps * dcomps);

            auto g_x_0_z_0_xx_yyyzzzz = cbuffer.data(dk_geom_1010_off + 464 * ccomps * dcomps);

            auto g_x_0_z_0_xx_yyzzzzz = cbuffer.data(dk_geom_1010_off + 465 * ccomps * dcomps);

            auto g_x_0_z_0_xx_yzzzzzz = cbuffer.data(dk_geom_1010_off + 466 * ccomps * dcomps);

            auto g_x_0_z_0_xx_zzzzzzz = cbuffer.data(dk_geom_1010_off + 467 * ccomps * dcomps);

            auto g_x_0_z_0_xy_xxxxxxx = cbuffer.data(dk_geom_1010_off + 468 * ccomps * dcomps);

            auto g_x_0_z_0_xy_xxxxxxy = cbuffer.data(dk_geom_1010_off + 469 * ccomps * dcomps);

            auto g_x_0_z_0_xy_xxxxxxz = cbuffer.data(dk_geom_1010_off + 470 * ccomps * dcomps);

            auto g_x_0_z_0_xy_xxxxxyy = cbuffer.data(dk_geom_1010_off + 471 * ccomps * dcomps);

            auto g_x_0_z_0_xy_xxxxxyz = cbuffer.data(dk_geom_1010_off + 472 * ccomps * dcomps);

            auto g_x_0_z_0_xy_xxxxxzz = cbuffer.data(dk_geom_1010_off + 473 * ccomps * dcomps);

            auto g_x_0_z_0_xy_xxxxyyy = cbuffer.data(dk_geom_1010_off + 474 * ccomps * dcomps);

            auto g_x_0_z_0_xy_xxxxyyz = cbuffer.data(dk_geom_1010_off + 475 * ccomps * dcomps);

            auto g_x_0_z_0_xy_xxxxyzz = cbuffer.data(dk_geom_1010_off + 476 * ccomps * dcomps);

            auto g_x_0_z_0_xy_xxxxzzz = cbuffer.data(dk_geom_1010_off + 477 * ccomps * dcomps);

            auto g_x_0_z_0_xy_xxxyyyy = cbuffer.data(dk_geom_1010_off + 478 * ccomps * dcomps);

            auto g_x_0_z_0_xy_xxxyyyz = cbuffer.data(dk_geom_1010_off + 479 * ccomps * dcomps);

            auto g_x_0_z_0_xy_xxxyyzz = cbuffer.data(dk_geom_1010_off + 480 * ccomps * dcomps);

            auto g_x_0_z_0_xy_xxxyzzz = cbuffer.data(dk_geom_1010_off + 481 * ccomps * dcomps);

            auto g_x_0_z_0_xy_xxxzzzz = cbuffer.data(dk_geom_1010_off + 482 * ccomps * dcomps);

            auto g_x_0_z_0_xy_xxyyyyy = cbuffer.data(dk_geom_1010_off + 483 * ccomps * dcomps);

            auto g_x_0_z_0_xy_xxyyyyz = cbuffer.data(dk_geom_1010_off + 484 * ccomps * dcomps);

            auto g_x_0_z_0_xy_xxyyyzz = cbuffer.data(dk_geom_1010_off + 485 * ccomps * dcomps);

            auto g_x_0_z_0_xy_xxyyzzz = cbuffer.data(dk_geom_1010_off + 486 * ccomps * dcomps);

            auto g_x_0_z_0_xy_xxyzzzz = cbuffer.data(dk_geom_1010_off + 487 * ccomps * dcomps);

            auto g_x_0_z_0_xy_xxzzzzz = cbuffer.data(dk_geom_1010_off + 488 * ccomps * dcomps);

            auto g_x_0_z_0_xy_xyyyyyy = cbuffer.data(dk_geom_1010_off + 489 * ccomps * dcomps);

            auto g_x_0_z_0_xy_xyyyyyz = cbuffer.data(dk_geom_1010_off + 490 * ccomps * dcomps);

            auto g_x_0_z_0_xy_xyyyyzz = cbuffer.data(dk_geom_1010_off + 491 * ccomps * dcomps);

            auto g_x_0_z_0_xy_xyyyzzz = cbuffer.data(dk_geom_1010_off + 492 * ccomps * dcomps);

            auto g_x_0_z_0_xy_xyyzzzz = cbuffer.data(dk_geom_1010_off + 493 * ccomps * dcomps);

            auto g_x_0_z_0_xy_xyzzzzz = cbuffer.data(dk_geom_1010_off + 494 * ccomps * dcomps);

            auto g_x_0_z_0_xy_xzzzzzz = cbuffer.data(dk_geom_1010_off + 495 * ccomps * dcomps);

            auto g_x_0_z_0_xy_yyyyyyy = cbuffer.data(dk_geom_1010_off + 496 * ccomps * dcomps);

            auto g_x_0_z_0_xy_yyyyyyz = cbuffer.data(dk_geom_1010_off + 497 * ccomps * dcomps);

            auto g_x_0_z_0_xy_yyyyyzz = cbuffer.data(dk_geom_1010_off + 498 * ccomps * dcomps);

            auto g_x_0_z_0_xy_yyyyzzz = cbuffer.data(dk_geom_1010_off + 499 * ccomps * dcomps);

            auto g_x_0_z_0_xy_yyyzzzz = cbuffer.data(dk_geom_1010_off + 500 * ccomps * dcomps);

            auto g_x_0_z_0_xy_yyzzzzz = cbuffer.data(dk_geom_1010_off + 501 * ccomps * dcomps);

            auto g_x_0_z_0_xy_yzzzzzz = cbuffer.data(dk_geom_1010_off + 502 * ccomps * dcomps);

            auto g_x_0_z_0_xy_zzzzzzz = cbuffer.data(dk_geom_1010_off + 503 * ccomps * dcomps);

            auto g_x_0_z_0_xz_xxxxxxx = cbuffer.data(dk_geom_1010_off + 504 * ccomps * dcomps);

            auto g_x_0_z_0_xz_xxxxxxy = cbuffer.data(dk_geom_1010_off + 505 * ccomps * dcomps);

            auto g_x_0_z_0_xz_xxxxxxz = cbuffer.data(dk_geom_1010_off + 506 * ccomps * dcomps);

            auto g_x_0_z_0_xz_xxxxxyy = cbuffer.data(dk_geom_1010_off + 507 * ccomps * dcomps);

            auto g_x_0_z_0_xz_xxxxxyz = cbuffer.data(dk_geom_1010_off + 508 * ccomps * dcomps);

            auto g_x_0_z_0_xz_xxxxxzz = cbuffer.data(dk_geom_1010_off + 509 * ccomps * dcomps);

            auto g_x_0_z_0_xz_xxxxyyy = cbuffer.data(dk_geom_1010_off + 510 * ccomps * dcomps);

            auto g_x_0_z_0_xz_xxxxyyz = cbuffer.data(dk_geom_1010_off + 511 * ccomps * dcomps);

            auto g_x_0_z_0_xz_xxxxyzz = cbuffer.data(dk_geom_1010_off + 512 * ccomps * dcomps);

            auto g_x_0_z_0_xz_xxxxzzz = cbuffer.data(dk_geom_1010_off + 513 * ccomps * dcomps);

            auto g_x_0_z_0_xz_xxxyyyy = cbuffer.data(dk_geom_1010_off + 514 * ccomps * dcomps);

            auto g_x_0_z_0_xz_xxxyyyz = cbuffer.data(dk_geom_1010_off + 515 * ccomps * dcomps);

            auto g_x_0_z_0_xz_xxxyyzz = cbuffer.data(dk_geom_1010_off + 516 * ccomps * dcomps);

            auto g_x_0_z_0_xz_xxxyzzz = cbuffer.data(dk_geom_1010_off + 517 * ccomps * dcomps);

            auto g_x_0_z_0_xz_xxxzzzz = cbuffer.data(dk_geom_1010_off + 518 * ccomps * dcomps);

            auto g_x_0_z_0_xz_xxyyyyy = cbuffer.data(dk_geom_1010_off + 519 * ccomps * dcomps);

            auto g_x_0_z_0_xz_xxyyyyz = cbuffer.data(dk_geom_1010_off + 520 * ccomps * dcomps);

            auto g_x_0_z_0_xz_xxyyyzz = cbuffer.data(dk_geom_1010_off + 521 * ccomps * dcomps);

            auto g_x_0_z_0_xz_xxyyzzz = cbuffer.data(dk_geom_1010_off + 522 * ccomps * dcomps);

            auto g_x_0_z_0_xz_xxyzzzz = cbuffer.data(dk_geom_1010_off + 523 * ccomps * dcomps);

            auto g_x_0_z_0_xz_xxzzzzz = cbuffer.data(dk_geom_1010_off + 524 * ccomps * dcomps);

            auto g_x_0_z_0_xz_xyyyyyy = cbuffer.data(dk_geom_1010_off + 525 * ccomps * dcomps);

            auto g_x_0_z_0_xz_xyyyyyz = cbuffer.data(dk_geom_1010_off + 526 * ccomps * dcomps);

            auto g_x_0_z_0_xz_xyyyyzz = cbuffer.data(dk_geom_1010_off + 527 * ccomps * dcomps);

            auto g_x_0_z_0_xz_xyyyzzz = cbuffer.data(dk_geom_1010_off + 528 * ccomps * dcomps);

            auto g_x_0_z_0_xz_xyyzzzz = cbuffer.data(dk_geom_1010_off + 529 * ccomps * dcomps);

            auto g_x_0_z_0_xz_xyzzzzz = cbuffer.data(dk_geom_1010_off + 530 * ccomps * dcomps);

            auto g_x_0_z_0_xz_xzzzzzz = cbuffer.data(dk_geom_1010_off + 531 * ccomps * dcomps);

            auto g_x_0_z_0_xz_yyyyyyy = cbuffer.data(dk_geom_1010_off + 532 * ccomps * dcomps);

            auto g_x_0_z_0_xz_yyyyyyz = cbuffer.data(dk_geom_1010_off + 533 * ccomps * dcomps);

            auto g_x_0_z_0_xz_yyyyyzz = cbuffer.data(dk_geom_1010_off + 534 * ccomps * dcomps);

            auto g_x_0_z_0_xz_yyyyzzz = cbuffer.data(dk_geom_1010_off + 535 * ccomps * dcomps);

            auto g_x_0_z_0_xz_yyyzzzz = cbuffer.data(dk_geom_1010_off + 536 * ccomps * dcomps);

            auto g_x_0_z_0_xz_yyzzzzz = cbuffer.data(dk_geom_1010_off + 537 * ccomps * dcomps);

            auto g_x_0_z_0_xz_yzzzzzz = cbuffer.data(dk_geom_1010_off + 538 * ccomps * dcomps);

            auto g_x_0_z_0_xz_zzzzzzz = cbuffer.data(dk_geom_1010_off + 539 * ccomps * dcomps);

            auto g_x_0_z_0_yy_xxxxxxx = cbuffer.data(dk_geom_1010_off + 540 * ccomps * dcomps);

            auto g_x_0_z_0_yy_xxxxxxy = cbuffer.data(dk_geom_1010_off + 541 * ccomps * dcomps);

            auto g_x_0_z_0_yy_xxxxxxz = cbuffer.data(dk_geom_1010_off + 542 * ccomps * dcomps);

            auto g_x_0_z_0_yy_xxxxxyy = cbuffer.data(dk_geom_1010_off + 543 * ccomps * dcomps);

            auto g_x_0_z_0_yy_xxxxxyz = cbuffer.data(dk_geom_1010_off + 544 * ccomps * dcomps);

            auto g_x_0_z_0_yy_xxxxxzz = cbuffer.data(dk_geom_1010_off + 545 * ccomps * dcomps);

            auto g_x_0_z_0_yy_xxxxyyy = cbuffer.data(dk_geom_1010_off + 546 * ccomps * dcomps);

            auto g_x_0_z_0_yy_xxxxyyz = cbuffer.data(dk_geom_1010_off + 547 * ccomps * dcomps);

            auto g_x_0_z_0_yy_xxxxyzz = cbuffer.data(dk_geom_1010_off + 548 * ccomps * dcomps);

            auto g_x_0_z_0_yy_xxxxzzz = cbuffer.data(dk_geom_1010_off + 549 * ccomps * dcomps);

            auto g_x_0_z_0_yy_xxxyyyy = cbuffer.data(dk_geom_1010_off + 550 * ccomps * dcomps);

            auto g_x_0_z_0_yy_xxxyyyz = cbuffer.data(dk_geom_1010_off + 551 * ccomps * dcomps);

            auto g_x_0_z_0_yy_xxxyyzz = cbuffer.data(dk_geom_1010_off + 552 * ccomps * dcomps);

            auto g_x_0_z_0_yy_xxxyzzz = cbuffer.data(dk_geom_1010_off + 553 * ccomps * dcomps);

            auto g_x_0_z_0_yy_xxxzzzz = cbuffer.data(dk_geom_1010_off + 554 * ccomps * dcomps);

            auto g_x_0_z_0_yy_xxyyyyy = cbuffer.data(dk_geom_1010_off + 555 * ccomps * dcomps);

            auto g_x_0_z_0_yy_xxyyyyz = cbuffer.data(dk_geom_1010_off + 556 * ccomps * dcomps);

            auto g_x_0_z_0_yy_xxyyyzz = cbuffer.data(dk_geom_1010_off + 557 * ccomps * dcomps);

            auto g_x_0_z_0_yy_xxyyzzz = cbuffer.data(dk_geom_1010_off + 558 * ccomps * dcomps);

            auto g_x_0_z_0_yy_xxyzzzz = cbuffer.data(dk_geom_1010_off + 559 * ccomps * dcomps);

            auto g_x_0_z_0_yy_xxzzzzz = cbuffer.data(dk_geom_1010_off + 560 * ccomps * dcomps);

            auto g_x_0_z_0_yy_xyyyyyy = cbuffer.data(dk_geom_1010_off + 561 * ccomps * dcomps);

            auto g_x_0_z_0_yy_xyyyyyz = cbuffer.data(dk_geom_1010_off + 562 * ccomps * dcomps);

            auto g_x_0_z_0_yy_xyyyyzz = cbuffer.data(dk_geom_1010_off + 563 * ccomps * dcomps);

            auto g_x_0_z_0_yy_xyyyzzz = cbuffer.data(dk_geom_1010_off + 564 * ccomps * dcomps);

            auto g_x_0_z_0_yy_xyyzzzz = cbuffer.data(dk_geom_1010_off + 565 * ccomps * dcomps);

            auto g_x_0_z_0_yy_xyzzzzz = cbuffer.data(dk_geom_1010_off + 566 * ccomps * dcomps);

            auto g_x_0_z_0_yy_xzzzzzz = cbuffer.data(dk_geom_1010_off + 567 * ccomps * dcomps);

            auto g_x_0_z_0_yy_yyyyyyy = cbuffer.data(dk_geom_1010_off + 568 * ccomps * dcomps);

            auto g_x_0_z_0_yy_yyyyyyz = cbuffer.data(dk_geom_1010_off + 569 * ccomps * dcomps);

            auto g_x_0_z_0_yy_yyyyyzz = cbuffer.data(dk_geom_1010_off + 570 * ccomps * dcomps);

            auto g_x_0_z_0_yy_yyyyzzz = cbuffer.data(dk_geom_1010_off + 571 * ccomps * dcomps);

            auto g_x_0_z_0_yy_yyyzzzz = cbuffer.data(dk_geom_1010_off + 572 * ccomps * dcomps);

            auto g_x_0_z_0_yy_yyzzzzz = cbuffer.data(dk_geom_1010_off + 573 * ccomps * dcomps);

            auto g_x_0_z_0_yy_yzzzzzz = cbuffer.data(dk_geom_1010_off + 574 * ccomps * dcomps);

            auto g_x_0_z_0_yy_zzzzzzz = cbuffer.data(dk_geom_1010_off + 575 * ccomps * dcomps);

            auto g_x_0_z_0_yz_xxxxxxx = cbuffer.data(dk_geom_1010_off + 576 * ccomps * dcomps);

            auto g_x_0_z_0_yz_xxxxxxy = cbuffer.data(dk_geom_1010_off + 577 * ccomps * dcomps);

            auto g_x_0_z_0_yz_xxxxxxz = cbuffer.data(dk_geom_1010_off + 578 * ccomps * dcomps);

            auto g_x_0_z_0_yz_xxxxxyy = cbuffer.data(dk_geom_1010_off + 579 * ccomps * dcomps);

            auto g_x_0_z_0_yz_xxxxxyz = cbuffer.data(dk_geom_1010_off + 580 * ccomps * dcomps);

            auto g_x_0_z_0_yz_xxxxxzz = cbuffer.data(dk_geom_1010_off + 581 * ccomps * dcomps);

            auto g_x_0_z_0_yz_xxxxyyy = cbuffer.data(dk_geom_1010_off + 582 * ccomps * dcomps);

            auto g_x_0_z_0_yz_xxxxyyz = cbuffer.data(dk_geom_1010_off + 583 * ccomps * dcomps);

            auto g_x_0_z_0_yz_xxxxyzz = cbuffer.data(dk_geom_1010_off + 584 * ccomps * dcomps);

            auto g_x_0_z_0_yz_xxxxzzz = cbuffer.data(dk_geom_1010_off + 585 * ccomps * dcomps);

            auto g_x_0_z_0_yz_xxxyyyy = cbuffer.data(dk_geom_1010_off + 586 * ccomps * dcomps);

            auto g_x_0_z_0_yz_xxxyyyz = cbuffer.data(dk_geom_1010_off + 587 * ccomps * dcomps);

            auto g_x_0_z_0_yz_xxxyyzz = cbuffer.data(dk_geom_1010_off + 588 * ccomps * dcomps);

            auto g_x_0_z_0_yz_xxxyzzz = cbuffer.data(dk_geom_1010_off + 589 * ccomps * dcomps);

            auto g_x_0_z_0_yz_xxxzzzz = cbuffer.data(dk_geom_1010_off + 590 * ccomps * dcomps);

            auto g_x_0_z_0_yz_xxyyyyy = cbuffer.data(dk_geom_1010_off + 591 * ccomps * dcomps);

            auto g_x_0_z_0_yz_xxyyyyz = cbuffer.data(dk_geom_1010_off + 592 * ccomps * dcomps);

            auto g_x_0_z_0_yz_xxyyyzz = cbuffer.data(dk_geom_1010_off + 593 * ccomps * dcomps);

            auto g_x_0_z_0_yz_xxyyzzz = cbuffer.data(dk_geom_1010_off + 594 * ccomps * dcomps);

            auto g_x_0_z_0_yz_xxyzzzz = cbuffer.data(dk_geom_1010_off + 595 * ccomps * dcomps);

            auto g_x_0_z_0_yz_xxzzzzz = cbuffer.data(dk_geom_1010_off + 596 * ccomps * dcomps);

            auto g_x_0_z_0_yz_xyyyyyy = cbuffer.data(dk_geom_1010_off + 597 * ccomps * dcomps);

            auto g_x_0_z_0_yz_xyyyyyz = cbuffer.data(dk_geom_1010_off + 598 * ccomps * dcomps);

            auto g_x_0_z_0_yz_xyyyyzz = cbuffer.data(dk_geom_1010_off + 599 * ccomps * dcomps);

            auto g_x_0_z_0_yz_xyyyzzz = cbuffer.data(dk_geom_1010_off + 600 * ccomps * dcomps);

            auto g_x_0_z_0_yz_xyyzzzz = cbuffer.data(dk_geom_1010_off + 601 * ccomps * dcomps);

            auto g_x_0_z_0_yz_xyzzzzz = cbuffer.data(dk_geom_1010_off + 602 * ccomps * dcomps);

            auto g_x_0_z_0_yz_xzzzzzz = cbuffer.data(dk_geom_1010_off + 603 * ccomps * dcomps);

            auto g_x_0_z_0_yz_yyyyyyy = cbuffer.data(dk_geom_1010_off + 604 * ccomps * dcomps);

            auto g_x_0_z_0_yz_yyyyyyz = cbuffer.data(dk_geom_1010_off + 605 * ccomps * dcomps);

            auto g_x_0_z_0_yz_yyyyyzz = cbuffer.data(dk_geom_1010_off + 606 * ccomps * dcomps);

            auto g_x_0_z_0_yz_yyyyzzz = cbuffer.data(dk_geom_1010_off + 607 * ccomps * dcomps);

            auto g_x_0_z_0_yz_yyyzzzz = cbuffer.data(dk_geom_1010_off + 608 * ccomps * dcomps);

            auto g_x_0_z_0_yz_yyzzzzz = cbuffer.data(dk_geom_1010_off + 609 * ccomps * dcomps);

            auto g_x_0_z_0_yz_yzzzzzz = cbuffer.data(dk_geom_1010_off + 610 * ccomps * dcomps);

            auto g_x_0_z_0_yz_zzzzzzz = cbuffer.data(dk_geom_1010_off + 611 * ccomps * dcomps);

            auto g_x_0_z_0_zz_xxxxxxx = cbuffer.data(dk_geom_1010_off + 612 * ccomps * dcomps);

            auto g_x_0_z_0_zz_xxxxxxy = cbuffer.data(dk_geom_1010_off + 613 * ccomps * dcomps);

            auto g_x_0_z_0_zz_xxxxxxz = cbuffer.data(dk_geom_1010_off + 614 * ccomps * dcomps);

            auto g_x_0_z_0_zz_xxxxxyy = cbuffer.data(dk_geom_1010_off + 615 * ccomps * dcomps);

            auto g_x_0_z_0_zz_xxxxxyz = cbuffer.data(dk_geom_1010_off + 616 * ccomps * dcomps);

            auto g_x_0_z_0_zz_xxxxxzz = cbuffer.data(dk_geom_1010_off + 617 * ccomps * dcomps);

            auto g_x_0_z_0_zz_xxxxyyy = cbuffer.data(dk_geom_1010_off + 618 * ccomps * dcomps);

            auto g_x_0_z_0_zz_xxxxyyz = cbuffer.data(dk_geom_1010_off + 619 * ccomps * dcomps);

            auto g_x_0_z_0_zz_xxxxyzz = cbuffer.data(dk_geom_1010_off + 620 * ccomps * dcomps);

            auto g_x_0_z_0_zz_xxxxzzz = cbuffer.data(dk_geom_1010_off + 621 * ccomps * dcomps);

            auto g_x_0_z_0_zz_xxxyyyy = cbuffer.data(dk_geom_1010_off + 622 * ccomps * dcomps);

            auto g_x_0_z_0_zz_xxxyyyz = cbuffer.data(dk_geom_1010_off + 623 * ccomps * dcomps);

            auto g_x_0_z_0_zz_xxxyyzz = cbuffer.data(dk_geom_1010_off + 624 * ccomps * dcomps);

            auto g_x_0_z_0_zz_xxxyzzz = cbuffer.data(dk_geom_1010_off + 625 * ccomps * dcomps);

            auto g_x_0_z_0_zz_xxxzzzz = cbuffer.data(dk_geom_1010_off + 626 * ccomps * dcomps);

            auto g_x_0_z_0_zz_xxyyyyy = cbuffer.data(dk_geom_1010_off + 627 * ccomps * dcomps);

            auto g_x_0_z_0_zz_xxyyyyz = cbuffer.data(dk_geom_1010_off + 628 * ccomps * dcomps);

            auto g_x_0_z_0_zz_xxyyyzz = cbuffer.data(dk_geom_1010_off + 629 * ccomps * dcomps);

            auto g_x_0_z_0_zz_xxyyzzz = cbuffer.data(dk_geom_1010_off + 630 * ccomps * dcomps);

            auto g_x_0_z_0_zz_xxyzzzz = cbuffer.data(dk_geom_1010_off + 631 * ccomps * dcomps);

            auto g_x_0_z_0_zz_xxzzzzz = cbuffer.data(dk_geom_1010_off + 632 * ccomps * dcomps);

            auto g_x_0_z_0_zz_xyyyyyy = cbuffer.data(dk_geom_1010_off + 633 * ccomps * dcomps);

            auto g_x_0_z_0_zz_xyyyyyz = cbuffer.data(dk_geom_1010_off + 634 * ccomps * dcomps);

            auto g_x_0_z_0_zz_xyyyyzz = cbuffer.data(dk_geom_1010_off + 635 * ccomps * dcomps);

            auto g_x_0_z_0_zz_xyyyzzz = cbuffer.data(dk_geom_1010_off + 636 * ccomps * dcomps);

            auto g_x_0_z_0_zz_xyyzzzz = cbuffer.data(dk_geom_1010_off + 637 * ccomps * dcomps);

            auto g_x_0_z_0_zz_xyzzzzz = cbuffer.data(dk_geom_1010_off + 638 * ccomps * dcomps);

            auto g_x_0_z_0_zz_xzzzzzz = cbuffer.data(dk_geom_1010_off + 639 * ccomps * dcomps);

            auto g_x_0_z_0_zz_yyyyyyy = cbuffer.data(dk_geom_1010_off + 640 * ccomps * dcomps);

            auto g_x_0_z_0_zz_yyyyyyz = cbuffer.data(dk_geom_1010_off + 641 * ccomps * dcomps);

            auto g_x_0_z_0_zz_yyyyyzz = cbuffer.data(dk_geom_1010_off + 642 * ccomps * dcomps);

            auto g_x_0_z_0_zz_yyyyzzz = cbuffer.data(dk_geom_1010_off + 643 * ccomps * dcomps);

            auto g_x_0_z_0_zz_yyyzzzz = cbuffer.data(dk_geom_1010_off + 644 * ccomps * dcomps);

            auto g_x_0_z_0_zz_yyzzzzz = cbuffer.data(dk_geom_1010_off + 645 * ccomps * dcomps);

            auto g_x_0_z_0_zz_yzzzzzz = cbuffer.data(dk_geom_1010_off + 646 * ccomps * dcomps);

            auto g_x_0_z_0_zz_zzzzzzz = cbuffer.data(dk_geom_1010_off + 647 * ccomps * dcomps);

            auto g_y_0_x_0_xx_xxxxxxx = cbuffer.data(dk_geom_1010_off + 648 * ccomps * dcomps);

            auto g_y_0_x_0_xx_xxxxxxy = cbuffer.data(dk_geom_1010_off + 649 * ccomps * dcomps);

            auto g_y_0_x_0_xx_xxxxxxz = cbuffer.data(dk_geom_1010_off + 650 * ccomps * dcomps);

            auto g_y_0_x_0_xx_xxxxxyy = cbuffer.data(dk_geom_1010_off + 651 * ccomps * dcomps);

            auto g_y_0_x_0_xx_xxxxxyz = cbuffer.data(dk_geom_1010_off + 652 * ccomps * dcomps);

            auto g_y_0_x_0_xx_xxxxxzz = cbuffer.data(dk_geom_1010_off + 653 * ccomps * dcomps);

            auto g_y_0_x_0_xx_xxxxyyy = cbuffer.data(dk_geom_1010_off + 654 * ccomps * dcomps);

            auto g_y_0_x_0_xx_xxxxyyz = cbuffer.data(dk_geom_1010_off + 655 * ccomps * dcomps);

            auto g_y_0_x_0_xx_xxxxyzz = cbuffer.data(dk_geom_1010_off + 656 * ccomps * dcomps);

            auto g_y_0_x_0_xx_xxxxzzz = cbuffer.data(dk_geom_1010_off + 657 * ccomps * dcomps);

            auto g_y_0_x_0_xx_xxxyyyy = cbuffer.data(dk_geom_1010_off + 658 * ccomps * dcomps);

            auto g_y_0_x_0_xx_xxxyyyz = cbuffer.data(dk_geom_1010_off + 659 * ccomps * dcomps);

            auto g_y_0_x_0_xx_xxxyyzz = cbuffer.data(dk_geom_1010_off + 660 * ccomps * dcomps);

            auto g_y_0_x_0_xx_xxxyzzz = cbuffer.data(dk_geom_1010_off + 661 * ccomps * dcomps);

            auto g_y_0_x_0_xx_xxxzzzz = cbuffer.data(dk_geom_1010_off + 662 * ccomps * dcomps);

            auto g_y_0_x_0_xx_xxyyyyy = cbuffer.data(dk_geom_1010_off + 663 * ccomps * dcomps);

            auto g_y_0_x_0_xx_xxyyyyz = cbuffer.data(dk_geom_1010_off + 664 * ccomps * dcomps);

            auto g_y_0_x_0_xx_xxyyyzz = cbuffer.data(dk_geom_1010_off + 665 * ccomps * dcomps);

            auto g_y_0_x_0_xx_xxyyzzz = cbuffer.data(dk_geom_1010_off + 666 * ccomps * dcomps);

            auto g_y_0_x_0_xx_xxyzzzz = cbuffer.data(dk_geom_1010_off + 667 * ccomps * dcomps);

            auto g_y_0_x_0_xx_xxzzzzz = cbuffer.data(dk_geom_1010_off + 668 * ccomps * dcomps);

            auto g_y_0_x_0_xx_xyyyyyy = cbuffer.data(dk_geom_1010_off + 669 * ccomps * dcomps);

            auto g_y_0_x_0_xx_xyyyyyz = cbuffer.data(dk_geom_1010_off + 670 * ccomps * dcomps);

            auto g_y_0_x_0_xx_xyyyyzz = cbuffer.data(dk_geom_1010_off + 671 * ccomps * dcomps);

            auto g_y_0_x_0_xx_xyyyzzz = cbuffer.data(dk_geom_1010_off + 672 * ccomps * dcomps);

            auto g_y_0_x_0_xx_xyyzzzz = cbuffer.data(dk_geom_1010_off + 673 * ccomps * dcomps);

            auto g_y_0_x_0_xx_xyzzzzz = cbuffer.data(dk_geom_1010_off + 674 * ccomps * dcomps);

            auto g_y_0_x_0_xx_xzzzzzz = cbuffer.data(dk_geom_1010_off + 675 * ccomps * dcomps);

            auto g_y_0_x_0_xx_yyyyyyy = cbuffer.data(dk_geom_1010_off + 676 * ccomps * dcomps);

            auto g_y_0_x_0_xx_yyyyyyz = cbuffer.data(dk_geom_1010_off + 677 * ccomps * dcomps);

            auto g_y_0_x_0_xx_yyyyyzz = cbuffer.data(dk_geom_1010_off + 678 * ccomps * dcomps);

            auto g_y_0_x_0_xx_yyyyzzz = cbuffer.data(dk_geom_1010_off + 679 * ccomps * dcomps);

            auto g_y_0_x_0_xx_yyyzzzz = cbuffer.data(dk_geom_1010_off + 680 * ccomps * dcomps);

            auto g_y_0_x_0_xx_yyzzzzz = cbuffer.data(dk_geom_1010_off + 681 * ccomps * dcomps);

            auto g_y_0_x_0_xx_yzzzzzz = cbuffer.data(dk_geom_1010_off + 682 * ccomps * dcomps);

            auto g_y_0_x_0_xx_zzzzzzz = cbuffer.data(dk_geom_1010_off + 683 * ccomps * dcomps);

            auto g_y_0_x_0_xy_xxxxxxx = cbuffer.data(dk_geom_1010_off + 684 * ccomps * dcomps);

            auto g_y_0_x_0_xy_xxxxxxy = cbuffer.data(dk_geom_1010_off + 685 * ccomps * dcomps);

            auto g_y_0_x_0_xy_xxxxxxz = cbuffer.data(dk_geom_1010_off + 686 * ccomps * dcomps);

            auto g_y_0_x_0_xy_xxxxxyy = cbuffer.data(dk_geom_1010_off + 687 * ccomps * dcomps);

            auto g_y_0_x_0_xy_xxxxxyz = cbuffer.data(dk_geom_1010_off + 688 * ccomps * dcomps);

            auto g_y_0_x_0_xy_xxxxxzz = cbuffer.data(dk_geom_1010_off + 689 * ccomps * dcomps);

            auto g_y_0_x_0_xy_xxxxyyy = cbuffer.data(dk_geom_1010_off + 690 * ccomps * dcomps);

            auto g_y_0_x_0_xy_xxxxyyz = cbuffer.data(dk_geom_1010_off + 691 * ccomps * dcomps);

            auto g_y_0_x_0_xy_xxxxyzz = cbuffer.data(dk_geom_1010_off + 692 * ccomps * dcomps);

            auto g_y_0_x_0_xy_xxxxzzz = cbuffer.data(dk_geom_1010_off + 693 * ccomps * dcomps);

            auto g_y_0_x_0_xy_xxxyyyy = cbuffer.data(dk_geom_1010_off + 694 * ccomps * dcomps);

            auto g_y_0_x_0_xy_xxxyyyz = cbuffer.data(dk_geom_1010_off + 695 * ccomps * dcomps);

            auto g_y_0_x_0_xy_xxxyyzz = cbuffer.data(dk_geom_1010_off + 696 * ccomps * dcomps);

            auto g_y_0_x_0_xy_xxxyzzz = cbuffer.data(dk_geom_1010_off + 697 * ccomps * dcomps);

            auto g_y_0_x_0_xy_xxxzzzz = cbuffer.data(dk_geom_1010_off + 698 * ccomps * dcomps);

            auto g_y_0_x_0_xy_xxyyyyy = cbuffer.data(dk_geom_1010_off + 699 * ccomps * dcomps);

            auto g_y_0_x_0_xy_xxyyyyz = cbuffer.data(dk_geom_1010_off + 700 * ccomps * dcomps);

            auto g_y_0_x_0_xy_xxyyyzz = cbuffer.data(dk_geom_1010_off + 701 * ccomps * dcomps);

            auto g_y_0_x_0_xy_xxyyzzz = cbuffer.data(dk_geom_1010_off + 702 * ccomps * dcomps);

            auto g_y_0_x_0_xy_xxyzzzz = cbuffer.data(dk_geom_1010_off + 703 * ccomps * dcomps);

            auto g_y_0_x_0_xy_xxzzzzz = cbuffer.data(dk_geom_1010_off + 704 * ccomps * dcomps);

            auto g_y_0_x_0_xy_xyyyyyy = cbuffer.data(dk_geom_1010_off + 705 * ccomps * dcomps);

            auto g_y_0_x_0_xy_xyyyyyz = cbuffer.data(dk_geom_1010_off + 706 * ccomps * dcomps);

            auto g_y_0_x_0_xy_xyyyyzz = cbuffer.data(dk_geom_1010_off + 707 * ccomps * dcomps);

            auto g_y_0_x_0_xy_xyyyzzz = cbuffer.data(dk_geom_1010_off + 708 * ccomps * dcomps);

            auto g_y_0_x_0_xy_xyyzzzz = cbuffer.data(dk_geom_1010_off + 709 * ccomps * dcomps);

            auto g_y_0_x_0_xy_xyzzzzz = cbuffer.data(dk_geom_1010_off + 710 * ccomps * dcomps);

            auto g_y_0_x_0_xy_xzzzzzz = cbuffer.data(dk_geom_1010_off + 711 * ccomps * dcomps);

            auto g_y_0_x_0_xy_yyyyyyy = cbuffer.data(dk_geom_1010_off + 712 * ccomps * dcomps);

            auto g_y_0_x_0_xy_yyyyyyz = cbuffer.data(dk_geom_1010_off + 713 * ccomps * dcomps);

            auto g_y_0_x_0_xy_yyyyyzz = cbuffer.data(dk_geom_1010_off + 714 * ccomps * dcomps);

            auto g_y_0_x_0_xy_yyyyzzz = cbuffer.data(dk_geom_1010_off + 715 * ccomps * dcomps);

            auto g_y_0_x_0_xy_yyyzzzz = cbuffer.data(dk_geom_1010_off + 716 * ccomps * dcomps);

            auto g_y_0_x_0_xy_yyzzzzz = cbuffer.data(dk_geom_1010_off + 717 * ccomps * dcomps);

            auto g_y_0_x_0_xy_yzzzzzz = cbuffer.data(dk_geom_1010_off + 718 * ccomps * dcomps);

            auto g_y_0_x_0_xy_zzzzzzz = cbuffer.data(dk_geom_1010_off + 719 * ccomps * dcomps);

            auto g_y_0_x_0_xz_xxxxxxx = cbuffer.data(dk_geom_1010_off + 720 * ccomps * dcomps);

            auto g_y_0_x_0_xz_xxxxxxy = cbuffer.data(dk_geom_1010_off + 721 * ccomps * dcomps);

            auto g_y_0_x_0_xz_xxxxxxz = cbuffer.data(dk_geom_1010_off + 722 * ccomps * dcomps);

            auto g_y_0_x_0_xz_xxxxxyy = cbuffer.data(dk_geom_1010_off + 723 * ccomps * dcomps);

            auto g_y_0_x_0_xz_xxxxxyz = cbuffer.data(dk_geom_1010_off + 724 * ccomps * dcomps);

            auto g_y_0_x_0_xz_xxxxxzz = cbuffer.data(dk_geom_1010_off + 725 * ccomps * dcomps);

            auto g_y_0_x_0_xz_xxxxyyy = cbuffer.data(dk_geom_1010_off + 726 * ccomps * dcomps);

            auto g_y_0_x_0_xz_xxxxyyz = cbuffer.data(dk_geom_1010_off + 727 * ccomps * dcomps);

            auto g_y_0_x_0_xz_xxxxyzz = cbuffer.data(dk_geom_1010_off + 728 * ccomps * dcomps);

            auto g_y_0_x_0_xz_xxxxzzz = cbuffer.data(dk_geom_1010_off + 729 * ccomps * dcomps);

            auto g_y_0_x_0_xz_xxxyyyy = cbuffer.data(dk_geom_1010_off + 730 * ccomps * dcomps);

            auto g_y_0_x_0_xz_xxxyyyz = cbuffer.data(dk_geom_1010_off + 731 * ccomps * dcomps);

            auto g_y_0_x_0_xz_xxxyyzz = cbuffer.data(dk_geom_1010_off + 732 * ccomps * dcomps);

            auto g_y_0_x_0_xz_xxxyzzz = cbuffer.data(dk_geom_1010_off + 733 * ccomps * dcomps);

            auto g_y_0_x_0_xz_xxxzzzz = cbuffer.data(dk_geom_1010_off + 734 * ccomps * dcomps);

            auto g_y_0_x_0_xz_xxyyyyy = cbuffer.data(dk_geom_1010_off + 735 * ccomps * dcomps);

            auto g_y_0_x_0_xz_xxyyyyz = cbuffer.data(dk_geom_1010_off + 736 * ccomps * dcomps);

            auto g_y_0_x_0_xz_xxyyyzz = cbuffer.data(dk_geom_1010_off + 737 * ccomps * dcomps);

            auto g_y_0_x_0_xz_xxyyzzz = cbuffer.data(dk_geom_1010_off + 738 * ccomps * dcomps);

            auto g_y_0_x_0_xz_xxyzzzz = cbuffer.data(dk_geom_1010_off + 739 * ccomps * dcomps);

            auto g_y_0_x_0_xz_xxzzzzz = cbuffer.data(dk_geom_1010_off + 740 * ccomps * dcomps);

            auto g_y_0_x_0_xz_xyyyyyy = cbuffer.data(dk_geom_1010_off + 741 * ccomps * dcomps);

            auto g_y_0_x_0_xz_xyyyyyz = cbuffer.data(dk_geom_1010_off + 742 * ccomps * dcomps);

            auto g_y_0_x_0_xz_xyyyyzz = cbuffer.data(dk_geom_1010_off + 743 * ccomps * dcomps);

            auto g_y_0_x_0_xz_xyyyzzz = cbuffer.data(dk_geom_1010_off + 744 * ccomps * dcomps);

            auto g_y_0_x_0_xz_xyyzzzz = cbuffer.data(dk_geom_1010_off + 745 * ccomps * dcomps);

            auto g_y_0_x_0_xz_xyzzzzz = cbuffer.data(dk_geom_1010_off + 746 * ccomps * dcomps);

            auto g_y_0_x_0_xz_xzzzzzz = cbuffer.data(dk_geom_1010_off + 747 * ccomps * dcomps);

            auto g_y_0_x_0_xz_yyyyyyy = cbuffer.data(dk_geom_1010_off + 748 * ccomps * dcomps);

            auto g_y_0_x_0_xz_yyyyyyz = cbuffer.data(dk_geom_1010_off + 749 * ccomps * dcomps);

            auto g_y_0_x_0_xz_yyyyyzz = cbuffer.data(dk_geom_1010_off + 750 * ccomps * dcomps);

            auto g_y_0_x_0_xz_yyyyzzz = cbuffer.data(dk_geom_1010_off + 751 * ccomps * dcomps);

            auto g_y_0_x_0_xz_yyyzzzz = cbuffer.data(dk_geom_1010_off + 752 * ccomps * dcomps);

            auto g_y_0_x_0_xz_yyzzzzz = cbuffer.data(dk_geom_1010_off + 753 * ccomps * dcomps);

            auto g_y_0_x_0_xz_yzzzzzz = cbuffer.data(dk_geom_1010_off + 754 * ccomps * dcomps);

            auto g_y_0_x_0_xz_zzzzzzz = cbuffer.data(dk_geom_1010_off + 755 * ccomps * dcomps);

            auto g_y_0_x_0_yy_xxxxxxx = cbuffer.data(dk_geom_1010_off + 756 * ccomps * dcomps);

            auto g_y_0_x_0_yy_xxxxxxy = cbuffer.data(dk_geom_1010_off + 757 * ccomps * dcomps);

            auto g_y_0_x_0_yy_xxxxxxz = cbuffer.data(dk_geom_1010_off + 758 * ccomps * dcomps);

            auto g_y_0_x_0_yy_xxxxxyy = cbuffer.data(dk_geom_1010_off + 759 * ccomps * dcomps);

            auto g_y_0_x_0_yy_xxxxxyz = cbuffer.data(dk_geom_1010_off + 760 * ccomps * dcomps);

            auto g_y_0_x_0_yy_xxxxxzz = cbuffer.data(dk_geom_1010_off + 761 * ccomps * dcomps);

            auto g_y_0_x_0_yy_xxxxyyy = cbuffer.data(dk_geom_1010_off + 762 * ccomps * dcomps);

            auto g_y_0_x_0_yy_xxxxyyz = cbuffer.data(dk_geom_1010_off + 763 * ccomps * dcomps);

            auto g_y_0_x_0_yy_xxxxyzz = cbuffer.data(dk_geom_1010_off + 764 * ccomps * dcomps);

            auto g_y_0_x_0_yy_xxxxzzz = cbuffer.data(dk_geom_1010_off + 765 * ccomps * dcomps);

            auto g_y_0_x_0_yy_xxxyyyy = cbuffer.data(dk_geom_1010_off + 766 * ccomps * dcomps);

            auto g_y_0_x_0_yy_xxxyyyz = cbuffer.data(dk_geom_1010_off + 767 * ccomps * dcomps);

            auto g_y_0_x_0_yy_xxxyyzz = cbuffer.data(dk_geom_1010_off + 768 * ccomps * dcomps);

            auto g_y_0_x_0_yy_xxxyzzz = cbuffer.data(dk_geom_1010_off + 769 * ccomps * dcomps);

            auto g_y_0_x_0_yy_xxxzzzz = cbuffer.data(dk_geom_1010_off + 770 * ccomps * dcomps);

            auto g_y_0_x_0_yy_xxyyyyy = cbuffer.data(dk_geom_1010_off + 771 * ccomps * dcomps);

            auto g_y_0_x_0_yy_xxyyyyz = cbuffer.data(dk_geom_1010_off + 772 * ccomps * dcomps);

            auto g_y_0_x_0_yy_xxyyyzz = cbuffer.data(dk_geom_1010_off + 773 * ccomps * dcomps);

            auto g_y_0_x_0_yy_xxyyzzz = cbuffer.data(dk_geom_1010_off + 774 * ccomps * dcomps);

            auto g_y_0_x_0_yy_xxyzzzz = cbuffer.data(dk_geom_1010_off + 775 * ccomps * dcomps);

            auto g_y_0_x_0_yy_xxzzzzz = cbuffer.data(dk_geom_1010_off + 776 * ccomps * dcomps);

            auto g_y_0_x_0_yy_xyyyyyy = cbuffer.data(dk_geom_1010_off + 777 * ccomps * dcomps);

            auto g_y_0_x_0_yy_xyyyyyz = cbuffer.data(dk_geom_1010_off + 778 * ccomps * dcomps);

            auto g_y_0_x_0_yy_xyyyyzz = cbuffer.data(dk_geom_1010_off + 779 * ccomps * dcomps);

            auto g_y_0_x_0_yy_xyyyzzz = cbuffer.data(dk_geom_1010_off + 780 * ccomps * dcomps);

            auto g_y_0_x_0_yy_xyyzzzz = cbuffer.data(dk_geom_1010_off + 781 * ccomps * dcomps);

            auto g_y_0_x_0_yy_xyzzzzz = cbuffer.data(dk_geom_1010_off + 782 * ccomps * dcomps);

            auto g_y_0_x_0_yy_xzzzzzz = cbuffer.data(dk_geom_1010_off + 783 * ccomps * dcomps);

            auto g_y_0_x_0_yy_yyyyyyy = cbuffer.data(dk_geom_1010_off + 784 * ccomps * dcomps);

            auto g_y_0_x_0_yy_yyyyyyz = cbuffer.data(dk_geom_1010_off + 785 * ccomps * dcomps);

            auto g_y_0_x_0_yy_yyyyyzz = cbuffer.data(dk_geom_1010_off + 786 * ccomps * dcomps);

            auto g_y_0_x_0_yy_yyyyzzz = cbuffer.data(dk_geom_1010_off + 787 * ccomps * dcomps);

            auto g_y_0_x_0_yy_yyyzzzz = cbuffer.data(dk_geom_1010_off + 788 * ccomps * dcomps);

            auto g_y_0_x_0_yy_yyzzzzz = cbuffer.data(dk_geom_1010_off + 789 * ccomps * dcomps);

            auto g_y_0_x_0_yy_yzzzzzz = cbuffer.data(dk_geom_1010_off + 790 * ccomps * dcomps);

            auto g_y_0_x_0_yy_zzzzzzz = cbuffer.data(dk_geom_1010_off + 791 * ccomps * dcomps);

            auto g_y_0_x_0_yz_xxxxxxx = cbuffer.data(dk_geom_1010_off + 792 * ccomps * dcomps);

            auto g_y_0_x_0_yz_xxxxxxy = cbuffer.data(dk_geom_1010_off + 793 * ccomps * dcomps);

            auto g_y_0_x_0_yz_xxxxxxz = cbuffer.data(dk_geom_1010_off + 794 * ccomps * dcomps);

            auto g_y_0_x_0_yz_xxxxxyy = cbuffer.data(dk_geom_1010_off + 795 * ccomps * dcomps);

            auto g_y_0_x_0_yz_xxxxxyz = cbuffer.data(dk_geom_1010_off + 796 * ccomps * dcomps);

            auto g_y_0_x_0_yz_xxxxxzz = cbuffer.data(dk_geom_1010_off + 797 * ccomps * dcomps);

            auto g_y_0_x_0_yz_xxxxyyy = cbuffer.data(dk_geom_1010_off + 798 * ccomps * dcomps);

            auto g_y_0_x_0_yz_xxxxyyz = cbuffer.data(dk_geom_1010_off + 799 * ccomps * dcomps);

            auto g_y_0_x_0_yz_xxxxyzz = cbuffer.data(dk_geom_1010_off + 800 * ccomps * dcomps);

            auto g_y_0_x_0_yz_xxxxzzz = cbuffer.data(dk_geom_1010_off + 801 * ccomps * dcomps);

            auto g_y_0_x_0_yz_xxxyyyy = cbuffer.data(dk_geom_1010_off + 802 * ccomps * dcomps);

            auto g_y_0_x_0_yz_xxxyyyz = cbuffer.data(dk_geom_1010_off + 803 * ccomps * dcomps);

            auto g_y_0_x_0_yz_xxxyyzz = cbuffer.data(dk_geom_1010_off + 804 * ccomps * dcomps);

            auto g_y_0_x_0_yz_xxxyzzz = cbuffer.data(dk_geom_1010_off + 805 * ccomps * dcomps);

            auto g_y_0_x_0_yz_xxxzzzz = cbuffer.data(dk_geom_1010_off + 806 * ccomps * dcomps);

            auto g_y_0_x_0_yz_xxyyyyy = cbuffer.data(dk_geom_1010_off + 807 * ccomps * dcomps);

            auto g_y_0_x_0_yz_xxyyyyz = cbuffer.data(dk_geom_1010_off + 808 * ccomps * dcomps);

            auto g_y_0_x_0_yz_xxyyyzz = cbuffer.data(dk_geom_1010_off + 809 * ccomps * dcomps);

            auto g_y_0_x_0_yz_xxyyzzz = cbuffer.data(dk_geom_1010_off + 810 * ccomps * dcomps);

            auto g_y_0_x_0_yz_xxyzzzz = cbuffer.data(dk_geom_1010_off + 811 * ccomps * dcomps);

            auto g_y_0_x_0_yz_xxzzzzz = cbuffer.data(dk_geom_1010_off + 812 * ccomps * dcomps);

            auto g_y_0_x_0_yz_xyyyyyy = cbuffer.data(dk_geom_1010_off + 813 * ccomps * dcomps);

            auto g_y_0_x_0_yz_xyyyyyz = cbuffer.data(dk_geom_1010_off + 814 * ccomps * dcomps);

            auto g_y_0_x_0_yz_xyyyyzz = cbuffer.data(dk_geom_1010_off + 815 * ccomps * dcomps);

            auto g_y_0_x_0_yz_xyyyzzz = cbuffer.data(dk_geom_1010_off + 816 * ccomps * dcomps);

            auto g_y_0_x_0_yz_xyyzzzz = cbuffer.data(dk_geom_1010_off + 817 * ccomps * dcomps);

            auto g_y_0_x_0_yz_xyzzzzz = cbuffer.data(dk_geom_1010_off + 818 * ccomps * dcomps);

            auto g_y_0_x_0_yz_xzzzzzz = cbuffer.data(dk_geom_1010_off + 819 * ccomps * dcomps);

            auto g_y_0_x_0_yz_yyyyyyy = cbuffer.data(dk_geom_1010_off + 820 * ccomps * dcomps);

            auto g_y_0_x_0_yz_yyyyyyz = cbuffer.data(dk_geom_1010_off + 821 * ccomps * dcomps);

            auto g_y_0_x_0_yz_yyyyyzz = cbuffer.data(dk_geom_1010_off + 822 * ccomps * dcomps);

            auto g_y_0_x_0_yz_yyyyzzz = cbuffer.data(dk_geom_1010_off + 823 * ccomps * dcomps);

            auto g_y_0_x_0_yz_yyyzzzz = cbuffer.data(dk_geom_1010_off + 824 * ccomps * dcomps);

            auto g_y_0_x_0_yz_yyzzzzz = cbuffer.data(dk_geom_1010_off + 825 * ccomps * dcomps);

            auto g_y_0_x_0_yz_yzzzzzz = cbuffer.data(dk_geom_1010_off + 826 * ccomps * dcomps);

            auto g_y_0_x_0_yz_zzzzzzz = cbuffer.data(dk_geom_1010_off + 827 * ccomps * dcomps);

            auto g_y_0_x_0_zz_xxxxxxx = cbuffer.data(dk_geom_1010_off + 828 * ccomps * dcomps);

            auto g_y_0_x_0_zz_xxxxxxy = cbuffer.data(dk_geom_1010_off + 829 * ccomps * dcomps);

            auto g_y_0_x_0_zz_xxxxxxz = cbuffer.data(dk_geom_1010_off + 830 * ccomps * dcomps);

            auto g_y_0_x_0_zz_xxxxxyy = cbuffer.data(dk_geom_1010_off + 831 * ccomps * dcomps);

            auto g_y_0_x_0_zz_xxxxxyz = cbuffer.data(dk_geom_1010_off + 832 * ccomps * dcomps);

            auto g_y_0_x_0_zz_xxxxxzz = cbuffer.data(dk_geom_1010_off + 833 * ccomps * dcomps);

            auto g_y_0_x_0_zz_xxxxyyy = cbuffer.data(dk_geom_1010_off + 834 * ccomps * dcomps);

            auto g_y_0_x_0_zz_xxxxyyz = cbuffer.data(dk_geom_1010_off + 835 * ccomps * dcomps);

            auto g_y_0_x_0_zz_xxxxyzz = cbuffer.data(dk_geom_1010_off + 836 * ccomps * dcomps);

            auto g_y_0_x_0_zz_xxxxzzz = cbuffer.data(dk_geom_1010_off + 837 * ccomps * dcomps);

            auto g_y_0_x_0_zz_xxxyyyy = cbuffer.data(dk_geom_1010_off + 838 * ccomps * dcomps);

            auto g_y_0_x_0_zz_xxxyyyz = cbuffer.data(dk_geom_1010_off + 839 * ccomps * dcomps);

            auto g_y_0_x_0_zz_xxxyyzz = cbuffer.data(dk_geom_1010_off + 840 * ccomps * dcomps);

            auto g_y_0_x_0_zz_xxxyzzz = cbuffer.data(dk_geom_1010_off + 841 * ccomps * dcomps);

            auto g_y_0_x_0_zz_xxxzzzz = cbuffer.data(dk_geom_1010_off + 842 * ccomps * dcomps);

            auto g_y_0_x_0_zz_xxyyyyy = cbuffer.data(dk_geom_1010_off + 843 * ccomps * dcomps);

            auto g_y_0_x_0_zz_xxyyyyz = cbuffer.data(dk_geom_1010_off + 844 * ccomps * dcomps);

            auto g_y_0_x_0_zz_xxyyyzz = cbuffer.data(dk_geom_1010_off + 845 * ccomps * dcomps);

            auto g_y_0_x_0_zz_xxyyzzz = cbuffer.data(dk_geom_1010_off + 846 * ccomps * dcomps);

            auto g_y_0_x_0_zz_xxyzzzz = cbuffer.data(dk_geom_1010_off + 847 * ccomps * dcomps);

            auto g_y_0_x_0_zz_xxzzzzz = cbuffer.data(dk_geom_1010_off + 848 * ccomps * dcomps);

            auto g_y_0_x_0_zz_xyyyyyy = cbuffer.data(dk_geom_1010_off + 849 * ccomps * dcomps);

            auto g_y_0_x_0_zz_xyyyyyz = cbuffer.data(dk_geom_1010_off + 850 * ccomps * dcomps);

            auto g_y_0_x_0_zz_xyyyyzz = cbuffer.data(dk_geom_1010_off + 851 * ccomps * dcomps);

            auto g_y_0_x_0_zz_xyyyzzz = cbuffer.data(dk_geom_1010_off + 852 * ccomps * dcomps);

            auto g_y_0_x_0_zz_xyyzzzz = cbuffer.data(dk_geom_1010_off + 853 * ccomps * dcomps);

            auto g_y_0_x_0_zz_xyzzzzz = cbuffer.data(dk_geom_1010_off + 854 * ccomps * dcomps);

            auto g_y_0_x_0_zz_xzzzzzz = cbuffer.data(dk_geom_1010_off + 855 * ccomps * dcomps);

            auto g_y_0_x_0_zz_yyyyyyy = cbuffer.data(dk_geom_1010_off + 856 * ccomps * dcomps);

            auto g_y_0_x_0_zz_yyyyyyz = cbuffer.data(dk_geom_1010_off + 857 * ccomps * dcomps);

            auto g_y_0_x_0_zz_yyyyyzz = cbuffer.data(dk_geom_1010_off + 858 * ccomps * dcomps);

            auto g_y_0_x_0_zz_yyyyzzz = cbuffer.data(dk_geom_1010_off + 859 * ccomps * dcomps);

            auto g_y_0_x_0_zz_yyyzzzz = cbuffer.data(dk_geom_1010_off + 860 * ccomps * dcomps);

            auto g_y_0_x_0_zz_yyzzzzz = cbuffer.data(dk_geom_1010_off + 861 * ccomps * dcomps);

            auto g_y_0_x_0_zz_yzzzzzz = cbuffer.data(dk_geom_1010_off + 862 * ccomps * dcomps);

            auto g_y_0_x_0_zz_zzzzzzz = cbuffer.data(dk_geom_1010_off + 863 * ccomps * dcomps);

            auto g_y_0_y_0_xx_xxxxxxx = cbuffer.data(dk_geom_1010_off + 864 * ccomps * dcomps);

            auto g_y_0_y_0_xx_xxxxxxy = cbuffer.data(dk_geom_1010_off + 865 * ccomps * dcomps);

            auto g_y_0_y_0_xx_xxxxxxz = cbuffer.data(dk_geom_1010_off + 866 * ccomps * dcomps);

            auto g_y_0_y_0_xx_xxxxxyy = cbuffer.data(dk_geom_1010_off + 867 * ccomps * dcomps);

            auto g_y_0_y_0_xx_xxxxxyz = cbuffer.data(dk_geom_1010_off + 868 * ccomps * dcomps);

            auto g_y_0_y_0_xx_xxxxxzz = cbuffer.data(dk_geom_1010_off + 869 * ccomps * dcomps);

            auto g_y_0_y_0_xx_xxxxyyy = cbuffer.data(dk_geom_1010_off + 870 * ccomps * dcomps);

            auto g_y_0_y_0_xx_xxxxyyz = cbuffer.data(dk_geom_1010_off + 871 * ccomps * dcomps);

            auto g_y_0_y_0_xx_xxxxyzz = cbuffer.data(dk_geom_1010_off + 872 * ccomps * dcomps);

            auto g_y_0_y_0_xx_xxxxzzz = cbuffer.data(dk_geom_1010_off + 873 * ccomps * dcomps);

            auto g_y_0_y_0_xx_xxxyyyy = cbuffer.data(dk_geom_1010_off + 874 * ccomps * dcomps);

            auto g_y_0_y_0_xx_xxxyyyz = cbuffer.data(dk_geom_1010_off + 875 * ccomps * dcomps);

            auto g_y_0_y_0_xx_xxxyyzz = cbuffer.data(dk_geom_1010_off + 876 * ccomps * dcomps);

            auto g_y_0_y_0_xx_xxxyzzz = cbuffer.data(dk_geom_1010_off + 877 * ccomps * dcomps);

            auto g_y_0_y_0_xx_xxxzzzz = cbuffer.data(dk_geom_1010_off + 878 * ccomps * dcomps);

            auto g_y_0_y_0_xx_xxyyyyy = cbuffer.data(dk_geom_1010_off + 879 * ccomps * dcomps);

            auto g_y_0_y_0_xx_xxyyyyz = cbuffer.data(dk_geom_1010_off + 880 * ccomps * dcomps);

            auto g_y_0_y_0_xx_xxyyyzz = cbuffer.data(dk_geom_1010_off + 881 * ccomps * dcomps);

            auto g_y_0_y_0_xx_xxyyzzz = cbuffer.data(dk_geom_1010_off + 882 * ccomps * dcomps);

            auto g_y_0_y_0_xx_xxyzzzz = cbuffer.data(dk_geom_1010_off + 883 * ccomps * dcomps);

            auto g_y_0_y_0_xx_xxzzzzz = cbuffer.data(dk_geom_1010_off + 884 * ccomps * dcomps);

            auto g_y_0_y_0_xx_xyyyyyy = cbuffer.data(dk_geom_1010_off + 885 * ccomps * dcomps);

            auto g_y_0_y_0_xx_xyyyyyz = cbuffer.data(dk_geom_1010_off + 886 * ccomps * dcomps);

            auto g_y_0_y_0_xx_xyyyyzz = cbuffer.data(dk_geom_1010_off + 887 * ccomps * dcomps);

            auto g_y_0_y_0_xx_xyyyzzz = cbuffer.data(dk_geom_1010_off + 888 * ccomps * dcomps);

            auto g_y_0_y_0_xx_xyyzzzz = cbuffer.data(dk_geom_1010_off + 889 * ccomps * dcomps);

            auto g_y_0_y_0_xx_xyzzzzz = cbuffer.data(dk_geom_1010_off + 890 * ccomps * dcomps);

            auto g_y_0_y_0_xx_xzzzzzz = cbuffer.data(dk_geom_1010_off + 891 * ccomps * dcomps);

            auto g_y_0_y_0_xx_yyyyyyy = cbuffer.data(dk_geom_1010_off + 892 * ccomps * dcomps);

            auto g_y_0_y_0_xx_yyyyyyz = cbuffer.data(dk_geom_1010_off + 893 * ccomps * dcomps);

            auto g_y_0_y_0_xx_yyyyyzz = cbuffer.data(dk_geom_1010_off + 894 * ccomps * dcomps);

            auto g_y_0_y_0_xx_yyyyzzz = cbuffer.data(dk_geom_1010_off + 895 * ccomps * dcomps);

            auto g_y_0_y_0_xx_yyyzzzz = cbuffer.data(dk_geom_1010_off + 896 * ccomps * dcomps);

            auto g_y_0_y_0_xx_yyzzzzz = cbuffer.data(dk_geom_1010_off + 897 * ccomps * dcomps);

            auto g_y_0_y_0_xx_yzzzzzz = cbuffer.data(dk_geom_1010_off + 898 * ccomps * dcomps);

            auto g_y_0_y_0_xx_zzzzzzz = cbuffer.data(dk_geom_1010_off + 899 * ccomps * dcomps);

            auto g_y_0_y_0_xy_xxxxxxx = cbuffer.data(dk_geom_1010_off + 900 * ccomps * dcomps);

            auto g_y_0_y_0_xy_xxxxxxy = cbuffer.data(dk_geom_1010_off + 901 * ccomps * dcomps);

            auto g_y_0_y_0_xy_xxxxxxz = cbuffer.data(dk_geom_1010_off + 902 * ccomps * dcomps);

            auto g_y_0_y_0_xy_xxxxxyy = cbuffer.data(dk_geom_1010_off + 903 * ccomps * dcomps);

            auto g_y_0_y_0_xy_xxxxxyz = cbuffer.data(dk_geom_1010_off + 904 * ccomps * dcomps);

            auto g_y_0_y_0_xy_xxxxxzz = cbuffer.data(dk_geom_1010_off + 905 * ccomps * dcomps);

            auto g_y_0_y_0_xy_xxxxyyy = cbuffer.data(dk_geom_1010_off + 906 * ccomps * dcomps);

            auto g_y_0_y_0_xy_xxxxyyz = cbuffer.data(dk_geom_1010_off + 907 * ccomps * dcomps);

            auto g_y_0_y_0_xy_xxxxyzz = cbuffer.data(dk_geom_1010_off + 908 * ccomps * dcomps);

            auto g_y_0_y_0_xy_xxxxzzz = cbuffer.data(dk_geom_1010_off + 909 * ccomps * dcomps);

            auto g_y_0_y_0_xy_xxxyyyy = cbuffer.data(dk_geom_1010_off + 910 * ccomps * dcomps);

            auto g_y_0_y_0_xy_xxxyyyz = cbuffer.data(dk_geom_1010_off + 911 * ccomps * dcomps);

            auto g_y_0_y_0_xy_xxxyyzz = cbuffer.data(dk_geom_1010_off + 912 * ccomps * dcomps);

            auto g_y_0_y_0_xy_xxxyzzz = cbuffer.data(dk_geom_1010_off + 913 * ccomps * dcomps);

            auto g_y_0_y_0_xy_xxxzzzz = cbuffer.data(dk_geom_1010_off + 914 * ccomps * dcomps);

            auto g_y_0_y_0_xy_xxyyyyy = cbuffer.data(dk_geom_1010_off + 915 * ccomps * dcomps);

            auto g_y_0_y_0_xy_xxyyyyz = cbuffer.data(dk_geom_1010_off + 916 * ccomps * dcomps);

            auto g_y_0_y_0_xy_xxyyyzz = cbuffer.data(dk_geom_1010_off + 917 * ccomps * dcomps);

            auto g_y_0_y_0_xy_xxyyzzz = cbuffer.data(dk_geom_1010_off + 918 * ccomps * dcomps);

            auto g_y_0_y_0_xy_xxyzzzz = cbuffer.data(dk_geom_1010_off + 919 * ccomps * dcomps);

            auto g_y_0_y_0_xy_xxzzzzz = cbuffer.data(dk_geom_1010_off + 920 * ccomps * dcomps);

            auto g_y_0_y_0_xy_xyyyyyy = cbuffer.data(dk_geom_1010_off + 921 * ccomps * dcomps);

            auto g_y_0_y_0_xy_xyyyyyz = cbuffer.data(dk_geom_1010_off + 922 * ccomps * dcomps);

            auto g_y_0_y_0_xy_xyyyyzz = cbuffer.data(dk_geom_1010_off + 923 * ccomps * dcomps);

            auto g_y_0_y_0_xy_xyyyzzz = cbuffer.data(dk_geom_1010_off + 924 * ccomps * dcomps);

            auto g_y_0_y_0_xy_xyyzzzz = cbuffer.data(dk_geom_1010_off + 925 * ccomps * dcomps);

            auto g_y_0_y_0_xy_xyzzzzz = cbuffer.data(dk_geom_1010_off + 926 * ccomps * dcomps);

            auto g_y_0_y_0_xy_xzzzzzz = cbuffer.data(dk_geom_1010_off + 927 * ccomps * dcomps);

            auto g_y_0_y_0_xy_yyyyyyy = cbuffer.data(dk_geom_1010_off + 928 * ccomps * dcomps);

            auto g_y_0_y_0_xy_yyyyyyz = cbuffer.data(dk_geom_1010_off + 929 * ccomps * dcomps);

            auto g_y_0_y_0_xy_yyyyyzz = cbuffer.data(dk_geom_1010_off + 930 * ccomps * dcomps);

            auto g_y_0_y_0_xy_yyyyzzz = cbuffer.data(dk_geom_1010_off + 931 * ccomps * dcomps);

            auto g_y_0_y_0_xy_yyyzzzz = cbuffer.data(dk_geom_1010_off + 932 * ccomps * dcomps);

            auto g_y_0_y_0_xy_yyzzzzz = cbuffer.data(dk_geom_1010_off + 933 * ccomps * dcomps);

            auto g_y_0_y_0_xy_yzzzzzz = cbuffer.data(dk_geom_1010_off + 934 * ccomps * dcomps);

            auto g_y_0_y_0_xy_zzzzzzz = cbuffer.data(dk_geom_1010_off + 935 * ccomps * dcomps);

            auto g_y_0_y_0_xz_xxxxxxx = cbuffer.data(dk_geom_1010_off + 936 * ccomps * dcomps);

            auto g_y_0_y_0_xz_xxxxxxy = cbuffer.data(dk_geom_1010_off + 937 * ccomps * dcomps);

            auto g_y_0_y_0_xz_xxxxxxz = cbuffer.data(dk_geom_1010_off + 938 * ccomps * dcomps);

            auto g_y_0_y_0_xz_xxxxxyy = cbuffer.data(dk_geom_1010_off + 939 * ccomps * dcomps);

            auto g_y_0_y_0_xz_xxxxxyz = cbuffer.data(dk_geom_1010_off + 940 * ccomps * dcomps);

            auto g_y_0_y_0_xz_xxxxxzz = cbuffer.data(dk_geom_1010_off + 941 * ccomps * dcomps);

            auto g_y_0_y_0_xz_xxxxyyy = cbuffer.data(dk_geom_1010_off + 942 * ccomps * dcomps);

            auto g_y_0_y_0_xz_xxxxyyz = cbuffer.data(dk_geom_1010_off + 943 * ccomps * dcomps);

            auto g_y_0_y_0_xz_xxxxyzz = cbuffer.data(dk_geom_1010_off + 944 * ccomps * dcomps);

            auto g_y_0_y_0_xz_xxxxzzz = cbuffer.data(dk_geom_1010_off + 945 * ccomps * dcomps);

            auto g_y_0_y_0_xz_xxxyyyy = cbuffer.data(dk_geom_1010_off + 946 * ccomps * dcomps);

            auto g_y_0_y_0_xz_xxxyyyz = cbuffer.data(dk_geom_1010_off + 947 * ccomps * dcomps);

            auto g_y_0_y_0_xz_xxxyyzz = cbuffer.data(dk_geom_1010_off + 948 * ccomps * dcomps);

            auto g_y_0_y_0_xz_xxxyzzz = cbuffer.data(dk_geom_1010_off + 949 * ccomps * dcomps);

            auto g_y_0_y_0_xz_xxxzzzz = cbuffer.data(dk_geom_1010_off + 950 * ccomps * dcomps);

            auto g_y_0_y_0_xz_xxyyyyy = cbuffer.data(dk_geom_1010_off + 951 * ccomps * dcomps);

            auto g_y_0_y_0_xz_xxyyyyz = cbuffer.data(dk_geom_1010_off + 952 * ccomps * dcomps);

            auto g_y_0_y_0_xz_xxyyyzz = cbuffer.data(dk_geom_1010_off + 953 * ccomps * dcomps);

            auto g_y_0_y_0_xz_xxyyzzz = cbuffer.data(dk_geom_1010_off + 954 * ccomps * dcomps);

            auto g_y_0_y_0_xz_xxyzzzz = cbuffer.data(dk_geom_1010_off + 955 * ccomps * dcomps);

            auto g_y_0_y_0_xz_xxzzzzz = cbuffer.data(dk_geom_1010_off + 956 * ccomps * dcomps);

            auto g_y_0_y_0_xz_xyyyyyy = cbuffer.data(dk_geom_1010_off + 957 * ccomps * dcomps);

            auto g_y_0_y_0_xz_xyyyyyz = cbuffer.data(dk_geom_1010_off + 958 * ccomps * dcomps);

            auto g_y_0_y_0_xz_xyyyyzz = cbuffer.data(dk_geom_1010_off + 959 * ccomps * dcomps);

            auto g_y_0_y_0_xz_xyyyzzz = cbuffer.data(dk_geom_1010_off + 960 * ccomps * dcomps);

            auto g_y_0_y_0_xz_xyyzzzz = cbuffer.data(dk_geom_1010_off + 961 * ccomps * dcomps);

            auto g_y_0_y_0_xz_xyzzzzz = cbuffer.data(dk_geom_1010_off + 962 * ccomps * dcomps);

            auto g_y_0_y_0_xz_xzzzzzz = cbuffer.data(dk_geom_1010_off + 963 * ccomps * dcomps);

            auto g_y_0_y_0_xz_yyyyyyy = cbuffer.data(dk_geom_1010_off + 964 * ccomps * dcomps);

            auto g_y_0_y_0_xz_yyyyyyz = cbuffer.data(dk_geom_1010_off + 965 * ccomps * dcomps);

            auto g_y_0_y_0_xz_yyyyyzz = cbuffer.data(dk_geom_1010_off + 966 * ccomps * dcomps);

            auto g_y_0_y_0_xz_yyyyzzz = cbuffer.data(dk_geom_1010_off + 967 * ccomps * dcomps);

            auto g_y_0_y_0_xz_yyyzzzz = cbuffer.data(dk_geom_1010_off + 968 * ccomps * dcomps);

            auto g_y_0_y_0_xz_yyzzzzz = cbuffer.data(dk_geom_1010_off + 969 * ccomps * dcomps);

            auto g_y_0_y_0_xz_yzzzzzz = cbuffer.data(dk_geom_1010_off + 970 * ccomps * dcomps);

            auto g_y_0_y_0_xz_zzzzzzz = cbuffer.data(dk_geom_1010_off + 971 * ccomps * dcomps);

            auto g_y_0_y_0_yy_xxxxxxx = cbuffer.data(dk_geom_1010_off + 972 * ccomps * dcomps);

            auto g_y_0_y_0_yy_xxxxxxy = cbuffer.data(dk_geom_1010_off + 973 * ccomps * dcomps);

            auto g_y_0_y_0_yy_xxxxxxz = cbuffer.data(dk_geom_1010_off + 974 * ccomps * dcomps);

            auto g_y_0_y_0_yy_xxxxxyy = cbuffer.data(dk_geom_1010_off + 975 * ccomps * dcomps);

            auto g_y_0_y_0_yy_xxxxxyz = cbuffer.data(dk_geom_1010_off + 976 * ccomps * dcomps);

            auto g_y_0_y_0_yy_xxxxxzz = cbuffer.data(dk_geom_1010_off + 977 * ccomps * dcomps);

            auto g_y_0_y_0_yy_xxxxyyy = cbuffer.data(dk_geom_1010_off + 978 * ccomps * dcomps);

            auto g_y_0_y_0_yy_xxxxyyz = cbuffer.data(dk_geom_1010_off + 979 * ccomps * dcomps);

            auto g_y_0_y_0_yy_xxxxyzz = cbuffer.data(dk_geom_1010_off + 980 * ccomps * dcomps);

            auto g_y_0_y_0_yy_xxxxzzz = cbuffer.data(dk_geom_1010_off + 981 * ccomps * dcomps);

            auto g_y_0_y_0_yy_xxxyyyy = cbuffer.data(dk_geom_1010_off + 982 * ccomps * dcomps);

            auto g_y_0_y_0_yy_xxxyyyz = cbuffer.data(dk_geom_1010_off + 983 * ccomps * dcomps);

            auto g_y_0_y_0_yy_xxxyyzz = cbuffer.data(dk_geom_1010_off + 984 * ccomps * dcomps);

            auto g_y_0_y_0_yy_xxxyzzz = cbuffer.data(dk_geom_1010_off + 985 * ccomps * dcomps);

            auto g_y_0_y_0_yy_xxxzzzz = cbuffer.data(dk_geom_1010_off + 986 * ccomps * dcomps);

            auto g_y_0_y_0_yy_xxyyyyy = cbuffer.data(dk_geom_1010_off + 987 * ccomps * dcomps);

            auto g_y_0_y_0_yy_xxyyyyz = cbuffer.data(dk_geom_1010_off + 988 * ccomps * dcomps);

            auto g_y_0_y_0_yy_xxyyyzz = cbuffer.data(dk_geom_1010_off + 989 * ccomps * dcomps);

            auto g_y_0_y_0_yy_xxyyzzz = cbuffer.data(dk_geom_1010_off + 990 * ccomps * dcomps);

            auto g_y_0_y_0_yy_xxyzzzz = cbuffer.data(dk_geom_1010_off + 991 * ccomps * dcomps);

            auto g_y_0_y_0_yy_xxzzzzz = cbuffer.data(dk_geom_1010_off + 992 * ccomps * dcomps);

            auto g_y_0_y_0_yy_xyyyyyy = cbuffer.data(dk_geom_1010_off + 993 * ccomps * dcomps);

            auto g_y_0_y_0_yy_xyyyyyz = cbuffer.data(dk_geom_1010_off + 994 * ccomps * dcomps);

            auto g_y_0_y_0_yy_xyyyyzz = cbuffer.data(dk_geom_1010_off + 995 * ccomps * dcomps);

            auto g_y_0_y_0_yy_xyyyzzz = cbuffer.data(dk_geom_1010_off + 996 * ccomps * dcomps);

            auto g_y_0_y_0_yy_xyyzzzz = cbuffer.data(dk_geom_1010_off + 997 * ccomps * dcomps);

            auto g_y_0_y_0_yy_xyzzzzz = cbuffer.data(dk_geom_1010_off + 998 * ccomps * dcomps);

            auto g_y_0_y_0_yy_xzzzzzz = cbuffer.data(dk_geom_1010_off + 999 * ccomps * dcomps);

            auto g_y_0_y_0_yy_yyyyyyy = cbuffer.data(dk_geom_1010_off + 1000 * ccomps * dcomps);

            auto g_y_0_y_0_yy_yyyyyyz = cbuffer.data(dk_geom_1010_off + 1001 * ccomps * dcomps);

            auto g_y_0_y_0_yy_yyyyyzz = cbuffer.data(dk_geom_1010_off + 1002 * ccomps * dcomps);

            auto g_y_0_y_0_yy_yyyyzzz = cbuffer.data(dk_geom_1010_off + 1003 * ccomps * dcomps);

            auto g_y_0_y_0_yy_yyyzzzz = cbuffer.data(dk_geom_1010_off + 1004 * ccomps * dcomps);

            auto g_y_0_y_0_yy_yyzzzzz = cbuffer.data(dk_geom_1010_off + 1005 * ccomps * dcomps);

            auto g_y_0_y_0_yy_yzzzzzz = cbuffer.data(dk_geom_1010_off + 1006 * ccomps * dcomps);

            auto g_y_0_y_0_yy_zzzzzzz = cbuffer.data(dk_geom_1010_off + 1007 * ccomps * dcomps);

            auto g_y_0_y_0_yz_xxxxxxx = cbuffer.data(dk_geom_1010_off + 1008 * ccomps * dcomps);

            auto g_y_0_y_0_yz_xxxxxxy = cbuffer.data(dk_geom_1010_off + 1009 * ccomps * dcomps);

            auto g_y_0_y_0_yz_xxxxxxz = cbuffer.data(dk_geom_1010_off + 1010 * ccomps * dcomps);

            auto g_y_0_y_0_yz_xxxxxyy = cbuffer.data(dk_geom_1010_off + 1011 * ccomps * dcomps);

            auto g_y_0_y_0_yz_xxxxxyz = cbuffer.data(dk_geom_1010_off + 1012 * ccomps * dcomps);

            auto g_y_0_y_0_yz_xxxxxzz = cbuffer.data(dk_geom_1010_off + 1013 * ccomps * dcomps);

            auto g_y_0_y_0_yz_xxxxyyy = cbuffer.data(dk_geom_1010_off + 1014 * ccomps * dcomps);

            auto g_y_0_y_0_yz_xxxxyyz = cbuffer.data(dk_geom_1010_off + 1015 * ccomps * dcomps);

            auto g_y_0_y_0_yz_xxxxyzz = cbuffer.data(dk_geom_1010_off + 1016 * ccomps * dcomps);

            auto g_y_0_y_0_yz_xxxxzzz = cbuffer.data(dk_geom_1010_off + 1017 * ccomps * dcomps);

            auto g_y_0_y_0_yz_xxxyyyy = cbuffer.data(dk_geom_1010_off + 1018 * ccomps * dcomps);

            auto g_y_0_y_0_yz_xxxyyyz = cbuffer.data(dk_geom_1010_off + 1019 * ccomps * dcomps);

            auto g_y_0_y_0_yz_xxxyyzz = cbuffer.data(dk_geom_1010_off + 1020 * ccomps * dcomps);

            auto g_y_0_y_0_yz_xxxyzzz = cbuffer.data(dk_geom_1010_off + 1021 * ccomps * dcomps);

            auto g_y_0_y_0_yz_xxxzzzz = cbuffer.data(dk_geom_1010_off + 1022 * ccomps * dcomps);

            auto g_y_0_y_0_yz_xxyyyyy = cbuffer.data(dk_geom_1010_off + 1023 * ccomps * dcomps);

            auto g_y_0_y_0_yz_xxyyyyz = cbuffer.data(dk_geom_1010_off + 1024 * ccomps * dcomps);

            auto g_y_0_y_0_yz_xxyyyzz = cbuffer.data(dk_geom_1010_off + 1025 * ccomps * dcomps);

            auto g_y_0_y_0_yz_xxyyzzz = cbuffer.data(dk_geom_1010_off + 1026 * ccomps * dcomps);

            auto g_y_0_y_0_yz_xxyzzzz = cbuffer.data(dk_geom_1010_off + 1027 * ccomps * dcomps);

            auto g_y_0_y_0_yz_xxzzzzz = cbuffer.data(dk_geom_1010_off + 1028 * ccomps * dcomps);

            auto g_y_0_y_0_yz_xyyyyyy = cbuffer.data(dk_geom_1010_off + 1029 * ccomps * dcomps);

            auto g_y_0_y_0_yz_xyyyyyz = cbuffer.data(dk_geom_1010_off + 1030 * ccomps * dcomps);

            auto g_y_0_y_0_yz_xyyyyzz = cbuffer.data(dk_geom_1010_off + 1031 * ccomps * dcomps);

            auto g_y_0_y_0_yz_xyyyzzz = cbuffer.data(dk_geom_1010_off + 1032 * ccomps * dcomps);

            auto g_y_0_y_0_yz_xyyzzzz = cbuffer.data(dk_geom_1010_off + 1033 * ccomps * dcomps);

            auto g_y_0_y_0_yz_xyzzzzz = cbuffer.data(dk_geom_1010_off + 1034 * ccomps * dcomps);

            auto g_y_0_y_0_yz_xzzzzzz = cbuffer.data(dk_geom_1010_off + 1035 * ccomps * dcomps);

            auto g_y_0_y_0_yz_yyyyyyy = cbuffer.data(dk_geom_1010_off + 1036 * ccomps * dcomps);

            auto g_y_0_y_0_yz_yyyyyyz = cbuffer.data(dk_geom_1010_off + 1037 * ccomps * dcomps);

            auto g_y_0_y_0_yz_yyyyyzz = cbuffer.data(dk_geom_1010_off + 1038 * ccomps * dcomps);

            auto g_y_0_y_0_yz_yyyyzzz = cbuffer.data(dk_geom_1010_off + 1039 * ccomps * dcomps);

            auto g_y_0_y_0_yz_yyyzzzz = cbuffer.data(dk_geom_1010_off + 1040 * ccomps * dcomps);

            auto g_y_0_y_0_yz_yyzzzzz = cbuffer.data(dk_geom_1010_off + 1041 * ccomps * dcomps);

            auto g_y_0_y_0_yz_yzzzzzz = cbuffer.data(dk_geom_1010_off + 1042 * ccomps * dcomps);

            auto g_y_0_y_0_yz_zzzzzzz = cbuffer.data(dk_geom_1010_off + 1043 * ccomps * dcomps);

            auto g_y_0_y_0_zz_xxxxxxx = cbuffer.data(dk_geom_1010_off + 1044 * ccomps * dcomps);

            auto g_y_0_y_0_zz_xxxxxxy = cbuffer.data(dk_geom_1010_off + 1045 * ccomps * dcomps);

            auto g_y_0_y_0_zz_xxxxxxz = cbuffer.data(dk_geom_1010_off + 1046 * ccomps * dcomps);

            auto g_y_0_y_0_zz_xxxxxyy = cbuffer.data(dk_geom_1010_off + 1047 * ccomps * dcomps);

            auto g_y_0_y_0_zz_xxxxxyz = cbuffer.data(dk_geom_1010_off + 1048 * ccomps * dcomps);

            auto g_y_0_y_0_zz_xxxxxzz = cbuffer.data(dk_geom_1010_off + 1049 * ccomps * dcomps);

            auto g_y_0_y_0_zz_xxxxyyy = cbuffer.data(dk_geom_1010_off + 1050 * ccomps * dcomps);

            auto g_y_0_y_0_zz_xxxxyyz = cbuffer.data(dk_geom_1010_off + 1051 * ccomps * dcomps);

            auto g_y_0_y_0_zz_xxxxyzz = cbuffer.data(dk_geom_1010_off + 1052 * ccomps * dcomps);

            auto g_y_0_y_0_zz_xxxxzzz = cbuffer.data(dk_geom_1010_off + 1053 * ccomps * dcomps);

            auto g_y_0_y_0_zz_xxxyyyy = cbuffer.data(dk_geom_1010_off + 1054 * ccomps * dcomps);

            auto g_y_0_y_0_zz_xxxyyyz = cbuffer.data(dk_geom_1010_off + 1055 * ccomps * dcomps);

            auto g_y_0_y_0_zz_xxxyyzz = cbuffer.data(dk_geom_1010_off + 1056 * ccomps * dcomps);

            auto g_y_0_y_0_zz_xxxyzzz = cbuffer.data(dk_geom_1010_off + 1057 * ccomps * dcomps);

            auto g_y_0_y_0_zz_xxxzzzz = cbuffer.data(dk_geom_1010_off + 1058 * ccomps * dcomps);

            auto g_y_0_y_0_zz_xxyyyyy = cbuffer.data(dk_geom_1010_off + 1059 * ccomps * dcomps);

            auto g_y_0_y_0_zz_xxyyyyz = cbuffer.data(dk_geom_1010_off + 1060 * ccomps * dcomps);

            auto g_y_0_y_0_zz_xxyyyzz = cbuffer.data(dk_geom_1010_off + 1061 * ccomps * dcomps);

            auto g_y_0_y_0_zz_xxyyzzz = cbuffer.data(dk_geom_1010_off + 1062 * ccomps * dcomps);

            auto g_y_0_y_0_zz_xxyzzzz = cbuffer.data(dk_geom_1010_off + 1063 * ccomps * dcomps);

            auto g_y_0_y_0_zz_xxzzzzz = cbuffer.data(dk_geom_1010_off + 1064 * ccomps * dcomps);

            auto g_y_0_y_0_zz_xyyyyyy = cbuffer.data(dk_geom_1010_off + 1065 * ccomps * dcomps);

            auto g_y_0_y_0_zz_xyyyyyz = cbuffer.data(dk_geom_1010_off + 1066 * ccomps * dcomps);

            auto g_y_0_y_0_zz_xyyyyzz = cbuffer.data(dk_geom_1010_off + 1067 * ccomps * dcomps);

            auto g_y_0_y_0_zz_xyyyzzz = cbuffer.data(dk_geom_1010_off + 1068 * ccomps * dcomps);

            auto g_y_0_y_0_zz_xyyzzzz = cbuffer.data(dk_geom_1010_off + 1069 * ccomps * dcomps);

            auto g_y_0_y_0_zz_xyzzzzz = cbuffer.data(dk_geom_1010_off + 1070 * ccomps * dcomps);

            auto g_y_0_y_0_zz_xzzzzzz = cbuffer.data(dk_geom_1010_off + 1071 * ccomps * dcomps);

            auto g_y_0_y_0_zz_yyyyyyy = cbuffer.data(dk_geom_1010_off + 1072 * ccomps * dcomps);

            auto g_y_0_y_0_zz_yyyyyyz = cbuffer.data(dk_geom_1010_off + 1073 * ccomps * dcomps);

            auto g_y_0_y_0_zz_yyyyyzz = cbuffer.data(dk_geom_1010_off + 1074 * ccomps * dcomps);

            auto g_y_0_y_0_zz_yyyyzzz = cbuffer.data(dk_geom_1010_off + 1075 * ccomps * dcomps);

            auto g_y_0_y_0_zz_yyyzzzz = cbuffer.data(dk_geom_1010_off + 1076 * ccomps * dcomps);

            auto g_y_0_y_0_zz_yyzzzzz = cbuffer.data(dk_geom_1010_off + 1077 * ccomps * dcomps);

            auto g_y_0_y_0_zz_yzzzzzz = cbuffer.data(dk_geom_1010_off + 1078 * ccomps * dcomps);

            auto g_y_0_y_0_zz_zzzzzzz = cbuffer.data(dk_geom_1010_off + 1079 * ccomps * dcomps);

            auto g_y_0_z_0_xx_xxxxxxx = cbuffer.data(dk_geom_1010_off + 1080 * ccomps * dcomps);

            auto g_y_0_z_0_xx_xxxxxxy = cbuffer.data(dk_geom_1010_off + 1081 * ccomps * dcomps);

            auto g_y_0_z_0_xx_xxxxxxz = cbuffer.data(dk_geom_1010_off + 1082 * ccomps * dcomps);

            auto g_y_0_z_0_xx_xxxxxyy = cbuffer.data(dk_geom_1010_off + 1083 * ccomps * dcomps);

            auto g_y_0_z_0_xx_xxxxxyz = cbuffer.data(dk_geom_1010_off + 1084 * ccomps * dcomps);

            auto g_y_0_z_0_xx_xxxxxzz = cbuffer.data(dk_geom_1010_off + 1085 * ccomps * dcomps);

            auto g_y_0_z_0_xx_xxxxyyy = cbuffer.data(dk_geom_1010_off + 1086 * ccomps * dcomps);

            auto g_y_0_z_0_xx_xxxxyyz = cbuffer.data(dk_geom_1010_off + 1087 * ccomps * dcomps);

            auto g_y_0_z_0_xx_xxxxyzz = cbuffer.data(dk_geom_1010_off + 1088 * ccomps * dcomps);

            auto g_y_0_z_0_xx_xxxxzzz = cbuffer.data(dk_geom_1010_off + 1089 * ccomps * dcomps);

            auto g_y_0_z_0_xx_xxxyyyy = cbuffer.data(dk_geom_1010_off + 1090 * ccomps * dcomps);

            auto g_y_0_z_0_xx_xxxyyyz = cbuffer.data(dk_geom_1010_off + 1091 * ccomps * dcomps);

            auto g_y_0_z_0_xx_xxxyyzz = cbuffer.data(dk_geom_1010_off + 1092 * ccomps * dcomps);

            auto g_y_0_z_0_xx_xxxyzzz = cbuffer.data(dk_geom_1010_off + 1093 * ccomps * dcomps);

            auto g_y_0_z_0_xx_xxxzzzz = cbuffer.data(dk_geom_1010_off + 1094 * ccomps * dcomps);

            auto g_y_0_z_0_xx_xxyyyyy = cbuffer.data(dk_geom_1010_off + 1095 * ccomps * dcomps);

            auto g_y_0_z_0_xx_xxyyyyz = cbuffer.data(dk_geom_1010_off + 1096 * ccomps * dcomps);

            auto g_y_0_z_0_xx_xxyyyzz = cbuffer.data(dk_geom_1010_off + 1097 * ccomps * dcomps);

            auto g_y_0_z_0_xx_xxyyzzz = cbuffer.data(dk_geom_1010_off + 1098 * ccomps * dcomps);

            auto g_y_0_z_0_xx_xxyzzzz = cbuffer.data(dk_geom_1010_off + 1099 * ccomps * dcomps);

            auto g_y_0_z_0_xx_xxzzzzz = cbuffer.data(dk_geom_1010_off + 1100 * ccomps * dcomps);

            auto g_y_0_z_0_xx_xyyyyyy = cbuffer.data(dk_geom_1010_off + 1101 * ccomps * dcomps);

            auto g_y_0_z_0_xx_xyyyyyz = cbuffer.data(dk_geom_1010_off + 1102 * ccomps * dcomps);

            auto g_y_0_z_0_xx_xyyyyzz = cbuffer.data(dk_geom_1010_off + 1103 * ccomps * dcomps);

            auto g_y_0_z_0_xx_xyyyzzz = cbuffer.data(dk_geom_1010_off + 1104 * ccomps * dcomps);

            auto g_y_0_z_0_xx_xyyzzzz = cbuffer.data(dk_geom_1010_off + 1105 * ccomps * dcomps);

            auto g_y_0_z_0_xx_xyzzzzz = cbuffer.data(dk_geom_1010_off + 1106 * ccomps * dcomps);

            auto g_y_0_z_0_xx_xzzzzzz = cbuffer.data(dk_geom_1010_off + 1107 * ccomps * dcomps);

            auto g_y_0_z_0_xx_yyyyyyy = cbuffer.data(dk_geom_1010_off + 1108 * ccomps * dcomps);

            auto g_y_0_z_0_xx_yyyyyyz = cbuffer.data(dk_geom_1010_off + 1109 * ccomps * dcomps);

            auto g_y_0_z_0_xx_yyyyyzz = cbuffer.data(dk_geom_1010_off + 1110 * ccomps * dcomps);

            auto g_y_0_z_0_xx_yyyyzzz = cbuffer.data(dk_geom_1010_off + 1111 * ccomps * dcomps);

            auto g_y_0_z_0_xx_yyyzzzz = cbuffer.data(dk_geom_1010_off + 1112 * ccomps * dcomps);

            auto g_y_0_z_0_xx_yyzzzzz = cbuffer.data(dk_geom_1010_off + 1113 * ccomps * dcomps);

            auto g_y_0_z_0_xx_yzzzzzz = cbuffer.data(dk_geom_1010_off + 1114 * ccomps * dcomps);

            auto g_y_0_z_0_xx_zzzzzzz = cbuffer.data(dk_geom_1010_off + 1115 * ccomps * dcomps);

            auto g_y_0_z_0_xy_xxxxxxx = cbuffer.data(dk_geom_1010_off + 1116 * ccomps * dcomps);

            auto g_y_0_z_0_xy_xxxxxxy = cbuffer.data(dk_geom_1010_off + 1117 * ccomps * dcomps);

            auto g_y_0_z_0_xy_xxxxxxz = cbuffer.data(dk_geom_1010_off + 1118 * ccomps * dcomps);

            auto g_y_0_z_0_xy_xxxxxyy = cbuffer.data(dk_geom_1010_off + 1119 * ccomps * dcomps);

            auto g_y_0_z_0_xy_xxxxxyz = cbuffer.data(dk_geom_1010_off + 1120 * ccomps * dcomps);

            auto g_y_0_z_0_xy_xxxxxzz = cbuffer.data(dk_geom_1010_off + 1121 * ccomps * dcomps);

            auto g_y_0_z_0_xy_xxxxyyy = cbuffer.data(dk_geom_1010_off + 1122 * ccomps * dcomps);

            auto g_y_0_z_0_xy_xxxxyyz = cbuffer.data(dk_geom_1010_off + 1123 * ccomps * dcomps);

            auto g_y_0_z_0_xy_xxxxyzz = cbuffer.data(dk_geom_1010_off + 1124 * ccomps * dcomps);

            auto g_y_0_z_0_xy_xxxxzzz = cbuffer.data(dk_geom_1010_off + 1125 * ccomps * dcomps);

            auto g_y_0_z_0_xy_xxxyyyy = cbuffer.data(dk_geom_1010_off + 1126 * ccomps * dcomps);

            auto g_y_0_z_0_xy_xxxyyyz = cbuffer.data(dk_geom_1010_off + 1127 * ccomps * dcomps);

            auto g_y_0_z_0_xy_xxxyyzz = cbuffer.data(dk_geom_1010_off + 1128 * ccomps * dcomps);

            auto g_y_0_z_0_xy_xxxyzzz = cbuffer.data(dk_geom_1010_off + 1129 * ccomps * dcomps);

            auto g_y_0_z_0_xy_xxxzzzz = cbuffer.data(dk_geom_1010_off + 1130 * ccomps * dcomps);

            auto g_y_0_z_0_xy_xxyyyyy = cbuffer.data(dk_geom_1010_off + 1131 * ccomps * dcomps);

            auto g_y_0_z_0_xy_xxyyyyz = cbuffer.data(dk_geom_1010_off + 1132 * ccomps * dcomps);

            auto g_y_0_z_0_xy_xxyyyzz = cbuffer.data(dk_geom_1010_off + 1133 * ccomps * dcomps);

            auto g_y_0_z_0_xy_xxyyzzz = cbuffer.data(dk_geom_1010_off + 1134 * ccomps * dcomps);

            auto g_y_0_z_0_xy_xxyzzzz = cbuffer.data(dk_geom_1010_off + 1135 * ccomps * dcomps);

            auto g_y_0_z_0_xy_xxzzzzz = cbuffer.data(dk_geom_1010_off + 1136 * ccomps * dcomps);

            auto g_y_0_z_0_xy_xyyyyyy = cbuffer.data(dk_geom_1010_off + 1137 * ccomps * dcomps);

            auto g_y_0_z_0_xy_xyyyyyz = cbuffer.data(dk_geom_1010_off + 1138 * ccomps * dcomps);

            auto g_y_0_z_0_xy_xyyyyzz = cbuffer.data(dk_geom_1010_off + 1139 * ccomps * dcomps);

            auto g_y_0_z_0_xy_xyyyzzz = cbuffer.data(dk_geom_1010_off + 1140 * ccomps * dcomps);

            auto g_y_0_z_0_xy_xyyzzzz = cbuffer.data(dk_geom_1010_off + 1141 * ccomps * dcomps);

            auto g_y_0_z_0_xy_xyzzzzz = cbuffer.data(dk_geom_1010_off + 1142 * ccomps * dcomps);

            auto g_y_0_z_0_xy_xzzzzzz = cbuffer.data(dk_geom_1010_off + 1143 * ccomps * dcomps);

            auto g_y_0_z_0_xy_yyyyyyy = cbuffer.data(dk_geom_1010_off + 1144 * ccomps * dcomps);

            auto g_y_0_z_0_xy_yyyyyyz = cbuffer.data(dk_geom_1010_off + 1145 * ccomps * dcomps);

            auto g_y_0_z_0_xy_yyyyyzz = cbuffer.data(dk_geom_1010_off + 1146 * ccomps * dcomps);

            auto g_y_0_z_0_xy_yyyyzzz = cbuffer.data(dk_geom_1010_off + 1147 * ccomps * dcomps);

            auto g_y_0_z_0_xy_yyyzzzz = cbuffer.data(dk_geom_1010_off + 1148 * ccomps * dcomps);

            auto g_y_0_z_0_xy_yyzzzzz = cbuffer.data(dk_geom_1010_off + 1149 * ccomps * dcomps);

            auto g_y_0_z_0_xy_yzzzzzz = cbuffer.data(dk_geom_1010_off + 1150 * ccomps * dcomps);

            auto g_y_0_z_0_xy_zzzzzzz = cbuffer.data(dk_geom_1010_off + 1151 * ccomps * dcomps);

            auto g_y_0_z_0_xz_xxxxxxx = cbuffer.data(dk_geom_1010_off + 1152 * ccomps * dcomps);

            auto g_y_0_z_0_xz_xxxxxxy = cbuffer.data(dk_geom_1010_off + 1153 * ccomps * dcomps);

            auto g_y_0_z_0_xz_xxxxxxz = cbuffer.data(dk_geom_1010_off + 1154 * ccomps * dcomps);

            auto g_y_0_z_0_xz_xxxxxyy = cbuffer.data(dk_geom_1010_off + 1155 * ccomps * dcomps);

            auto g_y_0_z_0_xz_xxxxxyz = cbuffer.data(dk_geom_1010_off + 1156 * ccomps * dcomps);

            auto g_y_0_z_0_xz_xxxxxzz = cbuffer.data(dk_geom_1010_off + 1157 * ccomps * dcomps);

            auto g_y_0_z_0_xz_xxxxyyy = cbuffer.data(dk_geom_1010_off + 1158 * ccomps * dcomps);

            auto g_y_0_z_0_xz_xxxxyyz = cbuffer.data(dk_geom_1010_off + 1159 * ccomps * dcomps);

            auto g_y_0_z_0_xz_xxxxyzz = cbuffer.data(dk_geom_1010_off + 1160 * ccomps * dcomps);

            auto g_y_0_z_0_xz_xxxxzzz = cbuffer.data(dk_geom_1010_off + 1161 * ccomps * dcomps);

            auto g_y_0_z_0_xz_xxxyyyy = cbuffer.data(dk_geom_1010_off + 1162 * ccomps * dcomps);

            auto g_y_0_z_0_xz_xxxyyyz = cbuffer.data(dk_geom_1010_off + 1163 * ccomps * dcomps);

            auto g_y_0_z_0_xz_xxxyyzz = cbuffer.data(dk_geom_1010_off + 1164 * ccomps * dcomps);

            auto g_y_0_z_0_xz_xxxyzzz = cbuffer.data(dk_geom_1010_off + 1165 * ccomps * dcomps);

            auto g_y_0_z_0_xz_xxxzzzz = cbuffer.data(dk_geom_1010_off + 1166 * ccomps * dcomps);

            auto g_y_0_z_0_xz_xxyyyyy = cbuffer.data(dk_geom_1010_off + 1167 * ccomps * dcomps);

            auto g_y_0_z_0_xz_xxyyyyz = cbuffer.data(dk_geom_1010_off + 1168 * ccomps * dcomps);

            auto g_y_0_z_0_xz_xxyyyzz = cbuffer.data(dk_geom_1010_off + 1169 * ccomps * dcomps);

            auto g_y_0_z_0_xz_xxyyzzz = cbuffer.data(dk_geom_1010_off + 1170 * ccomps * dcomps);

            auto g_y_0_z_0_xz_xxyzzzz = cbuffer.data(dk_geom_1010_off + 1171 * ccomps * dcomps);

            auto g_y_0_z_0_xz_xxzzzzz = cbuffer.data(dk_geom_1010_off + 1172 * ccomps * dcomps);

            auto g_y_0_z_0_xz_xyyyyyy = cbuffer.data(dk_geom_1010_off + 1173 * ccomps * dcomps);

            auto g_y_0_z_0_xz_xyyyyyz = cbuffer.data(dk_geom_1010_off + 1174 * ccomps * dcomps);

            auto g_y_0_z_0_xz_xyyyyzz = cbuffer.data(dk_geom_1010_off + 1175 * ccomps * dcomps);

            auto g_y_0_z_0_xz_xyyyzzz = cbuffer.data(dk_geom_1010_off + 1176 * ccomps * dcomps);

            auto g_y_0_z_0_xz_xyyzzzz = cbuffer.data(dk_geom_1010_off + 1177 * ccomps * dcomps);

            auto g_y_0_z_0_xz_xyzzzzz = cbuffer.data(dk_geom_1010_off + 1178 * ccomps * dcomps);

            auto g_y_0_z_0_xz_xzzzzzz = cbuffer.data(dk_geom_1010_off + 1179 * ccomps * dcomps);

            auto g_y_0_z_0_xz_yyyyyyy = cbuffer.data(dk_geom_1010_off + 1180 * ccomps * dcomps);

            auto g_y_0_z_0_xz_yyyyyyz = cbuffer.data(dk_geom_1010_off + 1181 * ccomps * dcomps);

            auto g_y_0_z_0_xz_yyyyyzz = cbuffer.data(dk_geom_1010_off + 1182 * ccomps * dcomps);

            auto g_y_0_z_0_xz_yyyyzzz = cbuffer.data(dk_geom_1010_off + 1183 * ccomps * dcomps);

            auto g_y_0_z_0_xz_yyyzzzz = cbuffer.data(dk_geom_1010_off + 1184 * ccomps * dcomps);

            auto g_y_0_z_0_xz_yyzzzzz = cbuffer.data(dk_geom_1010_off + 1185 * ccomps * dcomps);

            auto g_y_0_z_0_xz_yzzzzzz = cbuffer.data(dk_geom_1010_off + 1186 * ccomps * dcomps);

            auto g_y_0_z_0_xz_zzzzzzz = cbuffer.data(dk_geom_1010_off + 1187 * ccomps * dcomps);

            auto g_y_0_z_0_yy_xxxxxxx = cbuffer.data(dk_geom_1010_off + 1188 * ccomps * dcomps);

            auto g_y_0_z_0_yy_xxxxxxy = cbuffer.data(dk_geom_1010_off + 1189 * ccomps * dcomps);

            auto g_y_0_z_0_yy_xxxxxxz = cbuffer.data(dk_geom_1010_off + 1190 * ccomps * dcomps);

            auto g_y_0_z_0_yy_xxxxxyy = cbuffer.data(dk_geom_1010_off + 1191 * ccomps * dcomps);

            auto g_y_0_z_0_yy_xxxxxyz = cbuffer.data(dk_geom_1010_off + 1192 * ccomps * dcomps);

            auto g_y_0_z_0_yy_xxxxxzz = cbuffer.data(dk_geom_1010_off + 1193 * ccomps * dcomps);

            auto g_y_0_z_0_yy_xxxxyyy = cbuffer.data(dk_geom_1010_off + 1194 * ccomps * dcomps);

            auto g_y_0_z_0_yy_xxxxyyz = cbuffer.data(dk_geom_1010_off + 1195 * ccomps * dcomps);

            auto g_y_0_z_0_yy_xxxxyzz = cbuffer.data(dk_geom_1010_off + 1196 * ccomps * dcomps);

            auto g_y_0_z_0_yy_xxxxzzz = cbuffer.data(dk_geom_1010_off + 1197 * ccomps * dcomps);

            auto g_y_0_z_0_yy_xxxyyyy = cbuffer.data(dk_geom_1010_off + 1198 * ccomps * dcomps);

            auto g_y_0_z_0_yy_xxxyyyz = cbuffer.data(dk_geom_1010_off + 1199 * ccomps * dcomps);

            auto g_y_0_z_0_yy_xxxyyzz = cbuffer.data(dk_geom_1010_off + 1200 * ccomps * dcomps);

            auto g_y_0_z_0_yy_xxxyzzz = cbuffer.data(dk_geom_1010_off + 1201 * ccomps * dcomps);

            auto g_y_0_z_0_yy_xxxzzzz = cbuffer.data(dk_geom_1010_off + 1202 * ccomps * dcomps);

            auto g_y_0_z_0_yy_xxyyyyy = cbuffer.data(dk_geom_1010_off + 1203 * ccomps * dcomps);

            auto g_y_0_z_0_yy_xxyyyyz = cbuffer.data(dk_geom_1010_off + 1204 * ccomps * dcomps);

            auto g_y_0_z_0_yy_xxyyyzz = cbuffer.data(dk_geom_1010_off + 1205 * ccomps * dcomps);

            auto g_y_0_z_0_yy_xxyyzzz = cbuffer.data(dk_geom_1010_off + 1206 * ccomps * dcomps);

            auto g_y_0_z_0_yy_xxyzzzz = cbuffer.data(dk_geom_1010_off + 1207 * ccomps * dcomps);

            auto g_y_0_z_0_yy_xxzzzzz = cbuffer.data(dk_geom_1010_off + 1208 * ccomps * dcomps);

            auto g_y_0_z_0_yy_xyyyyyy = cbuffer.data(dk_geom_1010_off + 1209 * ccomps * dcomps);

            auto g_y_0_z_0_yy_xyyyyyz = cbuffer.data(dk_geom_1010_off + 1210 * ccomps * dcomps);

            auto g_y_0_z_0_yy_xyyyyzz = cbuffer.data(dk_geom_1010_off + 1211 * ccomps * dcomps);

            auto g_y_0_z_0_yy_xyyyzzz = cbuffer.data(dk_geom_1010_off + 1212 * ccomps * dcomps);

            auto g_y_0_z_0_yy_xyyzzzz = cbuffer.data(dk_geom_1010_off + 1213 * ccomps * dcomps);

            auto g_y_0_z_0_yy_xyzzzzz = cbuffer.data(dk_geom_1010_off + 1214 * ccomps * dcomps);

            auto g_y_0_z_0_yy_xzzzzzz = cbuffer.data(dk_geom_1010_off + 1215 * ccomps * dcomps);

            auto g_y_0_z_0_yy_yyyyyyy = cbuffer.data(dk_geom_1010_off + 1216 * ccomps * dcomps);

            auto g_y_0_z_0_yy_yyyyyyz = cbuffer.data(dk_geom_1010_off + 1217 * ccomps * dcomps);

            auto g_y_0_z_0_yy_yyyyyzz = cbuffer.data(dk_geom_1010_off + 1218 * ccomps * dcomps);

            auto g_y_0_z_0_yy_yyyyzzz = cbuffer.data(dk_geom_1010_off + 1219 * ccomps * dcomps);

            auto g_y_0_z_0_yy_yyyzzzz = cbuffer.data(dk_geom_1010_off + 1220 * ccomps * dcomps);

            auto g_y_0_z_0_yy_yyzzzzz = cbuffer.data(dk_geom_1010_off + 1221 * ccomps * dcomps);

            auto g_y_0_z_0_yy_yzzzzzz = cbuffer.data(dk_geom_1010_off + 1222 * ccomps * dcomps);

            auto g_y_0_z_0_yy_zzzzzzz = cbuffer.data(dk_geom_1010_off + 1223 * ccomps * dcomps);

            auto g_y_0_z_0_yz_xxxxxxx = cbuffer.data(dk_geom_1010_off + 1224 * ccomps * dcomps);

            auto g_y_0_z_0_yz_xxxxxxy = cbuffer.data(dk_geom_1010_off + 1225 * ccomps * dcomps);

            auto g_y_0_z_0_yz_xxxxxxz = cbuffer.data(dk_geom_1010_off + 1226 * ccomps * dcomps);

            auto g_y_0_z_0_yz_xxxxxyy = cbuffer.data(dk_geom_1010_off + 1227 * ccomps * dcomps);

            auto g_y_0_z_0_yz_xxxxxyz = cbuffer.data(dk_geom_1010_off + 1228 * ccomps * dcomps);

            auto g_y_0_z_0_yz_xxxxxzz = cbuffer.data(dk_geom_1010_off + 1229 * ccomps * dcomps);

            auto g_y_0_z_0_yz_xxxxyyy = cbuffer.data(dk_geom_1010_off + 1230 * ccomps * dcomps);

            auto g_y_0_z_0_yz_xxxxyyz = cbuffer.data(dk_geom_1010_off + 1231 * ccomps * dcomps);

            auto g_y_0_z_0_yz_xxxxyzz = cbuffer.data(dk_geom_1010_off + 1232 * ccomps * dcomps);

            auto g_y_0_z_0_yz_xxxxzzz = cbuffer.data(dk_geom_1010_off + 1233 * ccomps * dcomps);

            auto g_y_0_z_0_yz_xxxyyyy = cbuffer.data(dk_geom_1010_off + 1234 * ccomps * dcomps);

            auto g_y_0_z_0_yz_xxxyyyz = cbuffer.data(dk_geom_1010_off + 1235 * ccomps * dcomps);

            auto g_y_0_z_0_yz_xxxyyzz = cbuffer.data(dk_geom_1010_off + 1236 * ccomps * dcomps);

            auto g_y_0_z_0_yz_xxxyzzz = cbuffer.data(dk_geom_1010_off + 1237 * ccomps * dcomps);

            auto g_y_0_z_0_yz_xxxzzzz = cbuffer.data(dk_geom_1010_off + 1238 * ccomps * dcomps);

            auto g_y_0_z_0_yz_xxyyyyy = cbuffer.data(dk_geom_1010_off + 1239 * ccomps * dcomps);

            auto g_y_0_z_0_yz_xxyyyyz = cbuffer.data(dk_geom_1010_off + 1240 * ccomps * dcomps);

            auto g_y_0_z_0_yz_xxyyyzz = cbuffer.data(dk_geom_1010_off + 1241 * ccomps * dcomps);

            auto g_y_0_z_0_yz_xxyyzzz = cbuffer.data(dk_geom_1010_off + 1242 * ccomps * dcomps);

            auto g_y_0_z_0_yz_xxyzzzz = cbuffer.data(dk_geom_1010_off + 1243 * ccomps * dcomps);

            auto g_y_0_z_0_yz_xxzzzzz = cbuffer.data(dk_geom_1010_off + 1244 * ccomps * dcomps);

            auto g_y_0_z_0_yz_xyyyyyy = cbuffer.data(dk_geom_1010_off + 1245 * ccomps * dcomps);

            auto g_y_0_z_0_yz_xyyyyyz = cbuffer.data(dk_geom_1010_off + 1246 * ccomps * dcomps);

            auto g_y_0_z_0_yz_xyyyyzz = cbuffer.data(dk_geom_1010_off + 1247 * ccomps * dcomps);

            auto g_y_0_z_0_yz_xyyyzzz = cbuffer.data(dk_geom_1010_off + 1248 * ccomps * dcomps);

            auto g_y_0_z_0_yz_xyyzzzz = cbuffer.data(dk_geom_1010_off + 1249 * ccomps * dcomps);

            auto g_y_0_z_0_yz_xyzzzzz = cbuffer.data(dk_geom_1010_off + 1250 * ccomps * dcomps);

            auto g_y_0_z_0_yz_xzzzzzz = cbuffer.data(dk_geom_1010_off + 1251 * ccomps * dcomps);

            auto g_y_0_z_0_yz_yyyyyyy = cbuffer.data(dk_geom_1010_off + 1252 * ccomps * dcomps);

            auto g_y_0_z_0_yz_yyyyyyz = cbuffer.data(dk_geom_1010_off + 1253 * ccomps * dcomps);

            auto g_y_0_z_0_yz_yyyyyzz = cbuffer.data(dk_geom_1010_off + 1254 * ccomps * dcomps);

            auto g_y_0_z_0_yz_yyyyzzz = cbuffer.data(dk_geom_1010_off + 1255 * ccomps * dcomps);

            auto g_y_0_z_0_yz_yyyzzzz = cbuffer.data(dk_geom_1010_off + 1256 * ccomps * dcomps);

            auto g_y_0_z_0_yz_yyzzzzz = cbuffer.data(dk_geom_1010_off + 1257 * ccomps * dcomps);

            auto g_y_0_z_0_yz_yzzzzzz = cbuffer.data(dk_geom_1010_off + 1258 * ccomps * dcomps);

            auto g_y_0_z_0_yz_zzzzzzz = cbuffer.data(dk_geom_1010_off + 1259 * ccomps * dcomps);

            auto g_y_0_z_0_zz_xxxxxxx = cbuffer.data(dk_geom_1010_off + 1260 * ccomps * dcomps);

            auto g_y_0_z_0_zz_xxxxxxy = cbuffer.data(dk_geom_1010_off + 1261 * ccomps * dcomps);

            auto g_y_0_z_0_zz_xxxxxxz = cbuffer.data(dk_geom_1010_off + 1262 * ccomps * dcomps);

            auto g_y_0_z_0_zz_xxxxxyy = cbuffer.data(dk_geom_1010_off + 1263 * ccomps * dcomps);

            auto g_y_0_z_0_zz_xxxxxyz = cbuffer.data(dk_geom_1010_off + 1264 * ccomps * dcomps);

            auto g_y_0_z_0_zz_xxxxxzz = cbuffer.data(dk_geom_1010_off + 1265 * ccomps * dcomps);

            auto g_y_0_z_0_zz_xxxxyyy = cbuffer.data(dk_geom_1010_off + 1266 * ccomps * dcomps);

            auto g_y_0_z_0_zz_xxxxyyz = cbuffer.data(dk_geom_1010_off + 1267 * ccomps * dcomps);

            auto g_y_0_z_0_zz_xxxxyzz = cbuffer.data(dk_geom_1010_off + 1268 * ccomps * dcomps);

            auto g_y_0_z_0_zz_xxxxzzz = cbuffer.data(dk_geom_1010_off + 1269 * ccomps * dcomps);

            auto g_y_0_z_0_zz_xxxyyyy = cbuffer.data(dk_geom_1010_off + 1270 * ccomps * dcomps);

            auto g_y_0_z_0_zz_xxxyyyz = cbuffer.data(dk_geom_1010_off + 1271 * ccomps * dcomps);

            auto g_y_0_z_0_zz_xxxyyzz = cbuffer.data(dk_geom_1010_off + 1272 * ccomps * dcomps);

            auto g_y_0_z_0_zz_xxxyzzz = cbuffer.data(dk_geom_1010_off + 1273 * ccomps * dcomps);

            auto g_y_0_z_0_zz_xxxzzzz = cbuffer.data(dk_geom_1010_off + 1274 * ccomps * dcomps);

            auto g_y_0_z_0_zz_xxyyyyy = cbuffer.data(dk_geom_1010_off + 1275 * ccomps * dcomps);

            auto g_y_0_z_0_zz_xxyyyyz = cbuffer.data(dk_geom_1010_off + 1276 * ccomps * dcomps);

            auto g_y_0_z_0_zz_xxyyyzz = cbuffer.data(dk_geom_1010_off + 1277 * ccomps * dcomps);

            auto g_y_0_z_0_zz_xxyyzzz = cbuffer.data(dk_geom_1010_off + 1278 * ccomps * dcomps);

            auto g_y_0_z_0_zz_xxyzzzz = cbuffer.data(dk_geom_1010_off + 1279 * ccomps * dcomps);

            auto g_y_0_z_0_zz_xxzzzzz = cbuffer.data(dk_geom_1010_off + 1280 * ccomps * dcomps);

            auto g_y_0_z_0_zz_xyyyyyy = cbuffer.data(dk_geom_1010_off + 1281 * ccomps * dcomps);

            auto g_y_0_z_0_zz_xyyyyyz = cbuffer.data(dk_geom_1010_off + 1282 * ccomps * dcomps);

            auto g_y_0_z_0_zz_xyyyyzz = cbuffer.data(dk_geom_1010_off + 1283 * ccomps * dcomps);

            auto g_y_0_z_0_zz_xyyyzzz = cbuffer.data(dk_geom_1010_off + 1284 * ccomps * dcomps);

            auto g_y_0_z_0_zz_xyyzzzz = cbuffer.data(dk_geom_1010_off + 1285 * ccomps * dcomps);

            auto g_y_0_z_0_zz_xyzzzzz = cbuffer.data(dk_geom_1010_off + 1286 * ccomps * dcomps);

            auto g_y_0_z_0_zz_xzzzzzz = cbuffer.data(dk_geom_1010_off + 1287 * ccomps * dcomps);

            auto g_y_0_z_0_zz_yyyyyyy = cbuffer.data(dk_geom_1010_off + 1288 * ccomps * dcomps);

            auto g_y_0_z_0_zz_yyyyyyz = cbuffer.data(dk_geom_1010_off + 1289 * ccomps * dcomps);

            auto g_y_0_z_0_zz_yyyyyzz = cbuffer.data(dk_geom_1010_off + 1290 * ccomps * dcomps);

            auto g_y_0_z_0_zz_yyyyzzz = cbuffer.data(dk_geom_1010_off + 1291 * ccomps * dcomps);

            auto g_y_0_z_0_zz_yyyzzzz = cbuffer.data(dk_geom_1010_off + 1292 * ccomps * dcomps);

            auto g_y_0_z_0_zz_yyzzzzz = cbuffer.data(dk_geom_1010_off + 1293 * ccomps * dcomps);

            auto g_y_0_z_0_zz_yzzzzzz = cbuffer.data(dk_geom_1010_off + 1294 * ccomps * dcomps);

            auto g_y_0_z_0_zz_zzzzzzz = cbuffer.data(dk_geom_1010_off + 1295 * ccomps * dcomps);

            auto g_z_0_x_0_xx_xxxxxxx = cbuffer.data(dk_geom_1010_off + 1296 * ccomps * dcomps);

            auto g_z_0_x_0_xx_xxxxxxy = cbuffer.data(dk_geom_1010_off + 1297 * ccomps * dcomps);

            auto g_z_0_x_0_xx_xxxxxxz = cbuffer.data(dk_geom_1010_off + 1298 * ccomps * dcomps);

            auto g_z_0_x_0_xx_xxxxxyy = cbuffer.data(dk_geom_1010_off + 1299 * ccomps * dcomps);

            auto g_z_0_x_0_xx_xxxxxyz = cbuffer.data(dk_geom_1010_off + 1300 * ccomps * dcomps);

            auto g_z_0_x_0_xx_xxxxxzz = cbuffer.data(dk_geom_1010_off + 1301 * ccomps * dcomps);

            auto g_z_0_x_0_xx_xxxxyyy = cbuffer.data(dk_geom_1010_off + 1302 * ccomps * dcomps);

            auto g_z_0_x_0_xx_xxxxyyz = cbuffer.data(dk_geom_1010_off + 1303 * ccomps * dcomps);

            auto g_z_0_x_0_xx_xxxxyzz = cbuffer.data(dk_geom_1010_off + 1304 * ccomps * dcomps);

            auto g_z_0_x_0_xx_xxxxzzz = cbuffer.data(dk_geom_1010_off + 1305 * ccomps * dcomps);

            auto g_z_0_x_0_xx_xxxyyyy = cbuffer.data(dk_geom_1010_off + 1306 * ccomps * dcomps);

            auto g_z_0_x_0_xx_xxxyyyz = cbuffer.data(dk_geom_1010_off + 1307 * ccomps * dcomps);

            auto g_z_0_x_0_xx_xxxyyzz = cbuffer.data(dk_geom_1010_off + 1308 * ccomps * dcomps);

            auto g_z_0_x_0_xx_xxxyzzz = cbuffer.data(dk_geom_1010_off + 1309 * ccomps * dcomps);

            auto g_z_0_x_0_xx_xxxzzzz = cbuffer.data(dk_geom_1010_off + 1310 * ccomps * dcomps);

            auto g_z_0_x_0_xx_xxyyyyy = cbuffer.data(dk_geom_1010_off + 1311 * ccomps * dcomps);

            auto g_z_0_x_0_xx_xxyyyyz = cbuffer.data(dk_geom_1010_off + 1312 * ccomps * dcomps);

            auto g_z_0_x_0_xx_xxyyyzz = cbuffer.data(dk_geom_1010_off + 1313 * ccomps * dcomps);

            auto g_z_0_x_0_xx_xxyyzzz = cbuffer.data(dk_geom_1010_off + 1314 * ccomps * dcomps);

            auto g_z_0_x_0_xx_xxyzzzz = cbuffer.data(dk_geom_1010_off + 1315 * ccomps * dcomps);

            auto g_z_0_x_0_xx_xxzzzzz = cbuffer.data(dk_geom_1010_off + 1316 * ccomps * dcomps);

            auto g_z_0_x_0_xx_xyyyyyy = cbuffer.data(dk_geom_1010_off + 1317 * ccomps * dcomps);

            auto g_z_0_x_0_xx_xyyyyyz = cbuffer.data(dk_geom_1010_off + 1318 * ccomps * dcomps);

            auto g_z_0_x_0_xx_xyyyyzz = cbuffer.data(dk_geom_1010_off + 1319 * ccomps * dcomps);

            auto g_z_0_x_0_xx_xyyyzzz = cbuffer.data(dk_geom_1010_off + 1320 * ccomps * dcomps);

            auto g_z_0_x_0_xx_xyyzzzz = cbuffer.data(dk_geom_1010_off + 1321 * ccomps * dcomps);

            auto g_z_0_x_0_xx_xyzzzzz = cbuffer.data(dk_geom_1010_off + 1322 * ccomps * dcomps);

            auto g_z_0_x_0_xx_xzzzzzz = cbuffer.data(dk_geom_1010_off + 1323 * ccomps * dcomps);

            auto g_z_0_x_0_xx_yyyyyyy = cbuffer.data(dk_geom_1010_off + 1324 * ccomps * dcomps);

            auto g_z_0_x_0_xx_yyyyyyz = cbuffer.data(dk_geom_1010_off + 1325 * ccomps * dcomps);

            auto g_z_0_x_0_xx_yyyyyzz = cbuffer.data(dk_geom_1010_off + 1326 * ccomps * dcomps);

            auto g_z_0_x_0_xx_yyyyzzz = cbuffer.data(dk_geom_1010_off + 1327 * ccomps * dcomps);

            auto g_z_0_x_0_xx_yyyzzzz = cbuffer.data(dk_geom_1010_off + 1328 * ccomps * dcomps);

            auto g_z_0_x_0_xx_yyzzzzz = cbuffer.data(dk_geom_1010_off + 1329 * ccomps * dcomps);

            auto g_z_0_x_0_xx_yzzzzzz = cbuffer.data(dk_geom_1010_off + 1330 * ccomps * dcomps);

            auto g_z_0_x_0_xx_zzzzzzz = cbuffer.data(dk_geom_1010_off + 1331 * ccomps * dcomps);

            auto g_z_0_x_0_xy_xxxxxxx = cbuffer.data(dk_geom_1010_off + 1332 * ccomps * dcomps);

            auto g_z_0_x_0_xy_xxxxxxy = cbuffer.data(dk_geom_1010_off + 1333 * ccomps * dcomps);

            auto g_z_0_x_0_xy_xxxxxxz = cbuffer.data(dk_geom_1010_off + 1334 * ccomps * dcomps);

            auto g_z_0_x_0_xy_xxxxxyy = cbuffer.data(dk_geom_1010_off + 1335 * ccomps * dcomps);

            auto g_z_0_x_0_xy_xxxxxyz = cbuffer.data(dk_geom_1010_off + 1336 * ccomps * dcomps);

            auto g_z_0_x_0_xy_xxxxxzz = cbuffer.data(dk_geom_1010_off + 1337 * ccomps * dcomps);

            auto g_z_0_x_0_xy_xxxxyyy = cbuffer.data(dk_geom_1010_off + 1338 * ccomps * dcomps);

            auto g_z_0_x_0_xy_xxxxyyz = cbuffer.data(dk_geom_1010_off + 1339 * ccomps * dcomps);

            auto g_z_0_x_0_xy_xxxxyzz = cbuffer.data(dk_geom_1010_off + 1340 * ccomps * dcomps);

            auto g_z_0_x_0_xy_xxxxzzz = cbuffer.data(dk_geom_1010_off + 1341 * ccomps * dcomps);

            auto g_z_0_x_0_xy_xxxyyyy = cbuffer.data(dk_geom_1010_off + 1342 * ccomps * dcomps);

            auto g_z_0_x_0_xy_xxxyyyz = cbuffer.data(dk_geom_1010_off + 1343 * ccomps * dcomps);

            auto g_z_0_x_0_xy_xxxyyzz = cbuffer.data(dk_geom_1010_off + 1344 * ccomps * dcomps);

            auto g_z_0_x_0_xy_xxxyzzz = cbuffer.data(dk_geom_1010_off + 1345 * ccomps * dcomps);

            auto g_z_0_x_0_xy_xxxzzzz = cbuffer.data(dk_geom_1010_off + 1346 * ccomps * dcomps);

            auto g_z_0_x_0_xy_xxyyyyy = cbuffer.data(dk_geom_1010_off + 1347 * ccomps * dcomps);

            auto g_z_0_x_0_xy_xxyyyyz = cbuffer.data(dk_geom_1010_off + 1348 * ccomps * dcomps);

            auto g_z_0_x_0_xy_xxyyyzz = cbuffer.data(dk_geom_1010_off + 1349 * ccomps * dcomps);

            auto g_z_0_x_0_xy_xxyyzzz = cbuffer.data(dk_geom_1010_off + 1350 * ccomps * dcomps);

            auto g_z_0_x_0_xy_xxyzzzz = cbuffer.data(dk_geom_1010_off + 1351 * ccomps * dcomps);

            auto g_z_0_x_0_xy_xxzzzzz = cbuffer.data(dk_geom_1010_off + 1352 * ccomps * dcomps);

            auto g_z_0_x_0_xy_xyyyyyy = cbuffer.data(dk_geom_1010_off + 1353 * ccomps * dcomps);

            auto g_z_0_x_0_xy_xyyyyyz = cbuffer.data(dk_geom_1010_off + 1354 * ccomps * dcomps);

            auto g_z_0_x_0_xy_xyyyyzz = cbuffer.data(dk_geom_1010_off + 1355 * ccomps * dcomps);

            auto g_z_0_x_0_xy_xyyyzzz = cbuffer.data(dk_geom_1010_off + 1356 * ccomps * dcomps);

            auto g_z_0_x_0_xy_xyyzzzz = cbuffer.data(dk_geom_1010_off + 1357 * ccomps * dcomps);

            auto g_z_0_x_0_xy_xyzzzzz = cbuffer.data(dk_geom_1010_off + 1358 * ccomps * dcomps);

            auto g_z_0_x_0_xy_xzzzzzz = cbuffer.data(dk_geom_1010_off + 1359 * ccomps * dcomps);

            auto g_z_0_x_0_xy_yyyyyyy = cbuffer.data(dk_geom_1010_off + 1360 * ccomps * dcomps);

            auto g_z_0_x_0_xy_yyyyyyz = cbuffer.data(dk_geom_1010_off + 1361 * ccomps * dcomps);

            auto g_z_0_x_0_xy_yyyyyzz = cbuffer.data(dk_geom_1010_off + 1362 * ccomps * dcomps);

            auto g_z_0_x_0_xy_yyyyzzz = cbuffer.data(dk_geom_1010_off + 1363 * ccomps * dcomps);

            auto g_z_0_x_0_xy_yyyzzzz = cbuffer.data(dk_geom_1010_off + 1364 * ccomps * dcomps);

            auto g_z_0_x_0_xy_yyzzzzz = cbuffer.data(dk_geom_1010_off + 1365 * ccomps * dcomps);

            auto g_z_0_x_0_xy_yzzzzzz = cbuffer.data(dk_geom_1010_off + 1366 * ccomps * dcomps);

            auto g_z_0_x_0_xy_zzzzzzz = cbuffer.data(dk_geom_1010_off + 1367 * ccomps * dcomps);

            auto g_z_0_x_0_xz_xxxxxxx = cbuffer.data(dk_geom_1010_off + 1368 * ccomps * dcomps);

            auto g_z_0_x_0_xz_xxxxxxy = cbuffer.data(dk_geom_1010_off + 1369 * ccomps * dcomps);

            auto g_z_0_x_0_xz_xxxxxxz = cbuffer.data(dk_geom_1010_off + 1370 * ccomps * dcomps);

            auto g_z_0_x_0_xz_xxxxxyy = cbuffer.data(dk_geom_1010_off + 1371 * ccomps * dcomps);

            auto g_z_0_x_0_xz_xxxxxyz = cbuffer.data(dk_geom_1010_off + 1372 * ccomps * dcomps);

            auto g_z_0_x_0_xz_xxxxxzz = cbuffer.data(dk_geom_1010_off + 1373 * ccomps * dcomps);

            auto g_z_0_x_0_xz_xxxxyyy = cbuffer.data(dk_geom_1010_off + 1374 * ccomps * dcomps);

            auto g_z_0_x_0_xz_xxxxyyz = cbuffer.data(dk_geom_1010_off + 1375 * ccomps * dcomps);

            auto g_z_0_x_0_xz_xxxxyzz = cbuffer.data(dk_geom_1010_off + 1376 * ccomps * dcomps);

            auto g_z_0_x_0_xz_xxxxzzz = cbuffer.data(dk_geom_1010_off + 1377 * ccomps * dcomps);

            auto g_z_0_x_0_xz_xxxyyyy = cbuffer.data(dk_geom_1010_off + 1378 * ccomps * dcomps);

            auto g_z_0_x_0_xz_xxxyyyz = cbuffer.data(dk_geom_1010_off + 1379 * ccomps * dcomps);

            auto g_z_0_x_0_xz_xxxyyzz = cbuffer.data(dk_geom_1010_off + 1380 * ccomps * dcomps);

            auto g_z_0_x_0_xz_xxxyzzz = cbuffer.data(dk_geom_1010_off + 1381 * ccomps * dcomps);

            auto g_z_0_x_0_xz_xxxzzzz = cbuffer.data(dk_geom_1010_off + 1382 * ccomps * dcomps);

            auto g_z_0_x_0_xz_xxyyyyy = cbuffer.data(dk_geom_1010_off + 1383 * ccomps * dcomps);

            auto g_z_0_x_0_xz_xxyyyyz = cbuffer.data(dk_geom_1010_off + 1384 * ccomps * dcomps);

            auto g_z_0_x_0_xz_xxyyyzz = cbuffer.data(dk_geom_1010_off + 1385 * ccomps * dcomps);

            auto g_z_0_x_0_xz_xxyyzzz = cbuffer.data(dk_geom_1010_off + 1386 * ccomps * dcomps);

            auto g_z_0_x_0_xz_xxyzzzz = cbuffer.data(dk_geom_1010_off + 1387 * ccomps * dcomps);

            auto g_z_0_x_0_xz_xxzzzzz = cbuffer.data(dk_geom_1010_off + 1388 * ccomps * dcomps);

            auto g_z_0_x_0_xz_xyyyyyy = cbuffer.data(dk_geom_1010_off + 1389 * ccomps * dcomps);

            auto g_z_0_x_0_xz_xyyyyyz = cbuffer.data(dk_geom_1010_off + 1390 * ccomps * dcomps);

            auto g_z_0_x_0_xz_xyyyyzz = cbuffer.data(dk_geom_1010_off + 1391 * ccomps * dcomps);

            auto g_z_0_x_0_xz_xyyyzzz = cbuffer.data(dk_geom_1010_off + 1392 * ccomps * dcomps);

            auto g_z_0_x_0_xz_xyyzzzz = cbuffer.data(dk_geom_1010_off + 1393 * ccomps * dcomps);

            auto g_z_0_x_0_xz_xyzzzzz = cbuffer.data(dk_geom_1010_off + 1394 * ccomps * dcomps);

            auto g_z_0_x_0_xz_xzzzzzz = cbuffer.data(dk_geom_1010_off + 1395 * ccomps * dcomps);

            auto g_z_0_x_0_xz_yyyyyyy = cbuffer.data(dk_geom_1010_off + 1396 * ccomps * dcomps);

            auto g_z_0_x_0_xz_yyyyyyz = cbuffer.data(dk_geom_1010_off + 1397 * ccomps * dcomps);

            auto g_z_0_x_0_xz_yyyyyzz = cbuffer.data(dk_geom_1010_off + 1398 * ccomps * dcomps);

            auto g_z_0_x_0_xz_yyyyzzz = cbuffer.data(dk_geom_1010_off + 1399 * ccomps * dcomps);

            auto g_z_0_x_0_xz_yyyzzzz = cbuffer.data(dk_geom_1010_off + 1400 * ccomps * dcomps);

            auto g_z_0_x_0_xz_yyzzzzz = cbuffer.data(dk_geom_1010_off + 1401 * ccomps * dcomps);

            auto g_z_0_x_0_xz_yzzzzzz = cbuffer.data(dk_geom_1010_off + 1402 * ccomps * dcomps);

            auto g_z_0_x_0_xz_zzzzzzz = cbuffer.data(dk_geom_1010_off + 1403 * ccomps * dcomps);

            auto g_z_0_x_0_yy_xxxxxxx = cbuffer.data(dk_geom_1010_off + 1404 * ccomps * dcomps);

            auto g_z_0_x_0_yy_xxxxxxy = cbuffer.data(dk_geom_1010_off + 1405 * ccomps * dcomps);

            auto g_z_0_x_0_yy_xxxxxxz = cbuffer.data(dk_geom_1010_off + 1406 * ccomps * dcomps);

            auto g_z_0_x_0_yy_xxxxxyy = cbuffer.data(dk_geom_1010_off + 1407 * ccomps * dcomps);

            auto g_z_0_x_0_yy_xxxxxyz = cbuffer.data(dk_geom_1010_off + 1408 * ccomps * dcomps);

            auto g_z_0_x_0_yy_xxxxxzz = cbuffer.data(dk_geom_1010_off + 1409 * ccomps * dcomps);

            auto g_z_0_x_0_yy_xxxxyyy = cbuffer.data(dk_geom_1010_off + 1410 * ccomps * dcomps);

            auto g_z_0_x_0_yy_xxxxyyz = cbuffer.data(dk_geom_1010_off + 1411 * ccomps * dcomps);

            auto g_z_0_x_0_yy_xxxxyzz = cbuffer.data(dk_geom_1010_off + 1412 * ccomps * dcomps);

            auto g_z_0_x_0_yy_xxxxzzz = cbuffer.data(dk_geom_1010_off + 1413 * ccomps * dcomps);

            auto g_z_0_x_0_yy_xxxyyyy = cbuffer.data(dk_geom_1010_off + 1414 * ccomps * dcomps);

            auto g_z_0_x_0_yy_xxxyyyz = cbuffer.data(dk_geom_1010_off + 1415 * ccomps * dcomps);

            auto g_z_0_x_0_yy_xxxyyzz = cbuffer.data(dk_geom_1010_off + 1416 * ccomps * dcomps);

            auto g_z_0_x_0_yy_xxxyzzz = cbuffer.data(dk_geom_1010_off + 1417 * ccomps * dcomps);

            auto g_z_0_x_0_yy_xxxzzzz = cbuffer.data(dk_geom_1010_off + 1418 * ccomps * dcomps);

            auto g_z_0_x_0_yy_xxyyyyy = cbuffer.data(dk_geom_1010_off + 1419 * ccomps * dcomps);

            auto g_z_0_x_0_yy_xxyyyyz = cbuffer.data(dk_geom_1010_off + 1420 * ccomps * dcomps);

            auto g_z_0_x_0_yy_xxyyyzz = cbuffer.data(dk_geom_1010_off + 1421 * ccomps * dcomps);

            auto g_z_0_x_0_yy_xxyyzzz = cbuffer.data(dk_geom_1010_off + 1422 * ccomps * dcomps);

            auto g_z_0_x_0_yy_xxyzzzz = cbuffer.data(dk_geom_1010_off + 1423 * ccomps * dcomps);

            auto g_z_0_x_0_yy_xxzzzzz = cbuffer.data(dk_geom_1010_off + 1424 * ccomps * dcomps);

            auto g_z_0_x_0_yy_xyyyyyy = cbuffer.data(dk_geom_1010_off + 1425 * ccomps * dcomps);

            auto g_z_0_x_0_yy_xyyyyyz = cbuffer.data(dk_geom_1010_off + 1426 * ccomps * dcomps);

            auto g_z_0_x_0_yy_xyyyyzz = cbuffer.data(dk_geom_1010_off + 1427 * ccomps * dcomps);

            auto g_z_0_x_0_yy_xyyyzzz = cbuffer.data(dk_geom_1010_off + 1428 * ccomps * dcomps);

            auto g_z_0_x_0_yy_xyyzzzz = cbuffer.data(dk_geom_1010_off + 1429 * ccomps * dcomps);

            auto g_z_0_x_0_yy_xyzzzzz = cbuffer.data(dk_geom_1010_off + 1430 * ccomps * dcomps);

            auto g_z_0_x_0_yy_xzzzzzz = cbuffer.data(dk_geom_1010_off + 1431 * ccomps * dcomps);

            auto g_z_0_x_0_yy_yyyyyyy = cbuffer.data(dk_geom_1010_off + 1432 * ccomps * dcomps);

            auto g_z_0_x_0_yy_yyyyyyz = cbuffer.data(dk_geom_1010_off + 1433 * ccomps * dcomps);

            auto g_z_0_x_0_yy_yyyyyzz = cbuffer.data(dk_geom_1010_off + 1434 * ccomps * dcomps);

            auto g_z_0_x_0_yy_yyyyzzz = cbuffer.data(dk_geom_1010_off + 1435 * ccomps * dcomps);

            auto g_z_0_x_0_yy_yyyzzzz = cbuffer.data(dk_geom_1010_off + 1436 * ccomps * dcomps);

            auto g_z_0_x_0_yy_yyzzzzz = cbuffer.data(dk_geom_1010_off + 1437 * ccomps * dcomps);

            auto g_z_0_x_0_yy_yzzzzzz = cbuffer.data(dk_geom_1010_off + 1438 * ccomps * dcomps);

            auto g_z_0_x_0_yy_zzzzzzz = cbuffer.data(dk_geom_1010_off + 1439 * ccomps * dcomps);

            auto g_z_0_x_0_yz_xxxxxxx = cbuffer.data(dk_geom_1010_off + 1440 * ccomps * dcomps);

            auto g_z_0_x_0_yz_xxxxxxy = cbuffer.data(dk_geom_1010_off + 1441 * ccomps * dcomps);

            auto g_z_0_x_0_yz_xxxxxxz = cbuffer.data(dk_geom_1010_off + 1442 * ccomps * dcomps);

            auto g_z_0_x_0_yz_xxxxxyy = cbuffer.data(dk_geom_1010_off + 1443 * ccomps * dcomps);

            auto g_z_0_x_0_yz_xxxxxyz = cbuffer.data(dk_geom_1010_off + 1444 * ccomps * dcomps);

            auto g_z_0_x_0_yz_xxxxxzz = cbuffer.data(dk_geom_1010_off + 1445 * ccomps * dcomps);

            auto g_z_0_x_0_yz_xxxxyyy = cbuffer.data(dk_geom_1010_off + 1446 * ccomps * dcomps);

            auto g_z_0_x_0_yz_xxxxyyz = cbuffer.data(dk_geom_1010_off + 1447 * ccomps * dcomps);

            auto g_z_0_x_0_yz_xxxxyzz = cbuffer.data(dk_geom_1010_off + 1448 * ccomps * dcomps);

            auto g_z_0_x_0_yz_xxxxzzz = cbuffer.data(dk_geom_1010_off + 1449 * ccomps * dcomps);

            auto g_z_0_x_0_yz_xxxyyyy = cbuffer.data(dk_geom_1010_off + 1450 * ccomps * dcomps);

            auto g_z_0_x_0_yz_xxxyyyz = cbuffer.data(dk_geom_1010_off + 1451 * ccomps * dcomps);

            auto g_z_0_x_0_yz_xxxyyzz = cbuffer.data(dk_geom_1010_off + 1452 * ccomps * dcomps);

            auto g_z_0_x_0_yz_xxxyzzz = cbuffer.data(dk_geom_1010_off + 1453 * ccomps * dcomps);

            auto g_z_0_x_0_yz_xxxzzzz = cbuffer.data(dk_geom_1010_off + 1454 * ccomps * dcomps);

            auto g_z_0_x_0_yz_xxyyyyy = cbuffer.data(dk_geom_1010_off + 1455 * ccomps * dcomps);

            auto g_z_0_x_0_yz_xxyyyyz = cbuffer.data(dk_geom_1010_off + 1456 * ccomps * dcomps);

            auto g_z_0_x_0_yz_xxyyyzz = cbuffer.data(dk_geom_1010_off + 1457 * ccomps * dcomps);

            auto g_z_0_x_0_yz_xxyyzzz = cbuffer.data(dk_geom_1010_off + 1458 * ccomps * dcomps);

            auto g_z_0_x_0_yz_xxyzzzz = cbuffer.data(dk_geom_1010_off + 1459 * ccomps * dcomps);

            auto g_z_0_x_0_yz_xxzzzzz = cbuffer.data(dk_geom_1010_off + 1460 * ccomps * dcomps);

            auto g_z_0_x_0_yz_xyyyyyy = cbuffer.data(dk_geom_1010_off + 1461 * ccomps * dcomps);

            auto g_z_0_x_0_yz_xyyyyyz = cbuffer.data(dk_geom_1010_off + 1462 * ccomps * dcomps);

            auto g_z_0_x_0_yz_xyyyyzz = cbuffer.data(dk_geom_1010_off + 1463 * ccomps * dcomps);

            auto g_z_0_x_0_yz_xyyyzzz = cbuffer.data(dk_geom_1010_off + 1464 * ccomps * dcomps);

            auto g_z_0_x_0_yz_xyyzzzz = cbuffer.data(dk_geom_1010_off + 1465 * ccomps * dcomps);

            auto g_z_0_x_0_yz_xyzzzzz = cbuffer.data(dk_geom_1010_off + 1466 * ccomps * dcomps);

            auto g_z_0_x_0_yz_xzzzzzz = cbuffer.data(dk_geom_1010_off + 1467 * ccomps * dcomps);

            auto g_z_0_x_0_yz_yyyyyyy = cbuffer.data(dk_geom_1010_off + 1468 * ccomps * dcomps);

            auto g_z_0_x_0_yz_yyyyyyz = cbuffer.data(dk_geom_1010_off + 1469 * ccomps * dcomps);

            auto g_z_0_x_0_yz_yyyyyzz = cbuffer.data(dk_geom_1010_off + 1470 * ccomps * dcomps);

            auto g_z_0_x_0_yz_yyyyzzz = cbuffer.data(dk_geom_1010_off + 1471 * ccomps * dcomps);

            auto g_z_0_x_0_yz_yyyzzzz = cbuffer.data(dk_geom_1010_off + 1472 * ccomps * dcomps);

            auto g_z_0_x_0_yz_yyzzzzz = cbuffer.data(dk_geom_1010_off + 1473 * ccomps * dcomps);

            auto g_z_0_x_0_yz_yzzzzzz = cbuffer.data(dk_geom_1010_off + 1474 * ccomps * dcomps);

            auto g_z_0_x_0_yz_zzzzzzz = cbuffer.data(dk_geom_1010_off + 1475 * ccomps * dcomps);

            auto g_z_0_x_0_zz_xxxxxxx = cbuffer.data(dk_geom_1010_off + 1476 * ccomps * dcomps);

            auto g_z_0_x_0_zz_xxxxxxy = cbuffer.data(dk_geom_1010_off + 1477 * ccomps * dcomps);

            auto g_z_0_x_0_zz_xxxxxxz = cbuffer.data(dk_geom_1010_off + 1478 * ccomps * dcomps);

            auto g_z_0_x_0_zz_xxxxxyy = cbuffer.data(dk_geom_1010_off + 1479 * ccomps * dcomps);

            auto g_z_0_x_0_zz_xxxxxyz = cbuffer.data(dk_geom_1010_off + 1480 * ccomps * dcomps);

            auto g_z_0_x_0_zz_xxxxxzz = cbuffer.data(dk_geom_1010_off + 1481 * ccomps * dcomps);

            auto g_z_0_x_0_zz_xxxxyyy = cbuffer.data(dk_geom_1010_off + 1482 * ccomps * dcomps);

            auto g_z_0_x_0_zz_xxxxyyz = cbuffer.data(dk_geom_1010_off + 1483 * ccomps * dcomps);

            auto g_z_0_x_0_zz_xxxxyzz = cbuffer.data(dk_geom_1010_off + 1484 * ccomps * dcomps);

            auto g_z_0_x_0_zz_xxxxzzz = cbuffer.data(dk_geom_1010_off + 1485 * ccomps * dcomps);

            auto g_z_0_x_0_zz_xxxyyyy = cbuffer.data(dk_geom_1010_off + 1486 * ccomps * dcomps);

            auto g_z_0_x_0_zz_xxxyyyz = cbuffer.data(dk_geom_1010_off + 1487 * ccomps * dcomps);

            auto g_z_0_x_0_zz_xxxyyzz = cbuffer.data(dk_geom_1010_off + 1488 * ccomps * dcomps);

            auto g_z_0_x_0_zz_xxxyzzz = cbuffer.data(dk_geom_1010_off + 1489 * ccomps * dcomps);

            auto g_z_0_x_0_zz_xxxzzzz = cbuffer.data(dk_geom_1010_off + 1490 * ccomps * dcomps);

            auto g_z_0_x_0_zz_xxyyyyy = cbuffer.data(dk_geom_1010_off + 1491 * ccomps * dcomps);

            auto g_z_0_x_0_zz_xxyyyyz = cbuffer.data(dk_geom_1010_off + 1492 * ccomps * dcomps);

            auto g_z_0_x_0_zz_xxyyyzz = cbuffer.data(dk_geom_1010_off + 1493 * ccomps * dcomps);

            auto g_z_0_x_0_zz_xxyyzzz = cbuffer.data(dk_geom_1010_off + 1494 * ccomps * dcomps);

            auto g_z_0_x_0_zz_xxyzzzz = cbuffer.data(dk_geom_1010_off + 1495 * ccomps * dcomps);

            auto g_z_0_x_0_zz_xxzzzzz = cbuffer.data(dk_geom_1010_off + 1496 * ccomps * dcomps);

            auto g_z_0_x_0_zz_xyyyyyy = cbuffer.data(dk_geom_1010_off + 1497 * ccomps * dcomps);

            auto g_z_0_x_0_zz_xyyyyyz = cbuffer.data(dk_geom_1010_off + 1498 * ccomps * dcomps);

            auto g_z_0_x_0_zz_xyyyyzz = cbuffer.data(dk_geom_1010_off + 1499 * ccomps * dcomps);

            auto g_z_0_x_0_zz_xyyyzzz = cbuffer.data(dk_geom_1010_off + 1500 * ccomps * dcomps);

            auto g_z_0_x_0_zz_xyyzzzz = cbuffer.data(dk_geom_1010_off + 1501 * ccomps * dcomps);

            auto g_z_0_x_0_zz_xyzzzzz = cbuffer.data(dk_geom_1010_off + 1502 * ccomps * dcomps);

            auto g_z_0_x_0_zz_xzzzzzz = cbuffer.data(dk_geom_1010_off + 1503 * ccomps * dcomps);

            auto g_z_0_x_0_zz_yyyyyyy = cbuffer.data(dk_geom_1010_off + 1504 * ccomps * dcomps);

            auto g_z_0_x_0_zz_yyyyyyz = cbuffer.data(dk_geom_1010_off + 1505 * ccomps * dcomps);

            auto g_z_0_x_0_zz_yyyyyzz = cbuffer.data(dk_geom_1010_off + 1506 * ccomps * dcomps);

            auto g_z_0_x_0_zz_yyyyzzz = cbuffer.data(dk_geom_1010_off + 1507 * ccomps * dcomps);

            auto g_z_0_x_0_zz_yyyzzzz = cbuffer.data(dk_geom_1010_off + 1508 * ccomps * dcomps);

            auto g_z_0_x_0_zz_yyzzzzz = cbuffer.data(dk_geom_1010_off + 1509 * ccomps * dcomps);

            auto g_z_0_x_0_zz_yzzzzzz = cbuffer.data(dk_geom_1010_off + 1510 * ccomps * dcomps);

            auto g_z_0_x_0_zz_zzzzzzz = cbuffer.data(dk_geom_1010_off + 1511 * ccomps * dcomps);

            auto g_z_0_y_0_xx_xxxxxxx = cbuffer.data(dk_geom_1010_off + 1512 * ccomps * dcomps);

            auto g_z_0_y_0_xx_xxxxxxy = cbuffer.data(dk_geom_1010_off + 1513 * ccomps * dcomps);

            auto g_z_0_y_0_xx_xxxxxxz = cbuffer.data(dk_geom_1010_off + 1514 * ccomps * dcomps);

            auto g_z_0_y_0_xx_xxxxxyy = cbuffer.data(dk_geom_1010_off + 1515 * ccomps * dcomps);

            auto g_z_0_y_0_xx_xxxxxyz = cbuffer.data(dk_geom_1010_off + 1516 * ccomps * dcomps);

            auto g_z_0_y_0_xx_xxxxxzz = cbuffer.data(dk_geom_1010_off + 1517 * ccomps * dcomps);

            auto g_z_0_y_0_xx_xxxxyyy = cbuffer.data(dk_geom_1010_off + 1518 * ccomps * dcomps);

            auto g_z_0_y_0_xx_xxxxyyz = cbuffer.data(dk_geom_1010_off + 1519 * ccomps * dcomps);

            auto g_z_0_y_0_xx_xxxxyzz = cbuffer.data(dk_geom_1010_off + 1520 * ccomps * dcomps);

            auto g_z_0_y_0_xx_xxxxzzz = cbuffer.data(dk_geom_1010_off + 1521 * ccomps * dcomps);

            auto g_z_0_y_0_xx_xxxyyyy = cbuffer.data(dk_geom_1010_off + 1522 * ccomps * dcomps);

            auto g_z_0_y_0_xx_xxxyyyz = cbuffer.data(dk_geom_1010_off + 1523 * ccomps * dcomps);

            auto g_z_0_y_0_xx_xxxyyzz = cbuffer.data(dk_geom_1010_off + 1524 * ccomps * dcomps);

            auto g_z_0_y_0_xx_xxxyzzz = cbuffer.data(dk_geom_1010_off + 1525 * ccomps * dcomps);

            auto g_z_0_y_0_xx_xxxzzzz = cbuffer.data(dk_geom_1010_off + 1526 * ccomps * dcomps);

            auto g_z_0_y_0_xx_xxyyyyy = cbuffer.data(dk_geom_1010_off + 1527 * ccomps * dcomps);

            auto g_z_0_y_0_xx_xxyyyyz = cbuffer.data(dk_geom_1010_off + 1528 * ccomps * dcomps);

            auto g_z_0_y_0_xx_xxyyyzz = cbuffer.data(dk_geom_1010_off + 1529 * ccomps * dcomps);

            auto g_z_0_y_0_xx_xxyyzzz = cbuffer.data(dk_geom_1010_off + 1530 * ccomps * dcomps);

            auto g_z_0_y_0_xx_xxyzzzz = cbuffer.data(dk_geom_1010_off + 1531 * ccomps * dcomps);

            auto g_z_0_y_0_xx_xxzzzzz = cbuffer.data(dk_geom_1010_off + 1532 * ccomps * dcomps);

            auto g_z_0_y_0_xx_xyyyyyy = cbuffer.data(dk_geom_1010_off + 1533 * ccomps * dcomps);

            auto g_z_0_y_0_xx_xyyyyyz = cbuffer.data(dk_geom_1010_off + 1534 * ccomps * dcomps);

            auto g_z_0_y_0_xx_xyyyyzz = cbuffer.data(dk_geom_1010_off + 1535 * ccomps * dcomps);

            auto g_z_0_y_0_xx_xyyyzzz = cbuffer.data(dk_geom_1010_off + 1536 * ccomps * dcomps);

            auto g_z_0_y_0_xx_xyyzzzz = cbuffer.data(dk_geom_1010_off + 1537 * ccomps * dcomps);

            auto g_z_0_y_0_xx_xyzzzzz = cbuffer.data(dk_geom_1010_off + 1538 * ccomps * dcomps);

            auto g_z_0_y_0_xx_xzzzzzz = cbuffer.data(dk_geom_1010_off + 1539 * ccomps * dcomps);

            auto g_z_0_y_0_xx_yyyyyyy = cbuffer.data(dk_geom_1010_off + 1540 * ccomps * dcomps);

            auto g_z_0_y_0_xx_yyyyyyz = cbuffer.data(dk_geom_1010_off + 1541 * ccomps * dcomps);

            auto g_z_0_y_0_xx_yyyyyzz = cbuffer.data(dk_geom_1010_off + 1542 * ccomps * dcomps);

            auto g_z_0_y_0_xx_yyyyzzz = cbuffer.data(dk_geom_1010_off + 1543 * ccomps * dcomps);

            auto g_z_0_y_0_xx_yyyzzzz = cbuffer.data(dk_geom_1010_off + 1544 * ccomps * dcomps);

            auto g_z_0_y_0_xx_yyzzzzz = cbuffer.data(dk_geom_1010_off + 1545 * ccomps * dcomps);

            auto g_z_0_y_0_xx_yzzzzzz = cbuffer.data(dk_geom_1010_off + 1546 * ccomps * dcomps);

            auto g_z_0_y_0_xx_zzzzzzz = cbuffer.data(dk_geom_1010_off + 1547 * ccomps * dcomps);

            auto g_z_0_y_0_xy_xxxxxxx = cbuffer.data(dk_geom_1010_off + 1548 * ccomps * dcomps);

            auto g_z_0_y_0_xy_xxxxxxy = cbuffer.data(dk_geom_1010_off + 1549 * ccomps * dcomps);

            auto g_z_0_y_0_xy_xxxxxxz = cbuffer.data(dk_geom_1010_off + 1550 * ccomps * dcomps);

            auto g_z_0_y_0_xy_xxxxxyy = cbuffer.data(dk_geom_1010_off + 1551 * ccomps * dcomps);

            auto g_z_0_y_0_xy_xxxxxyz = cbuffer.data(dk_geom_1010_off + 1552 * ccomps * dcomps);

            auto g_z_0_y_0_xy_xxxxxzz = cbuffer.data(dk_geom_1010_off + 1553 * ccomps * dcomps);

            auto g_z_0_y_0_xy_xxxxyyy = cbuffer.data(dk_geom_1010_off + 1554 * ccomps * dcomps);

            auto g_z_0_y_0_xy_xxxxyyz = cbuffer.data(dk_geom_1010_off + 1555 * ccomps * dcomps);

            auto g_z_0_y_0_xy_xxxxyzz = cbuffer.data(dk_geom_1010_off + 1556 * ccomps * dcomps);

            auto g_z_0_y_0_xy_xxxxzzz = cbuffer.data(dk_geom_1010_off + 1557 * ccomps * dcomps);

            auto g_z_0_y_0_xy_xxxyyyy = cbuffer.data(dk_geom_1010_off + 1558 * ccomps * dcomps);

            auto g_z_0_y_0_xy_xxxyyyz = cbuffer.data(dk_geom_1010_off + 1559 * ccomps * dcomps);

            auto g_z_0_y_0_xy_xxxyyzz = cbuffer.data(dk_geom_1010_off + 1560 * ccomps * dcomps);

            auto g_z_0_y_0_xy_xxxyzzz = cbuffer.data(dk_geom_1010_off + 1561 * ccomps * dcomps);

            auto g_z_0_y_0_xy_xxxzzzz = cbuffer.data(dk_geom_1010_off + 1562 * ccomps * dcomps);

            auto g_z_0_y_0_xy_xxyyyyy = cbuffer.data(dk_geom_1010_off + 1563 * ccomps * dcomps);

            auto g_z_0_y_0_xy_xxyyyyz = cbuffer.data(dk_geom_1010_off + 1564 * ccomps * dcomps);

            auto g_z_0_y_0_xy_xxyyyzz = cbuffer.data(dk_geom_1010_off + 1565 * ccomps * dcomps);

            auto g_z_0_y_0_xy_xxyyzzz = cbuffer.data(dk_geom_1010_off + 1566 * ccomps * dcomps);

            auto g_z_0_y_0_xy_xxyzzzz = cbuffer.data(dk_geom_1010_off + 1567 * ccomps * dcomps);

            auto g_z_0_y_0_xy_xxzzzzz = cbuffer.data(dk_geom_1010_off + 1568 * ccomps * dcomps);

            auto g_z_0_y_0_xy_xyyyyyy = cbuffer.data(dk_geom_1010_off + 1569 * ccomps * dcomps);

            auto g_z_0_y_0_xy_xyyyyyz = cbuffer.data(dk_geom_1010_off + 1570 * ccomps * dcomps);

            auto g_z_0_y_0_xy_xyyyyzz = cbuffer.data(dk_geom_1010_off + 1571 * ccomps * dcomps);

            auto g_z_0_y_0_xy_xyyyzzz = cbuffer.data(dk_geom_1010_off + 1572 * ccomps * dcomps);

            auto g_z_0_y_0_xy_xyyzzzz = cbuffer.data(dk_geom_1010_off + 1573 * ccomps * dcomps);

            auto g_z_0_y_0_xy_xyzzzzz = cbuffer.data(dk_geom_1010_off + 1574 * ccomps * dcomps);

            auto g_z_0_y_0_xy_xzzzzzz = cbuffer.data(dk_geom_1010_off + 1575 * ccomps * dcomps);

            auto g_z_0_y_0_xy_yyyyyyy = cbuffer.data(dk_geom_1010_off + 1576 * ccomps * dcomps);

            auto g_z_0_y_0_xy_yyyyyyz = cbuffer.data(dk_geom_1010_off + 1577 * ccomps * dcomps);

            auto g_z_0_y_0_xy_yyyyyzz = cbuffer.data(dk_geom_1010_off + 1578 * ccomps * dcomps);

            auto g_z_0_y_0_xy_yyyyzzz = cbuffer.data(dk_geom_1010_off + 1579 * ccomps * dcomps);

            auto g_z_0_y_0_xy_yyyzzzz = cbuffer.data(dk_geom_1010_off + 1580 * ccomps * dcomps);

            auto g_z_0_y_0_xy_yyzzzzz = cbuffer.data(dk_geom_1010_off + 1581 * ccomps * dcomps);

            auto g_z_0_y_0_xy_yzzzzzz = cbuffer.data(dk_geom_1010_off + 1582 * ccomps * dcomps);

            auto g_z_0_y_0_xy_zzzzzzz = cbuffer.data(dk_geom_1010_off + 1583 * ccomps * dcomps);

            auto g_z_0_y_0_xz_xxxxxxx = cbuffer.data(dk_geom_1010_off + 1584 * ccomps * dcomps);

            auto g_z_0_y_0_xz_xxxxxxy = cbuffer.data(dk_geom_1010_off + 1585 * ccomps * dcomps);

            auto g_z_0_y_0_xz_xxxxxxz = cbuffer.data(dk_geom_1010_off + 1586 * ccomps * dcomps);

            auto g_z_0_y_0_xz_xxxxxyy = cbuffer.data(dk_geom_1010_off + 1587 * ccomps * dcomps);

            auto g_z_0_y_0_xz_xxxxxyz = cbuffer.data(dk_geom_1010_off + 1588 * ccomps * dcomps);

            auto g_z_0_y_0_xz_xxxxxzz = cbuffer.data(dk_geom_1010_off + 1589 * ccomps * dcomps);

            auto g_z_0_y_0_xz_xxxxyyy = cbuffer.data(dk_geom_1010_off + 1590 * ccomps * dcomps);

            auto g_z_0_y_0_xz_xxxxyyz = cbuffer.data(dk_geom_1010_off + 1591 * ccomps * dcomps);

            auto g_z_0_y_0_xz_xxxxyzz = cbuffer.data(dk_geom_1010_off + 1592 * ccomps * dcomps);

            auto g_z_0_y_0_xz_xxxxzzz = cbuffer.data(dk_geom_1010_off + 1593 * ccomps * dcomps);

            auto g_z_0_y_0_xz_xxxyyyy = cbuffer.data(dk_geom_1010_off + 1594 * ccomps * dcomps);

            auto g_z_0_y_0_xz_xxxyyyz = cbuffer.data(dk_geom_1010_off + 1595 * ccomps * dcomps);

            auto g_z_0_y_0_xz_xxxyyzz = cbuffer.data(dk_geom_1010_off + 1596 * ccomps * dcomps);

            auto g_z_0_y_0_xz_xxxyzzz = cbuffer.data(dk_geom_1010_off + 1597 * ccomps * dcomps);

            auto g_z_0_y_0_xz_xxxzzzz = cbuffer.data(dk_geom_1010_off + 1598 * ccomps * dcomps);

            auto g_z_0_y_0_xz_xxyyyyy = cbuffer.data(dk_geom_1010_off + 1599 * ccomps * dcomps);

            auto g_z_0_y_0_xz_xxyyyyz = cbuffer.data(dk_geom_1010_off + 1600 * ccomps * dcomps);

            auto g_z_0_y_0_xz_xxyyyzz = cbuffer.data(dk_geom_1010_off + 1601 * ccomps * dcomps);

            auto g_z_0_y_0_xz_xxyyzzz = cbuffer.data(dk_geom_1010_off + 1602 * ccomps * dcomps);

            auto g_z_0_y_0_xz_xxyzzzz = cbuffer.data(dk_geom_1010_off + 1603 * ccomps * dcomps);

            auto g_z_0_y_0_xz_xxzzzzz = cbuffer.data(dk_geom_1010_off + 1604 * ccomps * dcomps);

            auto g_z_0_y_0_xz_xyyyyyy = cbuffer.data(dk_geom_1010_off + 1605 * ccomps * dcomps);

            auto g_z_0_y_0_xz_xyyyyyz = cbuffer.data(dk_geom_1010_off + 1606 * ccomps * dcomps);

            auto g_z_0_y_0_xz_xyyyyzz = cbuffer.data(dk_geom_1010_off + 1607 * ccomps * dcomps);

            auto g_z_0_y_0_xz_xyyyzzz = cbuffer.data(dk_geom_1010_off + 1608 * ccomps * dcomps);

            auto g_z_0_y_0_xz_xyyzzzz = cbuffer.data(dk_geom_1010_off + 1609 * ccomps * dcomps);

            auto g_z_0_y_0_xz_xyzzzzz = cbuffer.data(dk_geom_1010_off + 1610 * ccomps * dcomps);

            auto g_z_0_y_0_xz_xzzzzzz = cbuffer.data(dk_geom_1010_off + 1611 * ccomps * dcomps);

            auto g_z_0_y_0_xz_yyyyyyy = cbuffer.data(dk_geom_1010_off + 1612 * ccomps * dcomps);

            auto g_z_0_y_0_xz_yyyyyyz = cbuffer.data(dk_geom_1010_off + 1613 * ccomps * dcomps);

            auto g_z_0_y_0_xz_yyyyyzz = cbuffer.data(dk_geom_1010_off + 1614 * ccomps * dcomps);

            auto g_z_0_y_0_xz_yyyyzzz = cbuffer.data(dk_geom_1010_off + 1615 * ccomps * dcomps);

            auto g_z_0_y_0_xz_yyyzzzz = cbuffer.data(dk_geom_1010_off + 1616 * ccomps * dcomps);

            auto g_z_0_y_0_xz_yyzzzzz = cbuffer.data(dk_geom_1010_off + 1617 * ccomps * dcomps);

            auto g_z_0_y_0_xz_yzzzzzz = cbuffer.data(dk_geom_1010_off + 1618 * ccomps * dcomps);

            auto g_z_0_y_0_xz_zzzzzzz = cbuffer.data(dk_geom_1010_off + 1619 * ccomps * dcomps);

            auto g_z_0_y_0_yy_xxxxxxx = cbuffer.data(dk_geom_1010_off + 1620 * ccomps * dcomps);

            auto g_z_0_y_0_yy_xxxxxxy = cbuffer.data(dk_geom_1010_off + 1621 * ccomps * dcomps);

            auto g_z_0_y_0_yy_xxxxxxz = cbuffer.data(dk_geom_1010_off + 1622 * ccomps * dcomps);

            auto g_z_0_y_0_yy_xxxxxyy = cbuffer.data(dk_geom_1010_off + 1623 * ccomps * dcomps);

            auto g_z_0_y_0_yy_xxxxxyz = cbuffer.data(dk_geom_1010_off + 1624 * ccomps * dcomps);

            auto g_z_0_y_0_yy_xxxxxzz = cbuffer.data(dk_geom_1010_off + 1625 * ccomps * dcomps);

            auto g_z_0_y_0_yy_xxxxyyy = cbuffer.data(dk_geom_1010_off + 1626 * ccomps * dcomps);

            auto g_z_0_y_0_yy_xxxxyyz = cbuffer.data(dk_geom_1010_off + 1627 * ccomps * dcomps);

            auto g_z_0_y_0_yy_xxxxyzz = cbuffer.data(dk_geom_1010_off + 1628 * ccomps * dcomps);

            auto g_z_0_y_0_yy_xxxxzzz = cbuffer.data(dk_geom_1010_off + 1629 * ccomps * dcomps);

            auto g_z_0_y_0_yy_xxxyyyy = cbuffer.data(dk_geom_1010_off + 1630 * ccomps * dcomps);

            auto g_z_0_y_0_yy_xxxyyyz = cbuffer.data(dk_geom_1010_off + 1631 * ccomps * dcomps);

            auto g_z_0_y_0_yy_xxxyyzz = cbuffer.data(dk_geom_1010_off + 1632 * ccomps * dcomps);

            auto g_z_0_y_0_yy_xxxyzzz = cbuffer.data(dk_geom_1010_off + 1633 * ccomps * dcomps);

            auto g_z_0_y_0_yy_xxxzzzz = cbuffer.data(dk_geom_1010_off + 1634 * ccomps * dcomps);

            auto g_z_0_y_0_yy_xxyyyyy = cbuffer.data(dk_geom_1010_off + 1635 * ccomps * dcomps);

            auto g_z_0_y_0_yy_xxyyyyz = cbuffer.data(dk_geom_1010_off + 1636 * ccomps * dcomps);

            auto g_z_0_y_0_yy_xxyyyzz = cbuffer.data(dk_geom_1010_off + 1637 * ccomps * dcomps);

            auto g_z_0_y_0_yy_xxyyzzz = cbuffer.data(dk_geom_1010_off + 1638 * ccomps * dcomps);

            auto g_z_0_y_0_yy_xxyzzzz = cbuffer.data(dk_geom_1010_off + 1639 * ccomps * dcomps);

            auto g_z_0_y_0_yy_xxzzzzz = cbuffer.data(dk_geom_1010_off + 1640 * ccomps * dcomps);

            auto g_z_0_y_0_yy_xyyyyyy = cbuffer.data(dk_geom_1010_off + 1641 * ccomps * dcomps);

            auto g_z_0_y_0_yy_xyyyyyz = cbuffer.data(dk_geom_1010_off + 1642 * ccomps * dcomps);

            auto g_z_0_y_0_yy_xyyyyzz = cbuffer.data(dk_geom_1010_off + 1643 * ccomps * dcomps);

            auto g_z_0_y_0_yy_xyyyzzz = cbuffer.data(dk_geom_1010_off + 1644 * ccomps * dcomps);

            auto g_z_0_y_0_yy_xyyzzzz = cbuffer.data(dk_geom_1010_off + 1645 * ccomps * dcomps);

            auto g_z_0_y_0_yy_xyzzzzz = cbuffer.data(dk_geom_1010_off + 1646 * ccomps * dcomps);

            auto g_z_0_y_0_yy_xzzzzzz = cbuffer.data(dk_geom_1010_off + 1647 * ccomps * dcomps);

            auto g_z_0_y_0_yy_yyyyyyy = cbuffer.data(dk_geom_1010_off + 1648 * ccomps * dcomps);

            auto g_z_0_y_0_yy_yyyyyyz = cbuffer.data(dk_geom_1010_off + 1649 * ccomps * dcomps);

            auto g_z_0_y_0_yy_yyyyyzz = cbuffer.data(dk_geom_1010_off + 1650 * ccomps * dcomps);

            auto g_z_0_y_0_yy_yyyyzzz = cbuffer.data(dk_geom_1010_off + 1651 * ccomps * dcomps);

            auto g_z_0_y_0_yy_yyyzzzz = cbuffer.data(dk_geom_1010_off + 1652 * ccomps * dcomps);

            auto g_z_0_y_0_yy_yyzzzzz = cbuffer.data(dk_geom_1010_off + 1653 * ccomps * dcomps);

            auto g_z_0_y_0_yy_yzzzzzz = cbuffer.data(dk_geom_1010_off + 1654 * ccomps * dcomps);

            auto g_z_0_y_0_yy_zzzzzzz = cbuffer.data(dk_geom_1010_off + 1655 * ccomps * dcomps);

            auto g_z_0_y_0_yz_xxxxxxx = cbuffer.data(dk_geom_1010_off + 1656 * ccomps * dcomps);

            auto g_z_0_y_0_yz_xxxxxxy = cbuffer.data(dk_geom_1010_off + 1657 * ccomps * dcomps);

            auto g_z_0_y_0_yz_xxxxxxz = cbuffer.data(dk_geom_1010_off + 1658 * ccomps * dcomps);

            auto g_z_0_y_0_yz_xxxxxyy = cbuffer.data(dk_geom_1010_off + 1659 * ccomps * dcomps);

            auto g_z_0_y_0_yz_xxxxxyz = cbuffer.data(dk_geom_1010_off + 1660 * ccomps * dcomps);

            auto g_z_0_y_0_yz_xxxxxzz = cbuffer.data(dk_geom_1010_off + 1661 * ccomps * dcomps);

            auto g_z_0_y_0_yz_xxxxyyy = cbuffer.data(dk_geom_1010_off + 1662 * ccomps * dcomps);

            auto g_z_0_y_0_yz_xxxxyyz = cbuffer.data(dk_geom_1010_off + 1663 * ccomps * dcomps);

            auto g_z_0_y_0_yz_xxxxyzz = cbuffer.data(dk_geom_1010_off + 1664 * ccomps * dcomps);

            auto g_z_0_y_0_yz_xxxxzzz = cbuffer.data(dk_geom_1010_off + 1665 * ccomps * dcomps);

            auto g_z_0_y_0_yz_xxxyyyy = cbuffer.data(dk_geom_1010_off + 1666 * ccomps * dcomps);

            auto g_z_0_y_0_yz_xxxyyyz = cbuffer.data(dk_geom_1010_off + 1667 * ccomps * dcomps);

            auto g_z_0_y_0_yz_xxxyyzz = cbuffer.data(dk_geom_1010_off + 1668 * ccomps * dcomps);

            auto g_z_0_y_0_yz_xxxyzzz = cbuffer.data(dk_geom_1010_off + 1669 * ccomps * dcomps);

            auto g_z_0_y_0_yz_xxxzzzz = cbuffer.data(dk_geom_1010_off + 1670 * ccomps * dcomps);

            auto g_z_0_y_0_yz_xxyyyyy = cbuffer.data(dk_geom_1010_off + 1671 * ccomps * dcomps);

            auto g_z_0_y_0_yz_xxyyyyz = cbuffer.data(dk_geom_1010_off + 1672 * ccomps * dcomps);

            auto g_z_0_y_0_yz_xxyyyzz = cbuffer.data(dk_geom_1010_off + 1673 * ccomps * dcomps);

            auto g_z_0_y_0_yz_xxyyzzz = cbuffer.data(dk_geom_1010_off + 1674 * ccomps * dcomps);

            auto g_z_0_y_0_yz_xxyzzzz = cbuffer.data(dk_geom_1010_off + 1675 * ccomps * dcomps);

            auto g_z_0_y_0_yz_xxzzzzz = cbuffer.data(dk_geom_1010_off + 1676 * ccomps * dcomps);

            auto g_z_0_y_0_yz_xyyyyyy = cbuffer.data(dk_geom_1010_off + 1677 * ccomps * dcomps);

            auto g_z_0_y_0_yz_xyyyyyz = cbuffer.data(dk_geom_1010_off + 1678 * ccomps * dcomps);

            auto g_z_0_y_0_yz_xyyyyzz = cbuffer.data(dk_geom_1010_off + 1679 * ccomps * dcomps);

            auto g_z_0_y_0_yz_xyyyzzz = cbuffer.data(dk_geom_1010_off + 1680 * ccomps * dcomps);

            auto g_z_0_y_0_yz_xyyzzzz = cbuffer.data(dk_geom_1010_off + 1681 * ccomps * dcomps);

            auto g_z_0_y_0_yz_xyzzzzz = cbuffer.data(dk_geom_1010_off + 1682 * ccomps * dcomps);

            auto g_z_0_y_0_yz_xzzzzzz = cbuffer.data(dk_geom_1010_off + 1683 * ccomps * dcomps);

            auto g_z_0_y_0_yz_yyyyyyy = cbuffer.data(dk_geom_1010_off + 1684 * ccomps * dcomps);

            auto g_z_0_y_0_yz_yyyyyyz = cbuffer.data(dk_geom_1010_off + 1685 * ccomps * dcomps);

            auto g_z_0_y_0_yz_yyyyyzz = cbuffer.data(dk_geom_1010_off + 1686 * ccomps * dcomps);

            auto g_z_0_y_0_yz_yyyyzzz = cbuffer.data(dk_geom_1010_off + 1687 * ccomps * dcomps);

            auto g_z_0_y_0_yz_yyyzzzz = cbuffer.data(dk_geom_1010_off + 1688 * ccomps * dcomps);

            auto g_z_0_y_0_yz_yyzzzzz = cbuffer.data(dk_geom_1010_off + 1689 * ccomps * dcomps);

            auto g_z_0_y_0_yz_yzzzzzz = cbuffer.data(dk_geom_1010_off + 1690 * ccomps * dcomps);

            auto g_z_0_y_0_yz_zzzzzzz = cbuffer.data(dk_geom_1010_off + 1691 * ccomps * dcomps);

            auto g_z_0_y_0_zz_xxxxxxx = cbuffer.data(dk_geom_1010_off + 1692 * ccomps * dcomps);

            auto g_z_0_y_0_zz_xxxxxxy = cbuffer.data(dk_geom_1010_off + 1693 * ccomps * dcomps);

            auto g_z_0_y_0_zz_xxxxxxz = cbuffer.data(dk_geom_1010_off + 1694 * ccomps * dcomps);

            auto g_z_0_y_0_zz_xxxxxyy = cbuffer.data(dk_geom_1010_off + 1695 * ccomps * dcomps);

            auto g_z_0_y_0_zz_xxxxxyz = cbuffer.data(dk_geom_1010_off + 1696 * ccomps * dcomps);

            auto g_z_0_y_0_zz_xxxxxzz = cbuffer.data(dk_geom_1010_off + 1697 * ccomps * dcomps);

            auto g_z_0_y_0_zz_xxxxyyy = cbuffer.data(dk_geom_1010_off + 1698 * ccomps * dcomps);

            auto g_z_0_y_0_zz_xxxxyyz = cbuffer.data(dk_geom_1010_off + 1699 * ccomps * dcomps);

            auto g_z_0_y_0_zz_xxxxyzz = cbuffer.data(dk_geom_1010_off + 1700 * ccomps * dcomps);

            auto g_z_0_y_0_zz_xxxxzzz = cbuffer.data(dk_geom_1010_off + 1701 * ccomps * dcomps);

            auto g_z_0_y_0_zz_xxxyyyy = cbuffer.data(dk_geom_1010_off + 1702 * ccomps * dcomps);

            auto g_z_0_y_0_zz_xxxyyyz = cbuffer.data(dk_geom_1010_off + 1703 * ccomps * dcomps);

            auto g_z_0_y_0_zz_xxxyyzz = cbuffer.data(dk_geom_1010_off + 1704 * ccomps * dcomps);

            auto g_z_0_y_0_zz_xxxyzzz = cbuffer.data(dk_geom_1010_off + 1705 * ccomps * dcomps);

            auto g_z_0_y_0_zz_xxxzzzz = cbuffer.data(dk_geom_1010_off + 1706 * ccomps * dcomps);

            auto g_z_0_y_0_zz_xxyyyyy = cbuffer.data(dk_geom_1010_off + 1707 * ccomps * dcomps);

            auto g_z_0_y_0_zz_xxyyyyz = cbuffer.data(dk_geom_1010_off + 1708 * ccomps * dcomps);

            auto g_z_0_y_0_zz_xxyyyzz = cbuffer.data(dk_geom_1010_off + 1709 * ccomps * dcomps);

            auto g_z_0_y_0_zz_xxyyzzz = cbuffer.data(dk_geom_1010_off + 1710 * ccomps * dcomps);

            auto g_z_0_y_0_zz_xxyzzzz = cbuffer.data(dk_geom_1010_off + 1711 * ccomps * dcomps);

            auto g_z_0_y_0_zz_xxzzzzz = cbuffer.data(dk_geom_1010_off + 1712 * ccomps * dcomps);

            auto g_z_0_y_0_zz_xyyyyyy = cbuffer.data(dk_geom_1010_off + 1713 * ccomps * dcomps);

            auto g_z_0_y_0_zz_xyyyyyz = cbuffer.data(dk_geom_1010_off + 1714 * ccomps * dcomps);

            auto g_z_0_y_0_zz_xyyyyzz = cbuffer.data(dk_geom_1010_off + 1715 * ccomps * dcomps);

            auto g_z_0_y_0_zz_xyyyzzz = cbuffer.data(dk_geom_1010_off + 1716 * ccomps * dcomps);

            auto g_z_0_y_0_zz_xyyzzzz = cbuffer.data(dk_geom_1010_off + 1717 * ccomps * dcomps);

            auto g_z_0_y_0_zz_xyzzzzz = cbuffer.data(dk_geom_1010_off + 1718 * ccomps * dcomps);

            auto g_z_0_y_0_zz_xzzzzzz = cbuffer.data(dk_geom_1010_off + 1719 * ccomps * dcomps);

            auto g_z_0_y_0_zz_yyyyyyy = cbuffer.data(dk_geom_1010_off + 1720 * ccomps * dcomps);

            auto g_z_0_y_0_zz_yyyyyyz = cbuffer.data(dk_geom_1010_off + 1721 * ccomps * dcomps);

            auto g_z_0_y_0_zz_yyyyyzz = cbuffer.data(dk_geom_1010_off + 1722 * ccomps * dcomps);

            auto g_z_0_y_0_zz_yyyyzzz = cbuffer.data(dk_geom_1010_off + 1723 * ccomps * dcomps);

            auto g_z_0_y_0_zz_yyyzzzz = cbuffer.data(dk_geom_1010_off + 1724 * ccomps * dcomps);

            auto g_z_0_y_0_zz_yyzzzzz = cbuffer.data(dk_geom_1010_off + 1725 * ccomps * dcomps);

            auto g_z_0_y_0_zz_yzzzzzz = cbuffer.data(dk_geom_1010_off + 1726 * ccomps * dcomps);

            auto g_z_0_y_0_zz_zzzzzzz = cbuffer.data(dk_geom_1010_off + 1727 * ccomps * dcomps);

            auto g_z_0_z_0_xx_xxxxxxx = cbuffer.data(dk_geom_1010_off + 1728 * ccomps * dcomps);

            auto g_z_0_z_0_xx_xxxxxxy = cbuffer.data(dk_geom_1010_off + 1729 * ccomps * dcomps);

            auto g_z_0_z_0_xx_xxxxxxz = cbuffer.data(dk_geom_1010_off + 1730 * ccomps * dcomps);

            auto g_z_0_z_0_xx_xxxxxyy = cbuffer.data(dk_geom_1010_off + 1731 * ccomps * dcomps);

            auto g_z_0_z_0_xx_xxxxxyz = cbuffer.data(dk_geom_1010_off + 1732 * ccomps * dcomps);

            auto g_z_0_z_0_xx_xxxxxzz = cbuffer.data(dk_geom_1010_off + 1733 * ccomps * dcomps);

            auto g_z_0_z_0_xx_xxxxyyy = cbuffer.data(dk_geom_1010_off + 1734 * ccomps * dcomps);

            auto g_z_0_z_0_xx_xxxxyyz = cbuffer.data(dk_geom_1010_off + 1735 * ccomps * dcomps);

            auto g_z_0_z_0_xx_xxxxyzz = cbuffer.data(dk_geom_1010_off + 1736 * ccomps * dcomps);

            auto g_z_0_z_0_xx_xxxxzzz = cbuffer.data(dk_geom_1010_off + 1737 * ccomps * dcomps);

            auto g_z_0_z_0_xx_xxxyyyy = cbuffer.data(dk_geom_1010_off + 1738 * ccomps * dcomps);

            auto g_z_0_z_0_xx_xxxyyyz = cbuffer.data(dk_geom_1010_off + 1739 * ccomps * dcomps);

            auto g_z_0_z_0_xx_xxxyyzz = cbuffer.data(dk_geom_1010_off + 1740 * ccomps * dcomps);

            auto g_z_0_z_0_xx_xxxyzzz = cbuffer.data(dk_geom_1010_off + 1741 * ccomps * dcomps);

            auto g_z_0_z_0_xx_xxxzzzz = cbuffer.data(dk_geom_1010_off + 1742 * ccomps * dcomps);

            auto g_z_0_z_0_xx_xxyyyyy = cbuffer.data(dk_geom_1010_off + 1743 * ccomps * dcomps);

            auto g_z_0_z_0_xx_xxyyyyz = cbuffer.data(dk_geom_1010_off + 1744 * ccomps * dcomps);

            auto g_z_0_z_0_xx_xxyyyzz = cbuffer.data(dk_geom_1010_off + 1745 * ccomps * dcomps);

            auto g_z_0_z_0_xx_xxyyzzz = cbuffer.data(dk_geom_1010_off + 1746 * ccomps * dcomps);

            auto g_z_0_z_0_xx_xxyzzzz = cbuffer.data(dk_geom_1010_off + 1747 * ccomps * dcomps);

            auto g_z_0_z_0_xx_xxzzzzz = cbuffer.data(dk_geom_1010_off + 1748 * ccomps * dcomps);

            auto g_z_0_z_0_xx_xyyyyyy = cbuffer.data(dk_geom_1010_off + 1749 * ccomps * dcomps);

            auto g_z_0_z_0_xx_xyyyyyz = cbuffer.data(dk_geom_1010_off + 1750 * ccomps * dcomps);

            auto g_z_0_z_0_xx_xyyyyzz = cbuffer.data(dk_geom_1010_off + 1751 * ccomps * dcomps);

            auto g_z_0_z_0_xx_xyyyzzz = cbuffer.data(dk_geom_1010_off + 1752 * ccomps * dcomps);

            auto g_z_0_z_0_xx_xyyzzzz = cbuffer.data(dk_geom_1010_off + 1753 * ccomps * dcomps);

            auto g_z_0_z_0_xx_xyzzzzz = cbuffer.data(dk_geom_1010_off + 1754 * ccomps * dcomps);

            auto g_z_0_z_0_xx_xzzzzzz = cbuffer.data(dk_geom_1010_off + 1755 * ccomps * dcomps);

            auto g_z_0_z_0_xx_yyyyyyy = cbuffer.data(dk_geom_1010_off + 1756 * ccomps * dcomps);

            auto g_z_0_z_0_xx_yyyyyyz = cbuffer.data(dk_geom_1010_off + 1757 * ccomps * dcomps);

            auto g_z_0_z_0_xx_yyyyyzz = cbuffer.data(dk_geom_1010_off + 1758 * ccomps * dcomps);

            auto g_z_0_z_0_xx_yyyyzzz = cbuffer.data(dk_geom_1010_off + 1759 * ccomps * dcomps);

            auto g_z_0_z_0_xx_yyyzzzz = cbuffer.data(dk_geom_1010_off + 1760 * ccomps * dcomps);

            auto g_z_0_z_0_xx_yyzzzzz = cbuffer.data(dk_geom_1010_off + 1761 * ccomps * dcomps);

            auto g_z_0_z_0_xx_yzzzzzz = cbuffer.data(dk_geom_1010_off + 1762 * ccomps * dcomps);

            auto g_z_0_z_0_xx_zzzzzzz = cbuffer.data(dk_geom_1010_off + 1763 * ccomps * dcomps);

            auto g_z_0_z_0_xy_xxxxxxx = cbuffer.data(dk_geom_1010_off + 1764 * ccomps * dcomps);

            auto g_z_0_z_0_xy_xxxxxxy = cbuffer.data(dk_geom_1010_off + 1765 * ccomps * dcomps);

            auto g_z_0_z_0_xy_xxxxxxz = cbuffer.data(dk_geom_1010_off + 1766 * ccomps * dcomps);

            auto g_z_0_z_0_xy_xxxxxyy = cbuffer.data(dk_geom_1010_off + 1767 * ccomps * dcomps);

            auto g_z_0_z_0_xy_xxxxxyz = cbuffer.data(dk_geom_1010_off + 1768 * ccomps * dcomps);

            auto g_z_0_z_0_xy_xxxxxzz = cbuffer.data(dk_geom_1010_off + 1769 * ccomps * dcomps);

            auto g_z_0_z_0_xy_xxxxyyy = cbuffer.data(dk_geom_1010_off + 1770 * ccomps * dcomps);

            auto g_z_0_z_0_xy_xxxxyyz = cbuffer.data(dk_geom_1010_off + 1771 * ccomps * dcomps);

            auto g_z_0_z_0_xy_xxxxyzz = cbuffer.data(dk_geom_1010_off + 1772 * ccomps * dcomps);

            auto g_z_0_z_0_xy_xxxxzzz = cbuffer.data(dk_geom_1010_off + 1773 * ccomps * dcomps);

            auto g_z_0_z_0_xy_xxxyyyy = cbuffer.data(dk_geom_1010_off + 1774 * ccomps * dcomps);

            auto g_z_0_z_0_xy_xxxyyyz = cbuffer.data(dk_geom_1010_off + 1775 * ccomps * dcomps);

            auto g_z_0_z_0_xy_xxxyyzz = cbuffer.data(dk_geom_1010_off + 1776 * ccomps * dcomps);

            auto g_z_0_z_0_xy_xxxyzzz = cbuffer.data(dk_geom_1010_off + 1777 * ccomps * dcomps);

            auto g_z_0_z_0_xy_xxxzzzz = cbuffer.data(dk_geom_1010_off + 1778 * ccomps * dcomps);

            auto g_z_0_z_0_xy_xxyyyyy = cbuffer.data(dk_geom_1010_off + 1779 * ccomps * dcomps);

            auto g_z_0_z_0_xy_xxyyyyz = cbuffer.data(dk_geom_1010_off + 1780 * ccomps * dcomps);

            auto g_z_0_z_0_xy_xxyyyzz = cbuffer.data(dk_geom_1010_off + 1781 * ccomps * dcomps);

            auto g_z_0_z_0_xy_xxyyzzz = cbuffer.data(dk_geom_1010_off + 1782 * ccomps * dcomps);

            auto g_z_0_z_0_xy_xxyzzzz = cbuffer.data(dk_geom_1010_off + 1783 * ccomps * dcomps);

            auto g_z_0_z_0_xy_xxzzzzz = cbuffer.data(dk_geom_1010_off + 1784 * ccomps * dcomps);

            auto g_z_0_z_0_xy_xyyyyyy = cbuffer.data(dk_geom_1010_off + 1785 * ccomps * dcomps);

            auto g_z_0_z_0_xy_xyyyyyz = cbuffer.data(dk_geom_1010_off + 1786 * ccomps * dcomps);

            auto g_z_0_z_0_xy_xyyyyzz = cbuffer.data(dk_geom_1010_off + 1787 * ccomps * dcomps);

            auto g_z_0_z_0_xy_xyyyzzz = cbuffer.data(dk_geom_1010_off + 1788 * ccomps * dcomps);

            auto g_z_0_z_0_xy_xyyzzzz = cbuffer.data(dk_geom_1010_off + 1789 * ccomps * dcomps);

            auto g_z_0_z_0_xy_xyzzzzz = cbuffer.data(dk_geom_1010_off + 1790 * ccomps * dcomps);

            auto g_z_0_z_0_xy_xzzzzzz = cbuffer.data(dk_geom_1010_off + 1791 * ccomps * dcomps);

            auto g_z_0_z_0_xy_yyyyyyy = cbuffer.data(dk_geom_1010_off + 1792 * ccomps * dcomps);

            auto g_z_0_z_0_xy_yyyyyyz = cbuffer.data(dk_geom_1010_off + 1793 * ccomps * dcomps);

            auto g_z_0_z_0_xy_yyyyyzz = cbuffer.data(dk_geom_1010_off + 1794 * ccomps * dcomps);

            auto g_z_0_z_0_xy_yyyyzzz = cbuffer.data(dk_geom_1010_off + 1795 * ccomps * dcomps);

            auto g_z_0_z_0_xy_yyyzzzz = cbuffer.data(dk_geom_1010_off + 1796 * ccomps * dcomps);

            auto g_z_0_z_0_xy_yyzzzzz = cbuffer.data(dk_geom_1010_off + 1797 * ccomps * dcomps);

            auto g_z_0_z_0_xy_yzzzzzz = cbuffer.data(dk_geom_1010_off + 1798 * ccomps * dcomps);

            auto g_z_0_z_0_xy_zzzzzzz = cbuffer.data(dk_geom_1010_off + 1799 * ccomps * dcomps);

            auto g_z_0_z_0_xz_xxxxxxx = cbuffer.data(dk_geom_1010_off + 1800 * ccomps * dcomps);

            auto g_z_0_z_0_xz_xxxxxxy = cbuffer.data(dk_geom_1010_off + 1801 * ccomps * dcomps);

            auto g_z_0_z_0_xz_xxxxxxz = cbuffer.data(dk_geom_1010_off + 1802 * ccomps * dcomps);

            auto g_z_0_z_0_xz_xxxxxyy = cbuffer.data(dk_geom_1010_off + 1803 * ccomps * dcomps);

            auto g_z_0_z_0_xz_xxxxxyz = cbuffer.data(dk_geom_1010_off + 1804 * ccomps * dcomps);

            auto g_z_0_z_0_xz_xxxxxzz = cbuffer.data(dk_geom_1010_off + 1805 * ccomps * dcomps);

            auto g_z_0_z_0_xz_xxxxyyy = cbuffer.data(dk_geom_1010_off + 1806 * ccomps * dcomps);

            auto g_z_0_z_0_xz_xxxxyyz = cbuffer.data(dk_geom_1010_off + 1807 * ccomps * dcomps);

            auto g_z_0_z_0_xz_xxxxyzz = cbuffer.data(dk_geom_1010_off + 1808 * ccomps * dcomps);

            auto g_z_0_z_0_xz_xxxxzzz = cbuffer.data(dk_geom_1010_off + 1809 * ccomps * dcomps);

            auto g_z_0_z_0_xz_xxxyyyy = cbuffer.data(dk_geom_1010_off + 1810 * ccomps * dcomps);

            auto g_z_0_z_0_xz_xxxyyyz = cbuffer.data(dk_geom_1010_off + 1811 * ccomps * dcomps);

            auto g_z_0_z_0_xz_xxxyyzz = cbuffer.data(dk_geom_1010_off + 1812 * ccomps * dcomps);

            auto g_z_0_z_0_xz_xxxyzzz = cbuffer.data(dk_geom_1010_off + 1813 * ccomps * dcomps);

            auto g_z_0_z_0_xz_xxxzzzz = cbuffer.data(dk_geom_1010_off + 1814 * ccomps * dcomps);

            auto g_z_0_z_0_xz_xxyyyyy = cbuffer.data(dk_geom_1010_off + 1815 * ccomps * dcomps);

            auto g_z_0_z_0_xz_xxyyyyz = cbuffer.data(dk_geom_1010_off + 1816 * ccomps * dcomps);

            auto g_z_0_z_0_xz_xxyyyzz = cbuffer.data(dk_geom_1010_off + 1817 * ccomps * dcomps);

            auto g_z_0_z_0_xz_xxyyzzz = cbuffer.data(dk_geom_1010_off + 1818 * ccomps * dcomps);

            auto g_z_0_z_0_xz_xxyzzzz = cbuffer.data(dk_geom_1010_off + 1819 * ccomps * dcomps);

            auto g_z_0_z_0_xz_xxzzzzz = cbuffer.data(dk_geom_1010_off + 1820 * ccomps * dcomps);

            auto g_z_0_z_0_xz_xyyyyyy = cbuffer.data(dk_geom_1010_off + 1821 * ccomps * dcomps);

            auto g_z_0_z_0_xz_xyyyyyz = cbuffer.data(dk_geom_1010_off + 1822 * ccomps * dcomps);

            auto g_z_0_z_0_xz_xyyyyzz = cbuffer.data(dk_geom_1010_off + 1823 * ccomps * dcomps);

            auto g_z_0_z_0_xz_xyyyzzz = cbuffer.data(dk_geom_1010_off + 1824 * ccomps * dcomps);

            auto g_z_0_z_0_xz_xyyzzzz = cbuffer.data(dk_geom_1010_off + 1825 * ccomps * dcomps);

            auto g_z_0_z_0_xz_xyzzzzz = cbuffer.data(dk_geom_1010_off + 1826 * ccomps * dcomps);

            auto g_z_0_z_0_xz_xzzzzzz = cbuffer.data(dk_geom_1010_off + 1827 * ccomps * dcomps);

            auto g_z_0_z_0_xz_yyyyyyy = cbuffer.data(dk_geom_1010_off + 1828 * ccomps * dcomps);

            auto g_z_0_z_0_xz_yyyyyyz = cbuffer.data(dk_geom_1010_off + 1829 * ccomps * dcomps);

            auto g_z_0_z_0_xz_yyyyyzz = cbuffer.data(dk_geom_1010_off + 1830 * ccomps * dcomps);

            auto g_z_0_z_0_xz_yyyyzzz = cbuffer.data(dk_geom_1010_off + 1831 * ccomps * dcomps);

            auto g_z_0_z_0_xz_yyyzzzz = cbuffer.data(dk_geom_1010_off + 1832 * ccomps * dcomps);

            auto g_z_0_z_0_xz_yyzzzzz = cbuffer.data(dk_geom_1010_off + 1833 * ccomps * dcomps);

            auto g_z_0_z_0_xz_yzzzzzz = cbuffer.data(dk_geom_1010_off + 1834 * ccomps * dcomps);

            auto g_z_0_z_0_xz_zzzzzzz = cbuffer.data(dk_geom_1010_off + 1835 * ccomps * dcomps);

            auto g_z_0_z_0_yy_xxxxxxx = cbuffer.data(dk_geom_1010_off + 1836 * ccomps * dcomps);

            auto g_z_0_z_0_yy_xxxxxxy = cbuffer.data(dk_geom_1010_off + 1837 * ccomps * dcomps);

            auto g_z_0_z_0_yy_xxxxxxz = cbuffer.data(dk_geom_1010_off + 1838 * ccomps * dcomps);

            auto g_z_0_z_0_yy_xxxxxyy = cbuffer.data(dk_geom_1010_off + 1839 * ccomps * dcomps);

            auto g_z_0_z_0_yy_xxxxxyz = cbuffer.data(dk_geom_1010_off + 1840 * ccomps * dcomps);

            auto g_z_0_z_0_yy_xxxxxzz = cbuffer.data(dk_geom_1010_off + 1841 * ccomps * dcomps);

            auto g_z_0_z_0_yy_xxxxyyy = cbuffer.data(dk_geom_1010_off + 1842 * ccomps * dcomps);

            auto g_z_0_z_0_yy_xxxxyyz = cbuffer.data(dk_geom_1010_off + 1843 * ccomps * dcomps);

            auto g_z_0_z_0_yy_xxxxyzz = cbuffer.data(dk_geom_1010_off + 1844 * ccomps * dcomps);

            auto g_z_0_z_0_yy_xxxxzzz = cbuffer.data(dk_geom_1010_off + 1845 * ccomps * dcomps);

            auto g_z_0_z_0_yy_xxxyyyy = cbuffer.data(dk_geom_1010_off + 1846 * ccomps * dcomps);

            auto g_z_0_z_0_yy_xxxyyyz = cbuffer.data(dk_geom_1010_off + 1847 * ccomps * dcomps);

            auto g_z_0_z_0_yy_xxxyyzz = cbuffer.data(dk_geom_1010_off + 1848 * ccomps * dcomps);

            auto g_z_0_z_0_yy_xxxyzzz = cbuffer.data(dk_geom_1010_off + 1849 * ccomps * dcomps);

            auto g_z_0_z_0_yy_xxxzzzz = cbuffer.data(dk_geom_1010_off + 1850 * ccomps * dcomps);

            auto g_z_0_z_0_yy_xxyyyyy = cbuffer.data(dk_geom_1010_off + 1851 * ccomps * dcomps);

            auto g_z_0_z_0_yy_xxyyyyz = cbuffer.data(dk_geom_1010_off + 1852 * ccomps * dcomps);

            auto g_z_0_z_0_yy_xxyyyzz = cbuffer.data(dk_geom_1010_off + 1853 * ccomps * dcomps);

            auto g_z_0_z_0_yy_xxyyzzz = cbuffer.data(dk_geom_1010_off + 1854 * ccomps * dcomps);

            auto g_z_0_z_0_yy_xxyzzzz = cbuffer.data(dk_geom_1010_off + 1855 * ccomps * dcomps);

            auto g_z_0_z_0_yy_xxzzzzz = cbuffer.data(dk_geom_1010_off + 1856 * ccomps * dcomps);

            auto g_z_0_z_0_yy_xyyyyyy = cbuffer.data(dk_geom_1010_off + 1857 * ccomps * dcomps);

            auto g_z_0_z_0_yy_xyyyyyz = cbuffer.data(dk_geom_1010_off + 1858 * ccomps * dcomps);

            auto g_z_0_z_0_yy_xyyyyzz = cbuffer.data(dk_geom_1010_off + 1859 * ccomps * dcomps);

            auto g_z_0_z_0_yy_xyyyzzz = cbuffer.data(dk_geom_1010_off + 1860 * ccomps * dcomps);

            auto g_z_0_z_0_yy_xyyzzzz = cbuffer.data(dk_geom_1010_off + 1861 * ccomps * dcomps);

            auto g_z_0_z_0_yy_xyzzzzz = cbuffer.data(dk_geom_1010_off + 1862 * ccomps * dcomps);

            auto g_z_0_z_0_yy_xzzzzzz = cbuffer.data(dk_geom_1010_off + 1863 * ccomps * dcomps);

            auto g_z_0_z_0_yy_yyyyyyy = cbuffer.data(dk_geom_1010_off + 1864 * ccomps * dcomps);

            auto g_z_0_z_0_yy_yyyyyyz = cbuffer.data(dk_geom_1010_off + 1865 * ccomps * dcomps);

            auto g_z_0_z_0_yy_yyyyyzz = cbuffer.data(dk_geom_1010_off + 1866 * ccomps * dcomps);

            auto g_z_0_z_0_yy_yyyyzzz = cbuffer.data(dk_geom_1010_off + 1867 * ccomps * dcomps);

            auto g_z_0_z_0_yy_yyyzzzz = cbuffer.data(dk_geom_1010_off + 1868 * ccomps * dcomps);

            auto g_z_0_z_0_yy_yyzzzzz = cbuffer.data(dk_geom_1010_off + 1869 * ccomps * dcomps);

            auto g_z_0_z_0_yy_yzzzzzz = cbuffer.data(dk_geom_1010_off + 1870 * ccomps * dcomps);

            auto g_z_0_z_0_yy_zzzzzzz = cbuffer.data(dk_geom_1010_off + 1871 * ccomps * dcomps);

            auto g_z_0_z_0_yz_xxxxxxx = cbuffer.data(dk_geom_1010_off + 1872 * ccomps * dcomps);

            auto g_z_0_z_0_yz_xxxxxxy = cbuffer.data(dk_geom_1010_off + 1873 * ccomps * dcomps);

            auto g_z_0_z_0_yz_xxxxxxz = cbuffer.data(dk_geom_1010_off + 1874 * ccomps * dcomps);

            auto g_z_0_z_0_yz_xxxxxyy = cbuffer.data(dk_geom_1010_off + 1875 * ccomps * dcomps);

            auto g_z_0_z_0_yz_xxxxxyz = cbuffer.data(dk_geom_1010_off + 1876 * ccomps * dcomps);

            auto g_z_0_z_0_yz_xxxxxzz = cbuffer.data(dk_geom_1010_off + 1877 * ccomps * dcomps);

            auto g_z_0_z_0_yz_xxxxyyy = cbuffer.data(dk_geom_1010_off + 1878 * ccomps * dcomps);

            auto g_z_0_z_0_yz_xxxxyyz = cbuffer.data(dk_geom_1010_off + 1879 * ccomps * dcomps);

            auto g_z_0_z_0_yz_xxxxyzz = cbuffer.data(dk_geom_1010_off + 1880 * ccomps * dcomps);

            auto g_z_0_z_0_yz_xxxxzzz = cbuffer.data(dk_geom_1010_off + 1881 * ccomps * dcomps);

            auto g_z_0_z_0_yz_xxxyyyy = cbuffer.data(dk_geom_1010_off + 1882 * ccomps * dcomps);

            auto g_z_0_z_0_yz_xxxyyyz = cbuffer.data(dk_geom_1010_off + 1883 * ccomps * dcomps);

            auto g_z_0_z_0_yz_xxxyyzz = cbuffer.data(dk_geom_1010_off + 1884 * ccomps * dcomps);

            auto g_z_0_z_0_yz_xxxyzzz = cbuffer.data(dk_geom_1010_off + 1885 * ccomps * dcomps);

            auto g_z_0_z_0_yz_xxxzzzz = cbuffer.data(dk_geom_1010_off + 1886 * ccomps * dcomps);

            auto g_z_0_z_0_yz_xxyyyyy = cbuffer.data(dk_geom_1010_off + 1887 * ccomps * dcomps);

            auto g_z_0_z_0_yz_xxyyyyz = cbuffer.data(dk_geom_1010_off + 1888 * ccomps * dcomps);

            auto g_z_0_z_0_yz_xxyyyzz = cbuffer.data(dk_geom_1010_off + 1889 * ccomps * dcomps);

            auto g_z_0_z_0_yz_xxyyzzz = cbuffer.data(dk_geom_1010_off + 1890 * ccomps * dcomps);

            auto g_z_0_z_0_yz_xxyzzzz = cbuffer.data(dk_geom_1010_off + 1891 * ccomps * dcomps);

            auto g_z_0_z_0_yz_xxzzzzz = cbuffer.data(dk_geom_1010_off + 1892 * ccomps * dcomps);

            auto g_z_0_z_0_yz_xyyyyyy = cbuffer.data(dk_geom_1010_off + 1893 * ccomps * dcomps);

            auto g_z_0_z_0_yz_xyyyyyz = cbuffer.data(dk_geom_1010_off + 1894 * ccomps * dcomps);

            auto g_z_0_z_0_yz_xyyyyzz = cbuffer.data(dk_geom_1010_off + 1895 * ccomps * dcomps);

            auto g_z_0_z_0_yz_xyyyzzz = cbuffer.data(dk_geom_1010_off + 1896 * ccomps * dcomps);

            auto g_z_0_z_0_yz_xyyzzzz = cbuffer.data(dk_geom_1010_off + 1897 * ccomps * dcomps);

            auto g_z_0_z_0_yz_xyzzzzz = cbuffer.data(dk_geom_1010_off + 1898 * ccomps * dcomps);

            auto g_z_0_z_0_yz_xzzzzzz = cbuffer.data(dk_geom_1010_off + 1899 * ccomps * dcomps);

            auto g_z_0_z_0_yz_yyyyyyy = cbuffer.data(dk_geom_1010_off + 1900 * ccomps * dcomps);

            auto g_z_0_z_0_yz_yyyyyyz = cbuffer.data(dk_geom_1010_off + 1901 * ccomps * dcomps);

            auto g_z_0_z_0_yz_yyyyyzz = cbuffer.data(dk_geom_1010_off + 1902 * ccomps * dcomps);

            auto g_z_0_z_0_yz_yyyyzzz = cbuffer.data(dk_geom_1010_off + 1903 * ccomps * dcomps);

            auto g_z_0_z_0_yz_yyyzzzz = cbuffer.data(dk_geom_1010_off + 1904 * ccomps * dcomps);

            auto g_z_0_z_0_yz_yyzzzzz = cbuffer.data(dk_geom_1010_off + 1905 * ccomps * dcomps);

            auto g_z_0_z_0_yz_yzzzzzz = cbuffer.data(dk_geom_1010_off + 1906 * ccomps * dcomps);

            auto g_z_0_z_0_yz_zzzzzzz = cbuffer.data(dk_geom_1010_off + 1907 * ccomps * dcomps);

            auto g_z_0_z_0_zz_xxxxxxx = cbuffer.data(dk_geom_1010_off + 1908 * ccomps * dcomps);

            auto g_z_0_z_0_zz_xxxxxxy = cbuffer.data(dk_geom_1010_off + 1909 * ccomps * dcomps);

            auto g_z_0_z_0_zz_xxxxxxz = cbuffer.data(dk_geom_1010_off + 1910 * ccomps * dcomps);

            auto g_z_0_z_0_zz_xxxxxyy = cbuffer.data(dk_geom_1010_off + 1911 * ccomps * dcomps);

            auto g_z_0_z_0_zz_xxxxxyz = cbuffer.data(dk_geom_1010_off + 1912 * ccomps * dcomps);

            auto g_z_0_z_0_zz_xxxxxzz = cbuffer.data(dk_geom_1010_off + 1913 * ccomps * dcomps);

            auto g_z_0_z_0_zz_xxxxyyy = cbuffer.data(dk_geom_1010_off + 1914 * ccomps * dcomps);

            auto g_z_0_z_0_zz_xxxxyyz = cbuffer.data(dk_geom_1010_off + 1915 * ccomps * dcomps);

            auto g_z_0_z_0_zz_xxxxyzz = cbuffer.data(dk_geom_1010_off + 1916 * ccomps * dcomps);

            auto g_z_0_z_0_zz_xxxxzzz = cbuffer.data(dk_geom_1010_off + 1917 * ccomps * dcomps);

            auto g_z_0_z_0_zz_xxxyyyy = cbuffer.data(dk_geom_1010_off + 1918 * ccomps * dcomps);

            auto g_z_0_z_0_zz_xxxyyyz = cbuffer.data(dk_geom_1010_off + 1919 * ccomps * dcomps);

            auto g_z_0_z_0_zz_xxxyyzz = cbuffer.data(dk_geom_1010_off + 1920 * ccomps * dcomps);

            auto g_z_0_z_0_zz_xxxyzzz = cbuffer.data(dk_geom_1010_off + 1921 * ccomps * dcomps);

            auto g_z_0_z_0_zz_xxxzzzz = cbuffer.data(dk_geom_1010_off + 1922 * ccomps * dcomps);

            auto g_z_0_z_0_zz_xxyyyyy = cbuffer.data(dk_geom_1010_off + 1923 * ccomps * dcomps);

            auto g_z_0_z_0_zz_xxyyyyz = cbuffer.data(dk_geom_1010_off + 1924 * ccomps * dcomps);

            auto g_z_0_z_0_zz_xxyyyzz = cbuffer.data(dk_geom_1010_off + 1925 * ccomps * dcomps);

            auto g_z_0_z_0_zz_xxyyzzz = cbuffer.data(dk_geom_1010_off + 1926 * ccomps * dcomps);

            auto g_z_0_z_0_zz_xxyzzzz = cbuffer.data(dk_geom_1010_off + 1927 * ccomps * dcomps);

            auto g_z_0_z_0_zz_xxzzzzz = cbuffer.data(dk_geom_1010_off + 1928 * ccomps * dcomps);

            auto g_z_0_z_0_zz_xyyyyyy = cbuffer.data(dk_geom_1010_off + 1929 * ccomps * dcomps);

            auto g_z_0_z_0_zz_xyyyyyz = cbuffer.data(dk_geom_1010_off + 1930 * ccomps * dcomps);

            auto g_z_0_z_0_zz_xyyyyzz = cbuffer.data(dk_geom_1010_off + 1931 * ccomps * dcomps);

            auto g_z_0_z_0_zz_xyyyzzz = cbuffer.data(dk_geom_1010_off + 1932 * ccomps * dcomps);

            auto g_z_0_z_0_zz_xyyzzzz = cbuffer.data(dk_geom_1010_off + 1933 * ccomps * dcomps);

            auto g_z_0_z_0_zz_xyzzzzz = cbuffer.data(dk_geom_1010_off + 1934 * ccomps * dcomps);

            auto g_z_0_z_0_zz_xzzzzzz = cbuffer.data(dk_geom_1010_off + 1935 * ccomps * dcomps);

            auto g_z_0_z_0_zz_yyyyyyy = cbuffer.data(dk_geom_1010_off + 1936 * ccomps * dcomps);

            auto g_z_0_z_0_zz_yyyyyyz = cbuffer.data(dk_geom_1010_off + 1937 * ccomps * dcomps);

            auto g_z_0_z_0_zz_yyyyyzz = cbuffer.data(dk_geom_1010_off + 1938 * ccomps * dcomps);

            auto g_z_0_z_0_zz_yyyyzzz = cbuffer.data(dk_geom_1010_off + 1939 * ccomps * dcomps);

            auto g_z_0_z_0_zz_yyyzzzz = cbuffer.data(dk_geom_1010_off + 1940 * ccomps * dcomps);

            auto g_z_0_z_0_zz_yyzzzzz = cbuffer.data(dk_geom_1010_off + 1941 * ccomps * dcomps);

            auto g_z_0_z_0_zz_yzzzzzz = cbuffer.data(dk_geom_1010_off + 1942 * ccomps * dcomps);

            auto g_z_0_z_0_zz_zzzzzzz = cbuffer.data(dk_geom_1010_off + 1943 * ccomps * dcomps);

            /// set up bra offset for contr_buffer_fixx

            const auto fi_geom_1010_off = idx_geom_1010_fixx + i * dcomps + j;

            /// Set up 0-28 components of targeted buffer : cbuffer.data(

            auto g_x_0_x_0_xxx_xxxxxx = cbuffer.data(fi_geom_1010_off + 0 * ccomps * dcomps);

            auto g_x_0_x_0_xxx_xxxxxy = cbuffer.data(fi_geom_1010_off + 1 * ccomps * dcomps);

            auto g_x_0_x_0_xxx_xxxxxz = cbuffer.data(fi_geom_1010_off + 2 * ccomps * dcomps);

            auto g_x_0_x_0_xxx_xxxxyy = cbuffer.data(fi_geom_1010_off + 3 * ccomps * dcomps);

            auto g_x_0_x_0_xxx_xxxxyz = cbuffer.data(fi_geom_1010_off + 4 * ccomps * dcomps);

            auto g_x_0_x_0_xxx_xxxxzz = cbuffer.data(fi_geom_1010_off + 5 * ccomps * dcomps);

            auto g_x_0_x_0_xxx_xxxyyy = cbuffer.data(fi_geom_1010_off + 6 * ccomps * dcomps);

            auto g_x_0_x_0_xxx_xxxyyz = cbuffer.data(fi_geom_1010_off + 7 * ccomps * dcomps);

            auto g_x_0_x_0_xxx_xxxyzz = cbuffer.data(fi_geom_1010_off + 8 * ccomps * dcomps);

            auto g_x_0_x_0_xxx_xxxzzz = cbuffer.data(fi_geom_1010_off + 9 * ccomps * dcomps);

            auto g_x_0_x_0_xxx_xxyyyy = cbuffer.data(fi_geom_1010_off + 10 * ccomps * dcomps);

            auto g_x_0_x_0_xxx_xxyyyz = cbuffer.data(fi_geom_1010_off + 11 * ccomps * dcomps);

            auto g_x_0_x_0_xxx_xxyyzz = cbuffer.data(fi_geom_1010_off + 12 * ccomps * dcomps);

            auto g_x_0_x_0_xxx_xxyzzz = cbuffer.data(fi_geom_1010_off + 13 * ccomps * dcomps);

            auto g_x_0_x_0_xxx_xxzzzz = cbuffer.data(fi_geom_1010_off + 14 * ccomps * dcomps);

            auto g_x_0_x_0_xxx_xyyyyy = cbuffer.data(fi_geom_1010_off + 15 * ccomps * dcomps);

            auto g_x_0_x_0_xxx_xyyyyz = cbuffer.data(fi_geom_1010_off + 16 * ccomps * dcomps);

            auto g_x_0_x_0_xxx_xyyyzz = cbuffer.data(fi_geom_1010_off + 17 * ccomps * dcomps);

            auto g_x_0_x_0_xxx_xyyzzz = cbuffer.data(fi_geom_1010_off + 18 * ccomps * dcomps);

            auto g_x_0_x_0_xxx_xyzzzz = cbuffer.data(fi_geom_1010_off + 19 * ccomps * dcomps);

            auto g_x_0_x_0_xxx_xzzzzz = cbuffer.data(fi_geom_1010_off + 20 * ccomps * dcomps);

            auto g_x_0_x_0_xxx_yyyyyy = cbuffer.data(fi_geom_1010_off + 21 * ccomps * dcomps);

            auto g_x_0_x_0_xxx_yyyyyz = cbuffer.data(fi_geom_1010_off + 22 * ccomps * dcomps);

            auto g_x_0_x_0_xxx_yyyyzz = cbuffer.data(fi_geom_1010_off + 23 * ccomps * dcomps);

            auto g_x_0_x_0_xxx_yyyzzz = cbuffer.data(fi_geom_1010_off + 24 * ccomps * dcomps);

            auto g_x_0_x_0_xxx_yyzzzz = cbuffer.data(fi_geom_1010_off + 25 * ccomps * dcomps);

            auto g_x_0_x_0_xxx_yzzzzz = cbuffer.data(fi_geom_1010_off + 26 * ccomps * dcomps);

            auto g_x_0_x_0_xxx_zzzzzz = cbuffer.data(fi_geom_1010_off + 27 * ccomps * dcomps);

            #pragma omp simd aligned(g_0_0_x_0_xx_xxxxxx, g_0_0_x_0_xx_xxxxxy, g_0_0_x_0_xx_xxxxxz, g_0_0_x_0_xx_xxxxyy, g_0_0_x_0_xx_xxxxyz, g_0_0_x_0_xx_xxxxzz, g_0_0_x_0_xx_xxxyyy, g_0_0_x_0_xx_xxxyyz, g_0_0_x_0_xx_xxxyzz, g_0_0_x_0_xx_xxxzzz, g_0_0_x_0_xx_xxyyyy, g_0_0_x_0_xx_xxyyyz, g_0_0_x_0_xx_xxyyzz, g_0_0_x_0_xx_xxyzzz, g_0_0_x_0_xx_xxzzzz, g_0_0_x_0_xx_xyyyyy, g_0_0_x_0_xx_xyyyyz, g_0_0_x_0_xx_xyyyzz, g_0_0_x_0_xx_xyyzzz, g_0_0_x_0_xx_xyzzzz, g_0_0_x_0_xx_xzzzzz, g_0_0_x_0_xx_yyyyyy, g_0_0_x_0_xx_yyyyyz, g_0_0_x_0_xx_yyyyzz, g_0_0_x_0_xx_yyyzzz, g_0_0_x_0_xx_yyzzzz, g_0_0_x_0_xx_yzzzzz, g_0_0_x_0_xx_zzzzzz, g_x_0_x_0_xx_xxxxxx, g_x_0_x_0_xx_xxxxxxx, g_x_0_x_0_xx_xxxxxxy, g_x_0_x_0_xx_xxxxxxz, g_x_0_x_0_xx_xxxxxy, g_x_0_x_0_xx_xxxxxyy, g_x_0_x_0_xx_xxxxxyz, g_x_0_x_0_xx_xxxxxz, g_x_0_x_0_xx_xxxxxzz, g_x_0_x_0_xx_xxxxyy, g_x_0_x_0_xx_xxxxyyy, g_x_0_x_0_xx_xxxxyyz, g_x_0_x_0_xx_xxxxyz, g_x_0_x_0_xx_xxxxyzz, g_x_0_x_0_xx_xxxxzz, g_x_0_x_0_xx_xxxxzzz, g_x_0_x_0_xx_xxxyyy, g_x_0_x_0_xx_xxxyyyy, g_x_0_x_0_xx_xxxyyyz, g_x_0_x_0_xx_xxxyyz, g_x_0_x_0_xx_xxxyyzz, g_x_0_x_0_xx_xxxyzz, g_x_0_x_0_xx_xxxyzzz, g_x_0_x_0_xx_xxxzzz, g_x_0_x_0_xx_xxxzzzz, g_x_0_x_0_xx_xxyyyy, g_x_0_x_0_xx_xxyyyyy, g_x_0_x_0_xx_xxyyyyz, g_x_0_x_0_xx_xxyyyz, g_x_0_x_0_xx_xxyyyzz, g_x_0_x_0_xx_xxyyzz, g_x_0_x_0_xx_xxyyzzz, g_x_0_x_0_xx_xxyzzz, g_x_0_x_0_xx_xxyzzzz, g_x_0_x_0_xx_xxzzzz, g_x_0_x_0_xx_xxzzzzz, g_x_0_x_0_xx_xyyyyy, g_x_0_x_0_xx_xyyyyyy, g_x_0_x_0_xx_xyyyyyz, g_x_0_x_0_xx_xyyyyz, g_x_0_x_0_xx_xyyyyzz, g_x_0_x_0_xx_xyyyzz, g_x_0_x_0_xx_xyyyzzz, g_x_0_x_0_xx_xyyzzz, g_x_0_x_0_xx_xyyzzzz, g_x_0_x_0_xx_xyzzzz, g_x_0_x_0_xx_xyzzzzz, g_x_0_x_0_xx_xzzzzz, g_x_0_x_0_xx_xzzzzzz, g_x_0_x_0_xx_yyyyyy, g_x_0_x_0_xx_yyyyyz, g_x_0_x_0_xx_yyyyzz, g_x_0_x_0_xx_yyyzzz, g_x_0_x_0_xx_yyzzzz, g_x_0_x_0_xx_yzzzzz, g_x_0_x_0_xx_zzzzzz, g_x_0_x_0_xxx_xxxxxx, g_x_0_x_0_xxx_xxxxxy, g_x_0_x_0_xxx_xxxxxz, g_x_0_x_0_xxx_xxxxyy, g_x_0_x_0_xxx_xxxxyz, g_x_0_x_0_xxx_xxxxzz, g_x_0_x_0_xxx_xxxyyy, g_x_0_x_0_xxx_xxxyyz, g_x_0_x_0_xxx_xxxyzz, g_x_0_x_0_xxx_xxxzzz, g_x_0_x_0_xxx_xxyyyy, g_x_0_x_0_xxx_xxyyyz, g_x_0_x_0_xxx_xxyyzz, g_x_0_x_0_xxx_xxyzzz, g_x_0_x_0_xxx_xxzzzz, g_x_0_x_0_xxx_xyyyyy, g_x_0_x_0_xxx_xyyyyz, g_x_0_x_0_xxx_xyyyzz, g_x_0_x_0_xxx_xyyzzz, g_x_0_x_0_xxx_xyzzzz, g_x_0_x_0_xxx_xzzzzz, g_x_0_x_0_xxx_yyyyyy, g_x_0_x_0_xxx_yyyyyz, g_x_0_x_0_xxx_yyyyzz, g_x_0_x_0_xxx_yyyzzz, g_x_0_x_0_xxx_yyzzzz, g_x_0_x_0_xxx_yzzzzz, g_x_0_x_0_xxx_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_x_0_x_0_xxx_xxxxxx[k] = -g_0_0_x_0_xx_xxxxxx[k] - g_x_0_x_0_xx_xxxxxx[k] * ab_x + g_x_0_x_0_xx_xxxxxxx[k];

                g_x_0_x_0_xxx_xxxxxy[k] = -g_0_0_x_0_xx_xxxxxy[k] - g_x_0_x_0_xx_xxxxxy[k] * ab_x + g_x_0_x_0_xx_xxxxxxy[k];

                g_x_0_x_0_xxx_xxxxxz[k] = -g_0_0_x_0_xx_xxxxxz[k] - g_x_0_x_0_xx_xxxxxz[k] * ab_x + g_x_0_x_0_xx_xxxxxxz[k];

                g_x_0_x_0_xxx_xxxxyy[k] = -g_0_0_x_0_xx_xxxxyy[k] - g_x_0_x_0_xx_xxxxyy[k] * ab_x + g_x_0_x_0_xx_xxxxxyy[k];

                g_x_0_x_0_xxx_xxxxyz[k] = -g_0_0_x_0_xx_xxxxyz[k] - g_x_0_x_0_xx_xxxxyz[k] * ab_x + g_x_0_x_0_xx_xxxxxyz[k];

                g_x_0_x_0_xxx_xxxxzz[k] = -g_0_0_x_0_xx_xxxxzz[k] - g_x_0_x_0_xx_xxxxzz[k] * ab_x + g_x_0_x_0_xx_xxxxxzz[k];

                g_x_0_x_0_xxx_xxxyyy[k] = -g_0_0_x_0_xx_xxxyyy[k] - g_x_0_x_0_xx_xxxyyy[k] * ab_x + g_x_0_x_0_xx_xxxxyyy[k];

                g_x_0_x_0_xxx_xxxyyz[k] = -g_0_0_x_0_xx_xxxyyz[k] - g_x_0_x_0_xx_xxxyyz[k] * ab_x + g_x_0_x_0_xx_xxxxyyz[k];

                g_x_0_x_0_xxx_xxxyzz[k] = -g_0_0_x_0_xx_xxxyzz[k] - g_x_0_x_0_xx_xxxyzz[k] * ab_x + g_x_0_x_0_xx_xxxxyzz[k];

                g_x_0_x_0_xxx_xxxzzz[k] = -g_0_0_x_0_xx_xxxzzz[k] - g_x_0_x_0_xx_xxxzzz[k] * ab_x + g_x_0_x_0_xx_xxxxzzz[k];

                g_x_0_x_0_xxx_xxyyyy[k] = -g_0_0_x_0_xx_xxyyyy[k] - g_x_0_x_0_xx_xxyyyy[k] * ab_x + g_x_0_x_0_xx_xxxyyyy[k];

                g_x_0_x_0_xxx_xxyyyz[k] = -g_0_0_x_0_xx_xxyyyz[k] - g_x_0_x_0_xx_xxyyyz[k] * ab_x + g_x_0_x_0_xx_xxxyyyz[k];

                g_x_0_x_0_xxx_xxyyzz[k] = -g_0_0_x_0_xx_xxyyzz[k] - g_x_0_x_0_xx_xxyyzz[k] * ab_x + g_x_0_x_0_xx_xxxyyzz[k];

                g_x_0_x_0_xxx_xxyzzz[k] = -g_0_0_x_0_xx_xxyzzz[k] - g_x_0_x_0_xx_xxyzzz[k] * ab_x + g_x_0_x_0_xx_xxxyzzz[k];

                g_x_0_x_0_xxx_xxzzzz[k] = -g_0_0_x_0_xx_xxzzzz[k] - g_x_0_x_0_xx_xxzzzz[k] * ab_x + g_x_0_x_0_xx_xxxzzzz[k];

                g_x_0_x_0_xxx_xyyyyy[k] = -g_0_0_x_0_xx_xyyyyy[k] - g_x_0_x_0_xx_xyyyyy[k] * ab_x + g_x_0_x_0_xx_xxyyyyy[k];

                g_x_0_x_0_xxx_xyyyyz[k] = -g_0_0_x_0_xx_xyyyyz[k] - g_x_0_x_0_xx_xyyyyz[k] * ab_x + g_x_0_x_0_xx_xxyyyyz[k];

                g_x_0_x_0_xxx_xyyyzz[k] = -g_0_0_x_0_xx_xyyyzz[k] - g_x_0_x_0_xx_xyyyzz[k] * ab_x + g_x_0_x_0_xx_xxyyyzz[k];

                g_x_0_x_0_xxx_xyyzzz[k] = -g_0_0_x_0_xx_xyyzzz[k] - g_x_0_x_0_xx_xyyzzz[k] * ab_x + g_x_0_x_0_xx_xxyyzzz[k];

                g_x_0_x_0_xxx_xyzzzz[k] = -g_0_0_x_0_xx_xyzzzz[k] - g_x_0_x_0_xx_xyzzzz[k] * ab_x + g_x_0_x_0_xx_xxyzzzz[k];

                g_x_0_x_0_xxx_xzzzzz[k] = -g_0_0_x_0_xx_xzzzzz[k] - g_x_0_x_0_xx_xzzzzz[k] * ab_x + g_x_0_x_0_xx_xxzzzzz[k];

                g_x_0_x_0_xxx_yyyyyy[k] = -g_0_0_x_0_xx_yyyyyy[k] - g_x_0_x_0_xx_yyyyyy[k] * ab_x + g_x_0_x_0_xx_xyyyyyy[k];

                g_x_0_x_0_xxx_yyyyyz[k] = -g_0_0_x_0_xx_yyyyyz[k] - g_x_0_x_0_xx_yyyyyz[k] * ab_x + g_x_0_x_0_xx_xyyyyyz[k];

                g_x_0_x_0_xxx_yyyyzz[k] = -g_0_0_x_0_xx_yyyyzz[k] - g_x_0_x_0_xx_yyyyzz[k] * ab_x + g_x_0_x_0_xx_xyyyyzz[k];

                g_x_0_x_0_xxx_yyyzzz[k] = -g_0_0_x_0_xx_yyyzzz[k] - g_x_0_x_0_xx_yyyzzz[k] * ab_x + g_x_0_x_0_xx_xyyyzzz[k];

                g_x_0_x_0_xxx_yyzzzz[k] = -g_0_0_x_0_xx_yyzzzz[k] - g_x_0_x_0_xx_yyzzzz[k] * ab_x + g_x_0_x_0_xx_xyyzzzz[k];

                g_x_0_x_0_xxx_yzzzzz[k] = -g_0_0_x_0_xx_yzzzzz[k] - g_x_0_x_0_xx_yzzzzz[k] * ab_x + g_x_0_x_0_xx_xyzzzzz[k];

                g_x_0_x_0_xxx_zzzzzz[k] = -g_0_0_x_0_xx_zzzzzz[k] - g_x_0_x_0_xx_zzzzzz[k] * ab_x + g_x_0_x_0_xx_xzzzzzz[k];
            }

            /// Set up 28-56 components of targeted buffer : cbuffer.data(

            auto g_x_0_x_0_xxy_xxxxxx = cbuffer.data(fi_geom_1010_off + 28 * ccomps * dcomps);

            auto g_x_0_x_0_xxy_xxxxxy = cbuffer.data(fi_geom_1010_off + 29 * ccomps * dcomps);

            auto g_x_0_x_0_xxy_xxxxxz = cbuffer.data(fi_geom_1010_off + 30 * ccomps * dcomps);

            auto g_x_0_x_0_xxy_xxxxyy = cbuffer.data(fi_geom_1010_off + 31 * ccomps * dcomps);

            auto g_x_0_x_0_xxy_xxxxyz = cbuffer.data(fi_geom_1010_off + 32 * ccomps * dcomps);

            auto g_x_0_x_0_xxy_xxxxzz = cbuffer.data(fi_geom_1010_off + 33 * ccomps * dcomps);

            auto g_x_0_x_0_xxy_xxxyyy = cbuffer.data(fi_geom_1010_off + 34 * ccomps * dcomps);

            auto g_x_0_x_0_xxy_xxxyyz = cbuffer.data(fi_geom_1010_off + 35 * ccomps * dcomps);

            auto g_x_0_x_0_xxy_xxxyzz = cbuffer.data(fi_geom_1010_off + 36 * ccomps * dcomps);

            auto g_x_0_x_0_xxy_xxxzzz = cbuffer.data(fi_geom_1010_off + 37 * ccomps * dcomps);

            auto g_x_0_x_0_xxy_xxyyyy = cbuffer.data(fi_geom_1010_off + 38 * ccomps * dcomps);

            auto g_x_0_x_0_xxy_xxyyyz = cbuffer.data(fi_geom_1010_off + 39 * ccomps * dcomps);

            auto g_x_0_x_0_xxy_xxyyzz = cbuffer.data(fi_geom_1010_off + 40 * ccomps * dcomps);

            auto g_x_0_x_0_xxy_xxyzzz = cbuffer.data(fi_geom_1010_off + 41 * ccomps * dcomps);

            auto g_x_0_x_0_xxy_xxzzzz = cbuffer.data(fi_geom_1010_off + 42 * ccomps * dcomps);

            auto g_x_0_x_0_xxy_xyyyyy = cbuffer.data(fi_geom_1010_off + 43 * ccomps * dcomps);

            auto g_x_0_x_0_xxy_xyyyyz = cbuffer.data(fi_geom_1010_off + 44 * ccomps * dcomps);

            auto g_x_0_x_0_xxy_xyyyzz = cbuffer.data(fi_geom_1010_off + 45 * ccomps * dcomps);

            auto g_x_0_x_0_xxy_xyyzzz = cbuffer.data(fi_geom_1010_off + 46 * ccomps * dcomps);

            auto g_x_0_x_0_xxy_xyzzzz = cbuffer.data(fi_geom_1010_off + 47 * ccomps * dcomps);

            auto g_x_0_x_0_xxy_xzzzzz = cbuffer.data(fi_geom_1010_off + 48 * ccomps * dcomps);

            auto g_x_0_x_0_xxy_yyyyyy = cbuffer.data(fi_geom_1010_off + 49 * ccomps * dcomps);

            auto g_x_0_x_0_xxy_yyyyyz = cbuffer.data(fi_geom_1010_off + 50 * ccomps * dcomps);

            auto g_x_0_x_0_xxy_yyyyzz = cbuffer.data(fi_geom_1010_off + 51 * ccomps * dcomps);

            auto g_x_0_x_0_xxy_yyyzzz = cbuffer.data(fi_geom_1010_off + 52 * ccomps * dcomps);

            auto g_x_0_x_0_xxy_yyzzzz = cbuffer.data(fi_geom_1010_off + 53 * ccomps * dcomps);

            auto g_x_0_x_0_xxy_yzzzzz = cbuffer.data(fi_geom_1010_off + 54 * ccomps * dcomps);

            auto g_x_0_x_0_xxy_zzzzzz = cbuffer.data(fi_geom_1010_off + 55 * ccomps * dcomps);

            #pragma omp simd aligned(g_x_0_x_0_xx_xxxxxx, g_x_0_x_0_xx_xxxxxxy, g_x_0_x_0_xx_xxxxxy, g_x_0_x_0_xx_xxxxxyy, g_x_0_x_0_xx_xxxxxyz, g_x_0_x_0_xx_xxxxxz, g_x_0_x_0_xx_xxxxyy, g_x_0_x_0_xx_xxxxyyy, g_x_0_x_0_xx_xxxxyyz, g_x_0_x_0_xx_xxxxyz, g_x_0_x_0_xx_xxxxyzz, g_x_0_x_0_xx_xxxxzz, g_x_0_x_0_xx_xxxyyy, g_x_0_x_0_xx_xxxyyyy, g_x_0_x_0_xx_xxxyyyz, g_x_0_x_0_xx_xxxyyz, g_x_0_x_0_xx_xxxyyzz, g_x_0_x_0_xx_xxxyzz, g_x_0_x_0_xx_xxxyzzz, g_x_0_x_0_xx_xxxzzz, g_x_0_x_0_xx_xxyyyy, g_x_0_x_0_xx_xxyyyyy, g_x_0_x_0_xx_xxyyyyz, g_x_0_x_0_xx_xxyyyz, g_x_0_x_0_xx_xxyyyzz, g_x_0_x_0_xx_xxyyzz, g_x_0_x_0_xx_xxyyzzz, g_x_0_x_0_xx_xxyzzz, g_x_0_x_0_xx_xxyzzzz, g_x_0_x_0_xx_xxzzzz, g_x_0_x_0_xx_xyyyyy, g_x_0_x_0_xx_xyyyyyy, g_x_0_x_0_xx_xyyyyyz, g_x_0_x_0_xx_xyyyyz, g_x_0_x_0_xx_xyyyyzz, g_x_0_x_0_xx_xyyyzz, g_x_0_x_0_xx_xyyyzzz, g_x_0_x_0_xx_xyyzzz, g_x_0_x_0_xx_xyyzzzz, g_x_0_x_0_xx_xyzzzz, g_x_0_x_0_xx_xyzzzzz, g_x_0_x_0_xx_xzzzzz, g_x_0_x_0_xx_yyyyyy, g_x_0_x_0_xx_yyyyyyy, g_x_0_x_0_xx_yyyyyyz, g_x_0_x_0_xx_yyyyyz, g_x_0_x_0_xx_yyyyyzz, g_x_0_x_0_xx_yyyyzz, g_x_0_x_0_xx_yyyyzzz, g_x_0_x_0_xx_yyyzzz, g_x_0_x_0_xx_yyyzzzz, g_x_0_x_0_xx_yyzzzz, g_x_0_x_0_xx_yyzzzzz, g_x_0_x_0_xx_yzzzzz, g_x_0_x_0_xx_yzzzzzz, g_x_0_x_0_xx_zzzzzz, g_x_0_x_0_xxy_xxxxxx, g_x_0_x_0_xxy_xxxxxy, g_x_0_x_0_xxy_xxxxxz, g_x_0_x_0_xxy_xxxxyy, g_x_0_x_0_xxy_xxxxyz, g_x_0_x_0_xxy_xxxxzz, g_x_0_x_0_xxy_xxxyyy, g_x_0_x_0_xxy_xxxyyz, g_x_0_x_0_xxy_xxxyzz, g_x_0_x_0_xxy_xxxzzz, g_x_0_x_0_xxy_xxyyyy, g_x_0_x_0_xxy_xxyyyz, g_x_0_x_0_xxy_xxyyzz, g_x_0_x_0_xxy_xxyzzz, g_x_0_x_0_xxy_xxzzzz, g_x_0_x_0_xxy_xyyyyy, g_x_0_x_0_xxy_xyyyyz, g_x_0_x_0_xxy_xyyyzz, g_x_0_x_0_xxy_xyyzzz, g_x_0_x_0_xxy_xyzzzz, g_x_0_x_0_xxy_xzzzzz, g_x_0_x_0_xxy_yyyyyy, g_x_0_x_0_xxy_yyyyyz, g_x_0_x_0_xxy_yyyyzz, g_x_0_x_0_xxy_yyyzzz, g_x_0_x_0_xxy_yyzzzz, g_x_0_x_0_xxy_yzzzzz, g_x_0_x_0_xxy_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_x_0_x_0_xxy_xxxxxx[k] = -g_x_0_x_0_xx_xxxxxx[k] * ab_y + g_x_0_x_0_xx_xxxxxxy[k];

                g_x_0_x_0_xxy_xxxxxy[k] = -g_x_0_x_0_xx_xxxxxy[k] * ab_y + g_x_0_x_0_xx_xxxxxyy[k];

                g_x_0_x_0_xxy_xxxxxz[k] = -g_x_0_x_0_xx_xxxxxz[k] * ab_y + g_x_0_x_0_xx_xxxxxyz[k];

                g_x_0_x_0_xxy_xxxxyy[k] = -g_x_0_x_0_xx_xxxxyy[k] * ab_y + g_x_0_x_0_xx_xxxxyyy[k];

                g_x_0_x_0_xxy_xxxxyz[k] = -g_x_0_x_0_xx_xxxxyz[k] * ab_y + g_x_0_x_0_xx_xxxxyyz[k];

                g_x_0_x_0_xxy_xxxxzz[k] = -g_x_0_x_0_xx_xxxxzz[k] * ab_y + g_x_0_x_0_xx_xxxxyzz[k];

                g_x_0_x_0_xxy_xxxyyy[k] = -g_x_0_x_0_xx_xxxyyy[k] * ab_y + g_x_0_x_0_xx_xxxyyyy[k];

                g_x_0_x_0_xxy_xxxyyz[k] = -g_x_0_x_0_xx_xxxyyz[k] * ab_y + g_x_0_x_0_xx_xxxyyyz[k];

                g_x_0_x_0_xxy_xxxyzz[k] = -g_x_0_x_0_xx_xxxyzz[k] * ab_y + g_x_0_x_0_xx_xxxyyzz[k];

                g_x_0_x_0_xxy_xxxzzz[k] = -g_x_0_x_0_xx_xxxzzz[k] * ab_y + g_x_0_x_0_xx_xxxyzzz[k];

                g_x_0_x_0_xxy_xxyyyy[k] = -g_x_0_x_0_xx_xxyyyy[k] * ab_y + g_x_0_x_0_xx_xxyyyyy[k];

                g_x_0_x_0_xxy_xxyyyz[k] = -g_x_0_x_0_xx_xxyyyz[k] * ab_y + g_x_0_x_0_xx_xxyyyyz[k];

                g_x_0_x_0_xxy_xxyyzz[k] = -g_x_0_x_0_xx_xxyyzz[k] * ab_y + g_x_0_x_0_xx_xxyyyzz[k];

                g_x_0_x_0_xxy_xxyzzz[k] = -g_x_0_x_0_xx_xxyzzz[k] * ab_y + g_x_0_x_0_xx_xxyyzzz[k];

                g_x_0_x_0_xxy_xxzzzz[k] = -g_x_0_x_0_xx_xxzzzz[k] * ab_y + g_x_0_x_0_xx_xxyzzzz[k];

                g_x_0_x_0_xxy_xyyyyy[k] = -g_x_0_x_0_xx_xyyyyy[k] * ab_y + g_x_0_x_0_xx_xyyyyyy[k];

                g_x_0_x_0_xxy_xyyyyz[k] = -g_x_0_x_0_xx_xyyyyz[k] * ab_y + g_x_0_x_0_xx_xyyyyyz[k];

                g_x_0_x_0_xxy_xyyyzz[k] = -g_x_0_x_0_xx_xyyyzz[k] * ab_y + g_x_0_x_0_xx_xyyyyzz[k];

                g_x_0_x_0_xxy_xyyzzz[k] = -g_x_0_x_0_xx_xyyzzz[k] * ab_y + g_x_0_x_0_xx_xyyyzzz[k];

                g_x_0_x_0_xxy_xyzzzz[k] = -g_x_0_x_0_xx_xyzzzz[k] * ab_y + g_x_0_x_0_xx_xyyzzzz[k];

                g_x_0_x_0_xxy_xzzzzz[k] = -g_x_0_x_0_xx_xzzzzz[k] * ab_y + g_x_0_x_0_xx_xyzzzzz[k];

                g_x_0_x_0_xxy_yyyyyy[k] = -g_x_0_x_0_xx_yyyyyy[k] * ab_y + g_x_0_x_0_xx_yyyyyyy[k];

                g_x_0_x_0_xxy_yyyyyz[k] = -g_x_0_x_0_xx_yyyyyz[k] * ab_y + g_x_0_x_0_xx_yyyyyyz[k];

                g_x_0_x_0_xxy_yyyyzz[k] = -g_x_0_x_0_xx_yyyyzz[k] * ab_y + g_x_0_x_0_xx_yyyyyzz[k];

                g_x_0_x_0_xxy_yyyzzz[k] = -g_x_0_x_0_xx_yyyzzz[k] * ab_y + g_x_0_x_0_xx_yyyyzzz[k];

                g_x_0_x_0_xxy_yyzzzz[k] = -g_x_0_x_0_xx_yyzzzz[k] * ab_y + g_x_0_x_0_xx_yyyzzzz[k];

                g_x_0_x_0_xxy_yzzzzz[k] = -g_x_0_x_0_xx_yzzzzz[k] * ab_y + g_x_0_x_0_xx_yyzzzzz[k];

                g_x_0_x_0_xxy_zzzzzz[k] = -g_x_0_x_0_xx_zzzzzz[k] * ab_y + g_x_0_x_0_xx_yzzzzzz[k];
            }

            /// Set up 56-84 components of targeted buffer : cbuffer.data(

            auto g_x_0_x_0_xxz_xxxxxx = cbuffer.data(fi_geom_1010_off + 56 * ccomps * dcomps);

            auto g_x_0_x_0_xxz_xxxxxy = cbuffer.data(fi_geom_1010_off + 57 * ccomps * dcomps);

            auto g_x_0_x_0_xxz_xxxxxz = cbuffer.data(fi_geom_1010_off + 58 * ccomps * dcomps);

            auto g_x_0_x_0_xxz_xxxxyy = cbuffer.data(fi_geom_1010_off + 59 * ccomps * dcomps);

            auto g_x_0_x_0_xxz_xxxxyz = cbuffer.data(fi_geom_1010_off + 60 * ccomps * dcomps);

            auto g_x_0_x_0_xxz_xxxxzz = cbuffer.data(fi_geom_1010_off + 61 * ccomps * dcomps);

            auto g_x_0_x_0_xxz_xxxyyy = cbuffer.data(fi_geom_1010_off + 62 * ccomps * dcomps);

            auto g_x_0_x_0_xxz_xxxyyz = cbuffer.data(fi_geom_1010_off + 63 * ccomps * dcomps);

            auto g_x_0_x_0_xxz_xxxyzz = cbuffer.data(fi_geom_1010_off + 64 * ccomps * dcomps);

            auto g_x_0_x_0_xxz_xxxzzz = cbuffer.data(fi_geom_1010_off + 65 * ccomps * dcomps);

            auto g_x_0_x_0_xxz_xxyyyy = cbuffer.data(fi_geom_1010_off + 66 * ccomps * dcomps);

            auto g_x_0_x_0_xxz_xxyyyz = cbuffer.data(fi_geom_1010_off + 67 * ccomps * dcomps);

            auto g_x_0_x_0_xxz_xxyyzz = cbuffer.data(fi_geom_1010_off + 68 * ccomps * dcomps);

            auto g_x_0_x_0_xxz_xxyzzz = cbuffer.data(fi_geom_1010_off + 69 * ccomps * dcomps);

            auto g_x_0_x_0_xxz_xxzzzz = cbuffer.data(fi_geom_1010_off + 70 * ccomps * dcomps);

            auto g_x_0_x_0_xxz_xyyyyy = cbuffer.data(fi_geom_1010_off + 71 * ccomps * dcomps);

            auto g_x_0_x_0_xxz_xyyyyz = cbuffer.data(fi_geom_1010_off + 72 * ccomps * dcomps);

            auto g_x_0_x_0_xxz_xyyyzz = cbuffer.data(fi_geom_1010_off + 73 * ccomps * dcomps);

            auto g_x_0_x_0_xxz_xyyzzz = cbuffer.data(fi_geom_1010_off + 74 * ccomps * dcomps);

            auto g_x_0_x_0_xxz_xyzzzz = cbuffer.data(fi_geom_1010_off + 75 * ccomps * dcomps);

            auto g_x_0_x_0_xxz_xzzzzz = cbuffer.data(fi_geom_1010_off + 76 * ccomps * dcomps);

            auto g_x_0_x_0_xxz_yyyyyy = cbuffer.data(fi_geom_1010_off + 77 * ccomps * dcomps);

            auto g_x_0_x_0_xxz_yyyyyz = cbuffer.data(fi_geom_1010_off + 78 * ccomps * dcomps);

            auto g_x_0_x_0_xxz_yyyyzz = cbuffer.data(fi_geom_1010_off + 79 * ccomps * dcomps);

            auto g_x_0_x_0_xxz_yyyzzz = cbuffer.data(fi_geom_1010_off + 80 * ccomps * dcomps);

            auto g_x_0_x_0_xxz_yyzzzz = cbuffer.data(fi_geom_1010_off + 81 * ccomps * dcomps);

            auto g_x_0_x_0_xxz_yzzzzz = cbuffer.data(fi_geom_1010_off + 82 * ccomps * dcomps);

            auto g_x_0_x_0_xxz_zzzzzz = cbuffer.data(fi_geom_1010_off + 83 * ccomps * dcomps);

            #pragma omp simd aligned(g_x_0_x_0_xx_xxxxxx, g_x_0_x_0_xx_xxxxxxz, g_x_0_x_0_xx_xxxxxy, g_x_0_x_0_xx_xxxxxyz, g_x_0_x_0_xx_xxxxxz, g_x_0_x_0_xx_xxxxxzz, g_x_0_x_0_xx_xxxxyy, g_x_0_x_0_xx_xxxxyyz, g_x_0_x_0_xx_xxxxyz, g_x_0_x_0_xx_xxxxyzz, g_x_0_x_0_xx_xxxxzz, g_x_0_x_0_xx_xxxxzzz, g_x_0_x_0_xx_xxxyyy, g_x_0_x_0_xx_xxxyyyz, g_x_0_x_0_xx_xxxyyz, g_x_0_x_0_xx_xxxyyzz, g_x_0_x_0_xx_xxxyzz, g_x_0_x_0_xx_xxxyzzz, g_x_0_x_0_xx_xxxzzz, g_x_0_x_0_xx_xxxzzzz, g_x_0_x_0_xx_xxyyyy, g_x_0_x_0_xx_xxyyyyz, g_x_0_x_0_xx_xxyyyz, g_x_0_x_0_xx_xxyyyzz, g_x_0_x_0_xx_xxyyzz, g_x_0_x_0_xx_xxyyzzz, g_x_0_x_0_xx_xxyzzz, g_x_0_x_0_xx_xxyzzzz, g_x_0_x_0_xx_xxzzzz, g_x_0_x_0_xx_xxzzzzz, g_x_0_x_0_xx_xyyyyy, g_x_0_x_0_xx_xyyyyyz, g_x_0_x_0_xx_xyyyyz, g_x_0_x_0_xx_xyyyyzz, g_x_0_x_0_xx_xyyyzz, g_x_0_x_0_xx_xyyyzzz, g_x_0_x_0_xx_xyyzzz, g_x_0_x_0_xx_xyyzzzz, g_x_0_x_0_xx_xyzzzz, g_x_0_x_0_xx_xyzzzzz, g_x_0_x_0_xx_xzzzzz, g_x_0_x_0_xx_xzzzzzz, g_x_0_x_0_xx_yyyyyy, g_x_0_x_0_xx_yyyyyyz, g_x_0_x_0_xx_yyyyyz, g_x_0_x_0_xx_yyyyyzz, g_x_0_x_0_xx_yyyyzz, g_x_0_x_0_xx_yyyyzzz, g_x_0_x_0_xx_yyyzzz, g_x_0_x_0_xx_yyyzzzz, g_x_0_x_0_xx_yyzzzz, g_x_0_x_0_xx_yyzzzzz, g_x_0_x_0_xx_yzzzzz, g_x_0_x_0_xx_yzzzzzz, g_x_0_x_0_xx_zzzzzz, g_x_0_x_0_xx_zzzzzzz, g_x_0_x_0_xxz_xxxxxx, g_x_0_x_0_xxz_xxxxxy, g_x_0_x_0_xxz_xxxxxz, g_x_0_x_0_xxz_xxxxyy, g_x_0_x_0_xxz_xxxxyz, g_x_0_x_0_xxz_xxxxzz, g_x_0_x_0_xxz_xxxyyy, g_x_0_x_0_xxz_xxxyyz, g_x_0_x_0_xxz_xxxyzz, g_x_0_x_0_xxz_xxxzzz, g_x_0_x_0_xxz_xxyyyy, g_x_0_x_0_xxz_xxyyyz, g_x_0_x_0_xxz_xxyyzz, g_x_0_x_0_xxz_xxyzzz, g_x_0_x_0_xxz_xxzzzz, g_x_0_x_0_xxz_xyyyyy, g_x_0_x_0_xxz_xyyyyz, g_x_0_x_0_xxz_xyyyzz, g_x_0_x_0_xxz_xyyzzz, g_x_0_x_0_xxz_xyzzzz, g_x_0_x_0_xxz_xzzzzz, g_x_0_x_0_xxz_yyyyyy, g_x_0_x_0_xxz_yyyyyz, g_x_0_x_0_xxz_yyyyzz, g_x_0_x_0_xxz_yyyzzz, g_x_0_x_0_xxz_yyzzzz, g_x_0_x_0_xxz_yzzzzz, g_x_0_x_0_xxz_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_x_0_x_0_xxz_xxxxxx[k] = -g_x_0_x_0_xx_xxxxxx[k] * ab_z + g_x_0_x_0_xx_xxxxxxz[k];

                g_x_0_x_0_xxz_xxxxxy[k] = -g_x_0_x_0_xx_xxxxxy[k] * ab_z + g_x_0_x_0_xx_xxxxxyz[k];

                g_x_0_x_0_xxz_xxxxxz[k] = -g_x_0_x_0_xx_xxxxxz[k] * ab_z + g_x_0_x_0_xx_xxxxxzz[k];

                g_x_0_x_0_xxz_xxxxyy[k] = -g_x_0_x_0_xx_xxxxyy[k] * ab_z + g_x_0_x_0_xx_xxxxyyz[k];

                g_x_0_x_0_xxz_xxxxyz[k] = -g_x_0_x_0_xx_xxxxyz[k] * ab_z + g_x_0_x_0_xx_xxxxyzz[k];

                g_x_0_x_0_xxz_xxxxzz[k] = -g_x_0_x_0_xx_xxxxzz[k] * ab_z + g_x_0_x_0_xx_xxxxzzz[k];

                g_x_0_x_0_xxz_xxxyyy[k] = -g_x_0_x_0_xx_xxxyyy[k] * ab_z + g_x_0_x_0_xx_xxxyyyz[k];

                g_x_0_x_0_xxz_xxxyyz[k] = -g_x_0_x_0_xx_xxxyyz[k] * ab_z + g_x_0_x_0_xx_xxxyyzz[k];

                g_x_0_x_0_xxz_xxxyzz[k] = -g_x_0_x_0_xx_xxxyzz[k] * ab_z + g_x_0_x_0_xx_xxxyzzz[k];

                g_x_0_x_0_xxz_xxxzzz[k] = -g_x_0_x_0_xx_xxxzzz[k] * ab_z + g_x_0_x_0_xx_xxxzzzz[k];

                g_x_0_x_0_xxz_xxyyyy[k] = -g_x_0_x_0_xx_xxyyyy[k] * ab_z + g_x_0_x_0_xx_xxyyyyz[k];

                g_x_0_x_0_xxz_xxyyyz[k] = -g_x_0_x_0_xx_xxyyyz[k] * ab_z + g_x_0_x_0_xx_xxyyyzz[k];

                g_x_0_x_0_xxz_xxyyzz[k] = -g_x_0_x_0_xx_xxyyzz[k] * ab_z + g_x_0_x_0_xx_xxyyzzz[k];

                g_x_0_x_0_xxz_xxyzzz[k] = -g_x_0_x_0_xx_xxyzzz[k] * ab_z + g_x_0_x_0_xx_xxyzzzz[k];

                g_x_0_x_0_xxz_xxzzzz[k] = -g_x_0_x_0_xx_xxzzzz[k] * ab_z + g_x_0_x_0_xx_xxzzzzz[k];

                g_x_0_x_0_xxz_xyyyyy[k] = -g_x_0_x_0_xx_xyyyyy[k] * ab_z + g_x_0_x_0_xx_xyyyyyz[k];

                g_x_0_x_0_xxz_xyyyyz[k] = -g_x_0_x_0_xx_xyyyyz[k] * ab_z + g_x_0_x_0_xx_xyyyyzz[k];

                g_x_0_x_0_xxz_xyyyzz[k] = -g_x_0_x_0_xx_xyyyzz[k] * ab_z + g_x_0_x_0_xx_xyyyzzz[k];

                g_x_0_x_0_xxz_xyyzzz[k] = -g_x_0_x_0_xx_xyyzzz[k] * ab_z + g_x_0_x_0_xx_xyyzzzz[k];

                g_x_0_x_0_xxz_xyzzzz[k] = -g_x_0_x_0_xx_xyzzzz[k] * ab_z + g_x_0_x_0_xx_xyzzzzz[k];

                g_x_0_x_0_xxz_xzzzzz[k] = -g_x_0_x_0_xx_xzzzzz[k] * ab_z + g_x_0_x_0_xx_xzzzzzz[k];

                g_x_0_x_0_xxz_yyyyyy[k] = -g_x_0_x_0_xx_yyyyyy[k] * ab_z + g_x_0_x_0_xx_yyyyyyz[k];

                g_x_0_x_0_xxz_yyyyyz[k] = -g_x_0_x_0_xx_yyyyyz[k] * ab_z + g_x_0_x_0_xx_yyyyyzz[k];

                g_x_0_x_0_xxz_yyyyzz[k] = -g_x_0_x_0_xx_yyyyzz[k] * ab_z + g_x_0_x_0_xx_yyyyzzz[k];

                g_x_0_x_0_xxz_yyyzzz[k] = -g_x_0_x_0_xx_yyyzzz[k] * ab_z + g_x_0_x_0_xx_yyyzzzz[k];

                g_x_0_x_0_xxz_yyzzzz[k] = -g_x_0_x_0_xx_yyzzzz[k] * ab_z + g_x_0_x_0_xx_yyzzzzz[k];

                g_x_0_x_0_xxz_yzzzzz[k] = -g_x_0_x_0_xx_yzzzzz[k] * ab_z + g_x_0_x_0_xx_yzzzzzz[k];

                g_x_0_x_0_xxz_zzzzzz[k] = -g_x_0_x_0_xx_zzzzzz[k] * ab_z + g_x_0_x_0_xx_zzzzzzz[k];
            }

            /// Set up 84-112 components of targeted buffer : cbuffer.data(

            auto g_x_0_x_0_xyy_xxxxxx = cbuffer.data(fi_geom_1010_off + 84 * ccomps * dcomps);

            auto g_x_0_x_0_xyy_xxxxxy = cbuffer.data(fi_geom_1010_off + 85 * ccomps * dcomps);

            auto g_x_0_x_0_xyy_xxxxxz = cbuffer.data(fi_geom_1010_off + 86 * ccomps * dcomps);

            auto g_x_0_x_0_xyy_xxxxyy = cbuffer.data(fi_geom_1010_off + 87 * ccomps * dcomps);

            auto g_x_0_x_0_xyy_xxxxyz = cbuffer.data(fi_geom_1010_off + 88 * ccomps * dcomps);

            auto g_x_0_x_0_xyy_xxxxzz = cbuffer.data(fi_geom_1010_off + 89 * ccomps * dcomps);

            auto g_x_0_x_0_xyy_xxxyyy = cbuffer.data(fi_geom_1010_off + 90 * ccomps * dcomps);

            auto g_x_0_x_0_xyy_xxxyyz = cbuffer.data(fi_geom_1010_off + 91 * ccomps * dcomps);

            auto g_x_0_x_0_xyy_xxxyzz = cbuffer.data(fi_geom_1010_off + 92 * ccomps * dcomps);

            auto g_x_0_x_0_xyy_xxxzzz = cbuffer.data(fi_geom_1010_off + 93 * ccomps * dcomps);

            auto g_x_0_x_0_xyy_xxyyyy = cbuffer.data(fi_geom_1010_off + 94 * ccomps * dcomps);

            auto g_x_0_x_0_xyy_xxyyyz = cbuffer.data(fi_geom_1010_off + 95 * ccomps * dcomps);

            auto g_x_0_x_0_xyy_xxyyzz = cbuffer.data(fi_geom_1010_off + 96 * ccomps * dcomps);

            auto g_x_0_x_0_xyy_xxyzzz = cbuffer.data(fi_geom_1010_off + 97 * ccomps * dcomps);

            auto g_x_0_x_0_xyy_xxzzzz = cbuffer.data(fi_geom_1010_off + 98 * ccomps * dcomps);

            auto g_x_0_x_0_xyy_xyyyyy = cbuffer.data(fi_geom_1010_off + 99 * ccomps * dcomps);

            auto g_x_0_x_0_xyy_xyyyyz = cbuffer.data(fi_geom_1010_off + 100 * ccomps * dcomps);

            auto g_x_0_x_0_xyy_xyyyzz = cbuffer.data(fi_geom_1010_off + 101 * ccomps * dcomps);

            auto g_x_0_x_0_xyy_xyyzzz = cbuffer.data(fi_geom_1010_off + 102 * ccomps * dcomps);

            auto g_x_0_x_0_xyy_xyzzzz = cbuffer.data(fi_geom_1010_off + 103 * ccomps * dcomps);

            auto g_x_0_x_0_xyy_xzzzzz = cbuffer.data(fi_geom_1010_off + 104 * ccomps * dcomps);

            auto g_x_0_x_0_xyy_yyyyyy = cbuffer.data(fi_geom_1010_off + 105 * ccomps * dcomps);

            auto g_x_0_x_0_xyy_yyyyyz = cbuffer.data(fi_geom_1010_off + 106 * ccomps * dcomps);

            auto g_x_0_x_0_xyy_yyyyzz = cbuffer.data(fi_geom_1010_off + 107 * ccomps * dcomps);

            auto g_x_0_x_0_xyy_yyyzzz = cbuffer.data(fi_geom_1010_off + 108 * ccomps * dcomps);

            auto g_x_0_x_0_xyy_yyzzzz = cbuffer.data(fi_geom_1010_off + 109 * ccomps * dcomps);

            auto g_x_0_x_0_xyy_yzzzzz = cbuffer.data(fi_geom_1010_off + 110 * ccomps * dcomps);

            auto g_x_0_x_0_xyy_zzzzzz = cbuffer.data(fi_geom_1010_off + 111 * ccomps * dcomps);

            #pragma omp simd aligned(g_x_0_x_0_xy_xxxxxx, g_x_0_x_0_xy_xxxxxxy, g_x_0_x_0_xy_xxxxxy, g_x_0_x_0_xy_xxxxxyy, g_x_0_x_0_xy_xxxxxyz, g_x_0_x_0_xy_xxxxxz, g_x_0_x_0_xy_xxxxyy, g_x_0_x_0_xy_xxxxyyy, g_x_0_x_0_xy_xxxxyyz, g_x_0_x_0_xy_xxxxyz, g_x_0_x_0_xy_xxxxyzz, g_x_0_x_0_xy_xxxxzz, g_x_0_x_0_xy_xxxyyy, g_x_0_x_0_xy_xxxyyyy, g_x_0_x_0_xy_xxxyyyz, g_x_0_x_0_xy_xxxyyz, g_x_0_x_0_xy_xxxyyzz, g_x_0_x_0_xy_xxxyzz, g_x_0_x_0_xy_xxxyzzz, g_x_0_x_0_xy_xxxzzz, g_x_0_x_0_xy_xxyyyy, g_x_0_x_0_xy_xxyyyyy, g_x_0_x_0_xy_xxyyyyz, g_x_0_x_0_xy_xxyyyz, g_x_0_x_0_xy_xxyyyzz, g_x_0_x_0_xy_xxyyzz, g_x_0_x_0_xy_xxyyzzz, g_x_0_x_0_xy_xxyzzz, g_x_0_x_0_xy_xxyzzzz, g_x_0_x_0_xy_xxzzzz, g_x_0_x_0_xy_xyyyyy, g_x_0_x_0_xy_xyyyyyy, g_x_0_x_0_xy_xyyyyyz, g_x_0_x_0_xy_xyyyyz, g_x_0_x_0_xy_xyyyyzz, g_x_0_x_0_xy_xyyyzz, g_x_0_x_0_xy_xyyyzzz, g_x_0_x_0_xy_xyyzzz, g_x_0_x_0_xy_xyyzzzz, g_x_0_x_0_xy_xyzzzz, g_x_0_x_0_xy_xyzzzzz, g_x_0_x_0_xy_xzzzzz, g_x_0_x_0_xy_yyyyyy, g_x_0_x_0_xy_yyyyyyy, g_x_0_x_0_xy_yyyyyyz, g_x_0_x_0_xy_yyyyyz, g_x_0_x_0_xy_yyyyyzz, g_x_0_x_0_xy_yyyyzz, g_x_0_x_0_xy_yyyyzzz, g_x_0_x_0_xy_yyyzzz, g_x_0_x_0_xy_yyyzzzz, g_x_0_x_0_xy_yyzzzz, g_x_0_x_0_xy_yyzzzzz, g_x_0_x_0_xy_yzzzzz, g_x_0_x_0_xy_yzzzzzz, g_x_0_x_0_xy_zzzzzz, g_x_0_x_0_xyy_xxxxxx, g_x_0_x_0_xyy_xxxxxy, g_x_0_x_0_xyy_xxxxxz, g_x_0_x_0_xyy_xxxxyy, g_x_0_x_0_xyy_xxxxyz, g_x_0_x_0_xyy_xxxxzz, g_x_0_x_0_xyy_xxxyyy, g_x_0_x_0_xyy_xxxyyz, g_x_0_x_0_xyy_xxxyzz, g_x_0_x_0_xyy_xxxzzz, g_x_0_x_0_xyy_xxyyyy, g_x_0_x_0_xyy_xxyyyz, g_x_0_x_0_xyy_xxyyzz, g_x_0_x_0_xyy_xxyzzz, g_x_0_x_0_xyy_xxzzzz, g_x_0_x_0_xyy_xyyyyy, g_x_0_x_0_xyy_xyyyyz, g_x_0_x_0_xyy_xyyyzz, g_x_0_x_0_xyy_xyyzzz, g_x_0_x_0_xyy_xyzzzz, g_x_0_x_0_xyy_xzzzzz, g_x_0_x_0_xyy_yyyyyy, g_x_0_x_0_xyy_yyyyyz, g_x_0_x_0_xyy_yyyyzz, g_x_0_x_0_xyy_yyyzzz, g_x_0_x_0_xyy_yyzzzz, g_x_0_x_0_xyy_yzzzzz, g_x_0_x_0_xyy_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_x_0_x_0_xyy_xxxxxx[k] = -g_x_0_x_0_xy_xxxxxx[k] * ab_y + g_x_0_x_0_xy_xxxxxxy[k];

                g_x_0_x_0_xyy_xxxxxy[k] = -g_x_0_x_0_xy_xxxxxy[k] * ab_y + g_x_0_x_0_xy_xxxxxyy[k];

                g_x_0_x_0_xyy_xxxxxz[k] = -g_x_0_x_0_xy_xxxxxz[k] * ab_y + g_x_0_x_0_xy_xxxxxyz[k];

                g_x_0_x_0_xyy_xxxxyy[k] = -g_x_0_x_0_xy_xxxxyy[k] * ab_y + g_x_0_x_0_xy_xxxxyyy[k];

                g_x_0_x_0_xyy_xxxxyz[k] = -g_x_0_x_0_xy_xxxxyz[k] * ab_y + g_x_0_x_0_xy_xxxxyyz[k];

                g_x_0_x_0_xyy_xxxxzz[k] = -g_x_0_x_0_xy_xxxxzz[k] * ab_y + g_x_0_x_0_xy_xxxxyzz[k];

                g_x_0_x_0_xyy_xxxyyy[k] = -g_x_0_x_0_xy_xxxyyy[k] * ab_y + g_x_0_x_0_xy_xxxyyyy[k];

                g_x_0_x_0_xyy_xxxyyz[k] = -g_x_0_x_0_xy_xxxyyz[k] * ab_y + g_x_0_x_0_xy_xxxyyyz[k];

                g_x_0_x_0_xyy_xxxyzz[k] = -g_x_0_x_0_xy_xxxyzz[k] * ab_y + g_x_0_x_0_xy_xxxyyzz[k];

                g_x_0_x_0_xyy_xxxzzz[k] = -g_x_0_x_0_xy_xxxzzz[k] * ab_y + g_x_0_x_0_xy_xxxyzzz[k];

                g_x_0_x_0_xyy_xxyyyy[k] = -g_x_0_x_0_xy_xxyyyy[k] * ab_y + g_x_0_x_0_xy_xxyyyyy[k];

                g_x_0_x_0_xyy_xxyyyz[k] = -g_x_0_x_0_xy_xxyyyz[k] * ab_y + g_x_0_x_0_xy_xxyyyyz[k];

                g_x_0_x_0_xyy_xxyyzz[k] = -g_x_0_x_0_xy_xxyyzz[k] * ab_y + g_x_0_x_0_xy_xxyyyzz[k];

                g_x_0_x_0_xyy_xxyzzz[k] = -g_x_0_x_0_xy_xxyzzz[k] * ab_y + g_x_0_x_0_xy_xxyyzzz[k];

                g_x_0_x_0_xyy_xxzzzz[k] = -g_x_0_x_0_xy_xxzzzz[k] * ab_y + g_x_0_x_0_xy_xxyzzzz[k];

                g_x_0_x_0_xyy_xyyyyy[k] = -g_x_0_x_0_xy_xyyyyy[k] * ab_y + g_x_0_x_0_xy_xyyyyyy[k];

                g_x_0_x_0_xyy_xyyyyz[k] = -g_x_0_x_0_xy_xyyyyz[k] * ab_y + g_x_0_x_0_xy_xyyyyyz[k];

                g_x_0_x_0_xyy_xyyyzz[k] = -g_x_0_x_0_xy_xyyyzz[k] * ab_y + g_x_0_x_0_xy_xyyyyzz[k];

                g_x_0_x_0_xyy_xyyzzz[k] = -g_x_0_x_0_xy_xyyzzz[k] * ab_y + g_x_0_x_0_xy_xyyyzzz[k];

                g_x_0_x_0_xyy_xyzzzz[k] = -g_x_0_x_0_xy_xyzzzz[k] * ab_y + g_x_0_x_0_xy_xyyzzzz[k];

                g_x_0_x_0_xyy_xzzzzz[k] = -g_x_0_x_0_xy_xzzzzz[k] * ab_y + g_x_0_x_0_xy_xyzzzzz[k];

                g_x_0_x_0_xyy_yyyyyy[k] = -g_x_0_x_0_xy_yyyyyy[k] * ab_y + g_x_0_x_0_xy_yyyyyyy[k];

                g_x_0_x_0_xyy_yyyyyz[k] = -g_x_0_x_0_xy_yyyyyz[k] * ab_y + g_x_0_x_0_xy_yyyyyyz[k];

                g_x_0_x_0_xyy_yyyyzz[k] = -g_x_0_x_0_xy_yyyyzz[k] * ab_y + g_x_0_x_0_xy_yyyyyzz[k];

                g_x_0_x_0_xyy_yyyzzz[k] = -g_x_0_x_0_xy_yyyzzz[k] * ab_y + g_x_0_x_0_xy_yyyyzzz[k];

                g_x_0_x_0_xyy_yyzzzz[k] = -g_x_0_x_0_xy_yyzzzz[k] * ab_y + g_x_0_x_0_xy_yyyzzzz[k];

                g_x_0_x_0_xyy_yzzzzz[k] = -g_x_0_x_0_xy_yzzzzz[k] * ab_y + g_x_0_x_0_xy_yyzzzzz[k];

                g_x_0_x_0_xyy_zzzzzz[k] = -g_x_0_x_0_xy_zzzzzz[k] * ab_y + g_x_0_x_0_xy_yzzzzzz[k];
            }

            /// Set up 112-140 components of targeted buffer : cbuffer.data(

            auto g_x_0_x_0_xyz_xxxxxx = cbuffer.data(fi_geom_1010_off + 112 * ccomps * dcomps);

            auto g_x_0_x_0_xyz_xxxxxy = cbuffer.data(fi_geom_1010_off + 113 * ccomps * dcomps);

            auto g_x_0_x_0_xyz_xxxxxz = cbuffer.data(fi_geom_1010_off + 114 * ccomps * dcomps);

            auto g_x_0_x_0_xyz_xxxxyy = cbuffer.data(fi_geom_1010_off + 115 * ccomps * dcomps);

            auto g_x_0_x_0_xyz_xxxxyz = cbuffer.data(fi_geom_1010_off + 116 * ccomps * dcomps);

            auto g_x_0_x_0_xyz_xxxxzz = cbuffer.data(fi_geom_1010_off + 117 * ccomps * dcomps);

            auto g_x_0_x_0_xyz_xxxyyy = cbuffer.data(fi_geom_1010_off + 118 * ccomps * dcomps);

            auto g_x_0_x_0_xyz_xxxyyz = cbuffer.data(fi_geom_1010_off + 119 * ccomps * dcomps);

            auto g_x_0_x_0_xyz_xxxyzz = cbuffer.data(fi_geom_1010_off + 120 * ccomps * dcomps);

            auto g_x_0_x_0_xyz_xxxzzz = cbuffer.data(fi_geom_1010_off + 121 * ccomps * dcomps);

            auto g_x_0_x_0_xyz_xxyyyy = cbuffer.data(fi_geom_1010_off + 122 * ccomps * dcomps);

            auto g_x_0_x_0_xyz_xxyyyz = cbuffer.data(fi_geom_1010_off + 123 * ccomps * dcomps);

            auto g_x_0_x_0_xyz_xxyyzz = cbuffer.data(fi_geom_1010_off + 124 * ccomps * dcomps);

            auto g_x_0_x_0_xyz_xxyzzz = cbuffer.data(fi_geom_1010_off + 125 * ccomps * dcomps);

            auto g_x_0_x_0_xyz_xxzzzz = cbuffer.data(fi_geom_1010_off + 126 * ccomps * dcomps);

            auto g_x_0_x_0_xyz_xyyyyy = cbuffer.data(fi_geom_1010_off + 127 * ccomps * dcomps);

            auto g_x_0_x_0_xyz_xyyyyz = cbuffer.data(fi_geom_1010_off + 128 * ccomps * dcomps);

            auto g_x_0_x_0_xyz_xyyyzz = cbuffer.data(fi_geom_1010_off + 129 * ccomps * dcomps);

            auto g_x_0_x_0_xyz_xyyzzz = cbuffer.data(fi_geom_1010_off + 130 * ccomps * dcomps);

            auto g_x_0_x_0_xyz_xyzzzz = cbuffer.data(fi_geom_1010_off + 131 * ccomps * dcomps);

            auto g_x_0_x_0_xyz_xzzzzz = cbuffer.data(fi_geom_1010_off + 132 * ccomps * dcomps);

            auto g_x_0_x_0_xyz_yyyyyy = cbuffer.data(fi_geom_1010_off + 133 * ccomps * dcomps);

            auto g_x_0_x_0_xyz_yyyyyz = cbuffer.data(fi_geom_1010_off + 134 * ccomps * dcomps);

            auto g_x_0_x_0_xyz_yyyyzz = cbuffer.data(fi_geom_1010_off + 135 * ccomps * dcomps);

            auto g_x_0_x_0_xyz_yyyzzz = cbuffer.data(fi_geom_1010_off + 136 * ccomps * dcomps);

            auto g_x_0_x_0_xyz_yyzzzz = cbuffer.data(fi_geom_1010_off + 137 * ccomps * dcomps);

            auto g_x_0_x_0_xyz_yzzzzz = cbuffer.data(fi_geom_1010_off + 138 * ccomps * dcomps);

            auto g_x_0_x_0_xyz_zzzzzz = cbuffer.data(fi_geom_1010_off + 139 * ccomps * dcomps);

            #pragma omp simd aligned(g_x_0_x_0_xyz_xxxxxx, g_x_0_x_0_xyz_xxxxxy, g_x_0_x_0_xyz_xxxxxz, g_x_0_x_0_xyz_xxxxyy, g_x_0_x_0_xyz_xxxxyz, g_x_0_x_0_xyz_xxxxzz, g_x_0_x_0_xyz_xxxyyy, g_x_0_x_0_xyz_xxxyyz, g_x_0_x_0_xyz_xxxyzz, g_x_0_x_0_xyz_xxxzzz, g_x_0_x_0_xyz_xxyyyy, g_x_0_x_0_xyz_xxyyyz, g_x_0_x_0_xyz_xxyyzz, g_x_0_x_0_xyz_xxyzzz, g_x_0_x_0_xyz_xxzzzz, g_x_0_x_0_xyz_xyyyyy, g_x_0_x_0_xyz_xyyyyz, g_x_0_x_0_xyz_xyyyzz, g_x_0_x_0_xyz_xyyzzz, g_x_0_x_0_xyz_xyzzzz, g_x_0_x_0_xyz_xzzzzz, g_x_0_x_0_xyz_yyyyyy, g_x_0_x_0_xyz_yyyyyz, g_x_0_x_0_xyz_yyyyzz, g_x_0_x_0_xyz_yyyzzz, g_x_0_x_0_xyz_yyzzzz, g_x_0_x_0_xyz_yzzzzz, g_x_0_x_0_xyz_zzzzzz, g_x_0_x_0_xz_xxxxxx, g_x_0_x_0_xz_xxxxxxy, g_x_0_x_0_xz_xxxxxy, g_x_0_x_0_xz_xxxxxyy, g_x_0_x_0_xz_xxxxxyz, g_x_0_x_0_xz_xxxxxz, g_x_0_x_0_xz_xxxxyy, g_x_0_x_0_xz_xxxxyyy, g_x_0_x_0_xz_xxxxyyz, g_x_0_x_0_xz_xxxxyz, g_x_0_x_0_xz_xxxxyzz, g_x_0_x_0_xz_xxxxzz, g_x_0_x_0_xz_xxxyyy, g_x_0_x_0_xz_xxxyyyy, g_x_0_x_0_xz_xxxyyyz, g_x_0_x_0_xz_xxxyyz, g_x_0_x_0_xz_xxxyyzz, g_x_0_x_0_xz_xxxyzz, g_x_0_x_0_xz_xxxyzzz, g_x_0_x_0_xz_xxxzzz, g_x_0_x_0_xz_xxyyyy, g_x_0_x_0_xz_xxyyyyy, g_x_0_x_0_xz_xxyyyyz, g_x_0_x_0_xz_xxyyyz, g_x_0_x_0_xz_xxyyyzz, g_x_0_x_0_xz_xxyyzz, g_x_0_x_0_xz_xxyyzzz, g_x_0_x_0_xz_xxyzzz, g_x_0_x_0_xz_xxyzzzz, g_x_0_x_0_xz_xxzzzz, g_x_0_x_0_xz_xyyyyy, g_x_0_x_0_xz_xyyyyyy, g_x_0_x_0_xz_xyyyyyz, g_x_0_x_0_xz_xyyyyz, g_x_0_x_0_xz_xyyyyzz, g_x_0_x_0_xz_xyyyzz, g_x_0_x_0_xz_xyyyzzz, g_x_0_x_0_xz_xyyzzz, g_x_0_x_0_xz_xyyzzzz, g_x_0_x_0_xz_xyzzzz, g_x_0_x_0_xz_xyzzzzz, g_x_0_x_0_xz_xzzzzz, g_x_0_x_0_xz_yyyyyy, g_x_0_x_0_xz_yyyyyyy, g_x_0_x_0_xz_yyyyyyz, g_x_0_x_0_xz_yyyyyz, g_x_0_x_0_xz_yyyyyzz, g_x_0_x_0_xz_yyyyzz, g_x_0_x_0_xz_yyyyzzz, g_x_0_x_0_xz_yyyzzz, g_x_0_x_0_xz_yyyzzzz, g_x_0_x_0_xz_yyzzzz, g_x_0_x_0_xz_yyzzzzz, g_x_0_x_0_xz_yzzzzz, g_x_0_x_0_xz_yzzzzzz, g_x_0_x_0_xz_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_x_0_x_0_xyz_xxxxxx[k] = -g_x_0_x_0_xz_xxxxxx[k] * ab_y + g_x_0_x_0_xz_xxxxxxy[k];

                g_x_0_x_0_xyz_xxxxxy[k] = -g_x_0_x_0_xz_xxxxxy[k] * ab_y + g_x_0_x_0_xz_xxxxxyy[k];

                g_x_0_x_0_xyz_xxxxxz[k] = -g_x_0_x_0_xz_xxxxxz[k] * ab_y + g_x_0_x_0_xz_xxxxxyz[k];

                g_x_0_x_0_xyz_xxxxyy[k] = -g_x_0_x_0_xz_xxxxyy[k] * ab_y + g_x_0_x_0_xz_xxxxyyy[k];

                g_x_0_x_0_xyz_xxxxyz[k] = -g_x_0_x_0_xz_xxxxyz[k] * ab_y + g_x_0_x_0_xz_xxxxyyz[k];

                g_x_0_x_0_xyz_xxxxzz[k] = -g_x_0_x_0_xz_xxxxzz[k] * ab_y + g_x_0_x_0_xz_xxxxyzz[k];

                g_x_0_x_0_xyz_xxxyyy[k] = -g_x_0_x_0_xz_xxxyyy[k] * ab_y + g_x_0_x_0_xz_xxxyyyy[k];

                g_x_0_x_0_xyz_xxxyyz[k] = -g_x_0_x_0_xz_xxxyyz[k] * ab_y + g_x_0_x_0_xz_xxxyyyz[k];

                g_x_0_x_0_xyz_xxxyzz[k] = -g_x_0_x_0_xz_xxxyzz[k] * ab_y + g_x_0_x_0_xz_xxxyyzz[k];

                g_x_0_x_0_xyz_xxxzzz[k] = -g_x_0_x_0_xz_xxxzzz[k] * ab_y + g_x_0_x_0_xz_xxxyzzz[k];

                g_x_0_x_0_xyz_xxyyyy[k] = -g_x_0_x_0_xz_xxyyyy[k] * ab_y + g_x_0_x_0_xz_xxyyyyy[k];

                g_x_0_x_0_xyz_xxyyyz[k] = -g_x_0_x_0_xz_xxyyyz[k] * ab_y + g_x_0_x_0_xz_xxyyyyz[k];

                g_x_0_x_0_xyz_xxyyzz[k] = -g_x_0_x_0_xz_xxyyzz[k] * ab_y + g_x_0_x_0_xz_xxyyyzz[k];

                g_x_0_x_0_xyz_xxyzzz[k] = -g_x_0_x_0_xz_xxyzzz[k] * ab_y + g_x_0_x_0_xz_xxyyzzz[k];

                g_x_0_x_0_xyz_xxzzzz[k] = -g_x_0_x_0_xz_xxzzzz[k] * ab_y + g_x_0_x_0_xz_xxyzzzz[k];

                g_x_0_x_0_xyz_xyyyyy[k] = -g_x_0_x_0_xz_xyyyyy[k] * ab_y + g_x_0_x_0_xz_xyyyyyy[k];

                g_x_0_x_0_xyz_xyyyyz[k] = -g_x_0_x_0_xz_xyyyyz[k] * ab_y + g_x_0_x_0_xz_xyyyyyz[k];

                g_x_0_x_0_xyz_xyyyzz[k] = -g_x_0_x_0_xz_xyyyzz[k] * ab_y + g_x_0_x_0_xz_xyyyyzz[k];

                g_x_0_x_0_xyz_xyyzzz[k] = -g_x_0_x_0_xz_xyyzzz[k] * ab_y + g_x_0_x_0_xz_xyyyzzz[k];

                g_x_0_x_0_xyz_xyzzzz[k] = -g_x_0_x_0_xz_xyzzzz[k] * ab_y + g_x_0_x_0_xz_xyyzzzz[k];

                g_x_0_x_0_xyz_xzzzzz[k] = -g_x_0_x_0_xz_xzzzzz[k] * ab_y + g_x_0_x_0_xz_xyzzzzz[k];

                g_x_0_x_0_xyz_yyyyyy[k] = -g_x_0_x_0_xz_yyyyyy[k] * ab_y + g_x_0_x_0_xz_yyyyyyy[k];

                g_x_0_x_0_xyz_yyyyyz[k] = -g_x_0_x_0_xz_yyyyyz[k] * ab_y + g_x_0_x_0_xz_yyyyyyz[k];

                g_x_0_x_0_xyz_yyyyzz[k] = -g_x_0_x_0_xz_yyyyzz[k] * ab_y + g_x_0_x_0_xz_yyyyyzz[k];

                g_x_0_x_0_xyz_yyyzzz[k] = -g_x_0_x_0_xz_yyyzzz[k] * ab_y + g_x_0_x_0_xz_yyyyzzz[k];

                g_x_0_x_0_xyz_yyzzzz[k] = -g_x_0_x_0_xz_yyzzzz[k] * ab_y + g_x_0_x_0_xz_yyyzzzz[k];

                g_x_0_x_0_xyz_yzzzzz[k] = -g_x_0_x_0_xz_yzzzzz[k] * ab_y + g_x_0_x_0_xz_yyzzzzz[k];

                g_x_0_x_0_xyz_zzzzzz[k] = -g_x_0_x_0_xz_zzzzzz[k] * ab_y + g_x_0_x_0_xz_yzzzzzz[k];
            }

            /// Set up 140-168 components of targeted buffer : cbuffer.data(

            auto g_x_0_x_0_xzz_xxxxxx = cbuffer.data(fi_geom_1010_off + 140 * ccomps * dcomps);

            auto g_x_0_x_0_xzz_xxxxxy = cbuffer.data(fi_geom_1010_off + 141 * ccomps * dcomps);

            auto g_x_0_x_0_xzz_xxxxxz = cbuffer.data(fi_geom_1010_off + 142 * ccomps * dcomps);

            auto g_x_0_x_0_xzz_xxxxyy = cbuffer.data(fi_geom_1010_off + 143 * ccomps * dcomps);

            auto g_x_0_x_0_xzz_xxxxyz = cbuffer.data(fi_geom_1010_off + 144 * ccomps * dcomps);

            auto g_x_0_x_0_xzz_xxxxzz = cbuffer.data(fi_geom_1010_off + 145 * ccomps * dcomps);

            auto g_x_0_x_0_xzz_xxxyyy = cbuffer.data(fi_geom_1010_off + 146 * ccomps * dcomps);

            auto g_x_0_x_0_xzz_xxxyyz = cbuffer.data(fi_geom_1010_off + 147 * ccomps * dcomps);

            auto g_x_0_x_0_xzz_xxxyzz = cbuffer.data(fi_geom_1010_off + 148 * ccomps * dcomps);

            auto g_x_0_x_0_xzz_xxxzzz = cbuffer.data(fi_geom_1010_off + 149 * ccomps * dcomps);

            auto g_x_0_x_0_xzz_xxyyyy = cbuffer.data(fi_geom_1010_off + 150 * ccomps * dcomps);

            auto g_x_0_x_0_xzz_xxyyyz = cbuffer.data(fi_geom_1010_off + 151 * ccomps * dcomps);

            auto g_x_0_x_0_xzz_xxyyzz = cbuffer.data(fi_geom_1010_off + 152 * ccomps * dcomps);

            auto g_x_0_x_0_xzz_xxyzzz = cbuffer.data(fi_geom_1010_off + 153 * ccomps * dcomps);

            auto g_x_0_x_0_xzz_xxzzzz = cbuffer.data(fi_geom_1010_off + 154 * ccomps * dcomps);

            auto g_x_0_x_0_xzz_xyyyyy = cbuffer.data(fi_geom_1010_off + 155 * ccomps * dcomps);

            auto g_x_0_x_0_xzz_xyyyyz = cbuffer.data(fi_geom_1010_off + 156 * ccomps * dcomps);

            auto g_x_0_x_0_xzz_xyyyzz = cbuffer.data(fi_geom_1010_off + 157 * ccomps * dcomps);

            auto g_x_0_x_0_xzz_xyyzzz = cbuffer.data(fi_geom_1010_off + 158 * ccomps * dcomps);

            auto g_x_0_x_0_xzz_xyzzzz = cbuffer.data(fi_geom_1010_off + 159 * ccomps * dcomps);

            auto g_x_0_x_0_xzz_xzzzzz = cbuffer.data(fi_geom_1010_off + 160 * ccomps * dcomps);

            auto g_x_0_x_0_xzz_yyyyyy = cbuffer.data(fi_geom_1010_off + 161 * ccomps * dcomps);

            auto g_x_0_x_0_xzz_yyyyyz = cbuffer.data(fi_geom_1010_off + 162 * ccomps * dcomps);

            auto g_x_0_x_0_xzz_yyyyzz = cbuffer.data(fi_geom_1010_off + 163 * ccomps * dcomps);

            auto g_x_0_x_0_xzz_yyyzzz = cbuffer.data(fi_geom_1010_off + 164 * ccomps * dcomps);

            auto g_x_0_x_0_xzz_yyzzzz = cbuffer.data(fi_geom_1010_off + 165 * ccomps * dcomps);

            auto g_x_0_x_0_xzz_yzzzzz = cbuffer.data(fi_geom_1010_off + 166 * ccomps * dcomps);

            auto g_x_0_x_0_xzz_zzzzzz = cbuffer.data(fi_geom_1010_off + 167 * ccomps * dcomps);

            #pragma omp simd aligned(g_x_0_x_0_xz_xxxxxx, g_x_0_x_0_xz_xxxxxxz, g_x_0_x_0_xz_xxxxxy, g_x_0_x_0_xz_xxxxxyz, g_x_0_x_0_xz_xxxxxz, g_x_0_x_0_xz_xxxxxzz, g_x_0_x_0_xz_xxxxyy, g_x_0_x_0_xz_xxxxyyz, g_x_0_x_0_xz_xxxxyz, g_x_0_x_0_xz_xxxxyzz, g_x_0_x_0_xz_xxxxzz, g_x_0_x_0_xz_xxxxzzz, g_x_0_x_0_xz_xxxyyy, g_x_0_x_0_xz_xxxyyyz, g_x_0_x_0_xz_xxxyyz, g_x_0_x_0_xz_xxxyyzz, g_x_0_x_0_xz_xxxyzz, g_x_0_x_0_xz_xxxyzzz, g_x_0_x_0_xz_xxxzzz, g_x_0_x_0_xz_xxxzzzz, g_x_0_x_0_xz_xxyyyy, g_x_0_x_0_xz_xxyyyyz, g_x_0_x_0_xz_xxyyyz, g_x_0_x_0_xz_xxyyyzz, g_x_0_x_0_xz_xxyyzz, g_x_0_x_0_xz_xxyyzzz, g_x_0_x_0_xz_xxyzzz, g_x_0_x_0_xz_xxyzzzz, g_x_0_x_0_xz_xxzzzz, g_x_0_x_0_xz_xxzzzzz, g_x_0_x_0_xz_xyyyyy, g_x_0_x_0_xz_xyyyyyz, g_x_0_x_0_xz_xyyyyz, g_x_0_x_0_xz_xyyyyzz, g_x_0_x_0_xz_xyyyzz, g_x_0_x_0_xz_xyyyzzz, g_x_0_x_0_xz_xyyzzz, g_x_0_x_0_xz_xyyzzzz, g_x_0_x_0_xz_xyzzzz, g_x_0_x_0_xz_xyzzzzz, g_x_0_x_0_xz_xzzzzz, g_x_0_x_0_xz_xzzzzzz, g_x_0_x_0_xz_yyyyyy, g_x_0_x_0_xz_yyyyyyz, g_x_0_x_0_xz_yyyyyz, g_x_0_x_0_xz_yyyyyzz, g_x_0_x_0_xz_yyyyzz, g_x_0_x_0_xz_yyyyzzz, g_x_0_x_0_xz_yyyzzz, g_x_0_x_0_xz_yyyzzzz, g_x_0_x_0_xz_yyzzzz, g_x_0_x_0_xz_yyzzzzz, g_x_0_x_0_xz_yzzzzz, g_x_0_x_0_xz_yzzzzzz, g_x_0_x_0_xz_zzzzzz, g_x_0_x_0_xz_zzzzzzz, g_x_0_x_0_xzz_xxxxxx, g_x_0_x_0_xzz_xxxxxy, g_x_0_x_0_xzz_xxxxxz, g_x_0_x_0_xzz_xxxxyy, g_x_0_x_0_xzz_xxxxyz, g_x_0_x_0_xzz_xxxxzz, g_x_0_x_0_xzz_xxxyyy, g_x_0_x_0_xzz_xxxyyz, g_x_0_x_0_xzz_xxxyzz, g_x_0_x_0_xzz_xxxzzz, g_x_0_x_0_xzz_xxyyyy, g_x_0_x_0_xzz_xxyyyz, g_x_0_x_0_xzz_xxyyzz, g_x_0_x_0_xzz_xxyzzz, g_x_0_x_0_xzz_xxzzzz, g_x_0_x_0_xzz_xyyyyy, g_x_0_x_0_xzz_xyyyyz, g_x_0_x_0_xzz_xyyyzz, g_x_0_x_0_xzz_xyyzzz, g_x_0_x_0_xzz_xyzzzz, g_x_0_x_0_xzz_xzzzzz, g_x_0_x_0_xzz_yyyyyy, g_x_0_x_0_xzz_yyyyyz, g_x_0_x_0_xzz_yyyyzz, g_x_0_x_0_xzz_yyyzzz, g_x_0_x_0_xzz_yyzzzz, g_x_0_x_0_xzz_yzzzzz, g_x_0_x_0_xzz_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_x_0_x_0_xzz_xxxxxx[k] = -g_x_0_x_0_xz_xxxxxx[k] * ab_z + g_x_0_x_0_xz_xxxxxxz[k];

                g_x_0_x_0_xzz_xxxxxy[k] = -g_x_0_x_0_xz_xxxxxy[k] * ab_z + g_x_0_x_0_xz_xxxxxyz[k];

                g_x_0_x_0_xzz_xxxxxz[k] = -g_x_0_x_0_xz_xxxxxz[k] * ab_z + g_x_0_x_0_xz_xxxxxzz[k];

                g_x_0_x_0_xzz_xxxxyy[k] = -g_x_0_x_0_xz_xxxxyy[k] * ab_z + g_x_0_x_0_xz_xxxxyyz[k];

                g_x_0_x_0_xzz_xxxxyz[k] = -g_x_0_x_0_xz_xxxxyz[k] * ab_z + g_x_0_x_0_xz_xxxxyzz[k];

                g_x_0_x_0_xzz_xxxxzz[k] = -g_x_0_x_0_xz_xxxxzz[k] * ab_z + g_x_0_x_0_xz_xxxxzzz[k];

                g_x_0_x_0_xzz_xxxyyy[k] = -g_x_0_x_0_xz_xxxyyy[k] * ab_z + g_x_0_x_0_xz_xxxyyyz[k];

                g_x_0_x_0_xzz_xxxyyz[k] = -g_x_0_x_0_xz_xxxyyz[k] * ab_z + g_x_0_x_0_xz_xxxyyzz[k];

                g_x_0_x_0_xzz_xxxyzz[k] = -g_x_0_x_0_xz_xxxyzz[k] * ab_z + g_x_0_x_0_xz_xxxyzzz[k];

                g_x_0_x_0_xzz_xxxzzz[k] = -g_x_0_x_0_xz_xxxzzz[k] * ab_z + g_x_0_x_0_xz_xxxzzzz[k];

                g_x_0_x_0_xzz_xxyyyy[k] = -g_x_0_x_0_xz_xxyyyy[k] * ab_z + g_x_0_x_0_xz_xxyyyyz[k];

                g_x_0_x_0_xzz_xxyyyz[k] = -g_x_0_x_0_xz_xxyyyz[k] * ab_z + g_x_0_x_0_xz_xxyyyzz[k];

                g_x_0_x_0_xzz_xxyyzz[k] = -g_x_0_x_0_xz_xxyyzz[k] * ab_z + g_x_0_x_0_xz_xxyyzzz[k];

                g_x_0_x_0_xzz_xxyzzz[k] = -g_x_0_x_0_xz_xxyzzz[k] * ab_z + g_x_0_x_0_xz_xxyzzzz[k];

                g_x_0_x_0_xzz_xxzzzz[k] = -g_x_0_x_0_xz_xxzzzz[k] * ab_z + g_x_0_x_0_xz_xxzzzzz[k];

                g_x_0_x_0_xzz_xyyyyy[k] = -g_x_0_x_0_xz_xyyyyy[k] * ab_z + g_x_0_x_0_xz_xyyyyyz[k];

                g_x_0_x_0_xzz_xyyyyz[k] = -g_x_0_x_0_xz_xyyyyz[k] * ab_z + g_x_0_x_0_xz_xyyyyzz[k];

                g_x_0_x_0_xzz_xyyyzz[k] = -g_x_0_x_0_xz_xyyyzz[k] * ab_z + g_x_0_x_0_xz_xyyyzzz[k];

                g_x_0_x_0_xzz_xyyzzz[k] = -g_x_0_x_0_xz_xyyzzz[k] * ab_z + g_x_0_x_0_xz_xyyzzzz[k];

                g_x_0_x_0_xzz_xyzzzz[k] = -g_x_0_x_0_xz_xyzzzz[k] * ab_z + g_x_0_x_0_xz_xyzzzzz[k];

                g_x_0_x_0_xzz_xzzzzz[k] = -g_x_0_x_0_xz_xzzzzz[k] * ab_z + g_x_0_x_0_xz_xzzzzzz[k];

                g_x_0_x_0_xzz_yyyyyy[k] = -g_x_0_x_0_xz_yyyyyy[k] * ab_z + g_x_0_x_0_xz_yyyyyyz[k];

                g_x_0_x_0_xzz_yyyyyz[k] = -g_x_0_x_0_xz_yyyyyz[k] * ab_z + g_x_0_x_0_xz_yyyyyzz[k];

                g_x_0_x_0_xzz_yyyyzz[k] = -g_x_0_x_0_xz_yyyyzz[k] * ab_z + g_x_0_x_0_xz_yyyyzzz[k];

                g_x_0_x_0_xzz_yyyzzz[k] = -g_x_0_x_0_xz_yyyzzz[k] * ab_z + g_x_0_x_0_xz_yyyzzzz[k];

                g_x_0_x_0_xzz_yyzzzz[k] = -g_x_0_x_0_xz_yyzzzz[k] * ab_z + g_x_0_x_0_xz_yyzzzzz[k];

                g_x_0_x_0_xzz_yzzzzz[k] = -g_x_0_x_0_xz_yzzzzz[k] * ab_z + g_x_0_x_0_xz_yzzzzzz[k];

                g_x_0_x_0_xzz_zzzzzz[k] = -g_x_0_x_0_xz_zzzzzz[k] * ab_z + g_x_0_x_0_xz_zzzzzzz[k];
            }

            /// Set up 168-196 components of targeted buffer : cbuffer.data(

            auto g_x_0_x_0_yyy_xxxxxx = cbuffer.data(fi_geom_1010_off + 168 * ccomps * dcomps);

            auto g_x_0_x_0_yyy_xxxxxy = cbuffer.data(fi_geom_1010_off + 169 * ccomps * dcomps);

            auto g_x_0_x_0_yyy_xxxxxz = cbuffer.data(fi_geom_1010_off + 170 * ccomps * dcomps);

            auto g_x_0_x_0_yyy_xxxxyy = cbuffer.data(fi_geom_1010_off + 171 * ccomps * dcomps);

            auto g_x_0_x_0_yyy_xxxxyz = cbuffer.data(fi_geom_1010_off + 172 * ccomps * dcomps);

            auto g_x_0_x_0_yyy_xxxxzz = cbuffer.data(fi_geom_1010_off + 173 * ccomps * dcomps);

            auto g_x_0_x_0_yyy_xxxyyy = cbuffer.data(fi_geom_1010_off + 174 * ccomps * dcomps);

            auto g_x_0_x_0_yyy_xxxyyz = cbuffer.data(fi_geom_1010_off + 175 * ccomps * dcomps);

            auto g_x_0_x_0_yyy_xxxyzz = cbuffer.data(fi_geom_1010_off + 176 * ccomps * dcomps);

            auto g_x_0_x_0_yyy_xxxzzz = cbuffer.data(fi_geom_1010_off + 177 * ccomps * dcomps);

            auto g_x_0_x_0_yyy_xxyyyy = cbuffer.data(fi_geom_1010_off + 178 * ccomps * dcomps);

            auto g_x_0_x_0_yyy_xxyyyz = cbuffer.data(fi_geom_1010_off + 179 * ccomps * dcomps);

            auto g_x_0_x_0_yyy_xxyyzz = cbuffer.data(fi_geom_1010_off + 180 * ccomps * dcomps);

            auto g_x_0_x_0_yyy_xxyzzz = cbuffer.data(fi_geom_1010_off + 181 * ccomps * dcomps);

            auto g_x_0_x_0_yyy_xxzzzz = cbuffer.data(fi_geom_1010_off + 182 * ccomps * dcomps);

            auto g_x_0_x_0_yyy_xyyyyy = cbuffer.data(fi_geom_1010_off + 183 * ccomps * dcomps);

            auto g_x_0_x_0_yyy_xyyyyz = cbuffer.data(fi_geom_1010_off + 184 * ccomps * dcomps);

            auto g_x_0_x_0_yyy_xyyyzz = cbuffer.data(fi_geom_1010_off + 185 * ccomps * dcomps);

            auto g_x_0_x_0_yyy_xyyzzz = cbuffer.data(fi_geom_1010_off + 186 * ccomps * dcomps);

            auto g_x_0_x_0_yyy_xyzzzz = cbuffer.data(fi_geom_1010_off + 187 * ccomps * dcomps);

            auto g_x_0_x_0_yyy_xzzzzz = cbuffer.data(fi_geom_1010_off + 188 * ccomps * dcomps);

            auto g_x_0_x_0_yyy_yyyyyy = cbuffer.data(fi_geom_1010_off + 189 * ccomps * dcomps);

            auto g_x_0_x_0_yyy_yyyyyz = cbuffer.data(fi_geom_1010_off + 190 * ccomps * dcomps);

            auto g_x_0_x_0_yyy_yyyyzz = cbuffer.data(fi_geom_1010_off + 191 * ccomps * dcomps);

            auto g_x_0_x_0_yyy_yyyzzz = cbuffer.data(fi_geom_1010_off + 192 * ccomps * dcomps);

            auto g_x_0_x_0_yyy_yyzzzz = cbuffer.data(fi_geom_1010_off + 193 * ccomps * dcomps);

            auto g_x_0_x_0_yyy_yzzzzz = cbuffer.data(fi_geom_1010_off + 194 * ccomps * dcomps);

            auto g_x_0_x_0_yyy_zzzzzz = cbuffer.data(fi_geom_1010_off + 195 * ccomps * dcomps);

            #pragma omp simd aligned(g_x_0_x_0_yy_xxxxxx, g_x_0_x_0_yy_xxxxxxy, g_x_0_x_0_yy_xxxxxy, g_x_0_x_0_yy_xxxxxyy, g_x_0_x_0_yy_xxxxxyz, g_x_0_x_0_yy_xxxxxz, g_x_0_x_0_yy_xxxxyy, g_x_0_x_0_yy_xxxxyyy, g_x_0_x_0_yy_xxxxyyz, g_x_0_x_0_yy_xxxxyz, g_x_0_x_0_yy_xxxxyzz, g_x_0_x_0_yy_xxxxzz, g_x_0_x_0_yy_xxxyyy, g_x_0_x_0_yy_xxxyyyy, g_x_0_x_0_yy_xxxyyyz, g_x_0_x_0_yy_xxxyyz, g_x_0_x_0_yy_xxxyyzz, g_x_0_x_0_yy_xxxyzz, g_x_0_x_0_yy_xxxyzzz, g_x_0_x_0_yy_xxxzzz, g_x_0_x_0_yy_xxyyyy, g_x_0_x_0_yy_xxyyyyy, g_x_0_x_0_yy_xxyyyyz, g_x_0_x_0_yy_xxyyyz, g_x_0_x_0_yy_xxyyyzz, g_x_0_x_0_yy_xxyyzz, g_x_0_x_0_yy_xxyyzzz, g_x_0_x_0_yy_xxyzzz, g_x_0_x_0_yy_xxyzzzz, g_x_0_x_0_yy_xxzzzz, g_x_0_x_0_yy_xyyyyy, g_x_0_x_0_yy_xyyyyyy, g_x_0_x_0_yy_xyyyyyz, g_x_0_x_0_yy_xyyyyz, g_x_0_x_0_yy_xyyyyzz, g_x_0_x_0_yy_xyyyzz, g_x_0_x_0_yy_xyyyzzz, g_x_0_x_0_yy_xyyzzz, g_x_0_x_0_yy_xyyzzzz, g_x_0_x_0_yy_xyzzzz, g_x_0_x_0_yy_xyzzzzz, g_x_0_x_0_yy_xzzzzz, g_x_0_x_0_yy_yyyyyy, g_x_0_x_0_yy_yyyyyyy, g_x_0_x_0_yy_yyyyyyz, g_x_0_x_0_yy_yyyyyz, g_x_0_x_0_yy_yyyyyzz, g_x_0_x_0_yy_yyyyzz, g_x_0_x_0_yy_yyyyzzz, g_x_0_x_0_yy_yyyzzz, g_x_0_x_0_yy_yyyzzzz, g_x_0_x_0_yy_yyzzzz, g_x_0_x_0_yy_yyzzzzz, g_x_0_x_0_yy_yzzzzz, g_x_0_x_0_yy_yzzzzzz, g_x_0_x_0_yy_zzzzzz, g_x_0_x_0_yyy_xxxxxx, g_x_0_x_0_yyy_xxxxxy, g_x_0_x_0_yyy_xxxxxz, g_x_0_x_0_yyy_xxxxyy, g_x_0_x_0_yyy_xxxxyz, g_x_0_x_0_yyy_xxxxzz, g_x_0_x_0_yyy_xxxyyy, g_x_0_x_0_yyy_xxxyyz, g_x_0_x_0_yyy_xxxyzz, g_x_0_x_0_yyy_xxxzzz, g_x_0_x_0_yyy_xxyyyy, g_x_0_x_0_yyy_xxyyyz, g_x_0_x_0_yyy_xxyyzz, g_x_0_x_0_yyy_xxyzzz, g_x_0_x_0_yyy_xxzzzz, g_x_0_x_0_yyy_xyyyyy, g_x_0_x_0_yyy_xyyyyz, g_x_0_x_0_yyy_xyyyzz, g_x_0_x_0_yyy_xyyzzz, g_x_0_x_0_yyy_xyzzzz, g_x_0_x_0_yyy_xzzzzz, g_x_0_x_0_yyy_yyyyyy, g_x_0_x_0_yyy_yyyyyz, g_x_0_x_0_yyy_yyyyzz, g_x_0_x_0_yyy_yyyzzz, g_x_0_x_0_yyy_yyzzzz, g_x_0_x_0_yyy_yzzzzz, g_x_0_x_0_yyy_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_x_0_x_0_yyy_xxxxxx[k] = -g_x_0_x_0_yy_xxxxxx[k] * ab_y + g_x_0_x_0_yy_xxxxxxy[k];

                g_x_0_x_0_yyy_xxxxxy[k] = -g_x_0_x_0_yy_xxxxxy[k] * ab_y + g_x_0_x_0_yy_xxxxxyy[k];

                g_x_0_x_0_yyy_xxxxxz[k] = -g_x_0_x_0_yy_xxxxxz[k] * ab_y + g_x_0_x_0_yy_xxxxxyz[k];

                g_x_0_x_0_yyy_xxxxyy[k] = -g_x_0_x_0_yy_xxxxyy[k] * ab_y + g_x_0_x_0_yy_xxxxyyy[k];

                g_x_0_x_0_yyy_xxxxyz[k] = -g_x_0_x_0_yy_xxxxyz[k] * ab_y + g_x_0_x_0_yy_xxxxyyz[k];

                g_x_0_x_0_yyy_xxxxzz[k] = -g_x_0_x_0_yy_xxxxzz[k] * ab_y + g_x_0_x_0_yy_xxxxyzz[k];

                g_x_0_x_0_yyy_xxxyyy[k] = -g_x_0_x_0_yy_xxxyyy[k] * ab_y + g_x_0_x_0_yy_xxxyyyy[k];

                g_x_0_x_0_yyy_xxxyyz[k] = -g_x_0_x_0_yy_xxxyyz[k] * ab_y + g_x_0_x_0_yy_xxxyyyz[k];

                g_x_0_x_0_yyy_xxxyzz[k] = -g_x_0_x_0_yy_xxxyzz[k] * ab_y + g_x_0_x_0_yy_xxxyyzz[k];

                g_x_0_x_0_yyy_xxxzzz[k] = -g_x_0_x_0_yy_xxxzzz[k] * ab_y + g_x_0_x_0_yy_xxxyzzz[k];

                g_x_0_x_0_yyy_xxyyyy[k] = -g_x_0_x_0_yy_xxyyyy[k] * ab_y + g_x_0_x_0_yy_xxyyyyy[k];

                g_x_0_x_0_yyy_xxyyyz[k] = -g_x_0_x_0_yy_xxyyyz[k] * ab_y + g_x_0_x_0_yy_xxyyyyz[k];

                g_x_0_x_0_yyy_xxyyzz[k] = -g_x_0_x_0_yy_xxyyzz[k] * ab_y + g_x_0_x_0_yy_xxyyyzz[k];

                g_x_0_x_0_yyy_xxyzzz[k] = -g_x_0_x_0_yy_xxyzzz[k] * ab_y + g_x_0_x_0_yy_xxyyzzz[k];

                g_x_0_x_0_yyy_xxzzzz[k] = -g_x_0_x_0_yy_xxzzzz[k] * ab_y + g_x_0_x_0_yy_xxyzzzz[k];

                g_x_0_x_0_yyy_xyyyyy[k] = -g_x_0_x_0_yy_xyyyyy[k] * ab_y + g_x_0_x_0_yy_xyyyyyy[k];

                g_x_0_x_0_yyy_xyyyyz[k] = -g_x_0_x_0_yy_xyyyyz[k] * ab_y + g_x_0_x_0_yy_xyyyyyz[k];

                g_x_0_x_0_yyy_xyyyzz[k] = -g_x_0_x_0_yy_xyyyzz[k] * ab_y + g_x_0_x_0_yy_xyyyyzz[k];

                g_x_0_x_0_yyy_xyyzzz[k] = -g_x_0_x_0_yy_xyyzzz[k] * ab_y + g_x_0_x_0_yy_xyyyzzz[k];

                g_x_0_x_0_yyy_xyzzzz[k] = -g_x_0_x_0_yy_xyzzzz[k] * ab_y + g_x_0_x_0_yy_xyyzzzz[k];

                g_x_0_x_0_yyy_xzzzzz[k] = -g_x_0_x_0_yy_xzzzzz[k] * ab_y + g_x_0_x_0_yy_xyzzzzz[k];

                g_x_0_x_0_yyy_yyyyyy[k] = -g_x_0_x_0_yy_yyyyyy[k] * ab_y + g_x_0_x_0_yy_yyyyyyy[k];

                g_x_0_x_0_yyy_yyyyyz[k] = -g_x_0_x_0_yy_yyyyyz[k] * ab_y + g_x_0_x_0_yy_yyyyyyz[k];

                g_x_0_x_0_yyy_yyyyzz[k] = -g_x_0_x_0_yy_yyyyzz[k] * ab_y + g_x_0_x_0_yy_yyyyyzz[k];

                g_x_0_x_0_yyy_yyyzzz[k] = -g_x_0_x_0_yy_yyyzzz[k] * ab_y + g_x_0_x_0_yy_yyyyzzz[k];

                g_x_0_x_0_yyy_yyzzzz[k] = -g_x_0_x_0_yy_yyzzzz[k] * ab_y + g_x_0_x_0_yy_yyyzzzz[k];

                g_x_0_x_0_yyy_yzzzzz[k] = -g_x_0_x_0_yy_yzzzzz[k] * ab_y + g_x_0_x_0_yy_yyzzzzz[k];

                g_x_0_x_0_yyy_zzzzzz[k] = -g_x_0_x_0_yy_zzzzzz[k] * ab_y + g_x_0_x_0_yy_yzzzzzz[k];
            }

            /// Set up 196-224 components of targeted buffer : cbuffer.data(

            auto g_x_0_x_0_yyz_xxxxxx = cbuffer.data(fi_geom_1010_off + 196 * ccomps * dcomps);

            auto g_x_0_x_0_yyz_xxxxxy = cbuffer.data(fi_geom_1010_off + 197 * ccomps * dcomps);

            auto g_x_0_x_0_yyz_xxxxxz = cbuffer.data(fi_geom_1010_off + 198 * ccomps * dcomps);

            auto g_x_0_x_0_yyz_xxxxyy = cbuffer.data(fi_geom_1010_off + 199 * ccomps * dcomps);

            auto g_x_0_x_0_yyz_xxxxyz = cbuffer.data(fi_geom_1010_off + 200 * ccomps * dcomps);

            auto g_x_0_x_0_yyz_xxxxzz = cbuffer.data(fi_geom_1010_off + 201 * ccomps * dcomps);

            auto g_x_0_x_0_yyz_xxxyyy = cbuffer.data(fi_geom_1010_off + 202 * ccomps * dcomps);

            auto g_x_0_x_0_yyz_xxxyyz = cbuffer.data(fi_geom_1010_off + 203 * ccomps * dcomps);

            auto g_x_0_x_0_yyz_xxxyzz = cbuffer.data(fi_geom_1010_off + 204 * ccomps * dcomps);

            auto g_x_0_x_0_yyz_xxxzzz = cbuffer.data(fi_geom_1010_off + 205 * ccomps * dcomps);

            auto g_x_0_x_0_yyz_xxyyyy = cbuffer.data(fi_geom_1010_off + 206 * ccomps * dcomps);

            auto g_x_0_x_0_yyz_xxyyyz = cbuffer.data(fi_geom_1010_off + 207 * ccomps * dcomps);

            auto g_x_0_x_0_yyz_xxyyzz = cbuffer.data(fi_geom_1010_off + 208 * ccomps * dcomps);

            auto g_x_0_x_0_yyz_xxyzzz = cbuffer.data(fi_geom_1010_off + 209 * ccomps * dcomps);

            auto g_x_0_x_0_yyz_xxzzzz = cbuffer.data(fi_geom_1010_off + 210 * ccomps * dcomps);

            auto g_x_0_x_0_yyz_xyyyyy = cbuffer.data(fi_geom_1010_off + 211 * ccomps * dcomps);

            auto g_x_0_x_0_yyz_xyyyyz = cbuffer.data(fi_geom_1010_off + 212 * ccomps * dcomps);

            auto g_x_0_x_0_yyz_xyyyzz = cbuffer.data(fi_geom_1010_off + 213 * ccomps * dcomps);

            auto g_x_0_x_0_yyz_xyyzzz = cbuffer.data(fi_geom_1010_off + 214 * ccomps * dcomps);

            auto g_x_0_x_0_yyz_xyzzzz = cbuffer.data(fi_geom_1010_off + 215 * ccomps * dcomps);

            auto g_x_0_x_0_yyz_xzzzzz = cbuffer.data(fi_geom_1010_off + 216 * ccomps * dcomps);

            auto g_x_0_x_0_yyz_yyyyyy = cbuffer.data(fi_geom_1010_off + 217 * ccomps * dcomps);

            auto g_x_0_x_0_yyz_yyyyyz = cbuffer.data(fi_geom_1010_off + 218 * ccomps * dcomps);

            auto g_x_0_x_0_yyz_yyyyzz = cbuffer.data(fi_geom_1010_off + 219 * ccomps * dcomps);

            auto g_x_0_x_0_yyz_yyyzzz = cbuffer.data(fi_geom_1010_off + 220 * ccomps * dcomps);

            auto g_x_0_x_0_yyz_yyzzzz = cbuffer.data(fi_geom_1010_off + 221 * ccomps * dcomps);

            auto g_x_0_x_0_yyz_yzzzzz = cbuffer.data(fi_geom_1010_off + 222 * ccomps * dcomps);

            auto g_x_0_x_0_yyz_zzzzzz = cbuffer.data(fi_geom_1010_off + 223 * ccomps * dcomps);

            #pragma omp simd aligned(g_x_0_x_0_yyz_xxxxxx, g_x_0_x_0_yyz_xxxxxy, g_x_0_x_0_yyz_xxxxxz, g_x_0_x_0_yyz_xxxxyy, g_x_0_x_0_yyz_xxxxyz, g_x_0_x_0_yyz_xxxxzz, g_x_0_x_0_yyz_xxxyyy, g_x_0_x_0_yyz_xxxyyz, g_x_0_x_0_yyz_xxxyzz, g_x_0_x_0_yyz_xxxzzz, g_x_0_x_0_yyz_xxyyyy, g_x_0_x_0_yyz_xxyyyz, g_x_0_x_0_yyz_xxyyzz, g_x_0_x_0_yyz_xxyzzz, g_x_0_x_0_yyz_xxzzzz, g_x_0_x_0_yyz_xyyyyy, g_x_0_x_0_yyz_xyyyyz, g_x_0_x_0_yyz_xyyyzz, g_x_0_x_0_yyz_xyyzzz, g_x_0_x_0_yyz_xyzzzz, g_x_0_x_0_yyz_xzzzzz, g_x_0_x_0_yyz_yyyyyy, g_x_0_x_0_yyz_yyyyyz, g_x_0_x_0_yyz_yyyyzz, g_x_0_x_0_yyz_yyyzzz, g_x_0_x_0_yyz_yyzzzz, g_x_0_x_0_yyz_yzzzzz, g_x_0_x_0_yyz_zzzzzz, g_x_0_x_0_yz_xxxxxx, g_x_0_x_0_yz_xxxxxxy, g_x_0_x_0_yz_xxxxxy, g_x_0_x_0_yz_xxxxxyy, g_x_0_x_0_yz_xxxxxyz, g_x_0_x_0_yz_xxxxxz, g_x_0_x_0_yz_xxxxyy, g_x_0_x_0_yz_xxxxyyy, g_x_0_x_0_yz_xxxxyyz, g_x_0_x_0_yz_xxxxyz, g_x_0_x_0_yz_xxxxyzz, g_x_0_x_0_yz_xxxxzz, g_x_0_x_0_yz_xxxyyy, g_x_0_x_0_yz_xxxyyyy, g_x_0_x_0_yz_xxxyyyz, g_x_0_x_0_yz_xxxyyz, g_x_0_x_0_yz_xxxyyzz, g_x_0_x_0_yz_xxxyzz, g_x_0_x_0_yz_xxxyzzz, g_x_0_x_0_yz_xxxzzz, g_x_0_x_0_yz_xxyyyy, g_x_0_x_0_yz_xxyyyyy, g_x_0_x_0_yz_xxyyyyz, g_x_0_x_0_yz_xxyyyz, g_x_0_x_0_yz_xxyyyzz, g_x_0_x_0_yz_xxyyzz, g_x_0_x_0_yz_xxyyzzz, g_x_0_x_0_yz_xxyzzz, g_x_0_x_0_yz_xxyzzzz, g_x_0_x_0_yz_xxzzzz, g_x_0_x_0_yz_xyyyyy, g_x_0_x_0_yz_xyyyyyy, g_x_0_x_0_yz_xyyyyyz, g_x_0_x_0_yz_xyyyyz, g_x_0_x_0_yz_xyyyyzz, g_x_0_x_0_yz_xyyyzz, g_x_0_x_0_yz_xyyyzzz, g_x_0_x_0_yz_xyyzzz, g_x_0_x_0_yz_xyyzzzz, g_x_0_x_0_yz_xyzzzz, g_x_0_x_0_yz_xyzzzzz, g_x_0_x_0_yz_xzzzzz, g_x_0_x_0_yz_yyyyyy, g_x_0_x_0_yz_yyyyyyy, g_x_0_x_0_yz_yyyyyyz, g_x_0_x_0_yz_yyyyyz, g_x_0_x_0_yz_yyyyyzz, g_x_0_x_0_yz_yyyyzz, g_x_0_x_0_yz_yyyyzzz, g_x_0_x_0_yz_yyyzzz, g_x_0_x_0_yz_yyyzzzz, g_x_0_x_0_yz_yyzzzz, g_x_0_x_0_yz_yyzzzzz, g_x_0_x_0_yz_yzzzzz, g_x_0_x_0_yz_yzzzzzz, g_x_0_x_0_yz_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_x_0_x_0_yyz_xxxxxx[k] = -g_x_0_x_0_yz_xxxxxx[k] * ab_y + g_x_0_x_0_yz_xxxxxxy[k];

                g_x_0_x_0_yyz_xxxxxy[k] = -g_x_0_x_0_yz_xxxxxy[k] * ab_y + g_x_0_x_0_yz_xxxxxyy[k];

                g_x_0_x_0_yyz_xxxxxz[k] = -g_x_0_x_0_yz_xxxxxz[k] * ab_y + g_x_0_x_0_yz_xxxxxyz[k];

                g_x_0_x_0_yyz_xxxxyy[k] = -g_x_0_x_0_yz_xxxxyy[k] * ab_y + g_x_0_x_0_yz_xxxxyyy[k];

                g_x_0_x_0_yyz_xxxxyz[k] = -g_x_0_x_0_yz_xxxxyz[k] * ab_y + g_x_0_x_0_yz_xxxxyyz[k];

                g_x_0_x_0_yyz_xxxxzz[k] = -g_x_0_x_0_yz_xxxxzz[k] * ab_y + g_x_0_x_0_yz_xxxxyzz[k];

                g_x_0_x_0_yyz_xxxyyy[k] = -g_x_0_x_0_yz_xxxyyy[k] * ab_y + g_x_0_x_0_yz_xxxyyyy[k];

                g_x_0_x_0_yyz_xxxyyz[k] = -g_x_0_x_0_yz_xxxyyz[k] * ab_y + g_x_0_x_0_yz_xxxyyyz[k];

                g_x_0_x_0_yyz_xxxyzz[k] = -g_x_0_x_0_yz_xxxyzz[k] * ab_y + g_x_0_x_0_yz_xxxyyzz[k];

                g_x_0_x_0_yyz_xxxzzz[k] = -g_x_0_x_0_yz_xxxzzz[k] * ab_y + g_x_0_x_0_yz_xxxyzzz[k];

                g_x_0_x_0_yyz_xxyyyy[k] = -g_x_0_x_0_yz_xxyyyy[k] * ab_y + g_x_0_x_0_yz_xxyyyyy[k];

                g_x_0_x_0_yyz_xxyyyz[k] = -g_x_0_x_0_yz_xxyyyz[k] * ab_y + g_x_0_x_0_yz_xxyyyyz[k];

                g_x_0_x_0_yyz_xxyyzz[k] = -g_x_0_x_0_yz_xxyyzz[k] * ab_y + g_x_0_x_0_yz_xxyyyzz[k];

                g_x_0_x_0_yyz_xxyzzz[k] = -g_x_0_x_0_yz_xxyzzz[k] * ab_y + g_x_0_x_0_yz_xxyyzzz[k];

                g_x_0_x_0_yyz_xxzzzz[k] = -g_x_0_x_0_yz_xxzzzz[k] * ab_y + g_x_0_x_0_yz_xxyzzzz[k];

                g_x_0_x_0_yyz_xyyyyy[k] = -g_x_0_x_0_yz_xyyyyy[k] * ab_y + g_x_0_x_0_yz_xyyyyyy[k];

                g_x_0_x_0_yyz_xyyyyz[k] = -g_x_0_x_0_yz_xyyyyz[k] * ab_y + g_x_0_x_0_yz_xyyyyyz[k];

                g_x_0_x_0_yyz_xyyyzz[k] = -g_x_0_x_0_yz_xyyyzz[k] * ab_y + g_x_0_x_0_yz_xyyyyzz[k];

                g_x_0_x_0_yyz_xyyzzz[k] = -g_x_0_x_0_yz_xyyzzz[k] * ab_y + g_x_0_x_0_yz_xyyyzzz[k];

                g_x_0_x_0_yyz_xyzzzz[k] = -g_x_0_x_0_yz_xyzzzz[k] * ab_y + g_x_0_x_0_yz_xyyzzzz[k];

                g_x_0_x_0_yyz_xzzzzz[k] = -g_x_0_x_0_yz_xzzzzz[k] * ab_y + g_x_0_x_0_yz_xyzzzzz[k];

                g_x_0_x_0_yyz_yyyyyy[k] = -g_x_0_x_0_yz_yyyyyy[k] * ab_y + g_x_0_x_0_yz_yyyyyyy[k];

                g_x_0_x_0_yyz_yyyyyz[k] = -g_x_0_x_0_yz_yyyyyz[k] * ab_y + g_x_0_x_0_yz_yyyyyyz[k];

                g_x_0_x_0_yyz_yyyyzz[k] = -g_x_0_x_0_yz_yyyyzz[k] * ab_y + g_x_0_x_0_yz_yyyyyzz[k];

                g_x_0_x_0_yyz_yyyzzz[k] = -g_x_0_x_0_yz_yyyzzz[k] * ab_y + g_x_0_x_0_yz_yyyyzzz[k];

                g_x_0_x_0_yyz_yyzzzz[k] = -g_x_0_x_0_yz_yyzzzz[k] * ab_y + g_x_0_x_0_yz_yyyzzzz[k];

                g_x_0_x_0_yyz_yzzzzz[k] = -g_x_0_x_0_yz_yzzzzz[k] * ab_y + g_x_0_x_0_yz_yyzzzzz[k];

                g_x_0_x_0_yyz_zzzzzz[k] = -g_x_0_x_0_yz_zzzzzz[k] * ab_y + g_x_0_x_0_yz_yzzzzzz[k];
            }

            /// Set up 224-252 components of targeted buffer : cbuffer.data(

            auto g_x_0_x_0_yzz_xxxxxx = cbuffer.data(fi_geom_1010_off + 224 * ccomps * dcomps);

            auto g_x_0_x_0_yzz_xxxxxy = cbuffer.data(fi_geom_1010_off + 225 * ccomps * dcomps);

            auto g_x_0_x_0_yzz_xxxxxz = cbuffer.data(fi_geom_1010_off + 226 * ccomps * dcomps);

            auto g_x_0_x_0_yzz_xxxxyy = cbuffer.data(fi_geom_1010_off + 227 * ccomps * dcomps);

            auto g_x_0_x_0_yzz_xxxxyz = cbuffer.data(fi_geom_1010_off + 228 * ccomps * dcomps);

            auto g_x_0_x_0_yzz_xxxxzz = cbuffer.data(fi_geom_1010_off + 229 * ccomps * dcomps);

            auto g_x_0_x_0_yzz_xxxyyy = cbuffer.data(fi_geom_1010_off + 230 * ccomps * dcomps);

            auto g_x_0_x_0_yzz_xxxyyz = cbuffer.data(fi_geom_1010_off + 231 * ccomps * dcomps);

            auto g_x_0_x_0_yzz_xxxyzz = cbuffer.data(fi_geom_1010_off + 232 * ccomps * dcomps);

            auto g_x_0_x_0_yzz_xxxzzz = cbuffer.data(fi_geom_1010_off + 233 * ccomps * dcomps);

            auto g_x_0_x_0_yzz_xxyyyy = cbuffer.data(fi_geom_1010_off + 234 * ccomps * dcomps);

            auto g_x_0_x_0_yzz_xxyyyz = cbuffer.data(fi_geom_1010_off + 235 * ccomps * dcomps);

            auto g_x_0_x_0_yzz_xxyyzz = cbuffer.data(fi_geom_1010_off + 236 * ccomps * dcomps);

            auto g_x_0_x_0_yzz_xxyzzz = cbuffer.data(fi_geom_1010_off + 237 * ccomps * dcomps);

            auto g_x_0_x_0_yzz_xxzzzz = cbuffer.data(fi_geom_1010_off + 238 * ccomps * dcomps);

            auto g_x_0_x_0_yzz_xyyyyy = cbuffer.data(fi_geom_1010_off + 239 * ccomps * dcomps);

            auto g_x_0_x_0_yzz_xyyyyz = cbuffer.data(fi_geom_1010_off + 240 * ccomps * dcomps);

            auto g_x_0_x_0_yzz_xyyyzz = cbuffer.data(fi_geom_1010_off + 241 * ccomps * dcomps);

            auto g_x_0_x_0_yzz_xyyzzz = cbuffer.data(fi_geom_1010_off + 242 * ccomps * dcomps);

            auto g_x_0_x_0_yzz_xyzzzz = cbuffer.data(fi_geom_1010_off + 243 * ccomps * dcomps);

            auto g_x_0_x_0_yzz_xzzzzz = cbuffer.data(fi_geom_1010_off + 244 * ccomps * dcomps);

            auto g_x_0_x_0_yzz_yyyyyy = cbuffer.data(fi_geom_1010_off + 245 * ccomps * dcomps);

            auto g_x_0_x_0_yzz_yyyyyz = cbuffer.data(fi_geom_1010_off + 246 * ccomps * dcomps);

            auto g_x_0_x_0_yzz_yyyyzz = cbuffer.data(fi_geom_1010_off + 247 * ccomps * dcomps);

            auto g_x_0_x_0_yzz_yyyzzz = cbuffer.data(fi_geom_1010_off + 248 * ccomps * dcomps);

            auto g_x_0_x_0_yzz_yyzzzz = cbuffer.data(fi_geom_1010_off + 249 * ccomps * dcomps);

            auto g_x_0_x_0_yzz_yzzzzz = cbuffer.data(fi_geom_1010_off + 250 * ccomps * dcomps);

            auto g_x_0_x_0_yzz_zzzzzz = cbuffer.data(fi_geom_1010_off + 251 * ccomps * dcomps);

            #pragma omp simd aligned(g_x_0_x_0_yzz_xxxxxx, g_x_0_x_0_yzz_xxxxxy, g_x_0_x_0_yzz_xxxxxz, g_x_0_x_0_yzz_xxxxyy, g_x_0_x_0_yzz_xxxxyz, g_x_0_x_0_yzz_xxxxzz, g_x_0_x_0_yzz_xxxyyy, g_x_0_x_0_yzz_xxxyyz, g_x_0_x_0_yzz_xxxyzz, g_x_0_x_0_yzz_xxxzzz, g_x_0_x_0_yzz_xxyyyy, g_x_0_x_0_yzz_xxyyyz, g_x_0_x_0_yzz_xxyyzz, g_x_0_x_0_yzz_xxyzzz, g_x_0_x_0_yzz_xxzzzz, g_x_0_x_0_yzz_xyyyyy, g_x_0_x_0_yzz_xyyyyz, g_x_0_x_0_yzz_xyyyzz, g_x_0_x_0_yzz_xyyzzz, g_x_0_x_0_yzz_xyzzzz, g_x_0_x_0_yzz_xzzzzz, g_x_0_x_0_yzz_yyyyyy, g_x_0_x_0_yzz_yyyyyz, g_x_0_x_0_yzz_yyyyzz, g_x_0_x_0_yzz_yyyzzz, g_x_0_x_0_yzz_yyzzzz, g_x_0_x_0_yzz_yzzzzz, g_x_0_x_0_yzz_zzzzzz, g_x_0_x_0_zz_xxxxxx, g_x_0_x_0_zz_xxxxxxy, g_x_0_x_0_zz_xxxxxy, g_x_0_x_0_zz_xxxxxyy, g_x_0_x_0_zz_xxxxxyz, g_x_0_x_0_zz_xxxxxz, g_x_0_x_0_zz_xxxxyy, g_x_0_x_0_zz_xxxxyyy, g_x_0_x_0_zz_xxxxyyz, g_x_0_x_0_zz_xxxxyz, g_x_0_x_0_zz_xxxxyzz, g_x_0_x_0_zz_xxxxzz, g_x_0_x_0_zz_xxxyyy, g_x_0_x_0_zz_xxxyyyy, g_x_0_x_0_zz_xxxyyyz, g_x_0_x_0_zz_xxxyyz, g_x_0_x_0_zz_xxxyyzz, g_x_0_x_0_zz_xxxyzz, g_x_0_x_0_zz_xxxyzzz, g_x_0_x_0_zz_xxxzzz, g_x_0_x_0_zz_xxyyyy, g_x_0_x_0_zz_xxyyyyy, g_x_0_x_0_zz_xxyyyyz, g_x_0_x_0_zz_xxyyyz, g_x_0_x_0_zz_xxyyyzz, g_x_0_x_0_zz_xxyyzz, g_x_0_x_0_zz_xxyyzzz, g_x_0_x_0_zz_xxyzzz, g_x_0_x_0_zz_xxyzzzz, g_x_0_x_0_zz_xxzzzz, g_x_0_x_0_zz_xyyyyy, g_x_0_x_0_zz_xyyyyyy, g_x_0_x_0_zz_xyyyyyz, g_x_0_x_0_zz_xyyyyz, g_x_0_x_0_zz_xyyyyzz, g_x_0_x_0_zz_xyyyzz, g_x_0_x_0_zz_xyyyzzz, g_x_0_x_0_zz_xyyzzz, g_x_0_x_0_zz_xyyzzzz, g_x_0_x_0_zz_xyzzzz, g_x_0_x_0_zz_xyzzzzz, g_x_0_x_0_zz_xzzzzz, g_x_0_x_0_zz_yyyyyy, g_x_0_x_0_zz_yyyyyyy, g_x_0_x_0_zz_yyyyyyz, g_x_0_x_0_zz_yyyyyz, g_x_0_x_0_zz_yyyyyzz, g_x_0_x_0_zz_yyyyzz, g_x_0_x_0_zz_yyyyzzz, g_x_0_x_0_zz_yyyzzz, g_x_0_x_0_zz_yyyzzzz, g_x_0_x_0_zz_yyzzzz, g_x_0_x_0_zz_yyzzzzz, g_x_0_x_0_zz_yzzzzz, g_x_0_x_0_zz_yzzzzzz, g_x_0_x_0_zz_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_x_0_x_0_yzz_xxxxxx[k] = -g_x_0_x_0_zz_xxxxxx[k] * ab_y + g_x_0_x_0_zz_xxxxxxy[k];

                g_x_0_x_0_yzz_xxxxxy[k] = -g_x_0_x_0_zz_xxxxxy[k] * ab_y + g_x_0_x_0_zz_xxxxxyy[k];

                g_x_0_x_0_yzz_xxxxxz[k] = -g_x_0_x_0_zz_xxxxxz[k] * ab_y + g_x_0_x_0_zz_xxxxxyz[k];

                g_x_0_x_0_yzz_xxxxyy[k] = -g_x_0_x_0_zz_xxxxyy[k] * ab_y + g_x_0_x_0_zz_xxxxyyy[k];

                g_x_0_x_0_yzz_xxxxyz[k] = -g_x_0_x_0_zz_xxxxyz[k] * ab_y + g_x_0_x_0_zz_xxxxyyz[k];

                g_x_0_x_0_yzz_xxxxzz[k] = -g_x_0_x_0_zz_xxxxzz[k] * ab_y + g_x_0_x_0_zz_xxxxyzz[k];

                g_x_0_x_0_yzz_xxxyyy[k] = -g_x_0_x_0_zz_xxxyyy[k] * ab_y + g_x_0_x_0_zz_xxxyyyy[k];

                g_x_0_x_0_yzz_xxxyyz[k] = -g_x_0_x_0_zz_xxxyyz[k] * ab_y + g_x_0_x_0_zz_xxxyyyz[k];

                g_x_0_x_0_yzz_xxxyzz[k] = -g_x_0_x_0_zz_xxxyzz[k] * ab_y + g_x_0_x_0_zz_xxxyyzz[k];

                g_x_0_x_0_yzz_xxxzzz[k] = -g_x_0_x_0_zz_xxxzzz[k] * ab_y + g_x_0_x_0_zz_xxxyzzz[k];

                g_x_0_x_0_yzz_xxyyyy[k] = -g_x_0_x_0_zz_xxyyyy[k] * ab_y + g_x_0_x_0_zz_xxyyyyy[k];

                g_x_0_x_0_yzz_xxyyyz[k] = -g_x_0_x_0_zz_xxyyyz[k] * ab_y + g_x_0_x_0_zz_xxyyyyz[k];

                g_x_0_x_0_yzz_xxyyzz[k] = -g_x_0_x_0_zz_xxyyzz[k] * ab_y + g_x_0_x_0_zz_xxyyyzz[k];

                g_x_0_x_0_yzz_xxyzzz[k] = -g_x_0_x_0_zz_xxyzzz[k] * ab_y + g_x_0_x_0_zz_xxyyzzz[k];

                g_x_0_x_0_yzz_xxzzzz[k] = -g_x_0_x_0_zz_xxzzzz[k] * ab_y + g_x_0_x_0_zz_xxyzzzz[k];

                g_x_0_x_0_yzz_xyyyyy[k] = -g_x_0_x_0_zz_xyyyyy[k] * ab_y + g_x_0_x_0_zz_xyyyyyy[k];

                g_x_0_x_0_yzz_xyyyyz[k] = -g_x_0_x_0_zz_xyyyyz[k] * ab_y + g_x_0_x_0_zz_xyyyyyz[k];

                g_x_0_x_0_yzz_xyyyzz[k] = -g_x_0_x_0_zz_xyyyzz[k] * ab_y + g_x_0_x_0_zz_xyyyyzz[k];

                g_x_0_x_0_yzz_xyyzzz[k] = -g_x_0_x_0_zz_xyyzzz[k] * ab_y + g_x_0_x_0_zz_xyyyzzz[k];

                g_x_0_x_0_yzz_xyzzzz[k] = -g_x_0_x_0_zz_xyzzzz[k] * ab_y + g_x_0_x_0_zz_xyyzzzz[k];

                g_x_0_x_0_yzz_xzzzzz[k] = -g_x_0_x_0_zz_xzzzzz[k] * ab_y + g_x_0_x_0_zz_xyzzzzz[k];

                g_x_0_x_0_yzz_yyyyyy[k] = -g_x_0_x_0_zz_yyyyyy[k] * ab_y + g_x_0_x_0_zz_yyyyyyy[k];

                g_x_0_x_0_yzz_yyyyyz[k] = -g_x_0_x_0_zz_yyyyyz[k] * ab_y + g_x_0_x_0_zz_yyyyyyz[k];

                g_x_0_x_0_yzz_yyyyzz[k] = -g_x_0_x_0_zz_yyyyzz[k] * ab_y + g_x_0_x_0_zz_yyyyyzz[k];

                g_x_0_x_0_yzz_yyyzzz[k] = -g_x_0_x_0_zz_yyyzzz[k] * ab_y + g_x_0_x_0_zz_yyyyzzz[k];

                g_x_0_x_0_yzz_yyzzzz[k] = -g_x_0_x_0_zz_yyzzzz[k] * ab_y + g_x_0_x_0_zz_yyyzzzz[k];

                g_x_0_x_0_yzz_yzzzzz[k] = -g_x_0_x_0_zz_yzzzzz[k] * ab_y + g_x_0_x_0_zz_yyzzzzz[k];

                g_x_0_x_0_yzz_zzzzzz[k] = -g_x_0_x_0_zz_zzzzzz[k] * ab_y + g_x_0_x_0_zz_yzzzzzz[k];
            }

            /// Set up 252-280 components of targeted buffer : cbuffer.data(

            auto g_x_0_x_0_zzz_xxxxxx = cbuffer.data(fi_geom_1010_off + 252 * ccomps * dcomps);

            auto g_x_0_x_0_zzz_xxxxxy = cbuffer.data(fi_geom_1010_off + 253 * ccomps * dcomps);

            auto g_x_0_x_0_zzz_xxxxxz = cbuffer.data(fi_geom_1010_off + 254 * ccomps * dcomps);

            auto g_x_0_x_0_zzz_xxxxyy = cbuffer.data(fi_geom_1010_off + 255 * ccomps * dcomps);

            auto g_x_0_x_0_zzz_xxxxyz = cbuffer.data(fi_geom_1010_off + 256 * ccomps * dcomps);

            auto g_x_0_x_0_zzz_xxxxzz = cbuffer.data(fi_geom_1010_off + 257 * ccomps * dcomps);

            auto g_x_0_x_0_zzz_xxxyyy = cbuffer.data(fi_geom_1010_off + 258 * ccomps * dcomps);

            auto g_x_0_x_0_zzz_xxxyyz = cbuffer.data(fi_geom_1010_off + 259 * ccomps * dcomps);

            auto g_x_0_x_0_zzz_xxxyzz = cbuffer.data(fi_geom_1010_off + 260 * ccomps * dcomps);

            auto g_x_0_x_0_zzz_xxxzzz = cbuffer.data(fi_geom_1010_off + 261 * ccomps * dcomps);

            auto g_x_0_x_0_zzz_xxyyyy = cbuffer.data(fi_geom_1010_off + 262 * ccomps * dcomps);

            auto g_x_0_x_0_zzz_xxyyyz = cbuffer.data(fi_geom_1010_off + 263 * ccomps * dcomps);

            auto g_x_0_x_0_zzz_xxyyzz = cbuffer.data(fi_geom_1010_off + 264 * ccomps * dcomps);

            auto g_x_0_x_0_zzz_xxyzzz = cbuffer.data(fi_geom_1010_off + 265 * ccomps * dcomps);

            auto g_x_0_x_0_zzz_xxzzzz = cbuffer.data(fi_geom_1010_off + 266 * ccomps * dcomps);

            auto g_x_0_x_0_zzz_xyyyyy = cbuffer.data(fi_geom_1010_off + 267 * ccomps * dcomps);

            auto g_x_0_x_0_zzz_xyyyyz = cbuffer.data(fi_geom_1010_off + 268 * ccomps * dcomps);

            auto g_x_0_x_0_zzz_xyyyzz = cbuffer.data(fi_geom_1010_off + 269 * ccomps * dcomps);

            auto g_x_0_x_0_zzz_xyyzzz = cbuffer.data(fi_geom_1010_off + 270 * ccomps * dcomps);

            auto g_x_0_x_0_zzz_xyzzzz = cbuffer.data(fi_geom_1010_off + 271 * ccomps * dcomps);

            auto g_x_0_x_0_zzz_xzzzzz = cbuffer.data(fi_geom_1010_off + 272 * ccomps * dcomps);

            auto g_x_0_x_0_zzz_yyyyyy = cbuffer.data(fi_geom_1010_off + 273 * ccomps * dcomps);

            auto g_x_0_x_0_zzz_yyyyyz = cbuffer.data(fi_geom_1010_off + 274 * ccomps * dcomps);

            auto g_x_0_x_0_zzz_yyyyzz = cbuffer.data(fi_geom_1010_off + 275 * ccomps * dcomps);

            auto g_x_0_x_0_zzz_yyyzzz = cbuffer.data(fi_geom_1010_off + 276 * ccomps * dcomps);

            auto g_x_0_x_0_zzz_yyzzzz = cbuffer.data(fi_geom_1010_off + 277 * ccomps * dcomps);

            auto g_x_0_x_0_zzz_yzzzzz = cbuffer.data(fi_geom_1010_off + 278 * ccomps * dcomps);

            auto g_x_0_x_0_zzz_zzzzzz = cbuffer.data(fi_geom_1010_off + 279 * ccomps * dcomps);

            #pragma omp simd aligned(g_x_0_x_0_zz_xxxxxx, g_x_0_x_0_zz_xxxxxxz, g_x_0_x_0_zz_xxxxxy, g_x_0_x_0_zz_xxxxxyz, g_x_0_x_0_zz_xxxxxz, g_x_0_x_0_zz_xxxxxzz, g_x_0_x_0_zz_xxxxyy, g_x_0_x_0_zz_xxxxyyz, g_x_0_x_0_zz_xxxxyz, g_x_0_x_0_zz_xxxxyzz, g_x_0_x_0_zz_xxxxzz, g_x_0_x_0_zz_xxxxzzz, g_x_0_x_0_zz_xxxyyy, g_x_0_x_0_zz_xxxyyyz, g_x_0_x_0_zz_xxxyyz, g_x_0_x_0_zz_xxxyyzz, g_x_0_x_0_zz_xxxyzz, g_x_0_x_0_zz_xxxyzzz, g_x_0_x_0_zz_xxxzzz, g_x_0_x_0_zz_xxxzzzz, g_x_0_x_0_zz_xxyyyy, g_x_0_x_0_zz_xxyyyyz, g_x_0_x_0_zz_xxyyyz, g_x_0_x_0_zz_xxyyyzz, g_x_0_x_0_zz_xxyyzz, g_x_0_x_0_zz_xxyyzzz, g_x_0_x_0_zz_xxyzzz, g_x_0_x_0_zz_xxyzzzz, g_x_0_x_0_zz_xxzzzz, g_x_0_x_0_zz_xxzzzzz, g_x_0_x_0_zz_xyyyyy, g_x_0_x_0_zz_xyyyyyz, g_x_0_x_0_zz_xyyyyz, g_x_0_x_0_zz_xyyyyzz, g_x_0_x_0_zz_xyyyzz, g_x_0_x_0_zz_xyyyzzz, g_x_0_x_0_zz_xyyzzz, g_x_0_x_0_zz_xyyzzzz, g_x_0_x_0_zz_xyzzzz, g_x_0_x_0_zz_xyzzzzz, g_x_0_x_0_zz_xzzzzz, g_x_0_x_0_zz_xzzzzzz, g_x_0_x_0_zz_yyyyyy, g_x_0_x_0_zz_yyyyyyz, g_x_0_x_0_zz_yyyyyz, g_x_0_x_0_zz_yyyyyzz, g_x_0_x_0_zz_yyyyzz, g_x_0_x_0_zz_yyyyzzz, g_x_0_x_0_zz_yyyzzz, g_x_0_x_0_zz_yyyzzzz, g_x_0_x_0_zz_yyzzzz, g_x_0_x_0_zz_yyzzzzz, g_x_0_x_0_zz_yzzzzz, g_x_0_x_0_zz_yzzzzzz, g_x_0_x_0_zz_zzzzzz, g_x_0_x_0_zz_zzzzzzz, g_x_0_x_0_zzz_xxxxxx, g_x_0_x_0_zzz_xxxxxy, g_x_0_x_0_zzz_xxxxxz, g_x_0_x_0_zzz_xxxxyy, g_x_0_x_0_zzz_xxxxyz, g_x_0_x_0_zzz_xxxxzz, g_x_0_x_0_zzz_xxxyyy, g_x_0_x_0_zzz_xxxyyz, g_x_0_x_0_zzz_xxxyzz, g_x_0_x_0_zzz_xxxzzz, g_x_0_x_0_zzz_xxyyyy, g_x_0_x_0_zzz_xxyyyz, g_x_0_x_0_zzz_xxyyzz, g_x_0_x_0_zzz_xxyzzz, g_x_0_x_0_zzz_xxzzzz, g_x_0_x_0_zzz_xyyyyy, g_x_0_x_0_zzz_xyyyyz, g_x_0_x_0_zzz_xyyyzz, g_x_0_x_0_zzz_xyyzzz, g_x_0_x_0_zzz_xyzzzz, g_x_0_x_0_zzz_xzzzzz, g_x_0_x_0_zzz_yyyyyy, g_x_0_x_0_zzz_yyyyyz, g_x_0_x_0_zzz_yyyyzz, g_x_0_x_0_zzz_yyyzzz, g_x_0_x_0_zzz_yyzzzz, g_x_0_x_0_zzz_yzzzzz, g_x_0_x_0_zzz_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_x_0_x_0_zzz_xxxxxx[k] = -g_x_0_x_0_zz_xxxxxx[k] * ab_z + g_x_0_x_0_zz_xxxxxxz[k];

                g_x_0_x_0_zzz_xxxxxy[k] = -g_x_0_x_0_zz_xxxxxy[k] * ab_z + g_x_0_x_0_zz_xxxxxyz[k];

                g_x_0_x_0_zzz_xxxxxz[k] = -g_x_0_x_0_zz_xxxxxz[k] * ab_z + g_x_0_x_0_zz_xxxxxzz[k];

                g_x_0_x_0_zzz_xxxxyy[k] = -g_x_0_x_0_zz_xxxxyy[k] * ab_z + g_x_0_x_0_zz_xxxxyyz[k];

                g_x_0_x_0_zzz_xxxxyz[k] = -g_x_0_x_0_zz_xxxxyz[k] * ab_z + g_x_0_x_0_zz_xxxxyzz[k];

                g_x_0_x_0_zzz_xxxxzz[k] = -g_x_0_x_0_zz_xxxxzz[k] * ab_z + g_x_0_x_0_zz_xxxxzzz[k];

                g_x_0_x_0_zzz_xxxyyy[k] = -g_x_0_x_0_zz_xxxyyy[k] * ab_z + g_x_0_x_0_zz_xxxyyyz[k];

                g_x_0_x_0_zzz_xxxyyz[k] = -g_x_0_x_0_zz_xxxyyz[k] * ab_z + g_x_0_x_0_zz_xxxyyzz[k];

                g_x_0_x_0_zzz_xxxyzz[k] = -g_x_0_x_0_zz_xxxyzz[k] * ab_z + g_x_0_x_0_zz_xxxyzzz[k];

                g_x_0_x_0_zzz_xxxzzz[k] = -g_x_0_x_0_zz_xxxzzz[k] * ab_z + g_x_0_x_0_zz_xxxzzzz[k];

                g_x_0_x_0_zzz_xxyyyy[k] = -g_x_0_x_0_zz_xxyyyy[k] * ab_z + g_x_0_x_0_zz_xxyyyyz[k];

                g_x_0_x_0_zzz_xxyyyz[k] = -g_x_0_x_0_zz_xxyyyz[k] * ab_z + g_x_0_x_0_zz_xxyyyzz[k];

                g_x_0_x_0_zzz_xxyyzz[k] = -g_x_0_x_0_zz_xxyyzz[k] * ab_z + g_x_0_x_0_zz_xxyyzzz[k];

                g_x_0_x_0_zzz_xxyzzz[k] = -g_x_0_x_0_zz_xxyzzz[k] * ab_z + g_x_0_x_0_zz_xxyzzzz[k];

                g_x_0_x_0_zzz_xxzzzz[k] = -g_x_0_x_0_zz_xxzzzz[k] * ab_z + g_x_0_x_0_zz_xxzzzzz[k];

                g_x_0_x_0_zzz_xyyyyy[k] = -g_x_0_x_0_zz_xyyyyy[k] * ab_z + g_x_0_x_0_zz_xyyyyyz[k];

                g_x_0_x_0_zzz_xyyyyz[k] = -g_x_0_x_0_zz_xyyyyz[k] * ab_z + g_x_0_x_0_zz_xyyyyzz[k];

                g_x_0_x_0_zzz_xyyyzz[k] = -g_x_0_x_0_zz_xyyyzz[k] * ab_z + g_x_0_x_0_zz_xyyyzzz[k];

                g_x_0_x_0_zzz_xyyzzz[k] = -g_x_0_x_0_zz_xyyzzz[k] * ab_z + g_x_0_x_0_zz_xyyzzzz[k];

                g_x_0_x_0_zzz_xyzzzz[k] = -g_x_0_x_0_zz_xyzzzz[k] * ab_z + g_x_0_x_0_zz_xyzzzzz[k];

                g_x_0_x_0_zzz_xzzzzz[k] = -g_x_0_x_0_zz_xzzzzz[k] * ab_z + g_x_0_x_0_zz_xzzzzzz[k];

                g_x_0_x_0_zzz_yyyyyy[k] = -g_x_0_x_0_zz_yyyyyy[k] * ab_z + g_x_0_x_0_zz_yyyyyyz[k];

                g_x_0_x_0_zzz_yyyyyz[k] = -g_x_0_x_0_zz_yyyyyz[k] * ab_z + g_x_0_x_0_zz_yyyyyzz[k];

                g_x_0_x_0_zzz_yyyyzz[k] = -g_x_0_x_0_zz_yyyyzz[k] * ab_z + g_x_0_x_0_zz_yyyyzzz[k];

                g_x_0_x_0_zzz_yyyzzz[k] = -g_x_0_x_0_zz_yyyzzz[k] * ab_z + g_x_0_x_0_zz_yyyzzzz[k];

                g_x_0_x_0_zzz_yyzzzz[k] = -g_x_0_x_0_zz_yyzzzz[k] * ab_z + g_x_0_x_0_zz_yyzzzzz[k];

                g_x_0_x_0_zzz_yzzzzz[k] = -g_x_0_x_0_zz_yzzzzz[k] * ab_z + g_x_0_x_0_zz_yzzzzzz[k];

                g_x_0_x_0_zzz_zzzzzz[k] = -g_x_0_x_0_zz_zzzzzz[k] * ab_z + g_x_0_x_0_zz_zzzzzzz[k];
            }

            /// Set up 280-308 components of targeted buffer : cbuffer.data(

            auto g_x_0_y_0_xxx_xxxxxx = cbuffer.data(fi_geom_1010_off + 280 * ccomps * dcomps);

            auto g_x_0_y_0_xxx_xxxxxy = cbuffer.data(fi_geom_1010_off + 281 * ccomps * dcomps);

            auto g_x_0_y_0_xxx_xxxxxz = cbuffer.data(fi_geom_1010_off + 282 * ccomps * dcomps);

            auto g_x_0_y_0_xxx_xxxxyy = cbuffer.data(fi_geom_1010_off + 283 * ccomps * dcomps);

            auto g_x_0_y_0_xxx_xxxxyz = cbuffer.data(fi_geom_1010_off + 284 * ccomps * dcomps);

            auto g_x_0_y_0_xxx_xxxxzz = cbuffer.data(fi_geom_1010_off + 285 * ccomps * dcomps);

            auto g_x_0_y_0_xxx_xxxyyy = cbuffer.data(fi_geom_1010_off + 286 * ccomps * dcomps);

            auto g_x_0_y_0_xxx_xxxyyz = cbuffer.data(fi_geom_1010_off + 287 * ccomps * dcomps);

            auto g_x_0_y_0_xxx_xxxyzz = cbuffer.data(fi_geom_1010_off + 288 * ccomps * dcomps);

            auto g_x_0_y_0_xxx_xxxzzz = cbuffer.data(fi_geom_1010_off + 289 * ccomps * dcomps);

            auto g_x_0_y_0_xxx_xxyyyy = cbuffer.data(fi_geom_1010_off + 290 * ccomps * dcomps);

            auto g_x_0_y_0_xxx_xxyyyz = cbuffer.data(fi_geom_1010_off + 291 * ccomps * dcomps);

            auto g_x_0_y_0_xxx_xxyyzz = cbuffer.data(fi_geom_1010_off + 292 * ccomps * dcomps);

            auto g_x_0_y_0_xxx_xxyzzz = cbuffer.data(fi_geom_1010_off + 293 * ccomps * dcomps);

            auto g_x_0_y_0_xxx_xxzzzz = cbuffer.data(fi_geom_1010_off + 294 * ccomps * dcomps);

            auto g_x_0_y_0_xxx_xyyyyy = cbuffer.data(fi_geom_1010_off + 295 * ccomps * dcomps);

            auto g_x_0_y_0_xxx_xyyyyz = cbuffer.data(fi_geom_1010_off + 296 * ccomps * dcomps);

            auto g_x_0_y_0_xxx_xyyyzz = cbuffer.data(fi_geom_1010_off + 297 * ccomps * dcomps);

            auto g_x_0_y_0_xxx_xyyzzz = cbuffer.data(fi_geom_1010_off + 298 * ccomps * dcomps);

            auto g_x_0_y_0_xxx_xyzzzz = cbuffer.data(fi_geom_1010_off + 299 * ccomps * dcomps);

            auto g_x_0_y_0_xxx_xzzzzz = cbuffer.data(fi_geom_1010_off + 300 * ccomps * dcomps);

            auto g_x_0_y_0_xxx_yyyyyy = cbuffer.data(fi_geom_1010_off + 301 * ccomps * dcomps);

            auto g_x_0_y_0_xxx_yyyyyz = cbuffer.data(fi_geom_1010_off + 302 * ccomps * dcomps);

            auto g_x_0_y_0_xxx_yyyyzz = cbuffer.data(fi_geom_1010_off + 303 * ccomps * dcomps);

            auto g_x_0_y_0_xxx_yyyzzz = cbuffer.data(fi_geom_1010_off + 304 * ccomps * dcomps);

            auto g_x_0_y_0_xxx_yyzzzz = cbuffer.data(fi_geom_1010_off + 305 * ccomps * dcomps);

            auto g_x_0_y_0_xxx_yzzzzz = cbuffer.data(fi_geom_1010_off + 306 * ccomps * dcomps);

            auto g_x_0_y_0_xxx_zzzzzz = cbuffer.data(fi_geom_1010_off + 307 * ccomps * dcomps);

            #pragma omp simd aligned(g_0_0_y_0_xx_xxxxxx, g_0_0_y_0_xx_xxxxxy, g_0_0_y_0_xx_xxxxxz, g_0_0_y_0_xx_xxxxyy, g_0_0_y_0_xx_xxxxyz, g_0_0_y_0_xx_xxxxzz, g_0_0_y_0_xx_xxxyyy, g_0_0_y_0_xx_xxxyyz, g_0_0_y_0_xx_xxxyzz, g_0_0_y_0_xx_xxxzzz, g_0_0_y_0_xx_xxyyyy, g_0_0_y_0_xx_xxyyyz, g_0_0_y_0_xx_xxyyzz, g_0_0_y_0_xx_xxyzzz, g_0_0_y_0_xx_xxzzzz, g_0_0_y_0_xx_xyyyyy, g_0_0_y_0_xx_xyyyyz, g_0_0_y_0_xx_xyyyzz, g_0_0_y_0_xx_xyyzzz, g_0_0_y_0_xx_xyzzzz, g_0_0_y_0_xx_xzzzzz, g_0_0_y_0_xx_yyyyyy, g_0_0_y_0_xx_yyyyyz, g_0_0_y_0_xx_yyyyzz, g_0_0_y_0_xx_yyyzzz, g_0_0_y_0_xx_yyzzzz, g_0_0_y_0_xx_yzzzzz, g_0_0_y_0_xx_zzzzzz, g_x_0_y_0_xx_xxxxxx, g_x_0_y_0_xx_xxxxxxx, g_x_0_y_0_xx_xxxxxxy, g_x_0_y_0_xx_xxxxxxz, g_x_0_y_0_xx_xxxxxy, g_x_0_y_0_xx_xxxxxyy, g_x_0_y_0_xx_xxxxxyz, g_x_0_y_0_xx_xxxxxz, g_x_0_y_0_xx_xxxxxzz, g_x_0_y_0_xx_xxxxyy, g_x_0_y_0_xx_xxxxyyy, g_x_0_y_0_xx_xxxxyyz, g_x_0_y_0_xx_xxxxyz, g_x_0_y_0_xx_xxxxyzz, g_x_0_y_0_xx_xxxxzz, g_x_0_y_0_xx_xxxxzzz, g_x_0_y_0_xx_xxxyyy, g_x_0_y_0_xx_xxxyyyy, g_x_0_y_0_xx_xxxyyyz, g_x_0_y_0_xx_xxxyyz, g_x_0_y_0_xx_xxxyyzz, g_x_0_y_0_xx_xxxyzz, g_x_0_y_0_xx_xxxyzzz, g_x_0_y_0_xx_xxxzzz, g_x_0_y_0_xx_xxxzzzz, g_x_0_y_0_xx_xxyyyy, g_x_0_y_0_xx_xxyyyyy, g_x_0_y_0_xx_xxyyyyz, g_x_0_y_0_xx_xxyyyz, g_x_0_y_0_xx_xxyyyzz, g_x_0_y_0_xx_xxyyzz, g_x_0_y_0_xx_xxyyzzz, g_x_0_y_0_xx_xxyzzz, g_x_0_y_0_xx_xxyzzzz, g_x_0_y_0_xx_xxzzzz, g_x_0_y_0_xx_xxzzzzz, g_x_0_y_0_xx_xyyyyy, g_x_0_y_0_xx_xyyyyyy, g_x_0_y_0_xx_xyyyyyz, g_x_0_y_0_xx_xyyyyz, g_x_0_y_0_xx_xyyyyzz, g_x_0_y_0_xx_xyyyzz, g_x_0_y_0_xx_xyyyzzz, g_x_0_y_0_xx_xyyzzz, g_x_0_y_0_xx_xyyzzzz, g_x_0_y_0_xx_xyzzzz, g_x_0_y_0_xx_xyzzzzz, g_x_0_y_0_xx_xzzzzz, g_x_0_y_0_xx_xzzzzzz, g_x_0_y_0_xx_yyyyyy, g_x_0_y_0_xx_yyyyyz, g_x_0_y_0_xx_yyyyzz, g_x_0_y_0_xx_yyyzzz, g_x_0_y_0_xx_yyzzzz, g_x_0_y_0_xx_yzzzzz, g_x_0_y_0_xx_zzzzzz, g_x_0_y_0_xxx_xxxxxx, g_x_0_y_0_xxx_xxxxxy, g_x_0_y_0_xxx_xxxxxz, g_x_0_y_0_xxx_xxxxyy, g_x_0_y_0_xxx_xxxxyz, g_x_0_y_0_xxx_xxxxzz, g_x_0_y_0_xxx_xxxyyy, g_x_0_y_0_xxx_xxxyyz, g_x_0_y_0_xxx_xxxyzz, g_x_0_y_0_xxx_xxxzzz, g_x_0_y_0_xxx_xxyyyy, g_x_0_y_0_xxx_xxyyyz, g_x_0_y_0_xxx_xxyyzz, g_x_0_y_0_xxx_xxyzzz, g_x_0_y_0_xxx_xxzzzz, g_x_0_y_0_xxx_xyyyyy, g_x_0_y_0_xxx_xyyyyz, g_x_0_y_0_xxx_xyyyzz, g_x_0_y_0_xxx_xyyzzz, g_x_0_y_0_xxx_xyzzzz, g_x_0_y_0_xxx_xzzzzz, g_x_0_y_0_xxx_yyyyyy, g_x_0_y_0_xxx_yyyyyz, g_x_0_y_0_xxx_yyyyzz, g_x_0_y_0_xxx_yyyzzz, g_x_0_y_0_xxx_yyzzzz, g_x_0_y_0_xxx_yzzzzz, g_x_0_y_0_xxx_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_x_0_y_0_xxx_xxxxxx[k] = -g_0_0_y_0_xx_xxxxxx[k] - g_x_0_y_0_xx_xxxxxx[k] * ab_x + g_x_0_y_0_xx_xxxxxxx[k];

                g_x_0_y_0_xxx_xxxxxy[k] = -g_0_0_y_0_xx_xxxxxy[k] - g_x_0_y_0_xx_xxxxxy[k] * ab_x + g_x_0_y_0_xx_xxxxxxy[k];

                g_x_0_y_0_xxx_xxxxxz[k] = -g_0_0_y_0_xx_xxxxxz[k] - g_x_0_y_0_xx_xxxxxz[k] * ab_x + g_x_0_y_0_xx_xxxxxxz[k];

                g_x_0_y_0_xxx_xxxxyy[k] = -g_0_0_y_0_xx_xxxxyy[k] - g_x_0_y_0_xx_xxxxyy[k] * ab_x + g_x_0_y_0_xx_xxxxxyy[k];

                g_x_0_y_0_xxx_xxxxyz[k] = -g_0_0_y_0_xx_xxxxyz[k] - g_x_0_y_0_xx_xxxxyz[k] * ab_x + g_x_0_y_0_xx_xxxxxyz[k];

                g_x_0_y_0_xxx_xxxxzz[k] = -g_0_0_y_0_xx_xxxxzz[k] - g_x_0_y_0_xx_xxxxzz[k] * ab_x + g_x_0_y_0_xx_xxxxxzz[k];

                g_x_0_y_0_xxx_xxxyyy[k] = -g_0_0_y_0_xx_xxxyyy[k] - g_x_0_y_0_xx_xxxyyy[k] * ab_x + g_x_0_y_0_xx_xxxxyyy[k];

                g_x_0_y_0_xxx_xxxyyz[k] = -g_0_0_y_0_xx_xxxyyz[k] - g_x_0_y_0_xx_xxxyyz[k] * ab_x + g_x_0_y_0_xx_xxxxyyz[k];

                g_x_0_y_0_xxx_xxxyzz[k] = -g_0_0_y_0_xx_xxxyzz[k] - g_x_0_y_0_xx_xxxyzz[k] * ab_x + g_x_0_y_0_xx_xxxxyzz[k];

                g_x_0_y_0_xxx_xxxzzz[k] = -g_0_0_y_0_xx_xxxzzz[k] - g_x_0_y_0_xx_xxxzzz[k] * ab_x + g_x_0_y_0_xx_xxxxzzz[k];

                g_x_0_y_0_xxx_xxyyyy[k] = -g_0_0_y_0_xx_xxyyyy[k] - g_x_0_y_0_xx_xxyyyy[k] * ab_x + g_x_0_y_0_xx_xxxyyyy[k];

                g_x_0_y_0_xxx_xxyyyz[k] = -g_0_0_y_0_xx_xxyyyz[k] - g_x_0_y_0_xx_xxyyyz[k] * ab_x + g_x_0_y_0_xx_xxxyyyz[k];

                g_x_0_y_0_xxx_xxyyzz[k] = -g_0_0_y_0_xx_xxyyzz[k] - g_x_0_y_0_xx_xxyyzz[k] * ab_x + g_x_0_y_0_xx_xxxyyzz[k];

                g_x_0_y_0_xxx_xxyzzz[k] = -g_0_0_y_0_xx_xxyzzz[k] - g_x_0_y_0_xx_xxyzzz[k] * ab_x + g_x_0_y_0_xx_xxxyzzz[k];

                g_x_0_y_0_xxx_xxzzzz[k] = -g_0_0_y_0_xx_xxzzzz[k] - g_x_0_y_0_xx_xxzzzz[k] * ab_x + g_x_0_y_0_xx_xxxzzzz[k];

                g_x_0_y_0_xxx_xyyyyy[k] = -g_0_0_y_0_xx_xyyyyy[k] - g_x_0_y_0_xx_xyyyyy[k] * ab_x + g_x_0_y_0_xx_xxyyyyy[k];

                g_x_0_y_0_xxx_xyyyyz[k] = -g_0_0_y_0_xx_xyyyyz[k] - g_x_0_y_0_xx_xyyyyz[k] * ab_x + g_x_0_y_0_xx_xxyyyyz[k];

                g_x_0_y_0_xxx_xyyyzz[k] = -g_0_0_y_0_xx_xyyyzz[k] - g_x_0_y_0_xx_xyyyzz[k] * ab_x + g_x_0_y_0_xx_xxyyyzz[k];

                g_x_0_y_0_xxx_xyyzzz[k] = -g_0_0_y_0_xx_xyyzzz[k] - g_x_0_y_0_xx_xyyzzz[k] * ab_x + g_x_0_y_0_xx_xxyyzzz[k];

                g_x_0_y_0_xxx_xyzzzz[k] = -g_0_0_y_0_xx_xyzzzz[k] - g_x_0_y_0_xx_xyzzzz[k] * ab_x + g_x_0_y_0_xx_xxyzzzz[k];

                g_x_0_y_0_xxx_xzzzzz[k] = -g_0_0_y_0_xx_xzzzzz[k] - g_x_0_y_0_xx_xzzzzz[k] * ab_x + g_x_0_y_0_xx_xxzzzzz[k];

                g_x_0_y_0_xxx_yyyyyy[k] = -g_0_0_y_0_xx_yyyyyy[k] - g_x_0_y_0_xx_yyyyyy[k] * ab_x + g_x_0_y_0_xx_xyyyyyy[k];

                g_x_0_y_0_xxx_yyyyyz[k] = -g_0_0_y_0_xx_yyyyyz[k] - g_x_0_y_0_xx_yyyyyz[k] * ab_x + g_x_0_y_0_xx_xyyyyyz[k];

                g_x_0_y_0_xxx_yyyyzz[k] = -g_0_0_y_0_xx_yyyyzz[k] - g_x_0_y_0_xx_yyyyzz[k] * ab_x + g_x_0_y_0_xx_xyyyyzz[k];

                g_x_0_y_0_xxx_yyyzzz[k] = -g_0_0_y_0_xx_yyyzzz[k] - g_x_0_y_0_xx_yyyzzz[k] * ab_x + g_x_0_y_0_xx_xyyyzzz[k];

                g_x_0_y_0_xxx_yyzzzz[k] = -g_0_0_y_0_xx_yyzzzz[k] - g_x_0_y_0_xx_yyzzzz[k] * ab_x + g_x_0_y_0_xx_xyyzzzz[k];

                g_x_0_y_0_xxx_yzzzzz[k] = -g_0_0_y_0_xx_yzzzzz[k] - g_x_0_y_0_xx_yzzzzz[k] * ab_x + g_x_0_y_0_xx_xyzzzzz[k];

                g_x_0_y_0_xxx_zzzzzz[k] = -g_0_0_y_0_xx_zzzzzz[k] - g_x_0_y_0_xx_zzzzzz[k] * ab_x + g_x_0_y_0_xx_xzzzzzz[k];
            }

            /// Set up 308-336 components of targeted buffer : cbuffer.data(

            auto g_x_0_y_0_xxy_xxxxxx = cbuffer.data(fi_geom_1010_off + 308 * ccomps * dcomps);

            auto g_x_0_y_0_xxy_xxxxxy = cbuffer.data(fi_geom_1010_off + 309 * ccomps * dcomps);

            auto g_x_0_y_0_xxy_xxxxxz = cbuffer.data(fi_geom_1010_off + 310 * ccomps * dcomps);

            auto g_x_0_y_0_xxy_xxxxyy = cbuffer.data(fi_geom_1010_off + 311 * ccomps * dcomps);

            auto g_x_0_y_0_xxy_xxxxyz = cbuffer.data(fi_geom_1010_off + 312 * ccomps * dcomps);

            auto g_x_0_y_0_xxy_xxxxzz = cbuffer.data(fi_geom_1010_off + 313 * ccomps * dcomps);

            auto g_x_0_y_0_xxy_xxxyyy = cbuffer.data(fi_geom_1010_off + 314 * ccomps * dcomps);

            auto g_x_0_y_0_xxy_xxxyyz = cbuffer.data(fi_geom_1010_off + 315 * ccomps * dcomps);

            auto g_x_0_y_0_xxy_xxxyzz = cbuffer.data(fi_geom_1010_off + 316 * ccomps * dcomps);

            auto g_x_0_y_0_xxy_xxxzzz = cbuffer.data(fi_geom_1010_off + 317 * ccomps * dcomps);

            auto g_x_0_y_0_xxy_xxyyyy = cbuffer.data(fi_geom_1010_off + 318 * ccomps * dcomps);

            auto g_x_0_y_0_xxy_xxyyyz = cbuffer.data(fi_geom_1010_off + 319 * ccomps * dcomps);

            auto g_x_0_y_0_xxy_xxyyzz = cbuffer.data(fi_geom_1010_off + 320 * ccomps * dcomps);

            auto g_x_0_y_0_xxy_xxyzzz = cbuffer.data(fi_geom_1010_off + 321 * ccomps * dcomps);

            auto g_x_0_y_0_xxy_xxzzzz = cbuffer.data(fi_geom_1010_off + 322 * ccomps * dcomps);

            auto g_x_0_y_0_xxy_xyyyyy = cbuffer.data(fi_geom_1010_off + 323 * ccomps * dcomps);

            auto g_x_0_y_0_xxy_xyyyyz = cbuffer.data(fi_geom_1010_off + 324 * ccomps * dcomps);

            auto g_x_0_y_0_xxy_xyyyzz = cbuffer.data(fi_geom_1010_off + 325 * ccomps * dcomps);

            auto g_x_0_y_0_xxy_xyyzzz = cbuffer.data(fi_geom_1010_off + 326 * ccomps * dcomps);

            auto g_x_0_y_0_xxy_xyzzzz = cbuffer.data(fi_geom_1010_off + 327 * ccomps * dcomps);

            auto g_x_0_y_0_xxy_xzzzzz = cbuffer.data(fi_geom_1010_off + 328 * ccomps * dcomps);

            auto g_x_0_y_0_xxy_yyyyyy = cbuffer.data(fi_geom_1010_off + 329 * ccomps * dcomps);

            auto g_x_0_y_0_xxy_yyyyyz = cbuffer.data(fi_geom_1010_off + 330 * ccomps * dcomps);

            auto g_x_0_y_0_xxy_yyyyzz = cbuffer.data(fi_geom_1010_off + 331 * ccomps * dcomps);

            auto g_x_0_y_0_xxy_yyyzzz = cbuffer.data(fi_geom_1010_off + 332 * ccomps * dcomps);

            auto g_x_0_y_0_xxy_yyzzzz = cbuffer.data(fi_geom_1010_off + 333 * ccomps * dcomps);

            auto g_x_0_y_0_xxy_yzzzzz = cbuffer.data(fi_geom_1010_off + 334 * ccomps * dcomps);

            auto g_x_0_y_0_xxy_zzzzzz = cbuffer.data(fi_geom_1010_off + 335 * ccomps * dcomps);

            #pragma omp simd aligned(g_x_0_y_0_xx_xxxxxx, g_x_0_y_0_xx_xxxxxxy, g_x_0_y_0_xx_xxxxxy, g_x_0_y_0_xx_xxxxxyy, g_x_0_y_0_xx_xxxxxyz, g_x_0_y_0_xx_xxxxxz, g_x_0_y_0_xx_xxxxyy, g_x_0_y_0_xx_xxxxyyy, g_x_0_y_0_xx_xxxxyyz, g_x_0_y_0_xx_xxxxyz, g_x_0_y_0_xx_xxxxyzz, g_x_0_y_0_xx_xxxxzz, g_x_0_y_0_xx_xxxyyy, g_x_0_y_0_xx_xxxyyyy, g_x_0_y_0_xx_xxxyyyz, g_x_0_y_0_xx_xxxyyz, g_x_0_y_0_xx_xxxyyzz, g_x_0_y_0_xx_xxxyzz, g_x_0_y_0_xx_xxxyzzz, g_x_0_y_0_xx_xxxzzz, g_x_0_y_0_xx_xxyyyy, g_x_0_y_0_xx_xxyyyyy, g_x_0_y_0_xx_xxyyyyz, g_x_0_y_0_xx_xxyyyz, g_x_0_y_0_xx_xxyyyzz, g_x_0_y_0_xx_xxyyzz, g_x_0_y_0_xx_xxyyzzz, g_x_0_y_0_xx_xxyzzz, g_x_0_y_0_xx_xxyzzzz, g_x_0_y_0_xx_xxzzzz, g_x_0_y_0_xx_xyyyyy, g_x_0_y_0_xx_xyyyyyy, g_x_0_y_0_xx_xyyyyyz, g_x_0_y_0_xx_xyyyyz, g_x_0_y_0_xx_xyyyyzz, g_x_0_y_0_xx_xyyyzz, g_x_0_y_0_xx_xyyyzzz, g_x_0_y_0_xx_xyyzzz, g_x_0_y_0_xx_xyyzzzz, g_x_0_y_0_xx_xyzzzz, g_x_0_y_0_xx_xyzzzzz, g_x_0_y_0_xx_xzzzzz, g_x_0_y_0_xx_yyyyyy, g_x_0_y_0_xx_yyyyyyy, g_x_0_y_0_xx_yyyyyyz, g_x_0_y_0_xx_yyyyyz, g_x_0_y_0_xx_yyyyyzz, g_x_0_y_0_xx_yyyyzz, g_x_0_y_0_xx_yyyyzzz, g_x_0_y_0_xx_yyyzzz, g_x_0_y_0_xx_yyyzzzz, g_x_0_y_0_xx_yyzzzz, g_x_0_y_0_xx_yyzzzzz, g_x_0_y_0_xx_yzzzzz, g_x_0_y_0_xx_yzzzzzz, g_x_0_y_0_xx_zzzzzz, g_x_0_y_0_xxy_xxxxxx, g_x_0_y_0_xxy_xxxxxy, g_x_0_y_0_xxy_xxxxxz, g_x_0_y_0_xxy_xxxxyy, g_x_0_y_0_xxy_xxxxyz, g_x_0_y_0_xxy_xxxxzz, g_x_0_y_0_xxy_xxxyyy, g_x_0_y_0_xxy_xxxyyz, g_x_0_y_0_xxy_xxxyzz, g_x_0_y_0_xxy_xxxzzz, g_x_0_y_0_xxy_xxyyyy, g_x_0_y_0_xxy_xxyyyz, g_x_0_y_0_xxy_xxyyzz, g_x_0_y_0_xxy_xxyzzz, g_x_0_y_0_xxy_xxzzzz, g_x_0_y_0_xxy_xyyyyy, g_x_0_y_0_xxy_xyyyyz, g_x_0_y_0_xxy_xyyyzz, g_x_0_y_0_xxy_xyyzzz, g_x_0_y_0_xxy_xyzzzz, g_x_0_y_0_xxy_xzzzzz, g_x_0_y_0_xxy_yyyyyy, g_x_0_y_0_xxy_yyyyyz, g_x_0_y_0_xxy_yyyyzz, g_x_0_y_0_xxy_yyyzzz, g_x_0_y_0_xxy_yyzzzz, g_x_0_y_0_xxy_yzzzzz, g_x_0_y_0_xxy_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_x_0_y_0_xxy_xxxxxx[k] = -g_x_0_y_0_xx_xxxxxx[k] * ab_y + g_x_0_y_0_xx_xxxxxxy[k];

                g_x_0_y_0_xxy_xxxxxy[k] = -g_x_0_y_0_xx_xxxxxy[k] * ab_y + g_x_0_y_0_xx_xxxxxyy[k];

                g_x_0_y_0_xxy_xxxxxz[k] = -g_x_0_y_0_xx_xxxxxz[k] * ab_y + g_x_0_y_0_xx_xxxxxyz[k];

                g_x_0_y_0_xxy_xxxxyy[k] = -g_x_0_y_0_xx_xxxxyy[k] * ab_y + g_x_0_y_0_xx_xxxxyyy[k];

                g_x_0_y_0_xxy_xxxxyz[k] = -g_x_0_y_0_xx_xxxxyz[k] * ab_y + g_x_0_y_0_xx_xxxxyyz[k];

                g_x_0_y_0_xxy_xxxxzz[k] = -g_x_0_y_0_xx_xxxxzz[k] * ab_y + g_x_0_y_0_xx_xxxxyzz[k];

                g_x_0_y_0_xxy_xxxyyy[k] = -g_x_0_y_0_xx_xxxyyy[k] * ab_y + g_x_0_y_0_xx_xxxyyyy[k];

                g_x_0_y_0_xxy_xxxyyz[k] = -g_x_0_y_0_xx_xxxyyz[k] * ab_y + g_x_0_y_0_xx_xxxyyyz[k];

                g_x_0_y_0_xxy_xxxyzz[k] = -g_x_0_y_0_xx_xxxyzz[k] * ab_y + g_x_0_y_0_xx_xxxyyzz[k];

                g_x_0_y_0_xxy_xxxzzz[k] = -g_x_0_y_0_xx_xxxzzz[k] * ab_y + g_x_0_y_0_xx_xxxyzzz[k];

                g_x_0_y_0_xxy_xxyyyy[k] = -g_x_0_y_0_xx_xxyyyy[k] * ab_y + g_x_0_y_0_xx_xxyyyyy[k];

                g_x_0_y_0_xxy_xxyyyz[k] = -g_x_0_y_0_xx_xxyyyz[k] * ab_y + g_x_0_y_0_xx_xxyyyyz[k];

                g_x_0_y_0_xxy_xxyyzz[k] = -g_x_0_y_0_xx_xxyyzz[k] * ab_y + g_x_0_y_0_xx_xxyyyzz[k];

                g_x_0_y_0_xxy_xxyzzz[k] = -g_x_0_y_0_xx_xxyzzz[k] * ab_y + g_x_0_y_0_xx_xxyyzzz[k];

                g_x_0_y_0_xxy_xxzzzz[k] = -g_x_0_y_0_xx_xxzzzz[k] * ab_y + g_x_0_y_0_xx_xxyzzzz[k];

                g_x_0_y_0_xxy_xyyyyy[k] = -g_x_0_y_0_xx_xyyyyy[k] * ab_y + g_x_0_y_0_xx_xyyyyyy[k];

                g_x_0_y_0_xxy_xyyyyz[k] = -g_x_0_y_0_xx_xyyyyz[k] * ab_y + g_x_0_y_0_xx_xyyyyyz[k];

                g_x_0_y_0_xxy_xyyyzz[k] = -g_x_0_y_0_xx_xyyyzz[k] * ab_y + g_x_0_y_0_xx_xyyyyzz[k];

                g_x_0_y_0_xxy_xyyzzz[k] = -g_x_0_y_0_xx_xyyzzz[k] * ab_y + g_x_0_y_0_xx_xyyyzzz[k];

                g_x_0_y_0_xxy_xyzzzz[k] = -g_x_0_y_0_xx_xyzzzz[k] * ab_y + g_x_0_y_0_xx_xyyzzzz[k];

                g_x_0_y_0_xxy_xzzzzz[k] = -g_x_0_y_0_xx_xzzzzz[k] * ab_y + g_x_0_y_0_xx_xyzzzzz[k];

                g_x_0_y_0_xxy_yyyyyy[k] = -g_x_0_y_0_xx_yyyyyy[k] * ab_y + g_x_0_y_0_xx_yyyyyyy[k];

                g_x_0_y_0_xxy_yyyyyz[k] = -g_x_0_y_0_xx_yyyyyz[k] * ab_y + g_x_0_y_0_xx_yyyyyyz[k];

                g_x_0_y_0_xxy_yyyyzz[k] = -g_x_0_y_0_xx_yyyyzz[k] * ab_y + g_x_0_y_0_xx_yyyyyzz[k];

                g_x_0_y_0_xxy_yyyzzz[k] = -g_x_0_y_0_xx_yyyzzz[k] * ab_y + g_x_0_y_0_xx_yyyyzzz[k];

                g_x_0_y_0_xxy_yyzzzz[k] = -g_x_0_y_0_xx_yyzzzz[k] * ab_y + g_x_0_y_0_xx_yyyzzzz[k];

                g_x_0_y_0_xxy_yzzzzz[k] = -g_x_0_y_0_xx_yzzzzz[k] * ab_y + g_x_0_y_0_xx_yyzzzzz[k];

                g_x_0_y_0_xxy_zzzzzz[k] = -g_x_0_y_0_xx_zzzzzz[k] * ab_y + g_x_0_y_0_xx_yzzzzzz[k];
            }

            /// Set up 336-364 components of targeted buffer : cbuffer.data(

            auto g_x_0_y_0_xxz_xxxxxx = cbuffer.data(fi_geom_1010_off + 336 * ccomps * dcomps);

            auto g_x_0_y_0_xxz_xxxxxy = cbuffer.data(fi_geom_1010_off + 337 * ccomps * dcomps);

            auto g_x_0_y_0_xxz_xxxxxz = cbuffer.data(fi_geom_1010_off + 338 * ccomps * dcomps);

            auto g_x_0_y_0_xxz_xxxxyy = cbuffer.data(fi_geom_1010_off + 339 * ccomps * dcomps);

            auto g_x_0_y_0_xxz_xxxxyz = cbuffer.data(fi_geom_1010_off + 340 * ccomps * dcomps);

            auto g_x_0_y_0_xxz_xxxxzz = cbuffer.data(fi_geom_1010_off + 341 * ccomps * dcomps);

            auto g_x_0_y_0_xxz_xxxyyy = cbuffer.data(fi_geom_1010_off + 342 * ccomps * dcomps);

            auto g_x_0_y_0_xxz_xxxyyz = cbuffer.data(fi_geom_1010_off + 343 * ccomps * dcomps);

            auto g_x_0_y_0_xxz_xxxyzz = cbuffer.data(fi_geom_1010_off + 344 * ccomps * dcomps);

            auto g_x_0_y_0_xxz_xxxzzz = cbuffer.data(fi_geom_1010_off + 345 * ccomps * dcomps);

            auto g_x_0_y_0_xxz_xxyyyy = cbuffer.data(fi_geom_1010_off + 346 * ccomps * dcomps);

            auto g_x_0_y_0_xxz_xxyyyz = cbuffer.data(fi_geom_1010_off + 347 * ccomps * dcomps);

            auto g_x_0_y_0_xxz_xxyyzz = cbuffer.data(fi_geom_1010_off + 348 * ccomps * dcomps);

            auto g_x_0_y_0_xxz_xxyzzz = cbuffer.data(fi_geom_1010_off + 349 * ccomps * dcomps);

            auto g_x_0_y_0_xxz_xxzzzz = cbuffer.data(fi_geom_1010_off + 350 * ccomps * dcomps);

            auto g_x_0_y_0_xxz_xyyyyy = cbuffer.data(fi_geom_1010_off + 351 * ccomps * dcomps);

            auto g_x_0_y_0_xxz_xyyyyz = cbuffer.data(fi_geom_1010_off + 352 * ccomps * dcomps);

            auto g_x_0_y_0_xxz_xyyyzz = cbuffer.data(fi_geom_1010_off + 353 * ccomps * dcomps);

            auto g_x_0_y_0_xxz_xyyzzz = cbuffer.data(fi_geom_1010_off + 354 * ccomps * dcomps);

            auto g_x_0_y_0_xxz_xyzzzz = cbuffer.data(fi_geom_1010_off + 355 * ccomps * dcomps);

            auto g_x_0_y_0_xxz_xzzzzz = cbuffer.data(fi_geom_1010_off + 356 * ccomps * dcomps);

            auto g_x_0_y_0_xxz_yyyyyy = cbuffer.data(fi_geom_1010_off + 357 * ccomps * dcomps);

            auto g_x_0_y_0_xxz_yyyyyz = cbuffer.data(fi_geom_1010_off + 358 * ccomps * dcomps);

            auto g_x_0_y_0_xxz_yyyyzz = cbuffer.data(fi_geom_1010_off + 359 * ccomps * dcomps);

            auto g_x_0_y_0_xxz_yyyzzz = cbuffer.data(fi_geom_1010_off + 360 * ccomps * dcomps);

            auto g_x_0_y_0_xxz_yyzzzz = cbuffer.data(fi_geom_1010_off + 361 * ccomps * dcomps);

            auto g_x_0_y_0_xxz_yzzzzz = cbuffer.data(fi_geom_1010_off + 362 * ccomps * dcomps);

            auto g_x_0_y_0_xxz_zzzzzz = cbuffer.data(fi_geom_1010_off + 363 * ccomps * dcomps);

            #pragma omp simd aligned(g_x_0_y_0_xx_xxxxxx, g_x_0_y_0_xx_xxxxxxz, g_x_0_y_0_xx_xxxxxy, g_x_0_y_0_xx_xxxxxyz, g_x_0_y_0_xx_xxxxxz, g_x_0_y_0_xx_xxxxxzz, g_x_0_y_0_xx_xxxxyy, g_x_0_y_0_xx_xxxxyyz, g_x_0_y_0_xx_xxxxyz, g_x_0_y_0_xx_xxxxyzz, g_x_0_y_0_xx_xxxxzz, g_x_0_y_0_xx_xxxxzzz, g_x_0_y_0_xx_xxxyyy, g_x_0_y_0_xx_xxxyyyz, g_x_0_y_0_xx_xxxyyz, g_x_0_y_0_xx_xxxyyzz, g_x_0_y_0_xx_xxxyzz, g_x_0_y_0_xx_xxxyzzz, g_x_0_y_0_xx_xxxzzz, g_x_0_y_0_xx_xxxzzzz, g_x_0_y_0_xx_xxyyyy, g_x_0_y_0_xx_xxyyyyz, g_x_0_y_0_xx_xxyyyz, g_x_0_y_0_xx_xxyyyzz, g_x_0_y_0_xx_xxyyzz, g_x_0_y_0_xx_xxyyzzz, g_x_0_y_0_xx_xxyzzz, g_x_0_y_0_xx_xxyzzzz, g_x_0_y_0_xx_xxzzzz, g_x_0_y_0_xx_xxzzzzz, g_x_0_y_0_xx_xyyyyy, g_x_0_y_0_xx_xyyyyyz, g_x_0_y_0_xx_xyyyyz, g_x_0_y_0_xx_xyyyyzz, g_x_0_y_0_xx_xyyyzz, g_x_0_y_0_xx_xyyyzzz, g_x_0_y_0_xx_xyyzzz, g_x_0_y_0_xx_xyyzzzz, g_x_0_y_0_xx_xyzzzz, g_x_0_y_0_xx_xyzzzzz, g_x_0_y_0_xx_xzzzzz, g_x_0_y_0_xx_xzzzzzz, g_x_0_y_0_xx_yyyyyy, g_x_0_y_0_xx_yyyyyyz, g_x_0_y_0_xx_yyyyyz, g_x_0_y_0_xx_yyyyyzz, g_x_0_y_0_xx_yyyyzz, g_x_0_y_0_xx_yyyyzzz, g_x_0_y_0_xx_yyyzzz, g_x_0_y_0_xx_yyyzzzz, g_x_0_y_0_xx_yyzzzz, g_x_0_y_0_xx_yyzzzzz, g_x_0_y_0_xx_yzzzzz, g_x_0_y_0_xx_yzzzzzz, g_x_0_y_0_xx_zzzzzz, g_x_0_y_0_xx_zzzzzzz, g_x_0_y_0_xxz_xxxxxx, g_x_0_y_0_xxz_xxxxxy, g_x_0_y_0_xxz_xxxxxz, g_x_0_y_0_xxz_xxxxyy, g_x_0_y_0_xxz_xxxxyz, g_x_0_y_0_xxz_xxxxzz, g_x_0_y_0_xxz_xxxyyy, g_x_0_y_0_xxz_xxxyyz, g_x_0_y_0_xxz_xxxyzz, g_x_0_y_0_xxz_xxxzzz, g_x_0_y_0_xxz_xxyyyy, g_x_0_y_0_xxz_xxyyyz, g_x_0_y_0_xxz_xxyyzz, g_x_0_y_0_xxz_xxyzzz, g_x_0_y_0_xxz_xxzzzz, g_x_0_y_0_xxz_xyyyyy, g_x_0_y_0_xxz_xyyyyz, g_x_0_y_0_xxz_xyyyzz, g_x_0_y_0_xxz_xyyzzz, g_x_0_y_0_xxz_xyzzzz, g_x_0_y_0_xxz_xzzzzz, g_x_0_y_0_xxz_yyyyyy, g_x_0_y_0_xxz_yyyyyz, g_x_0_y_0_xxz_yyyyzz, g_x_0_y_0_xxz_yyyzzz, g_x_0_y_0_xxz_yyzzzz, g_x_0_y_0_xxz_yzzzzz, g_x_0_y_0_xxz_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_x_0_y_0_xxz_xxxxxx[k] = -g_x_0_y_0_xx_xxxxxx[k] * ab_z + g_x_0_y_0_xx_xxxxxxz[k];

                g_x_0_y_0_xxz_xxxxxy[k] = -g_x_0_y_0_xx_xxxxxy[k] * ab_z + g_x_0_y_0_xx_xxxxxyz[k];

                g_x_0_y_0_xxz_xxxxxz[k] = -g_x_0_y_0_xx_xxxxxz[k] * ab_z + g_x_0_y_0_xx_xxxxxzz[k];

                g_x_0_y_0_xxz_xxxxyy[k] = -g_x_0_y_0_xx_xxxxyy[k] * ab_z + g_x_0_y_0_xx_xxxxyyz[k];

                g_x_0_y_0_xxz_xxxxyz[k] = -g_x_0_y_0_xx_xxxxyz[k] * ab_z + g_x_0_y_0_xx_xxxxyzz[k];

                g_x_0_y_0_xxz_xxxxzz[k] = -g_x_0_y_0_xx_xxxxzz[k] * ab_z + g_x_0_y_0_xx_xxxxzzz[k];

                g_x_0_y_0_xxz_xxxyyy[k] = -g_x_0_y_0_xx_xxxyyy[k] * ab_z + g_x_0_y_0_xx_xxxyyyz[k];

                g_x_0_y_0_xxz_xxxyyz[k] = -g_x_0_y_0_xx_xxxyyz[k] * ab_z + g_x_0_y_0_xx_xxxyyzz[k];

                g_x_0_y_0_xxz_xxxyzz[k] = -g_x_0_y_0_xx_xxxyzz[k] * ab_z + g_x_0_y_0_xx_xxxyzzz[k];

                g_x_0_y_0_xxz_xxxzzz[k] = -g_x_0_y_0_xx_xxxzzz[k] * ab_z + g_x_0_y_0_xx_xxxzzzz[k];

                g_x_0_y_0_xxz_xxyyyy[k] = -g_x_0_y_0_xx_xxyyyy[k] * ab_z + g_x_0_y_0_xx_xxyyyyz[k];

                g_x_0_y_0_xxz_xxyyyz[k] = -g_x_0_y_0_xx_xxyyyz[k] * ab_z + g_x_0_y_0_xx_xxyyyzz[k];

                g_x_0_y_0_xxz_xxyyzz[k] = -g_x_0_y_0_xx_xxyyzz[k] * ab_z + g_x_0_y_0_xx_xxyyzzz[k];

                g_x_0_y_0_xxz_xxyzzz[k] = -g_x_0_y_0_xx_xxyzzz[k] * ab_z + g_x_0_y_0_xx_xxyzzzz[k];

                g_x_0_y_0_xxz_xxzzzz[k] = -g_x_0_y_0_xx_xxzzzz[k] * ab_z + g_x_0_y_0_xx_xxzzzzz[k];

                g_x_0_y_0_xxz_xyyyyy[k] = -g_x_0_y_0_xx_xyyyyy[k] * ab_z + g_x_0_y_0_xx_xyyyyyz[k];

                g_x_0_y_0_xxz_xyyyyz[k] = -g_x_0_y_0_xx_xyyyyz[k] * ab_z + g_x_0_y_0_xx_xyyyyzz[k];

                g_x_0_y_0_xxz_xyyyzz[k] = -g_x_0_y_0_xx_xyyyzz[k] * ab_z + g_x_0_y_0_xx_xyyyzzz[k];

                g_x_0_y_0_xxz_xyyzzz[k] = -g_x_0_y_0_xx_xyyzzz[k] * ab_z + g_x_0_y_0_xx_xyyzzzz[k];

                g_x_0_y_0_xxz_xyzzzz[k] = -g_x_0_y_0_xx_xyzzzz[k] * ab_z + g_x_0_y_0_xx_xyzzzzz[k];

                g_x_0_y_0_xxz_xzzzzz[k] = -g_x_0_y_0_xx_xzzzzz[k] * ab_z + g_x_0_y_0_xx_xzzzzzz[k];

                g_x_0_y_0_xxz_yyyyyy[k] = -g_x_0_y_0_xx_yyyyyy[k] * ab_z + g_x_0_y_0_xx_yyyyyyz[k];

                g_x_0_y_0_xxz_yyyyyz[k] = -g_x_0_y_0_xx_yyyyyz[k] * ab_z + g_x_0_y_0_xx_yyyyyzz[k];

                g_x_0_y_0_xxz_yyyyzz[k] = -g_x_0_y_0_xx_yyyyzz[k] * ab_z + g_x_0_y_0_xx_yyyyzzz[k];

                g_x_0_y_0_xxz_yyyzzz[k] = -g_x_0_y_0_xx_yyyzzz[k] * ab_z + g_x_0_y_0_xx_yyyzzzz[k];

                g_x_0_y_0_xxz_yyzzzz[k] = -g_x_0_y_0_xx_yyzzzz[k] * ab_z + g_x_0_y_0_xx_yyzzzzz[k];

                g_x_0_y_0_xxz_yzzzzz[k] = -g_x_0_y_0_xx_yzzzzz[k] * ab_z + g_x_0_y_0_xx_yzzzzzz[k];

                g_x_0_y_0_xxz_zzzzzz[k] = -g_x_0_y_0_xx_zzzzzz[k] * ab_z + g_x_0_y_0_xx_zzzzzzz[k];
            }

            /// Set up 364-392 components of targeted buffer : cbuffer.data(

            auto g_x_0_y_0_xyy_xxxxxx = cbuffer.data(fi_geom_1010_off + 364 * ccomps * dcomps);

            auto g_x_0_y_0_xyy_xxxxxy = cbuffer.data(fi_geom_1010_off + 365 * ccomps * dcomps);

            auto g_x_0_y_0_xyy_xxxxxz = cbuffer.data(fi_geom_1010_off + 366 * ccomps * dcomps);

            auto g_x_0_y_0_xyy_xxxxyy = cbuffer.data(fi_geom_1010_off + 367 * ccomps * dcomps);

            auto g_x_0_y_0_xyy_xxxxyz = cbuffer.data(fi_geom_1010_off + 368 * ccomps * dcomps);

            auto g_x_0_y_0_xyy_xxxxzz = cbuffer.data(fi_geom_1010_off + 369 * ccomps * dcomps);

            auto g_x_0_y_0_xyy_xxxyyy = cbuffer.data(fi_geom_1010_off + 370 * ccomps * dcomps);

            auto g_x_0_y_0_xyy_xxxyyz = cbuffer.data(fi_geom_1010_off + 371 * ccomps * dcomps);

            auto g_x_0_y_0_xyy_xxxyzz = cbuffer.data(fi_geom_1010_off + 372 * ccomps * dcomps);

            auto g_x_0_y_0_xyy_xxxzzz = cbuffer.data(fi_geom_1010_off + 373 * ccomps * dcomps);

            auto g_x_0_y_0_xyy_xxyyyy = cbuffer.data(fi_geom_1010_off + 374 * ccomps * dcomps);

            auto g_x_0_y_0_xyy_xxyyyz = cbuffer.data(fi_geom_1010_off + 375 * ccomps * dcomps);

            auto g_x_0_y_0_xyy_xxyyzz = cbuffer.data(fi_geom_1010_off + 376 * ccomps * dcomps);

            auto g_x_0_y_0_xyy_xxyzzz = cbuffer.data(fi_geom_1010_off + 377 * ccomps * dcomps);

            auto g_x_0_y_0_xyy_xxzzzz = cbuffer.data(fi_geom_1010_off + 378 * ccomps * dcomps);

            auto g_x_0_y_0_xyy_xyyyyy = cbuffer.data(fi_geom_1010_off + 379 * ccomps * dcomps);

            auto g_x_0_y_0_xyy_xyyyyz = cbuffer.data(fi_geom_1010_off + 380 * ccomps * dcomps);

            auto g_x_0_y_0_xyy_xyyyzz = cbuffer.data(fi_geom_1010_off + 381 * ccomps * dcomps);

            auto g_x_0_y_0_xyy_xyyzzz = cbuffer.data(fi_geom_1010_off + 382 * ccomps * dcomps);

            auto g_x_0_y_0_xyy_xyzzzz = cbuffer.data(fi_geom_1010_off + 383 * ccomps * dcomps);

            auto g_x_0_y_0_xyy_xzzzzz = cbuffer.data(fi_geom_1010_off + 384 * ccomps * dcomps);

            auto g_x_0_y_0_xyy_yyyyyy = cbuffer.data(fi_geom_1010_off + 385 * ccomps * dcomps);

            auto g_x_0_y_0_xyy_yyyyyz = cbuffer.data(fi_geom_1010_off + 386 * ccomps * dcomps);

            auto g_x_0_y_0_xyy_yyyyzz = cbuffer.data(fi_geom_1010_off + 387 * ccomps * dcomps);

            auto g_x_0_y_0_xyy_yyyzzz = cbuffer.data(fi_geom_1010_off + 388 * ccomps * dcomps);

            auto g_x_0_y_0_xyy_yyzzzz = cbuffer.data(fi_geom_1010_off + 389 * ccomps * dcomps);

            auto g_x_0_y_0_xyy_yzzzzz = cbuffer.data(fi_geom_1010_off + 390 * ccomps * dcomps);

            auto g_x_0_y_0_xyy_zzzzzz = cbuffer.data(fi_geom_1010_off + 391 * ccomps * dcomps);

            #pragma omp simd aligned(g_x_0_y_0_xy_xxxxxx, g_x_0_y_0_xy_xxxxxxy, g_x_0_y_0_xy_xxxxxy, g_x_0_y_0_xy_xxxxxyy, g_x_0_y_0_xy_xxxxxyz, g_x_0_y_0_xy_xxxxxz, g_x_0_y_0_xy_xxxxyy, g_x_0_y_0_xy_xxxxyyy, g_x_0_y_0_xy_xxxxyyz, g_x_0_y_0_xy_xxxxyz, g_x_0_y_0_xy_xxxxyzz, g_x_0_y_0_xy_xxxxzz, g_x_0_y_0_xy_xxxyyy, g_x_0_y_0_xy_xxxyyyy, g_x_0_y_0_xy_xxxyyyz, g_x_0_y_0_xy_xxxyyz, g_x_0_y_0_xy_xxxyyzz, g_x_0_y_0_xy_xxxyzz, g_x_0_y_0_xy_xxxyzzz, g_x_0_y_0_xy_xxxzzz, g_x_0_y_0_xy_xxyyyy, g_x_0_y_0_xy_xxyyyyy, g_x_0_y_0_xy_xxyyyyz, g_x_0_y_0_xy_xxyyyz, g_x_0_y_0_xy_xxyyyzz, g_x_0_y_0_xy_xxyyzz, g_x_0_y_0_xy_xxyyzzz, g_x_0_y_0_xy_xxyzzz, g_x_0_y_0_xy_xxyzzzz, g_x_0_y_0_xy_xxzzzz, g_x_0_y_0_xy_xyyyyy, g_x_0_y_0_xy_xyyyyyy, g_x_0_y_0_xy_xyyyyyz, g_x_0_y_0_xy_xyyyyz, g_x_0_y_0_xy_xyyyyzz, g_x_0_y_0_xy_xyyyzz, g_x_0_y_0_xy_xyyyzzz, g_x_0_y_0_xy_xyyzzz, g_x_0_y_0_xy_xyyzzzz, g_x_0_y_0_xy_xyzzzz, g_x_0_y_0_xy_xyzzzzz, g_x_0_y_0_xy_xzzzzz, g_x_0_y_0_xy_yyyyyy, g_x_0_y_0_xy_yyyyyyy, g_x_0_y_0_xy_yyyyyyz, g_x_0_y_0_xy_yyyyyz, g_x_0_y_0_xy_yyyyyzz, g_x_0_y_0_xy_yyyyzz, g_x_0_y_0_xy_yyyyzzz, g_x_0_y_0_xy_yyyzzz, g_x_0_y_0_xy_yyyzzzz, g_x_0_y_0_xy_yyzzzz, g_x_0_y_0_xy_yyzzzzz, g_x_0_y_0_xy_yzzzzz, g_x_0_y_0_xy_yzzzzzz, g_x_0_y_0_xy_zzzzzz, g_x_0_y_0_xyy_xxxxxx, g_x_0_y_0_xyy_xxxxxy, g_x_0_y_0_xyy_xxxxxz, g_x_0_y_0_xyy_xxxxyy, g_x_0_y_0_xyy_xxxxyz, g_x_0_y_0_xyy_xxxxzz, g_x_0_y_0_xyy_xxxyyy, g_x_0_y_0_xyy_xxxyyz, g_x_0_y_0_xyy_xxxyzz, g_x_0_y_0_xyy_xxxzzz, g_x_0_y_0_xyy_xxyyyy, g_x_0_y_0_xyy_xxyyyz, g_x_0_y_0_xyy_xxyyzz, g_x_0_y_0_xyy_xxyzzz, g_x_0_y_0_xyy_xxzzzz, g_x_0_y_0_xyy_xyyyyy, g_x_0_y_0_xyy_xyyyyz, g_x_0_y_0_xyy_xyyyzz, g_x_0_y_0_xyy_xyyzzz, g_x_0_y_0_xyy_xyzzzz, g_x_0_y_0_xyy_xzzzzz, g_x_0_y_0_xyy_yyyyyy, g_x_0_y_0_xyy_yyyyyz, g_x_0_y_0_xyy_yyyyzz, g_x_0_y_0_xyy_yyyzzz, g_x_0_y_0_xyy_yyzzzz, g_x_0_y_0_xyy_yzzzzz, g_x_0_y_0_xyy_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_x_0_y_0_xyy_xxxxxx[k] = -g_x_0_y_0_xy_xxxxxx[k] * ab_y + g_x_0_y_0_xy_xxxxxxy[k];

                g_x_0_y_0_xyy_xxxxxy[k] = -g_x_0_y_0_xy_xxxxxy[k] * ab_y + g_x_0_y_0_xy_xxxxxyy[k];

                g_x_0_y_0_xyy_xxxxxz[k] = -g_x_0_y_0_xy_xxxxxz[k] * ab_y + g_x_0_y_0_xy_xxxxxyz[k];

                g_x_0_y_0_xyy_xxxxyy[k] = -g_x_0_y_0_xy_xxxxyy[k] * ab_y + g_x_0_y_0_xy_xxxxyyy[k];

                g_x_0_y_0_xyy_xxxxyz[k] = -g_x_0_y_0_xy_xxxxyz[k] * ab_y + g_x_0_y_0_xy_xxxxyyz[k];

                g_x_0_y_0_xyy_xxxxzz[k] = -g_x_0_y_0_xy_xxxxzz[k] * ab_y + g_x_0_y_0_xy_xxxxyzz[k];

                g_x_0_y_0_xyy_xxxyyy[k] = -g_x_0_y_0_xy_xxxyyy[k] * ab_y + g_x_0_y_0_xy_xxxyyyy[k];

                g_x_0_y_0_xyy_xxxyyz[k] = -g_x_0_y_0_xy_xxxyyz[k] * ab_y + g_x_0_y_0_xy_xxxyyyz[k];

                g_x_0_y_0_xyy_xxxyzz[k] = -g_x_0_y_0_xy_xxxyzz[k] * ab_y + g_x_0_y_0_xy_xxxyyzz[k];

                g_x_0_y_0_xyy_xxxzzz[k] = -g_x_0_y_0_xy_xxxzzz[k] * ab_y + g_x_0_y_0_xy_xxxyzzz[k];

                g_x_0_y_0_xyy_xxyyyy[k] = -g_x_0_y_0_xy_xxyyyy[k] * ab_y + g_x_0_y_0_xy_xxyyyyy[k];

                g_x_0_y_0_xyy_xxyyyz[k] = -g_x_0_y_0_xy_xxyyyz[k] * ab_y + g_x_0_y_0_xy_xxyyyyz[k];

                g_x_0_y_0_xyy_xxyyzz[k] = -g_x_0_y_0_xy_xxyyzz[k] * ab_y + g_x_0_y_0_xy_xxyyyzz[k];

                g_x_0_y_0_xyy_xxyzzz[k] = -g_x_0_y_0_xy_xxyzzz[k] * ab_y + g_x_0_y_0_xy_xxyyzzz[k];

                g_x_0_y_0_xyy_xxzzzz[k] = -g_x_0_y_0_xy_xxzzzz[k] * ab_y + g_x_0_y_0_xy_xxyzzzz[k];

                g_x_0_y_0_xyy_xyyyyy[k] = -g_x_0_y_0_xy_xyyyyy[k] * ab_y + g_x_0_y_0_xy_xyyyyyy[k];

                g_x_0_y_0_xyy_xyyyyz[k] = -g_x_0_y_0_xy_xyyyyz[k] * ab_y + g_x_0_y_0_xy_xyyyyyz[k];

                g_x_0_y_0_xyy_xyyyzz[k] = -g_x_0_y_0_xy_xyyyzz[k] * ab_y + g_x_0_y_0_xy_xyyyyzz[k];

                g_x_0_y_0_xyy_xyyzzz[k] = -g_x_0_y_0_xy_xyyzzz[k] * ab_y + g_x_0_y_0_xy_xyyyzzz[k];

                g_x_0_y_0_xyy_xyzzzz[k] = -g_x_0_y_0_xy_xyzzzz[k] * ab_y + g_x_0_y_0_xy_xyyzzzz[k];

                g_x_0_y_0_xyy_xzzzzz[k] = -g_x_0_y_0_xy_xzzzzz[k] * ab_y + g_x_0_y_0_xy_xyzzzzz[k];

                g_x_0_y_0_xyy_yyyyyy[k] = -g_x_0_y_0_xy_yyyyyy[k] * ab_y + g_x_0_y_0_xy_yyyyyyy[k];

                g_x_0_y_0_xyy_yyyyyz[k] = -g_x_0_y_0_xy_yyyyyz[k] * ab_y + g_x_0_y_0_xy_yyyyyyz[k];

                g_x_0_y_0_xyy_yyyyzz[k] = -g_x_0_y_0_xy_yyyyzz[k] * ab_y + g_x_0_y_0_xy_yyyyyzz[k];

                g_x_0_y_0_xyy_yyyzzz[k] = -g_x_0_y_0_xy_yyyzzz[k] * ab_y + g_x_0_y_0_xy_yyyyzzz[k];

                g_x_0_y_0_xyy_yyzzzz[k] = -g_x_0_y_0_xy_yyzzzz[k] * ab_y + g_x_0_y_0_xy_yyyzzzz[k];

                g_x_0_y_0_xyy_yzzzzz[k] = -g_x_0_y_0_xy_yzzzzz[k] * ab_y + g_x_0_y_0_xy_yyzzzzz[k];

                g_x_0_y_0_xyy_zzzzzz[k] = -g_x_0_y_0_xy_zzzzzz[k] * ab_y + g_x_0_y_0_xy_yzzzzzz[k];
            }

            /// Set up 392-420 components of targeted buffer : cbuffer.data(

            auto g_x_0_y_0_xyz_xxxxxx = cbuffer.data(fi_geom_1010_off + 392 * ccomps * dcomps);

            auto g_x_0_y_0_xyz_xxxxxy = cbuffer.data(fi_geom_1010_off + 393 * ccomps * dcomps);

            auto g_x_0_y_0_xyz_xxxxxz = cbuffer.data(fi_geom_1010_off + 394 * ccomps * dcomps);

            auto g_x_0_y_0_xyz_xxxxyy = cbuffer.data(fi_geom_1010_off + 395 * ccomps * dcomps);

            auto g_x_0_y_0_xyz_xxxxyz = cbuffer.data(fi_geom_1010_off + 396 * ccomps * dcomps);

            auto g_x_0_y_0_xyz_xxxxzz = cbuffer.data(fi_geom_1010_off + 397 * ccomps * dcomps);

            auto g_x_0_y_0_xyz_xxxyyy = cbuffer.data(fi_geom_1010_off + 398 * ccomps * dcomps);

            auto g_x_0_y_0_xyz_xxxyyz = cbuffer.data(fi_geom_1010_off + 399 * ccomps * dcomps);

            auto g_x_0_y_0_xyz_xxxyzz = cbuffer.data(fi_geom_1010_off + 400 * ccomps * dcomps);

            auto g_x_0_y_0_xyz_xxxzzz = cbuffer.data(fi_geom_1010_off + 401 * ccomps * dcomps);

            auto g_x_0_y_0_xyz_xxyyyy = cbuffer.data(fi_geom_1010_off + 402 * ccomps * dcomps);

            auto g_x_0_y_0_xyz_xxyyyz = cbuffer.data(fi_geom_1010_off + 403 * ccomps * dcomps);

            auto g_x_0_y_0_xyz_xxyyzz = cbuffer.data(fi_geom_1010_off + 404 * ccomps * dcomps);

            auto g_x_0_y_0_xyz_xxyzzz = cbuffer.data(fi_geom_1010_off + 405 * ccomps * dcomps);

            auto g_x_0_y_0_xyz_xxzzzz = cbuffer.data(fi_geom_1010_off + 406 * ccomps * dcomps);

            auto g_x_0_y_0_xyz_xyyyyy = cbuffer.data(fi_geom_1010_off + 407 * ccomps * dcomps);

            auto g_x_0_y_0_xyz_xyyyyz = cbuffer.data(fi_geom_1010_off + 408 * ccomps * dcomps);

            auto g_x_0_y_0_xyz_xyyyzz = cbuffer.data(fi_geom_1010_off + 409 * ccomps * dcomps);

            auto g_x_0_y_0_xyz_xyyzzz = cbuffer.data(fi_geom_1010_off + 410 * ccomps * dcomps);

            auto g_x_0_y_0_xyz_xyzzzz = cbuffer.data(fi_geom_1010_off + 411 * ccomps * dcomps);

            auto g_x_0_y_0_xyz_xzzzzz = cbuffer.data(fi_geom_1010_off + 412 * ccomps * dcomps);

            auto g_x_0_y_0_xyz_yyyyyy = cbuffer.data(fi_geom_1010_off + 413 * ccomps * dcomps);

            auto g_x_0_y_0_xyz_yyyyyz = cbuffer.data(fi_geom_1010_off + 414 * ccomps * dcomps);

            auto g_x_0_y_0_xyz_yyyyzz = cbuffer.data(fi_geom_1010_off + 415 * ccomps * dcomps);

            auto g_x_0_y_0_xyz_yyyzzz = cbuffer.data(fi_geom_1010_off + 416 * ccomps * dcomps);

            auto g_x_0_y_0_xyz_yyzzzz = cbuffer.data(fi_geom_1010_off + 417 * ccomps * dcomps);

            auto g_x_0_y_0_xyz_yzzzzz = cbuffer.data(fi_geom_1010_off + 418 * ccomps * dcomps);

            auto g_x_0_y_0_xyz_zzzzzz = cbuffer.data(fi_geom_1010_off + 419 * ccomps * dcomps);

            #pragma omp simd aligned(g_x_0_y_0_xyz_xxxxxx, g_x_0_y_0_xyz_xxxxxy, g_x_0_y_0_xyz_xxxxxz, g_x_0_y_0_xyz_xxxxyy, g_x_0_y_0_xyz_xxxxyz, g_x_0_y_0_xyz_xxxxzz, g_x_0_y_0_xyz_xxxyyy, g_x_0_y_0_xyz_xxxyyz, g_x_0_y_0_xyz_xxxyzz, g_x_0_y_0_xyz_xxxzzz, g_x_0_y_0_xyz_xxyyyy, g_x_0_y_0_xyz_xxyyyz, g_x_0_y_0_xyz_xxyyzz, g_x_0_y_0_xyz_xxyzzz, g_x_0_y_0_xyz_xxzzzz, g_x_0_y_0_xyz_xyyyyy, g_x_0_y_0_xyz_xyyyyz, g_x_0_y_0_xyz_xyyyzz, g_x_0_y_0_xyz_xyyzzz, g_x_0_y_0_xyz_xyzzzz, g_x_0_y_0_xyz_xzzzzz, g_x_0_y_0_xyz_yyyyyy, g_x_0_y_0_xyz_yyyyyz, g_x_0_y_0_xyz_yyyyzz, g_x_0_y_0_xyz_yyyzzz, g_x_0_y_0_xyz_yyzzzz, g_x_0_y_0_xyz_yzzzzz, g_x_0_y_0_xyz_zzzzzz, g_x_0_y_0_xz_xxxxxx, g_x_0_y_0_xz_xxxxxxy, g_x_0_y_0_xz_xxxxxy, g_x_0_y_0_xz_xxxxxyy, g_x_0_y_0_xz_xxxxxyz, g_x_0_y_0_xz_xxxxxz, g_x_0_y_0_xz_xxxxyy, g_x_0_y_0_xz_xxxxyyy, g_x_0_y_0_xz_xxxxyyz, g_x_0_y_0_xz_xxxxyz, g_x_0_y_0_xz_xxxxyzz, g_x_0_y_0_xz_xxxxzz, g_x_0_y_0_xz_xxxyyy, g_x_0_y_0_xz_xxxyyyy, g_x_0_y_0_xz_xxxyyyz, g_x_0_y_0_xz_xxxyyz, g_x_0_y_0_xz_xxxyyzz, g_x_0_y_0_xz_xxxyzz, g_x_0_y_0_xz_xxxyzzz, g_x_0_y_0_xz_xxxzzz, g_x_0_y_0_xz_xxyyyy, g_x_0_y_0_xz_xxyyyyy, g_x_0_y_0_xz_xxyyyyz, g_x_0_y_0_xz_xxyyyz, g_x_0_y_0_xz_xxyyyzz, g_x_0_y_0_xz_xxyyzz, g_x_0_y_0_xz_xxyyzzz, g_x_0_y_0_xz_xxyzzz, g_x_0_y_0_xz_xxyzzzz, g_x_0_y_0_xz_xxzzzz, g_x_0_y_0_xz_xyyyyy, g_x_0_y_0_xz_xyyyyyy, g_x_0_y_0_xz_xyyyyyz, g_x_0_y_0_xz_xyyyyz, g_x_0_y_0_xz_xyyyyzz, g_x_0_y_0_xz_xyyyzz, g_x_0_y_0_xz_xyyyzzz, g_x_0_y_0_xz_xyyzzz, g_x_0_y_0_xz_xyyzzzz, g_x_0_y_0_xz_xyzzzz, g_x_0_y_0_xz_xyzzzzz, g_x_0_y_0_xz_xzzzzz, g_x_0_y_0_xz_yyyyyy, g_x_0_y_0_xz_yyyyyyy, g_x_0_y_0_xz_yyyyyyz, g_x_0_y_0_xz_yyyyyz, g_x_0_y_0_xz_yyyyyzz, g_x_0_y_0_xz_yyyyzz, g_x_0_y_0_xz_yyyyzzz, g_x_0_y_0_xz_yyyzzz, g_x_0_y_0_xz_yyyzzzz, g_x_0_y_0_xz_yyzzzz, g_x_0_y_0_xz_yyzzzzz, g_x_0_y_0_xz_yzzzzz, g_x_0_y_0_xz_yzzzzzz, g_x_0_y_0_xz_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_x_0_y_0_xyz_xxxxxx[k] = -g_x_0_y_0_xz_xxxxxx[k] * ab_y + g_x_0_y_0_xz_xxxxxxy[k];

                g_x_0_y_0_xyz_xxxxxy[k] = -g_x_0_y_0_xz_xxxxxy[k] * ab_y + g_x_0_y_0_xz_xxxxxyy[k];

                g_x_0_y_0_xyz_xxxxxz[k] = -g_x_0_y_0_xz_xxxxxz[k] * ab_y + g_x_0_y_0_xz_xxxxxyz[k];

                g_x_0_y_0_xyz_xxxxyy[k] = -g_x_0_y_0_xz_xxxxyy[k] * ab_y + g_x_0_y_0_xz_xxxxyyy[k];

                g_x_0_y_0_xyz_xxxxyz[k] = -g_x_0_y_0_xz_xxxxyz[k] * ab_y + g_x_0_y_0_xz_xxxxyyz[k];

                g_x_0_y_0_xyz_xxxxzz[k] = -g_x_0_y_0_xz_xxxxzz[k] * ab_y + g_x_0_y_0_xz_xxxxyzz[k];

                g_x_0_y_0_xyz_xxxyyy[k] = -g_x_0_y_0_xz_xxxyyy[k] * ab_y + g_x_0_y_0_xz_xxxyyyy[k];

                g_x_0_y_0_xyz_xxxyyz[k] = -g_x_0_y_0_xz_xxxyyz[k] * ab_y + g_x_0_y_0_xz_xxxyyyz[k];

                g_x_0_y_0_xyz_xxxyzz[k] = -g_x_0_y_0_xz_xxxyzz[k] * ab_y + g_x_0_y_0_xz_xxxyyzz[k];

                g_x_0_y_0_xyz_xxxzzz[k] = -g_x_0_y_0_xz_xxxzzz[k] * ab_y + g_x_0_y_0_xz_xxxyzzz[k];

                g_x_0_y_0_xyz_xxyyyy[k] = -g_x_0_y_0_xz_xxyyyy[k] * ab_y + g_x_0_y_0_xz_xxyyyyy[k];

                g_x_0_y_0_xyz_xxyyyz[k] = -g_x_0_y_0_xz_xxyyyz[k] * ab_y + g_x_0_y_0_xz_xxyyyyz[k];

                g_x_0_y_0_xyz_xxyyzz[k] = -g_x_0_y_0_xz_xxyyzz[k] * ab_y + g_x_0_y_0_xz_xxyyyzz[k];

                g_x_0_y_0_xyz_xxyzzz[k] = -g_x_0_y_0_xz_xxyzzz[k] * ab_y + g_x_0_y_0_xz_xxyyzzz[k];

                g_x_0_y_0_xyz_xxzzzz[k] = -g_x_0_y_0_xz_xxzzzz[k] * ab_y + g_x_0_y_0_xz_xxyzzzz[k];

                g_x_0_y_0_xyz_xyyyyy[k] = -g_x_0_y_0_xz_xyyyyy[k] * ab_y + g_x_0_y_0_xz_xyyyyyy[k];

                g_x_0_y_0_xyz_xyyyyz[k] = -g_x_0_y_0_xz_xyyyyz[k] * ab_y + g_x_0_y_0_xz_xyyyyyz[k];

                g_x_0_y_0_xyz_xyyyzz[k] = -g_x_0_y_0_xz_xyyyzz[k] * ab_y + g_x_0_y_0_xz_xyyyyzz[k];

                g_x_0_y_0_xyz_xyyzzz[k] = -g_x_0_y_0_xz_xyyzzz[k] * ab_y + g_x_0_y_0_xz_xyyyzzz[k];

                g_x_0_y_0_xyz_xyzzzz[k] = -g_x_0_y_0_xz_xyzzzz[k] * ab_y + g_x_0_y_0_xz_xyyzzzz[k];

                g_x_0_y_0_xyz_xzzzzz[k] = -g_x_0_y_0_xz_xzzzzz[k] * ab_y + g_x_0_y_0_xz_xyzzzzz[k];

                g_x_0_y_0_xyz_yyyyyy[k] = -g_x_0_y_0_xz_yyyyyy[k] * ab_y + g_x_0_y_0_xz_yyyyyyy[k];

                g_x_0_y_0_xyz_yyyyyz[k] = -g_x_0_y_0_xz_yyyyyz[k] * ab_y + g_x_0_y_0_xz_yyyyyyz[k];

                g_x_0_y_0_xyz_yyyyzz[k] = -g_x_0_y_0_xz_yyyyzz[k] * ab_y + g_x_0_y_0_xz_yyyyyzz[k];

                g_x_0_y_0_xyz_yyyzzz[k] = -g_x_0_y_0_xz_yyyzzz[k] * ab_y + g_x_0_y_0_xz_yyyyzzz[k];

                g_x_0_y_0_xyz_yyzzzz[k] = -g_x_0_y_0_xz_yyzzzz[k] * ab_y + g_x_0_y_0_xz_yyyzzzz[k];

                g_x_0_y_0_xyz_yzzzzz[k] = -g_x_0_y_0_xz_yzzzzz[k] * ab_y + g_x_0_y_0_xz_yyzzzzz[k];

                g_x_0_y_0_xyz_zzzzzz[k] = -g_x_0_y_0_xz_zzzzzz[k] * ab_y + g_x_0_y_0_xz_yzzzzzz[k];
            }

            /// Set up 420-448 components of targeted buffer : cbuffer.data(

            auto g_x_0_y_0_xzz_xxxxxx = cbuffer.data(fi_geom_1010_off + 420 * ccomps * dcomps);

            auto g_x_0_y_0_xzz_xxxxxy = cbuffer.data(fi_geom_1010_off + 421 * ccomps * dcomps);

            auto g_x_0_y_0_xzz_xxxxxz = cbuffer.data(fi_geom_1010_off + 422 * ccomps * dcomps);

            auto g_x_0_y_0_xzz_xxxxyy = cbuffer.data(fi_geom_1010_off + 423 * ccomps * dcomps);

            auto g_x_0_y_0_xzz_xxxxyz = cbuffer.data(fi_geom_1010_off + 424 * ccomps * dcomps);

            auto g_x_0_y_0_xzz_xxxxzz = cbuffer.data(fi_geom_1010_off + 425 * ccomps * dcomps);

            auto g_x_0_y_0_xzz_xxxyyy = cbuffer.data(fi_geom_1010_off + 426 * ccomps * dcomps);

            auto g_x_0_y_0_xzz_xxxyyz = cbuffer.data(fi_geom_1010_off + 427 * ccomps * dcomps);

            auto g_x_0_y_0_xzz_xxxyzz = cbuffer.data(fi_geom_1010_off + 428 * ccomps * dcomps);

            auto g_x_0_y_0_xzz_xxxzzz = cbuffer.data(fi_geom_1010_off + 429 * ccomps * dcomps);

            auto g_x_0_y_0_xzz_xxyyyy = cbuffer.data(fi_geom_1010_off + 430 * ccomps * dcomps);

            auto g_x_0_y_0_xzz_xxyyyz = cbuffer.data(fi_geom_1010_off + 431 * ccomps * dcomps);

            auto g_x_0_y_0_xzz_xxyyzz = cbuffer.data(fi_geom_1010_off + 432 * ccomps * dcomps);

            auto g_x_0_y_0_xzz_xxyzzz = cbuffer.data(fi_geom_1010_off + 433 * ccomps * dcomps);

            auto g_x_0_y_0_xzz_xxzzzz = cbuffer.data(fi_geom_1010_off + 434 * ccomps * dcomps);

            auto g_x_0_y_0_xzz_xyyyyy = cbuffer.data(fi_geom_1010_off + 435 * ccomps * dcomps);

            auto g_x_0_y_0_xzz_xyyyyz = cbuffer.data(fi_geom_1010_off + 436 * ccomps * dcomps);

            auto g_x_0_y_0_xzz_xyyyzz = cbuffer.data(fi_geom_1010_off + 437 * ccomps * dcomps);

            auto g_x_0_y_0_xzz_xyyzzz = cbuffer.data(fi_geom_1010_off + 438 * ccomps * dcomps);

            auto g_x_0_y_0_xzz_xyzzzz = cbuffer.data(fi_geom_1010_off + 439 * ccomps * dcomps);

            auto g_x_0_y_0_xzz_xzzzzz = cbuffer.data(fi_geom_1010_off + 440 * ccomps * dcomps);

            auto g_x_0_y_0_xzz_yyyyyy = cbuffer.data(fi_geom_1010_off + 441 * ccomps * dcomps);

            auto g_x_0_y_0_xzz_yyyyyz = cbuffer.data(fi_geom_1010_off + 442 * ccomps * dcomps);

            auto g_x_0_y_0_xzz_yyyyzz = cbuffer.data(fi_geom_1010_off + 443 * ccomps * dcomps);

            auto g_x_0_y_0_xzz_yyyzzz = cbuffer.data(fi_geom_1010_off + 444 * ccomps * dcomps);

            auto g_x_0_y_0_xzz_yyzzzz = cbuffer.data(fi_geom_1010_off + 445 * ccomps * dcomps);

            auto g_x_0_y_0_xzz_yzzzzz = cbuffer.data(fi_geom_1010_off + 446 * ccomps * dcomps);

            auto g_x_0_y_0_xzz_zzzzzz = cbuffer.data(fi_geom_1010_off + 447 * ccomps * dcomps);

            #pragma omp simd aligned(g_x_0_y_0_xz_xxxxxx, g_x_0_y_0_xz_xxxxxxz, g_x_0_y_0_xz_xxxxxy, g_x_0_y_0_xz_xxxxxyz, g_x_0_y_0_xz_xxxxxz, g_x_0_y_0_xz_xxxxxzz, g_x_0_y_0_xz_xxxxyy, g_x_0_y_0_xz_xxxxyyz, g_x_0_y_0_xz_xxxxyz, g_x_0_y_0_xz_xxxxyzz, g_x_0_y_0_xz_xxxxzz, g_x_0_y_0_xz_xxxxzzz, g_x_0_y_0_xz_xxxyyy, g_x_0_y_0_xz_xxxyyyz, g_x_0_y_0_xz_xxxyyz, g_x_0_y_0_xz_xxxyyzz, g_x_0_y_0_xz_xxxyzz, g_x_0_y_0_xz_xxxyzzz, g_x_0_y_0_xz_xxxzzz, g_x_0_y_0_xz_xxxzzzz, g_x_0_y_0_xz_xxyyyy, g_x_0_y_0_xz_xxyyyyz, g_x_0_y_0_xz_xxyyyz, g_x_0_y_0_xz_xxyyyzz, g_x_0_y_0_xz_xxyyzz, g_x_0_y_0_xz_xxyyzzz, g_x_0_y_0_xz_xxyzzz, g_x_0_y_0_xz_xxyzzzz, g_x_0_y_0_xz_xxzzzz, g_x_0_y_0_xz_xxzzzzz, g_x_0_y_0_xz_xyyyyy, g_x_0_y_0_xz_xyyyyyz, g_x_0_y_0_xz_xyyyyz, g_x_0_y_0_xz_xyyyyzz, g_x_0_y_0_xz_xyyyzz, g_x_0_y_0_xz_xyyyzzz, g_x_0_y_0_xz_xyyzzz, g_x_0_y_0_xz_xyyzzzz, g_x_0_y_0_xz_xyzzzz, g_x_0_y_0_xz_xyzzzzz, g_x_0_y_0_xz_xzzzzz, g_x_0_y_0_xz_xzzzzzz, g_x_0_y_0_xz_yyyyyy, g_x_0_y_0_xz_yyyyyyz, g_x_0_y_0_xz_yyyyyz, g_x_0_y_0_xz_yyyyyzz, g_x_0_y_0_xz_yyyyzz, g_x_0_y_0_xz_yyyyzzz, g_x_0_y_0_xz_yyyzzz, g_x_0_y_0_xz_yyyzzzz, g_x_0_y_0_xz_yyzzzz, g_x_0_y_0_xz_yyzzzzz, g_x_0_y_0_xz_yzzzzz, g_x_0_y_0_xz_yzzzzzz, g_x_0_y_0_xz_zzzzzz, g_x_0_y_0_xz_zzzzzzz, g_x_0_y_0_xzz_xxxxxx, g_x_0_y_0_xzz_xxxxxy, g_x_0_y_0_xzz_xxxxxz, g_x_0_y_0_xzz_xxxxyy, g_x_0_y_0_xzz_xxxxyz, g_x_0_y_0_xzz_xxxxzz, g_x_0_y_0_xzz_xxxyyy, g_x_0_y_0_xzz_xxxyyz, g_x_0_y_0_xzz_xxxyzz, g_x_0_y_0_xzz_xxxzzz, g_x_0_y_0_xzz_xxyyyy, g_x_0_y_0_xzz_xxyyyz, g_x_0_y_0_xzz_xxyyzz, g_x_0_y_0_xzz_xxyzzz, g_x_0_y_0_xzz_xxzzzz, g_x_0_y_0_xzz_xyyyyy, g_x_0_y_0_xzz_xyyyyz, g_x_0_y_0_xzz_xyyyzz, g_x_0_y_0_xzz_xyyzzz, g_x_0_y_0_xzz_xyzzzz, g_x_0_y_0_xzz_xzzzzz, g_x_0_y_0_xzz_yyyyyy, g_x_0_y_0_xzz_yyyyyz, g_x_0_y_0_xzz_yyyyzz, g_x_0_y_0_xzz_yyyzzz, g_x_0_y_0_xzz_yyzzzz, g_x_0_y_0_xzz_yzzzzz, g_x_0_y_0_xzz_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_x_0_y_0_xzz_xxxxxx[k] = -g_x_0_y_0_xz_xxxxxx[k] * ab_z + g_x_0_y_0_xz_xxxxxxz[k];

                g_x_0_y_0_xzz_xxxxxy[k] = -g_x_0_y_0_xz_xxxxxy[k] * ab_z + g_x_0_y_0_xz_xxxxxyz[k];

                g_x_0_y_0_xzz_xxxxxz[k] = -g_x_0_y_0_xz_xxxxxz[k] * ab_z + g_x_0_y_0_xz_xxxxxzz[k];

                g_x_0_y_0_xzz_xxxxyy[k] = -g_x_0_y_0_xz_xxxxyy[k] * ab_z + g_x_0_y_0_xz_xxxxyyz[k];

                g_x_0_y_0_xzz_xxxxyz[k] = -g_x_0_y_0_xz_xxxxyz[k] * ab_z + g_x_0_y_0_xz_xxxxyzz[k];

                g_x_0_y_0_xzz_xxxxzz[k] = -g_x_0_y_0_xz_xxxxzz[k] * ab_z + g_x_0_y_0_xz_xxxxzzz[k];

                g_x_0_y_0_xzz_xxxyyy[k] = -g_x_0_y_0_xz_xxxyyy[k] * ab_z + g_x_0_y_0_xz_xxxyyyz[k];

                g_x_0_y_0_xzz_xxxyyz[k] = -g_x_0_y_0_xz_xxxyyz[k] * ab_z + g_x_0_y_0_xz_xxxyyzz[k];

                g_x_0_y_0_xzz_xxxyzz[k] = -g_x_0_y_0_xz_xxxyzz[k] * ab_z + g_x_0_y_0_xz_xxxyzzz[k];

                g_x_0_y_0_xzz_xxxzzz[k] = -g_x_0_y_0_xz_xxxzzz[k] * ab_z + g_x_0_y_0_xz_xxxzzzz[k];

                g_x_0_y_0_xzz_xxyyyy[k] = -g_x_0_y_0_xz_xxyyyy[k] * ab_z + g_x_0_y_0_xz_xxyyyyz[k];

                g_x_0_y_0_xzz_xxyyyz[k] = -g_x_0_y_0_xz_xxyyyz[k] * ab_z + g_x_0_y_0_xz_xxyyyzz[k];

                g_x_0_y_0_xzz_xxyyzz[k] = -g_x_0_y_0_xz_xxyyzz[k] * ab_z + g_x_0_y_0_xz_xxyyzzz[k];

                g_x_0_y_0_xzz_xxyzzz[k] = -g_x_0_y_0_xz_xxyzzz[k] * ab_z + g_x_0_y_0_xz_xxyzzzz[k];

                g_x_0_y_0_xzz_xxzzzz[k] = -g_x_0_y_0_xz_xxzzzz[k] * ab_z + g_x_0_y_0_xz_xxzzzzz[k];

                g_x_0_y_0_xzz_xyyyyy[k] = -g_x_0_y_0_xz_xyyyyy[k] * ab_z + g_x_0_y_0_xz_xyyyyyz[k];

                g_x_0_y_0_xzz_xyyyyz[k] = -g_x_0_y_0_xz_xyyyyz[k] * ab_z + g_x_0_y_0_xz_xyyyyzz[k];

                g_x_0_y_0_xzz_xyyyzz[k] = -g_x_0_y_0_xz_xyyyzz[k] * ab_z + g_x_0_y_0_xz_xyyyzzz[k];

                g_x_0_y_0_xzz_xyyzzz[k] = -g_x_0_y_0_xz_xyyzzz[k] * ab_z + g_x_0_y_0_xz_xyyzzzz[k];

                g_x_0_y_0_xzz_xyzzzz[k] = -g_x_0_y_0_xz_xyzzzz[k] * ab_z + g_x_0_y_0_xz_xyzzzzz[k];

                g_x_0_y_0_xzz_xzzzzz[k] = -g_x_0_y_0_xz_xzzzzz[k] * ab_z + g_x_0_y_0_xz_xzzzzzz[k];

                g_x_0_y_0_xzz_yyyyyy[k] = -g_x_0_y_0_xz_yyyyyy[k] * ab_z + g_x_0_y_0_xz_yyyyyyz[k];

                g_x_0_y_0_xzz_yyyyyz[k] = -g_x_0_y_0_xz_yyyyyz[k] * ab_z + g_x_0_y_0_xz_yyyyyzz[k];

                g_x_0_y_0_xzz_yyyyzz[k] = -g_x_0_y_0_xz_yyyyzz[k] * ab_z + g_x_0_y_0_xz_yyyyzzz[k];

                g_x_0_y_0_xzz_yyyzzz[k] = -g_x_0_y_0_xz_yyyzzz[k] * ab_z + g_x_0_y_0_xz_yyyzzzz[k];

                g_x_0_y_0_xzz_yyzzzz[k] = -g_x_0_y_0_xz_yyzzzz[k] * ab_z + g_x_0_y_0_xz_yyzzzzz[k];

                g_x_0_y_0_xzz_yzzzzz[k] = -g_x_0_y_0_xz_yzzzzz[k] * ab_z + g_x_0_y_0_xz_yzzzzzz[k];

                g_x_0_y_0_xzz_zzzzzz[k] = -g_x_0_y_0_xz_zzzzzz[k] * ab_z + g_x_0_y_0_xz_zzzzzzz[k];
            }

            /// Set up 448-476 components of targeted buffer : cbuffer.data(

            auto g_x_0_y_0_yyy_xxxxxx = cbuffer.data(fi_geom_1010_off + 448 * ccomps * dcomps);

            auto g_x_0_y_0_yyy_xxxxxy = cbuffer.data(fi_geom_1010_off + 449 * ccomps * dcomps);

            auto g_x_0_y_0_yyy_xxxxxz = cbuffer.data(fi_geom_1010_off + 450 * ccomps * dcomps);

            auto g_x_0_y_0_yyy_xxxxyy = cbuffer.data(fi_geom_1010_off + 451 * ccomps * dcomps);

            auto g_x_0_y_0_yyy_xxxxyz = cbuffer.data(fi_geom_1010_off + 452 * ccomps * dcomps);

            auto g_x_0_y_0_yyy_xxxxzz = cbuffer.data(fi_geom_1010_off + 453 * ccomps * dcomps);

            auto g_x_0_y_0_yyy_xxxyyy = cbuffer.data(fi_geom_1010_off + 454 * ccomps * dcomps);

            auto g_x_0_y_0_yyy_xxxyyz = cbuffer.data(fi_geom_1010_off + 455 * ccomps * dcomps);

            auto g_x_0_y_0_yyy_xxxyzz = cbuffer.data(fi_geom_1010_off + 456 * ccomps * dcomps);

            auto g_x_0_y_0_yyy_xxxzzz = cbuffer.data(fi_geom_1010_off + 457 * ccomps * dcomps);

            auto g_x_0_y_0_yyy_xxyyyy = cbuffer.data(fi_geom_1010_off + 458 * ccomps * dcomps);

            auto g_x_0_y_0_yyy_xxyyyz = cbuffer.data(fi_geom_1010_off + 459 * ccomps * dcomps);

            auto g_x_0_y_0_yyy_xxyyzz = cbuffer.data(fi_geom_1010_off + 460 * ccomps * dcomps);

            auto g_x_0_y_0_yyy_xxyzzz = cbuffer.data(fi_geom_1010_off + 461 * ccomps * dcomps);

            auto g_x_0_y_0_yyy_xxzzzz = cbuffer.data(fi_geom_1010_off + 462 * ccomps * dcomps);

            auto g_x_0_y_0_yyy_xyyyyy = cbuffer.data(fi_geom_1010_off + 463 * ccomps * dcomps);

            auto g_x_0_y_0_yyy_xyyyyz = cbuffer.data(fi_geom_1010_off + 464 * ccomps * dcomps);

            auto g_x_0_y_0_yyy_xyyyzz = cbuffer.data(fi_geom_1010_off + 465 * ccomps * dcomps);

            auto g_x_0_y_0_yyy_xyyzzz = cbuffer.data(fi_geom_1010_off + 466 * ccomps * dcomps);

            auto g_x_0_y_0_yyy_xyzzzz = cbuffer.data(fi_geom_1010_off + 467 * ccomps * dcomps);

            auto g_x_0_y_0_yyy_xzzzzz = cbuffer.data(fi_geom_1010_off + 468 * ccomps * dcomps);

            auto g_x_0_y_0_yyy_yyyyyy = cbuffer.data(fi_geom_1010_off + 469 * ccomps * dcomps);

            auto g_x_0_y_0_yyy_yyyyyz = cbuffer.data(fi_geom_1010_off + 470 * ccomps * dcomps);

            auto g_x_0_y_0_yyy_yyyyzz = cbuffer.data(fi_geom_1010_off + 471 * ccomps * dcomps);

            auto g_x_0_y_0_yyy_yyyzzz = cbuffer.data(fi_geom_1010_off + 472 * ccomps * dcomps);

            auto g_x_0_y_0_yyy_yyzzzz = cbuffer.data(fi_geom_1010_off + 473 * ccomps * dcomps);

            auto g_x_0_y_0_yyy_yzzzzz = cbuffer.data(fi_geom_1010_off + 474 * ccomps * dcomps);

            auto g_x_0_y_0_yyy_zzzzzz = cbuffer.data(fi_geom_1010_off + 475 * ccomps * dcomps);

            #pragma omp simd aligned(g_x_0_y_0_yy_xxxxxx, g_x_0_y_0_yy_xxxxxxy, g_x_0_y_0_yy_xxxxxy, g_x_0_y_0_yy_xxxxxyy, g_x_0_y_0_yy_xxxxxyz, g_x_0_y_0_yy_xxxxxz, g_x_0_y_0_yy_xxxxyy, g_x_0_y_0_yy_xxxxyyy, g_x_0_y_0_yy_xxxxyyz, g_x_0_y_0_yy_xxxxyz, g_x_0_y_0_yy_xxxxyzz, g_x_0_y_0_yy_xxxxzz, g_x_0_y_0_yy_xxxyyy, g_x_0_y_0_yy_xxxyyyy, g_x_0_y_0_yy_xxxyyyz, g_x_0_y_0_yy_xxxyyz, g_x_0_y_0_yy_xxxyyzz, g_x_0_y_0_yy_xxxyzz, g_x_0_y_0_yy_xxxyzzz, g_x_0_y_0_yy_xxxzzz, g_x_0_y_0_yy_xxyyyy, g_x_0_y_0_yy_xxyyyyy, g_x_0_y_0_yy_xxyyyyz, g_x_0_y_0_yy_xxyyyz, g_x_0_y_0_yy_xxyyyzz, g_x_0_y_0_yy_xxyyzz, g_x_0_y_0_yy_xxyyzzz, g_x_0_y_0_yy_xxyzzz, g_x_0_y_0_yy_xxyzzzz, g_x_0_y_0_yy_xxzzzz, g_x_0_y_0_yy_xyyyyy, g_x_0_y_0_yy_xyyyyyy, g_x_0_y_0_yy_xyyyyyz, g_x_0_y_0_yy_xyyyyz, g_x_0_y_0_yy_xyyyyzz, g_x_0_y_0_yy_xyyyzz, g_x_0_y_0_yy_xyyyzzz, g_x_0_y_0_yy_xyyzzz, g_x_0_y_0_yy_xyyzzzz, g_x_0_y_0_yy_xyzzzz, g_x_0_y_0_yy_xyzzzzz, g_x_0_y_0_yy_xzzzzz, g_x_0_y_0_yy_yyyyyy, g_x_0_y_0_yy_yyyyyyy, g_x_0_y_0_yy_yyyyyyz, g_x_0_y_0_yy_yyyyyz, g_x_0_y_0_yy_yyyyyzz, g_x_0_y_0_yy_yyyyzz, g_x_0_y_0_yy_yyyyzzz, g_x_0_y_0_yy_yyyzzz, g_x_0_y_0_yy_yyyzzzz, g_x_0_y_0_yy_yyzzzz, g_x_0_y_0_yy_yyzzzzz, g_x_0_y_0_yy_yzzzzz, g_x_0_y_0_yy_yzzzzzz, g_x_0_y_0_yy_zzzzzz, g_x_0_y_0_yyy_xxxxxx, g_x_0_y_0_yyy_xxxxxy, g_x_0_y_0_yyy_xxxxxz, g_x_0_y_0_yyy_xxxxyy, g_x_0_y_0_yyy_xxxxyz, g_x_0_y_0_yyy_xxxxzz, g_x_0_y_0_yyy_xxxyyy, g_x_0_y_0_yyy_xxxyyz, g_x_0_y_0_yyy_xxxyzz, g_x_0_y_0_yyy_xxxzzz, g_x_0_y_0_yyy_xxyyyy, g_x_0_y_0_yyy_xxyyyz, g_x_0_y_0_yyy_xxyyzz, g_x_0_y_0_yyy_xxyzzz, g_x_0_y_0_yyy_xxzzzz, g_x_0_y_0_yyy_xyyyyy, g_x_0_y_0_yyy_xyyyyz, g_x_0_y_0_yyy_xyyyzz, g_x_0_y_0_yyy_xyyzzz, g_x_0_y_0_yyy_xyzzzz, g_x_0_y_0_yyy_xzzzzz, g_x_0_y_0_yyy_yyyyyy, g_x_0_y_0_yyy_yyyyyz, g_x_0_y_0_yyy_yyyyzz, g_x_0_y_0_yyy_yyyzzz, g_x_0_y_0_yyy_yyzzzz, g_x_0_y_0_yyy_yzzzzz, g_x_0_y_0_yyy_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_x_0_y_0_yyy_xxxxxx[k] = -g_x_0_y_0_yy_xxxxxx[k] * ab_y + g_x_0_y_0_yy_xxxxxxy[k];

                g_x_0_y_0_yyy_xxxxxy[k] = -g_x_0_y_0_yy_xxxxxy[k] * ab_y + g_x_0_y_0_yy_xxxxxyy[k];

                g_x_0_y_0_yyy_xxxxxz[k] = -g_x_0_y_0_yy_xxxxxz[k] * ab_y + g_x_0_y_0_yy_xxxxxyz[k];

                g_x_0_y_0_yyy_xxxxyy[k] = -g_x_0_y_0_yy_xxxxyy[k] * ab_y + g_x_0_y_0_yy_xxxxyyy[k];

                g_x_0_y_0_yyy_xxxxyz[k] = -g_x_0_y_0_yy_xxxxyz[k] * ab_y + g_x_0_y_0_yy_xxxxyyz[k];

                g_x_0_y_0_yyy_xxxxzz[k] = -g_x_0_y_0_yy_xxxxzz[k] * ab_y + g_x_0_y_0_yy_xxxxyzz[k];

                g_x_0_y_0_yyy_xxxyyy[k] = -g_x_0_y_0_yy_xxxyyy[k] * ab_y + g_x_0_y_0_yy_xxxyyyy[k];

                g_x_0_y_0_yyy_xxxyyz[k] = -g_x_0_y_0_yy_xxxyyz[k] * ab_y + g_x_0_y_0_yy_xxxyyyz[k];

                g_x_0_y_0_yyy_xxxyzz[k] = -g_x_0_y_0_yy_xxxyzz[k] * ab_y + g_x_0_y_0_yy_xxxyyzz[k];

                g_x_0_y_0_yyy_xxxzzz[k] = -g_x_0_y_0_yy_xxxzzz[k] * ab_y + g_x_0_y_0_yy_xxxyzzz[k];

                g_x_0_y_0_yyy_xxyyyy[k] = -g_x_0_y_0_yy_xxyyyy[k] * ab_y + g_x_0_y_0_yy_xxyyyyy[k];

                g_x_0_y_0_yyy_xxyyyz[k] = -g_x_0_y_0_yy_xxyyyz[k] * ab_y + g_x_0_y_0_yy_xxyyyyz[k];

                g_x_0_y_0_yyy_xxyyzz[k] = -g_x_0_y_0_yy_xxyyzz[k] * ab_y + g_x_0_y_0_yy_xxyyyzz[k];

                g_x_0_y_0_yyy_xxyzzz[k] = -g_x_0_y_0_yy_xxyzzz[k] * ab_y + g_x_0_y_0_yy_xxyyzzz[k];

                g_x_0_y_0_yyy_xxzzzz[k] = -g_x_0_y_0_yy_xxzzzz[k] * ab_y + g_x_0_y_0_yy_xxyzzzz[k];

                g_x_0_y_0_yyy_xyyyyy[k] = -g_x_0_y_0_yy_xyyyyy[k] * ab_y + g_x_0_y_0_yy_xyyyyyy[k];

                g_x_0_y_0_yyy_xyyyyz[k] = -g_x_0_y_0_yy_xyyyyz[k] * ab_y + g_x_0_y_0_yy_xyyyyyz[k];

                g_x_0_y_0_yyy_xyyyzz[k] = -g_x_0_y_0_yy_xyyyzz[k] * ab_y + g_x_0_y_0_yy_xyyyyzz[k];

                g_x_0_y_0_yyy_xyyzzz[k] = -g_x_0_y_0_yy_xyyzzz[k] * ab_y + g_x_0_y_0_yy_xyyyzzz[k];

                g_x_0_y_0_yyy_xyzzzz[k] = -g_x_0_y_0_yy_xyzzzz[k] * ab_y + g_x_0_y_0_yy_xyyzzzz[k];

                g_x_0_y_0_yyy_xzzzzz[k] = -g_x_0_y_0_yy_xzzzzz[k] * ab_y + g_x_0_y_0_yy_xyzzzzz[k];

                g_x_0_y_0_yyy_yyyyyy[k] = -g_x_0_y_0_yy_yyyyyy[k] * ab_y + g_x_0_y_0_yy_yyyyyyy[k];

                g_x_0_y_0_yyy_yyyyyz[k] = -g_x_0_y_0_yy_yyyyyz[k] * ab_y + g_x_0_y_0_yy_yyyyyyz[k];

                g_x_0_y_0_yyy_yyyyzz[k] = -g_x_0_y_0_yy_yyyyzz[k] * ab_y + g_x_0_y_0_yy_yyyyyzz[k];

                g_x_0_y_0_yyy_yyyzzz[k] = -g_x_0_y_0_yy_yyyzzz[k] * ab_y + g_x_0_y_0_yy_yyyyzzz[k];

                g_x_0_y_0_yyy_yyzzzz[k] = -g_x_0_y_0_yy_yyzzzz[k] * ab_y + g_x_0_y_0_yy_yyyzzzz[k];

                g_x_0_y_0_yyy_yzzzzz[k] = -g_x_0_y_0_yy_yzzzzz[k] * ab_y + g_x_0_y_0_yy_yyzzzzz[k];

                g_x_0_y_0_yyy_zzzzzz[k] = -g_x_0_y_0_yy_zzzzzz[k] * ab_y + g_x_0_y_0_yy_yzzzzzz[k];
            }

            /// Set up 476-504 components of targeted buffer : cbuffer.data(

            auto g_x_0_y_0_yyz_xxxxxx = cbuffer.data(fi_geom_1010_off + 476 * ccomps * dcomps);

            auto g_x_0_y_0_yyz_xxxxxy = cbuffer.data(fi_geom_1010_off + 477 * ccomps * dcomps);

            auto g_x_0_y_0_yyz_xxxxxz = cbuffer.data(fi_geom_1010_off + 478 * ccomps * dcomps);

            auto g_x_0_y_0_yyz_xxxxyy = cbuffer.data(fi_geom_1010_off + 479 * ccomps * dcomps);

            auto g_x_0_y_0_yyz_xxxxyz = cbuffer.data(fi_geom_1010_off + 480 * ccomps * dcomps);

            auto g_x_0_y_0_yyz_xxxxzz = cbuffer.data(fi_geom_1010_off + 481 * ccomps * dcomps);

            auto g_x_0_y_0_yyz_xxxyyy = cbuffer.data(fi_geom_1010_off + 482 * ccomps * dcomps);

            auto g_x_0_y_0_yyz_xxxyyz = cbuffer.data(fi_geom_1010_off + 483 * ccomps * dcomps);

            auto g_x_0_y_0_yyz_xxxyzz = cbuffer.data(fi_geom_1010_off + 484 * ccomps * dcomps);

            auto g_x_0_y_0_yyz_xxxzzz = cbuffer.data(fi_geom_1010_off + 485 * ccomps * dcomps);

            auto g_x_0_y_0_yyz_xxyyyy = cbuffer.data(fi_geom_1010_off + 486 * ccomps * dcomps);

            auto g_x_0_y_0_yyz_xxyyyz = cbuffer.data(fi_geom_1010_off + 487 * ccomps * dcomps);

            auto g_x_0_y_0_yyz_xxyyzz = cbuffer.data(fi_geom_1010_off + 488 * ccomps * dcomps);

            auto g_x_0_y_0_yyz_xxyzzz = cbuffer.data(fi_geom_1010_off + 489 * ccomps * dcomps);

            auto g_x_0_y_0_yyz_xxzzzz = cbuffer.data(fi_geom_1010_off + 490 * ccomps * dcomps);

            auto g_x_0_y_0_yyz_xyyyyy = cbuffer.data(fi_geom_1010_off + 491 * ccomps * dcomps);

            auto g_x_0_y_0_yyz_xyyyyz = cbuffer.data(fi_geom_1010_off + 492 * ccomps * dcomps);

            auto g_x_0_y_0_yyz_xyyyzz = cbuffer.data(fi_geom_1010_off + 493 * ccomps * dcomps);

            auto g_x_0_y_0_yyz_xyyzzz = cbuffer.data(fi_geom_1010_off + 494 * ccomps * dcomps);

            auto g_x_0_y_0_yyz_xyzzzz = cbuffer.data(fi_geom_1010_off + 495 * ccomps * dcomps);

            auto g_x_0_y_0_yyz_xzzzzz = cbuffer.data(fi_geom_1010_off + 496 * ccomps * dcomps);

            auto g_x_0_y_0_yyz_yyyyyy = cbuffer.data(fi_geom_1010_off + 497 * ccomps * dcomps);

            auto g_x_0_y_0_yyz_yyyyyz = cbuffer.data(fi_geom_1010_off + 498 * ccomps * dcomps);

            auto g_x_0_y_0_yyz_yyyyzz = cbuffer.data(fi_geom_1010_off + 499 * ccomps * dcomps);

            auto g_x_0_y_0_yyz_yyyzzz = cbuffer.data(fi_geom_1010_off + 500 * ccomps * dcomps);

            auto g_x_0_y_0_yyz_yyzzzz = cbuffer.data(fi_geom_1010_off + 501 * ccomps * dcomps);

            auto g_x_0_y_0_yyz_yzzzzz = cbuffer.data(fi_geom_1010_off + 502 * ccomps * dcomps);

            auto g_x_0_y_0_yyz_zzzzzz = cbuffer.data(fi_geom_1010_off + 503 * ccomps * dcomps);

            #pragma omp simd aligned(g_x_0_y_0_yyz_xxxxxx, g_x_0_y_0_yyz_xxxxxy, g_x_0_y_0_yyz_xxxxxz, g_x_0_y_0_yyz_xxxxyy, g_x_0_y_0_yyz_xxxxyz, g_x_0_y_0_yyz_xxxxzz, g_x_0_y_0_yyz_xxxyyy, g_x_0_y_0_yyz_xxxyyz, g_x_0_y_0_yyz_xxxyzz, g_x_0_y_0_yyz_xxxzzz, g_x_0_y_0_yyz_xxyyyy, g_x_0_y_0_yyz_xxyyyz, g_x_0_y_0_yyz_xxyyzz, g_x_0_y_0_yyz_xxyzzz, g_x_0_y_0_yyz_xxzzzz, g_x_0_y_0_yyz_xyyyyy, g_x_0_y_0_yyz_xyyyyz, g_x_0_y_0_yyz_xyyyzz, g_x_0_y_0_yyz_xyyzzz, g_x_0_y_0_yyz_xyzzzz, g_x_0_y_0_yyz_xzzzzz, g_x_0_y_0_yyz_yyyyyy, g_x_0_y_0_yyz_yyyyyz, g_x_0_y_0_yyz_yyyyzz, g_x_0_y_0_yyz_yyyzzz, g_x_0_y_0_yyz_yyzzzz, g_x_0_y_0_yyz_yzzzzz, g_x_0_y_0_yyz_zzzzzz, g_x_0_y_0_yz_xxxxxx, g_x_0_y_0_yz_xxxxxxy, g_x_0_y_0_yz_xxxxxy, g_x_0_y_0_yz_xxxxxyy, g_x_0_y_0_yz_xxxxxyz, g_x_0_y_0_yz_xxxxxz, g_x_0_y_0_yz_xxxxyy, g_x_0_y_0_yz_xxxxyyy, g_x_0_y_0_yz_xxxxyyz, g_x_0_y_0_yz_xxxxyz, g_x_0_y_0_yz_xxxxyzz, g_x_0_y_0_yz_xxxxzz, g_x_0_y_0_yz_xxxyyy, g_x_0_y_0_yz_xxxyyyy, g_x_0_y_0_yz_xxxyyyz, g_x_0_y_0_yz_xxxyyz, g_x_0_y_0_yz_xxxyyzz, g_x_0_y_0_yz_xxxyzz, g_x_0_y_0_yz_xxxyzzz, g_x_0_y_0_yz_xxxzzz, g_x_0_y_0_yz_xxyyyy, g_x_0_y_0_yz_xxyyyyy, g_x_0_y_0_yz_xxyyyyz, g_x_0_y_0_yz_xxyyyz, g_x_0_y_0_yz_xxyyyzz, g_x_0_y_0_yz_xxyyzz, g_x_0_y_0_yz_xxyyzzz, g_x_0_y_0_yz_xxyzzz, g_x_0_y_0_yz_xxyzzzz, g_x_0_y_0_yz_xxzzzz, g_x_0_y_0_yz_xyyyyy, g_x_0_y_0_yz_xyyyyyy, g_x_0_y_0_yz_xyyyyyz, g_x_0_y_0_yz_xyyyyz, g_x_0_y_0_yz_xyyyyzz, g_x_0_y_0_yz_xyyyzz, g_x_0_y_0_yz_xyyyzzz, g_x_0_y_0_yz_xyyzzz, g_x_0_y_0_yz_xyyzzzz, g_x_0_y_0_yz_xyzzzz, g_x_0_y_0_yz_xyzzzzz, g_x_0_y_0_yz_xzzzzz, g_x_0_y_0_yz_yyyyyy, g_x_0_y_0_yz_yyyyyyy, g_x_0_y_0_yz_yyyyyyz, g_x_0_y_0_yz_yyyyyz, g_x_0_y_0_yz_yyyyyzz, g_x_0_y_0_yz_yyyyzz, g_x_0_y_0_yz_yyyyzzz, g_x_0_y_0_yz_yyyzzz, g_x_0_y_0_yz_yyyzzzz, g_x_0_y_0_yz_yyzzzz, g_x_0_y_0_yz_yyzzzzz, g_x_0_y_0_yz_yzzzzz, g_x_0_y_0_yz_yzzzzzz, g_x_0_y_0_yz_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_x_0_y_0_yyz_xxxxxx[k] = -g_x_0_y_0_yz_xxxxxx[k] * ab_y + g_x_0_y_0_yz_xxxxxxy[k];

                g_x_0_y_0_yyz_xxxxxy[k] = -g_x_0_y_0_yz_xxxxxy[k] * ab_y + g_x_0_y_0_yz_xxxxxyy[k];

                g_x_0_y_0_yyz_xxxxxz[k] = -g_x_0_y_0_yz_xxxxxz[k] * ab_y + g_x_0_y_0_yz_xxxxxyz[k];

                g_x_0_y_0_yyz_xxxxyy[k] = -g_x_0_y_0_yz_xxxxyy[k] * ab_y + g_x_0_y_0_yz_xxxxyyy[k];

                g_x_0_y_0_yyz_xxxxyz[k] = -g_x_0_y_0_yz_xxxxyz[k] * ab_y + g_x_0_y_0_yz_xxxxyyz[k];

                g_x_0_y_0_yyz_xxxxzz[k] = -g_x_0_y_0_yz_xxxxzz[k] * ab_y + g_x_0_y_0_yz_xxxxyzz[k];

                g_x_0_y_0_yyz_xxxyyy[k] = -g_x_0_y_0_yz_xxxyyy[k] * ab_y + g_x_0_y_0_yz_xxxyyyy[k];

                g_x_0_y_0_yyz_xxxyyz[k] = -g_x_0_y_0_yz_xxxyyz[k] * ab_y + g_x_0_y_0_yz_xxxyyyz[k];

                g_x_0_y_0_yyz_xxxyzz[k] = -g_x_0_y_0_yz_xxxyzz[k] * ab_y + g_x_0_y_0_yz_xxxyyzz[k];

                g_x_0_y_0_yyz_xxxzzz[k] = -g_x_0_y_0_yz_xxxzzz[k] * ab_y + g_x_0_y_0_yz_xxxyzzz[k];

                g_x_0_y_0_yyz_xxyyyy[k] = -g_x_0_y_0_yz_xxyyyy[k] * ab_y + g_x_0_y_0_yz_xxyyyyy[k];

                g_x_0_y_0_yyz_xxyyyz[k] = -g_x_0_y_0_yz_xxyyyz[k] * ab_y + g_x_0_y_0_yz_xxyyyyz[k];

                g_x_0_y_0_yyz_xxyyzz[k] = -g_x_0_y_0_yz_xxyyzz[k] * ab_y + g_x_0_y_0_yz_xxyyyzz[k];

                g_x_0_y_0_yyz_xxyzzz[k] = -g_x_0_y_0_yz_xxyzzz[k] * ab_y + g_x_0_y_0_yz_xxyyzzz[k];

                g_x_0_y_0_yyz_xxzzzz[k] = -g_x_0_y_0_yz_xxzzzz[k] * ab_y + g_x_0_y_0_yz_xxyzzzz[k];

                g_x_0_y_0_yyz_xyyyyy[k] = -g_x_0_y_0_yz_xyyyyy[k] * ab_y + g_x_0_y_0_yz_xyyyyyy[k];

                g_x_0_y_0_yyz_xyyyyz[k] = -g_x_0_y_0_yz_xyyyyz[k] * ab_y + g_x_0_y_0_yz_xyyyyyz[k];

                g_x_0_y_0_yyz_xyyyzz[k] = -g_x_0_y_0_yz_xyyyzz[k] * ab_y + g_x_0_y_0_yz_xyyyyzz[k];

                g_x_0_y_0_yyz_xyyzzz[k] = -g_x_0_y_0_yz_xyyzzz[k] * ab_y + g_x_0_y_0_yz_xyyyzzz[k];

                g_x_0_y_0_yyz_xyzzzz[k] = -g_x_0_y_0_yz_xyzzzz[k] * ab_y + g_x_0_y_0_yz_xyyzzzz[k];

                g_x_0_y_0_yyz_xzzzzz[k] = -g_x_0_y_0_yz_xzzzzz[k] * ab_y + g_x_0_y_0_yz_xyzzzzz[k];

                g_x_0_y_0_yyz_yyyyyy[k] = -g_x_0_y_0_yz_yyyyyy[k] * ab_y + g_x_0_y_0_yz_yyyyyyy[k];

                g_x_0_y_0_yyz_yyyyyz[k] = -g_x_0_y_0_yz_yyyyyz[k] * ab_y + g_x_0_y_0_yz_yyyyyyz[k];

                g_x_0_y_0_yyz_yyyyzz[k] = -g_x_0_y_0_yz_yyyyzz[k] * ab_y + g_x_0_y_0_yz_yyyyyzz[k];

                g_x_0_y_0_yyz_yyyzzz[k] = -g_x_0_y_0_yz_yyyzzz[k] * ab_y + g_x_0_y_0_yz_yyyyzzz[k];

                g_x_0_y_0_yyz_yyzzzz[k] = -g_x_0_y_0_yz_yyzzzz[k] * ab_y + g_x_0_y_0_yz_yyyzzzz[k];

                g_x_0_y_0_yyz_yzzzzz[k] = -g_x_0_y_0_yz_yzzzzz[k] * ab_y + g_x_0_y_0_yz_yyzzzzz[k];

                g_x_0_y_0_yyz_zzzzzz[k] = -g_x_0_y_0_yz_zzzzzz[k] * ab_y + g_x_0_y_0_yz_yzzzzzz[k];
            }

            /// Set up 504-532 components of targeted buffer : cbuffer.data(

            auto g_x_0_y_0_yzz_xxxxxx = cbuffer.data(fi_geom_1010_off + 504 * ccomps * dcomps);

            auto g_x_0_y_0_yzz_xxxxxy = cbuffer.data(fi_geom_1010_off + 505 * ccomps * dcomps);

            auto g_x_0_y_0_yzz_xxxxxz = cbuffer.data(fi_geom_1010_off + 506 * ccomps * dcomps);

            auto g_x_0_y_0_yzz_xxxxyy = cbuffer.data(fi_geom_1010_off + 507 * ccomps * dcomps);

            auto g_x_0_y_0_yzz_xxxxyz = cbuffer.data(fi_geom_1010_off + 508 * ccomps * dcomps);

            auto g_x_0_y_0_yzz_xxxxzz = cbuffer.data(fi_geom_1010_off + 509 * ccomps * dcomps);

            auto g_x_0_y_0_yzz_xxxyyy = cbuffer.data(fi_geom_1010_off + 510 * ccomps * dcomps);

            auto g_x_0_y_0_yzz_xxxyyz = cbuffer.data(fi_geom_1010_off + 511 * ccomps * dcomps);

            auto g_x_0_y_0_yzz_xxxyzz = cbuffer.data(fi_geom_1010_off + 512 * ccomps * dcomps);

            auto g_x_0_y_0_yzz_xxxzzz = cbuffer.data(fi_geom_1010_off + 513 * ccomps * dcomps);

            auto g_x_0_y_0_yzz_xxyyyy = cbuffer.data(fi_geom_1010_off + 514 * ccomps * dcomps);

            auto g_x_0_y_0_yzz_xxyyyz = cbuffer.data(fi_geom_1010_off + 515 * ccomps * dcomps);

            auto g_x_0_y_0_yzz_xxyyzz = cbuffer.data(fi_geom_1010_off + 516 * ccomps * dcomps);

            auto g_x_0_y_0_yzz_xxyzzz = cbuffer.data(fi_geom_1010_off + 517 * ccomps * dcomps);

            auto g_x_0_y_0_yzz_xxzzzz = cbuffer.data(fi_geom_1010_off + 518 * ccomps * dcomps);

            auto g_x_0_y_0_yzz_xyyyyy = cbuffer.data(fi_geom_1010_off + 519 * ccomps * dcomps);

            auto g_x_0_y_0_yzz_xyyyyz = cbuffer.data(fi_geom_1010_off + 520 * ccomps * dcomps);

            auto g_x_0_y_0_yzz_xyyyzz = cbuffer.data(fi_geom_1010_off + 521 * ccomps * dcomps);

            auto g_x_0_y_0_yzz_xyyzzz = cbuffer.data(fi_geom_1010_off + 522 * ccomps * dcomps);

            auto g_x_0_y_0_yzz_xyzzzz = cbuffer.data(fi_geom_1010_off + 523 * ccomps * dcomps);

            auto g_x_0_y_0_yzz_xzzzzz = cbuffer.data(fi_geom_1010_off + 524 * ccomps * dcomps);

            auto g_x_0_y_0_yzz_yyyyyy = cbuffer.data(fi_geom_1010_off + 525 * ccomps * dcomps);

            auto g_x_0_y_0_yzz_yyyyyz = cbuffer.data(fi_geom_1010_off + 526 * ccomps * dcomps);

            auto g_x_0_y_0_yzz_yyyyzz = cbuffer.data(fi_geom_1010_off + 527 * ccomps * dcomps);

            auto g_x_0_y_0_yzz_yyyzzz = cbuffer.data(fi_geom_1010_off + 528 * ccomps * dcomps);

            auto g_x_0_y_0_yzz_yyzzzz = cbuffer.data(fi_geom_1010_off + 529 * ccomps * dcomps);

            auto g_x_0_y_0_yzz_yzzzzz = cbuffer.data(fi_geom_1010_off + 530 * ccomps * dcomps);

            auto g_x_0_y_0_yzz_zzzzzz = cbuffer.data(fi_geom_1010_off + 531 * ccomps * dcomps);

            #pragma omp simd aligned(g_x_0_y_0_yzz_xxxxxx, g_x_0_y_0_yzz_xxxxxy, g_x_0_y_0_yzz_xxxxxz, g_x_0_y_0_yzz_xxxxyy, g_x_0_y_0_yzz_xxxxyz, g_x_0_y_0_yzz_xxxxzz, g_x_0_y_0_yzz_xxxyyy, g_x_0_y_0_yzz_xxxyyz, g_x_0_y_0_yzz_xxxyzz, g_x_0_y_0_yzz_xxxzzz, g_x_0_y_0_yzz_xxyyyy, g_x_0_y_0_yzz_xxyyyz, g_x_0_y_0_yzz_xxyyzz, g_x_0_y_0_yzz_xxyzzz, g_x_0_y_0_yzz_xxzzzz, g_x_0_y_0_yzz_xyyyyy, g_x_0_y_0_yzz_xyyyyz, g_x_0_y_0_yzz_xyyyzz, g_x_0_y_0_yzz_xyyzzz, g_x_0_y_0_yzz_xyzzzz, g_x_0_y_0_yzz_xzzzzz, g_x_0_y_0_yzz_yyyyyy, g_x_0_y_0_yzz_yyyyyz, g_x_0_y_0_yzz_yyyyzz, g_x_0_y_0_yzz_yyyzzz, g_x_0_y_0_yzz_yyzzzz, g_x_0_y_0_yzz_yzzzzz, g_x_0_y_0_yzz_zzzzzz, g_x_0_y_0_zz_xxxxxx, g_x_0_y_0_zz_xxxxxxy, g_x_0_y_0_zz_xxxxxy, g_x_0_y_0_zz_xxxxxyy, g_x_0_y_0_zz_xxxxxyz, g_x_0_y_0_zz_xxxxxz, g_x_0_y_0_zz_xxxxyy, g_x_0_y_0_zz_xxxxyyy, g_x_0_y_0_zz_xxxxyyz, g_x_0_y_0_zz_xxxxyz, g_x_0_y_0_zz_xxxxyzz, g_x_0_y_0_zz_xxxxzz, g_x_0_y_0_zz_xxxyyy, g_x_0_y_0_zz_xxxyyyy, g_x_0_y_0_zz_xxxyyyz, g_x_0_y_0_zz_xxxyyz, g_x_0_y_0_zz_xxxyyzz, g_x_0_y_0_zz_xxxyzz, g_x_0_y_0_zz_xxxyzzz, g_x_0_y_0_zz_xxxzzz, g_x_0_y_0_zz_xxyyyy, g_x_0_y_0_zz_xxyyyyy, g_x_0_y_0_zz_xxyyyyz, g_x_0_y_0_zz_xxyyyz, g_x_0_y_0_zz_xxyyyzz, g_x_0_y_0_zz_xxyyzz, g_x_0_y_0_zz_xxyyzzz, g_x_0_y_0_zz_xxyzzz, g_x_0_y_0_zz_xxyzzzz, g_x_0_y_0_zz_xxzzzz, g_x_0_y_0_zz_xyyyyy, g_x_0_y_0_zz_xyyyyyy, g_x_0_y_0_zz_xyyyyyz, g_x_0_y_0_zz_xyyyyz, g_x_0_y_0_zz_xyyyyzz, g_x_0_y_0_zz_xyyyzz, g_x_0_y_0_zz_xyyyzzz, g_x_0_y_0_zz_xyyzzz, g_x_0_y_0_zz_xyyzzzz, g_x_0_y_0_zz_xyzzzz, g_x_0_y_0_zz_xyzzzzz, g_x_0_y_0_zz_xzzzzz, g_x_0_y_0_zz_yyyyyy, g_x_0_y_0_zz_yyyyyyy, g_x_0_y_0_zz_yyyyyyz, g_x_0_y_0_zz_yyyyyz, g_x_0_y_0_zz_yyyyyzz, g_x_0_y_0_zz_yyyyzz, g_x_0_y_0_zz_yyyyzzz, g_x_0_y_0_zz_yyyzzz, g_x_0_y_0_zz_yyyzzzz, g_x_0_y_0_zz_yyzzzz, g_x_0_y_0_zz_yyzzzzz, g_x_0_y_0_zz_yzzzzz, g_x_0_y_0_zz_yzzzzzz, g_x_0_y_0_zz_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_x_0_y_0_yzz_xxxxxx[k] = -g_x_0_y_0_zz_xxxxxx[k] * ab_y + g_x_0_y_0_zz_xxxxxxy[k];

                g_x_0_y_0_yzz_xxxxxy[k] = -g_x_0_y_0_zz_xxxxxy[k] * ab_y + g_x_0_y_0_zz_xxxxxyy[k];

                g_x_0_y_0_yzz_xxxxxz[k] = -g_x_0_y_0_zz_xxxxxz[k] * ab_y + g_x_0_y_0_zz_xxxxxyz[k];

                g_x_0_y_0_yzz_xxxxyy[k] = -g_x_0_y_0_zz_xxxxyy[k] * ab_y + g_x_0_y_0_zz_xxxxyyy[k];

                g_x_0_y_0_yzz_xxxxyz[k] = -g_x_0_y_0_zz_xxxxyz[k] * ab_y + g_x_0_y_0_zz_xxxxyyz[k];

                g_x_0_y_0_yzz_xxxxzz[k] = -g_x_0_y_0_zz_xxxxzz[k] * ab_y + g_x_0_y_0_zz_xxxxyzz[k];

                g_x_0_y_0_yzz_xxxyyy[k] = -g_x_0_y_0_zz_xxxyyy[k] * ab_y + g_x_0_y_0_zz_xxxyyyy[k];

                g_x_0_y_0_yzz_xxxyyz[k] = -g_x_0_y_0_zz_xxxyyz[k] * ab_y + g_x_0_y_0_zz_xxxyyyz[k];

                g_x_0_y_0_yzz_xxxyzz[k] = -g_x_0_y_0_zz_xxxyzz[k] * ab_y + g_x_0_y_0_zz_xxxyyzz[k];

                g_x_0_y_0_yzz_xxxzzz[k] = -g_x_0_y_0_zz_xxxzzz[k] * ab_y + g_x_0_y_0_zz_xxxyzzz[k];

                g_x_0_y_0_yzz_xxyyyy[k] = -g_x_0_y_0_zz_xxyyyy[k] * ab_y + g_x_0_y_0_zz_xxyyyyy[k];

                g_x_0_y_0_yzz_xxyyyz[k] = -g_x_0_y_0_zz_xxyyyz[k] * ab_y + g_x_0_y_0_zz_xxyyyyz[k];

                g_x_0_y_0_yzz_xxyyzz[k] = -g_x_0_y_0_zz_xxyyzz[k] * ab_y + g_x_0_y_0_zz_xxyyyzz[k];

                g_x_0_y_0_yzz_xxyzzz[k] = -g_x_0_y_0_zz_xxyzzz[k] * ab_y + g_x_0_y_0_zz_xxyyzzz[k];

                g_x_0_y_0_yzz_xxzzzz[k] = -g_x_0_y_0_zz_xxzzzz[k] * ab_y + g_x_0_y_0_zz_xxyzzzz[k];

                g_x_0_y_0_yzz_xyyyyy[k] = -g_x_0_y_0_zz_xyyyyy[k] * ab_y + g_x_0_y_0_zz_xyyyyyy[k];

                g_x_0_y_0_yzz_xyyyyz[k] = -g_x_0_y_0_zz_xyyyyz[k] * ab_y + g_x_0_y_0_zz_xyyyyyz[k];

                g_x_0_y_0_yzz_xyyyzz[k] = -g_x_0_y_0_zz_xyyyzz[k] * ab_y + g_x_0_y_0_zz_xyyyyzz[k];

                g_x_0_y_0_yzz_xyyzzz[k] = -g_x_0_y_0_zz_xyyzzz[k] * ab_y + g_x_0_y_0_zz_xyyyzzz[k];

                g_x_0_y_0_yzz_xyzzzz[k] = -g_x_0_y_0_zz_xyzzzz[k] * ab_y + g_x_0_y_0_zz_xyyzzzz[k];

                g_x_0_y_0_yzz_xzzzzz[k] = -g_x_0_y_0_zz_xzzzzz[k] * ab_y + g_x_0_y_0_zz_xyzzzzz[k];

                g_x_0_y_0_yzz_yyyyyy[k] = -g_x_0_y_0_zz_yyyyyy[k] * ab_y + g_x_0_y_0_zz_yyyyyyy[k];

                g_x_0_y_0_yzz_yyyyyz[k] = -g_x_0_y_0_zz_yyyyyz[k] * ab_y + g_x_0_y_0_zz_yyyyyyz[k];

                g_x_0_y_0_yzz_yyyyzz[k] = -g_x_0_y_0_zz_yyyyzz[k] * ab_y + g_x_0_y_0_zz_yyyyyzz[k];

                g_x_0_y_0_yzz_yyyzzz[k] = -g_x_0_y_0_zz_yyyzzz[k] * ab_y + g_x_0_y_0_zz_yyyyzzz[k];

                g_x_0_y_0_yzz_yyzzzz[k] = -g_x_0_y_0_zz_yyzzzz[k] * ab_y + g_x_0_y_0_zz_yyyzzzz[k];

                g_x_0_y_0_yzz_yzzzzz[k] = -g_x_0_y_0_zz_yzzzzz[k] * ab_y + g_x_0_y_0_zz_yyzzzzz[k];

                g_x_0_y_0_yzz_zzzzzz[k] = -g_x_0_y_0_zz_zzzzzz[k] * ab_y + g_x_0_y_0_zz_yzzzzzz[k];
            }

            /// Set up 532-560 components of targeted buffer : cbuffer.data(

            auto g_x_0_y_0_zzz_xxxxxx = cbuffer.data(fi_geom_1010_off + 532 * ccomps * dcomps);

            auto g_x_0_y_0_zzz_xxxxxy = cbuffer.data(fi_geom_1010_off + 533 * ccomps * dcomps);

            auto g_x_0_y_0_zzz_xxxxxz = cbuffer.data(fi_geom_1010_off + 534 * ccomps * dcomps);

            auto g_x_0_y_0_zzz_xxxxyy = cbuffer.data(fi_geom_1010_off + 535 * ccomps * dcomps);

            auto g_x_0_y_0_zzz_xxxxyz = cbuffer.data(fi_geom_1010_off + 536 * ccomps * dcomps);

            auto g_x_0_y_0_zzz_xxxxzz = cbuffer.data(fi_geom_1010_off + 537 * ccomps * dcomps);

            auto g_x_0_y_0_zzz_xxxyyy = cbuffer.data(fi_geom_1010_off + 538 * ccomps * dcomps);

            auto g_x_0_y_0_zzz_xxxyyz = cbuffer.data(fi_geom_1010_off + 539 * ccomps * dcomps);

            auto g_x_0_y_0_zzz_xxxyzz = cbuffer.data(fi_geom_1010_off + 540 * ccomps * dcomps);

            auto g_x_0_y_0_zzz_xxxzzz = cbuffer.data(fi_geom_1010_off + 541 * ccomps * dcomps);

            auto g_x_0_y_0_zzz_xxyyyy = cbuffer.data(fi_geom_1010_off + 542 * ccomps * dcomps);

            auto g_x_0_y_0_zzz_xxyyyz = cbuffer.data(fi_geom_1010_off + 543 * ccomps * dcomps);

            auto g_x_0_y_0_zzz_xxyyzz = cbuffer.data(fi_geom_1010_off + 544 * ccomps * dcomps);

            auto g_x_0_y_0_zzz_xxyzzz = cbuffer.data(fi_geom_1010_off + 545 * ccomps * dcomps);

            auto g_x_0_y_0_zzz_xxzzzz = cbuffer.data(fi_geom_1010_off + 546 * ccomps * dcomps);

            auto g_x_0_y_0_zzz_xyyyyy = cbuffer.data(fi_geom_1010_off + 547 * ccomps * dcomps);

            auto g_x_0_y_0_zzz_xyyyyz = cbuffer.data(fi_geom_1010_off + 548 * ccomps * dcomps);

            auto g_x_0_y_0_zzz_xyyyzz = cbuffer.data(fi_geom_1010_off + 549 * ccomps * dcomps);

            auto g_x_0_y_0_zzz_xyyzzz = cbuffer.data(fi_geom_1010_off + 550 * ccomps * dcomps);

            auto g_x_0_y_0_zzz_xyzzzz = cbuffer.data(fi_geom_1010_off + 551 * ccomps * dcomps);

            auto g_x_0_y_0_zzz_xzzzzz = cbuffer.data(fi_geom_1010_off + 552 * ccomps * dcomps);

            auto g_x_0_y_0_zzz_yyyyyy = cbuffer.data(fi_geom_1010_off + 553 * ccomps * dcomps);

            auto g_x_0_y_0_zzz_yyyyyz = cbuffer.data(fi_geom_1010_off + 554 * ccomps * dcomps);

            auto g_x_0_y_0_zzz_yyyyzz = cbuffer.data(fi_geom_1010_off + 555 * ccomps * dcomps);

            auto g_x_0_y_0_zzz_yyyzzz = cbuffer.data(fi_geom_1010_off + 556 * ccomps * dcomps);

            auto g_x_0_y_0_zzz_yyzzzz = cbuffer.data(fi_geom_1010_off + 557 * ccomps * dcomps);

            auto g_x_0_y_0_zzz_yzzzzz = cbuffer.data(fi_geom_1010_off + 558 * ccomps * dcomps);

            auto g_x_0_y_0_zzz_zzzzzz = cbuffer.data(fi_geom_1010_off + 559 * ccomps * dcomps);

            #pragma omp simd aligned(g_x_0_y_0_zz_xxxxxx, g_x_0_y_0_zz_xxxxxxz, g_x_0_y_0_zz_xxxxxy, g_x_0_y_0_zz_xxxxxyz, g_x_0_y_0_zz_xxxxxz, g_x_0_y_0_zz_xxxxxzz, g_x_0_y_0_zz_xxxxyy, g_x_0_y_0_zz_xxxxyyz, g_x_0_y_0_zz_xxxxyz, g_x_0_y_0_zz_xxxxyzz, g_x_0_y_0_zz_xxxxzz, g_x_0_y_0_zz_xxxxzzz, g_x_0_y_0_zz_xxxyyy, g_x_0_y_0_zz_xxxyyyz, g_x_0_y_0_zz_xxxyyz, g_x_0_y_0_zz_xxxyyzz, g_x_0_y_0_zz_xxxyzz, g_x_0_y_0_zz_xxxyzzz, g_x_0_y_0_zz_xxxzzz, g_x_0_y_0_zz_xxxzzzz, g_x_0_y_0_zz_xxyyyy, g_x_0_y_0_zz_xxyyyyz, g_x_0_y_0_zz_xxyyyz, g_x_0_y_0_zz_xxyyyzz, g_x_0_y_0_zz_xxyyzz, g_x_0_y_0_zz_xxyyzzz, g_x_0_y_0_zz_xxyzzz, g_x_0_y_0_zz_xxyzzzz, g_x_0_y_0_zz_xxzzzz, g_x_0_y_0_zz_xxzzzzz, g_x_0_y_0_zz_xyyyyy, g_x_0_y_0_zz_xyyyyyz, g_x_0_y_0_zz_xyyyyz, g_x_0_y_0_zz_xyyyyzz, g_x_0_y_0_zz_xyyyzz, g_x_0_y_0_zz_xyyyzzz, g_x_0_y_0_zz_xyyzzz, g_x_0_y_0_zz_xyyzzzz, g_x_0_y_0_zz_xyzzzz, g_x_0_y_0_zz_xyzzzzz, g_x_0_y_0_zz_xzzzzz, g_x_0_y_0_zz_xzzzzzz, g_x_0_y_0_zz_yyyyyy, g_x_0_y_0_zz_yyyyyyz, g_x_0_y_0_zz_yyyyyz, g_x_0_y_0_zz_yyyyyzz, g_x_0_y_0_zz_yyyyzz, g_x_0_y_0_zz_yyyyzzz, g_x_0_y_0_zz_yyyzzz, g_x_0_y_0_zz_yyyzzzz, g_x_0_y_0_zz_yyzzzz, g_x_0_y_0_zz_yyzzzzz, g_x_0_y_0_zz_yzzzzz, g_x_0_y_0_zz_yzzzzzz, g_x_0_y_0_zz_zzzzzz, g_x_0_y_0_zz_zzzzzzz, g_x_0_y_0_zzz_xxxxxx, g_x_0_y_0_zzz_xxxxxy, g_x_0_y_0_zzz_xxxxxz, g_x_0_y_0_zzz_xxxxyy, g_x_0_y_0_zzz_xxxxyz, g_x_0_y_0_zzz_xxxxzz, g_x_0_y_0_zzz_xxxyyy, g_x_0_y_0_zzz_xxxyyz, g_x_0_y_0_zzz_xxxyzz, g_x_0_y_0_zzz_xxxzzz, g_x_0_y_0_zzz_xxyyyy, g_x_0_y_0_zzz_xxyyyz, g_x_0_y_0_zzz_xxyyzz, g_x_0_y_0_zzz_xxyzzz, g_x_0_y_0_zzz_xxzzzz, g_x_0_y_0_zzz_xyyyyy, g_x_0_y_0_zzz_xyyyyz, g_x_0_y_0_zzz_xyyyzz, g_x_0_y_0_zzz_xyyzzz, g_x_0_y_0_zzz_xyzzzz, g_x_0_y_0_zzz_xzzzzz, g_x_0_y_0_zzz_yyyyyy, g_x_0_y_0_zzz_yyyyyz, g_x_0_y_0_zzz_yyyyzz, g_x_0_y_0_zzz_yyyzzz, g_x_0_y_0_zzz_yyzzzz, g_x_0_y_0_zzz_yzzzzz, g_x_0_y_0_zzz_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_x_0_y_0_zzz_xxxxxx[k] = -g_x_0_y_0_zz_xxxxxx[k] * ab_z + g_x_0_y_0_zz_xxxxxxz[k];

                g_x_0_y_0_zzz_xxxxxy[k] = -g_x_0_y_0_zz_xxxxxy[k] * ab_z + g_x_0_y_0_zz_xxxxxyz[k];

                g_x_0_y_0_zzz_xxxxxz[k] = -g_x_0_y_0_zz_xxxxxz[k] * ab_z + g_x_0_y_0_zz_xxxxxzz[k];

                g_x_0_y_0_zzz_xxxxyy[k] = -g_x_0_y_0_zz_xxxxyy[k] * ab_z + g_x_0_y_0_zz_xxxxyyz[k];

                g_x_0_y_0_zzz_xxxxyz[k] = -g_x_0_y_0_zz_xxxxyz[k] * ab_z + g_x_0_y_0_zz_xxxxyzz[k];

                g_x_0_y_0_zzz_xxxxzz[k] = -g_x_0_y_0_zz_xxxxzz[k] * ab_z + g_x_0_y_0_zz_xxxxzzz[k];

                g_x_0_y_0_zzz_xxxyyy[k] = -g_x_0_y_0_zz_xxxyyy[k] * ab_z + g_x_0_y_0_zz_xxxyyyz[k];

                g_x_0_y_0_zzz_xxxyyz[k] = -g_x_0_y_0_zz_xxxyyz[k] * ab_z + g_x_0_y_0_zz_xxxyyzz[k];

                g_x_0_y_0_zzz_xxxyzz[k] = -g_x_0_y_0_zz_xxxyzz[k] * ab_z + g_x_0_y_0_zz_xxxyzzz[k];

                g_x_0_y_0_zzz_xxxzzz[k] = -g_x_0_y_0_zz_xxxzzz[k] * ab_z + g_x_0_y_0_zz_xxxzzzz[k];

                g_x_0_y_0_zzz_xxyyyy[k] = -g_x_0_y_0_zz_xxyyyy[k] * ab_z + g_x_0_y_0_zz_xxyyyyz[k];

                g_x_0_y_0_zzz_xxyyyz[k] = -g_x_0_y_0_zz_xxyyyz[k] * ab_z + g_x_0_y_0_zz_xxyyyzz[k];

                g_x_0_y_0_zzz_xxyyzz[k] = -g_x_0_y_0_zz_xxyyzz[k] * ab_z + g_x_0_y_0_zz_xxyyzzz[k];

                g_x_0_y_0_zzz_xxyzzz[k] = -g_x_0_y_0_zz_xxyzzz[k] * ab_z + g_x_0_y_0_zz_xxyzzzz[k];

                g_x_0_y_0_zzz_xxzzzz[k] = -g_x_0_y_0_zz_xxzzzz[k] * ab_z + g_x_0_y_0_zz_xxzzzzz[k];

                g_x_0_y_0_zzz_xyyyyy[k] = -g_x_0_y_0_zz_xyyyyy[k] * ab_z + g_x_0_y_0_zz_xyyyyyz[k];

                g_x_0_y_0_zzz_xyyyyz[k] = -g_x_0_y_0_zz_xyyyyz[k] * ab_z + g_x_0_y_0_zz_xyyyyzz[k];

                g_x_0_y_0_zzz_xyyyzz[k] = -g_x_0_y_0_zz_xyyyzz[k] * ab_z + g_x_0_y_0_zz_xyyyzzz[k];

                g_x_0_y_0_zzz_xyyzzz[k] = -g_x_0_y_0_zz_xyyzzz[k] * ab_z + g_x_0_y_0_zz_xyyzzzz[k];

                g_x_0_y_0_zzz_xyzzzz[k] = -g_x_0_y_0_zz_xyzzzz[k] * ab_z + g_x_0_y_0_zz_xyzzzzz[k];

                g_x_0_y_0_zzz_xzzzzz[k] = -g_x_0_y_0_zz_xzzzzz[k] * ab_z + g_x_0_y_0_zz_xzzzzzz[k];

                g_x_0_y_0_zzz_yyyyyy[k] = -g_x_0_y_0_zz_yyyyyy[k] * ab_z + g_x_0_y_0_zz_yyyyyyz[k];

                g_x_0_y_0_zzz_yyyyyz[k] = -g_x_0_y_0_zz_yyyyyz[k] * ab_z + g_x_0_y_0_zz_yyyyyzz[k];

                g_x_0_y_0_zzz_yyyyzz[k] = -g_x_0_y_0_zz_yyyyzz[k] * ab_z + g_x_0_y_0_zz_yyyyzzz[k];

                g_x_0_y_0_zzz_yyyzzz[k] = -g_x_0_y_0_zz_yyyzzz[k] * ab_z + g_x_0_y_0_zz_yyyzzzz[k];

                g_x_0_y_0_zzz_yyzzzz[k] = -g_x_0_y_0_zz_yyzzzz[k] * ab_z + g_x_0_y_0_zz_yyzzzzz[k];

                g_x_0_y_0_zzz_yzzzzz[k] = -g_x_0_y_0_zz_yzzzzz[k] * ab_z + g_x_0_y_0_zz_yzzzzzz[k];

                g_x_0_y_0_zzz_zzzzzz[k] = -g_x_0_y_0_zz_zzzzzz[k] * ab_z + g_x_0_y_0_zz_zzzzzzz[k];
            }

            /// Set up 560-588 components of targeted buffer : cbuffer.data(

            auto g_x_0_z_0_xxx_xxxxxx = cbuffer.data(fi_geom_1010_off + 560 * ccomps * dcomps);

            auto g_x_0_z_0_xxx_xxxxxy = cbuffer.data(fi_geom_1010_off + 561 * ccomps * dcomps);

            auto g_x_0_z_0_xxx_xxxxxz = cbuffer.data(fi_geom_1010_off + 562 * ccomps * dcomps);

            auto g_x_0_z_0_xxx_xxxxyy = cbuffer.data(fi_geom_1010_off + 563 * ccomps * dcomps);

            auto g_x_0_z_0_xxx_xxxxyz = cbuffer.data(fi_geom_1010_off + 564 * ccomps * dcomps);

            auto g_x_0_z_0_xxx_xxxxzz = cbuffer.data(fi_geom_1010_off + 565 * ccomps * dcomps);

            auto g_x_0_z_0_xxx_xxxyyy = cbuffer.data(fi_geom_1010_off + 566 * ccomps * dcomps);

            auto g_x_0_z_0_xxx_xxxyyz = cbuffer.data(fi_geom_1010_off + 567 * ccomps * dcomps);

            auto g_x_0_z_0_xxx_xxxyzz = cbuffer.data(fi_geom_1010_off + 568 * ccomps * dcomps);

            auto g_x_0_z_0_xxx_xxxzzz = cbuffer.data(fi_geom_1010_off + 569 * ccomps * dcomps);

            auto g_x_0_z_0_xxx_xxyyyy = cbuffer.data(fi_geom_1010_off + 570 * ccomps * dcomps);

            auto g_x_0_z_0_xxx_xxyyyz = cbuffer.data(fi_geom_1010_off + 571 * ccomps * dcomps);

            auto g_x_0_z_0_xxx_xxyyzz = cbuffer.data(fi_geom_1010_off + 572 * ccomps * dcomps);

            auto g_x_0_z_0_xxx_xxyzzz = cbuffer.data(fi_geom_1010_off + 573 * ccomps * dcomps);

            auto g_x_0_z_0_xxx_xxzzzz = cbuffer.data(fi_geom_1010_off + 574 * ccomps * dcomps);

            auto g_x_0_z_0_xxx_xyyyyy = cbuffer.data(fi_geom_1010_off + 575 * ccomps * dcomps);

            auto g_x_0_z_0_xxx_xyyyyz = cbuffer.data(fi_geom_1010_off + 576 * ccomps * dcomps);

            auto g_x_0_z_0_xxx_xyyyzz = cbuffer.data(fi_geom_1010_off + 577 * ccomps * dcomps);

            auto g_x_0_z_0_xxx_xyyzzz = cbuffer.data(fi_geom_1010_off + 578 * ccomps * dcomps);

            auto g_x_0_z_0_xxx_xyzzzz = cbuffer.data(fi_geom_1010_off + 579 * ccomps * dcomps);

            auto g_x_0_z_0_xxx_xzzzzz = cbuffer.data(fi_geom_1010_off + 580 * ccomps * dcomps);

            auto g_x_0_z_0_xxx_yyyyyy = cbuffer.data(fi_geom_1010_off + 581 * ccomps * dcomps);

            auto g_x_0_z_0_xxx_yyyyyz = cbuffer.data(fi_geom_1010_off + 582 * ccomps * dcomps);

            auto g_x_0_z_0_xxx_yyyyzz = cbuffer.data(fi_geom_1010_off + 583 * ccomps * dcomps);

            auto g_x_0_z_0_xxx_yyyzzz = cbuffer.data(fi_geom_1010_off + 584 * ccomps * dcomps);

            auto g_x_0_z_0_xxx_yyzzzz = cbuffer.data(fi_geom_1010_off + 585 * ccomps * dcomps);

            auto g_x_0_z_0_xxx_yzzzzz = cbuffer.data(fi_geom_1010_off + 586 * ccomps * dcomps);

            auto g_x_0_z_0_xxx_zzzzzz = cbuffer.data(fi_geom_1010_off + 587 * ccomps * dcomps);

            #pragma omp simd aligned(g_0_0_z_0_xx_xxxxxx, g_0_0_z_0_xx_xxxxxy, g_0_0_z_0_xx_xxxxxz, g_0_0_z_0_xx_xxxxyy, g_0_0_z_0_xx_xxxxyz, g_0_0_z_0_xx_xxxxzz, g_0_0_z_0_xx_xxxyyy, g_0_0_z_0_xx_xxxyyz, g_0_0_z_0_xx_xxxyzz, g_0_0_z_0_xx_xxxzzz, g_0_0_z_0_xx_xxyyyy, g_0_0_z_0_xx_xxyyyz, g_0_0_z_0_xx_xxyyzz, g_0_0_z_0_xx_xxyzzz, g_0_0_z_0_xx_xxzzzz, g_0_0_z_0_xx_xyyyyy, g_0_0_z_0_xx_xyyyyz, g_0_0_z_0_xx_xyyyzz, g_0_0_z_0_xx_xyyzzz, g_0_0_z_0_xx_xyzzzz, g_0_0_z_0_xx_xzzzzz, g_0_0_z_0_xx_yyyyyy, g_0_0_z_0_xx_yyyyyz, g_0_0_z_0_xx_yyyyzz, g_0_0_z_0_xx_yyyzzz, g_0_0_z_0_xx_yyzzzz, g_0_0_z_0_xx_yzzzzz, g_0_0_z_0_xx_zzzzzz, g_x_0_z_0_xx_xxxxxx, g_x_0_z_0_xx_xxxxxxx, g_x_0_z_0_xx_xxxxxxy, g_x_0_z_0_xx_xxxxxxz, g_x_0_z_0_xx_xxxxxy, g_x_0_z_0_xx_xxxxxyy, g_x_0_z_0_xx_xxxxxyz, g_x_0_z_0_xx_xxxxxz, g_x_0_z_0_xx_xxxxxzz, g_x_0_z_0_xx_xxxxyy, g_x_0_z_0_xx_xxxxyyy, g_x_0_z_0_xx_xxxxyyz, g_x_0_z_0_xx_xxxxyz, g_x_0_z_0_xx_xxxxyzz, g_x_0_z_0_xx_xxxxzz, g_x_0_z_0_xx_xxxxzzz, g_x_0_z_0_xx_xxxyyy, g_x_0_z_0_xx_xxxyyyy, g_x_0_z_0_xx_xxxyyyz, g_x_0_z_0_xx_xxxyyz, g_x_0_z_0_xx_xxxyyzz, g_x_0_z_0_xx_xxxyzz, g_x_0_z_0_xx_xxxyzzz, g_x_0_z_0_xx_xxxzzz, g_x_0_z_0_xx_xxxzzzz, g_x_0_z_0_xx_xxyyyy, g_x_0_z_0_xx_xxyyyyy, g_x_0_z_0_xx_xxyyyyz, g_x_0_z_0_xx_xxyyyz, g_x_0_z_0_xx_xxyyyzz, g_x_0_z_0_xx_xxyyzz, g_x_0_z_0_xx_xxyyzzz, g_x_0_z_0_xx_xxyzzz, g_x_0_z_0_xx_xxyzzzz, g_x_0_z_0_xx_xxzzzz, g_x_0_z_0_xx_xxzzzzz, g_x_0_z_0_xx_xyyyyy, g_x_0_z_0_xx_xyyyyyy, g_x_0_z_0_xx_xyyyyyz, g_x_0_z_0_xx_xyyyyz, g_x_0_z_0_xx_xyyyyzz, g_x_0_z_0_xx_xyyyzz, g_x_0_z_0_xx_xyyyzzz, g_x_0_z_0_xx_xyyzzz, g_x_0_z_0_xx_xyyzzzz, g_x_0_z_0_xx_xyzzzz, g_x_0_z_0_xx_xyzzzzz, g_x_0_z_0_xx_xzzzzz, g_x_0_z_0_xx_xzzzzzz, g_x_0_z_0_xx_yyyyyy, g_x_0_z_0_xx_yyyyyz, g_x_0_z_0_xx_yyyyzz, g_x_0_z_0_xx_yyyzzz, g_x_0_z_0_xx_yyzzzz, g_x_0_z_0_xx_yzzzzz, g_x_0_z_0_xx_zzzzzz, g_x_0_z_0_xxx_xxxxxx, g_x_0_z_0_xxx_xxxxxy, g_x_0_z_0_xxx_xxxxxz, g_x_0_z_0_xxx_xxxxyy, g_x_0_z_0_xxx_xxxxyz, g_x_0_z_0_xxx_xxxxzz, g_x_0_z_0_xxx_xxxyyy, g_x_0_z_0_xxx_xxxyyz, g_x_0_z_0_xxx_xxxyzz, g_x_0_z_0_xxx_xxxzzz, g_x_0_z_0_xxx_xxyyyy, g_x_0_z_0_xxx_xxyyyz, g_x_0_z_0_xxx_xxyyzz, g_x_0_z_0_xxx_xxyzzz, g_x_0_z_0_xxx_xxzzzz, g_x_0_z_0_xxx_xyyyyy, g_x_0_z_0_xxx_xyyyyz, g_x_0_z_0_xxx_xyyyzz, g_x_0_z_0_xxx_xyyzzz, g_x_0_z_0_xxx_xyzzzz, g_x_0_z_0_xxx_xzzzzz, g_x_0_z_0_xxx_yyyyyy, g_x_0_z_0_xxx_yyyyyz, g_x_0_z_0_xxx_yyyyzz, g_x_0_z_0_xxx_yyyzzz, g_x_0_z_0_xxx_yyzzzz, g_x_0_z_0_xxx_yzzzzz, g_x_0_z_0_xxx_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_x_0_z_0_xxx_xxxxxx[k] = -g_0_0_z_0_xx_xxxxxx[k] - g_x_0_z_0_xx_xxxxxx[k] * ab_x + g_x_0_z_0_xx_xxxxxxx[k];

                g_x_0_z_0_xxx_xxxxxy[k] = -g_0_0_z_0_xx_xxxxxy[k] - g_x_0_z_0_xx_xxxxxy[k] * ab_x + g_x_0_z_0_xx_xxxxxxy[k];

                g_x_0_z_0_xxx_xxxxxz[k] = -g_0_0_z_0_xx_xxxxxz[k] - g_x_0_z_0_xx_xxxxxz[k] * ab_x + g_x_0_z_0_xx_xxxxxxz[k];

                g_x_0_z_0_xxx_xxxxyy[k] = -g_0_0_z_0_xx_xxxxyy[k] - g_x_0_z_0_xx_xxxxyy[k] * ab_x + g_x_0_z_0_xx_xxxxxyy[k];

                g_x_0_z_0_xxx_xxxxyz[k] = -g_0_0_z_0_xx_xxxxyz[k] - g_x_0_z_0_xx_xxxxyz[k] * ab_x + g_x_0_z_0_xx_xxxxxyz[k];

                g_x_0_z_0_xxx_xxxxzz[k] = -g_0_0_z_0_xx_xxxxzz[k] - g_x_0_z_0_xx_xxxxzz[k] * ab_x + g_x_0_z_0_xx_xxxxxzz[k];

                g_x_0_z_0_xxx_xxxyyy[k] = -g_0_0_z_0_xx_xxxyyy[k] - g_x_0_z_0_xx_xxxyyy[k] * ab_x + g_x_0_z_0_xx_xxxxyyy[k];

                g_x_0_z_0_xxx_xxxyyz[k] = -g_0_0_z_0_xx_xxxyyz[k] - g_x_0_z_0_xx_xxxyyz[k] * ab_x + g_x_0_z_0_xx_xxxxyyz[k];

                g_x_0_z_0_xxx_xxxyzz[k] = -g_0_0_z_0_xx_xxxyzz[k] - g_x_0_z_0_xx_xxxyzz[k] * ab_x + g_x_0_z_0_xx_xxxxyzz[k];

                g_x_0_z_0_xxx_xxxzzz[k] = -g_0_0_z_0_xx_xxxzzz[k] - g_x_0_z_0_xx_xxxzzz[k] * ab_x + g_x_0_z_0_xx_xxxxzzz[k];

                g_x_0_z_0_xxx_xxyyyy[k] = -g_0_0_z_0_xx_xxyyyy[k] - g_x_0_z_0_xx_xxyyyy[k] * ab_x + g_x_0_z_0_xx_xxxyyyy[k];

                g_x_0_z_0_xxx_xxyyyz[k] = -g_0_0_z_0_xx_xxyyyz[k] - g_x_0_z_0_xx_xxyyyz[k] * ab_x + g_x_0_z_0_xx_xxxyyyz[k];

                g_x_0_z_0_xxx_xxyyzz[k] = -g_0_0_z_0_xx_xxyyzz[k] - g_x_0_z_0_xx_xxyyzz[k] * ab_x + g_x_0_z_0_xx_xxxyyzz[k];

                g_x_0_z_0_xxx_xxyzzz[k] = -g_0_0_z_0_xx_xxyzzz[k] - g_x_0_z_0_xx_xxyzzz[k] * ab_x + g_x_0_z_0_xx_xxxyzzz[k];

                g_x_0_z_0_xxx_xxzzzz[k] = -g_0_0_z_0_xx_xxzzzz[k] - g_x_0_z_0_xx_xxzzzz[k] * ab_x + g_x_0_z_0_xx_xxxzzzz[k];

                g_x_0_z_0_xxx_xyyyyy[k] = -g_0_0_z_0_xx_xyyyyy[k] - g_x_0_z_0_xx_xyyyyy[k] * ab_x + g_x_0_z_0_xx_xxyyyyy[k];

                g_x_0_z_0_xxx_xyyyyz[k] = -g_0_0_z_0_xx_xyyyyz[k] - g_x_0_z_0_xx_xyyyyz[k] * ab_x + g_x_0_z_0_xx_xxyyyyz[k];

                g_x_0_z_0_xxx_xyyyzz[k] = -g_0_0_z_0_xx_xyyyzz[k] - g_x_0_z_0_xx_xyyyzz[k] * ab_x + g_x_0_z_0_xx_xxyyyzz[k];

                g_x_0_z_0_xxx_xyyzzz[k] = -g_0_0_z_0_xx_xyyzzz[k] - g_x_0_z_0_xx_xyyzzz[k] * ab_x + g_x_0_z_0_xx_xxyyzzz[k];

                g_x_0_z_0_xxx_xyzzzz[k] = -g_0_0_z_0_xx_xyzzzz[k] - g_x_0_z_0_xx_xyzzzz[k] * ab_x + g_x_0_z_0_xx_xxyzzzz[k];

                g_x_0_z_0_xxx_xzzzzz[k] = -g_0_0_z_0_xx_xzzzzz[k] - g_x_0_z_0_xx_xzzzzz[k] * ab_x + g_x_0_z_0_xx_xxzzzzz[k];

                g_x_0_z_0_xxx_yyyyyy[k] = -g_0_0_z_0_xx_yyyyyy[k] - g_x_0_z_0_xx_yyyyyy[k] * ab_x + g_x_0_z_0_xx_xyyyyyy[k];

                g_x_0_z_0_xxx_yyyyyz[k] = -g_0_0_z_0_xx_yyyyyz[k] - g_x_0_z_0_xx_yyyyyz[k] * ab_x + g_x_0_z_0_xx_xyyyyyz[k];

                g_x_0_z_0_xxx_yyyyzz[k] = -g_0_0_z_0_xx_yyyyzz[k] - g_x_0_z_0_xx_yyyyzz[k] * ab_x + g_x_0_z_0_xx_xyyyyzz[k];

                g_x_0_z_0_xxx_yyyzzz[k] = -g_0_0_z_0_xx_yyyzzz[k] - g_x_0_z_0_xx_yyyzzz[k] * ab_x + g_x_0_z_0_xx_xyyyzzz[k];

                g_x_0_z_0_xxx_yyzzzz[k] = -g_0_0_z_0_xx_yyzzzz[k] - g_x_0_z_0_xx_yyzzzz[k] * ab_x + g_x_0_z_0_xx_xyyzzzz[k];

                g_x_0_z_0_xxx_yzzzzz[k] = -g_0_0_z_0_xx_yzzzzz[k] - g_x_0_z_0_xx_yzzzzz[k] * ab_x + g_x_0_z_0_xx_xyzzzzz[k];

                g_x_0_z_0_xxx_zzzzzz[k] = -g_0_0_z_0_xx_zzzzzz[k] - g_x_0_z_0_xx_zzzzzz[k] * ab_x + g_x_0_z_0_xx_xzzzzzz[k];
            }

            /// Set up 588-616 components of targeted buffer : cbuffer.data(

            auto g_x_0_z_0_xxy_xxxxxx = cbuffer.data(fi_geom_1010_off + 588 * ccomps * dcomps);

            auto g_x_0_z_0_xxy_xxxxxy = cbuffer.data(fi_geom_1010_off + 589 * ccomps * dcomps);

            auto g_x_0_z_0_xxy_xxxxxz = cbuffer.data(fi_geom_1010_off + 590 * ccomps * dcomps);

            auto g_x_0_z_0_xxy_xxxxyy = cbuffer.data(fi_geom_1010_off + 591 * ccomps * dcomps);

            auto g_x_0_z_0_xxy_xxxxyz = cbuffer.data(fi_geom_1010_off + 592 * ccomps * dcomps);

            auto g_x_0_z_0_xxy_xxxxzz = cbuffer.data(fi_geom_1010_off + 593 * ccomps * dcomps);

            auto g_x_0_z_0_xxy_xxxyyy = cbuffer.data(fi_geom_1010_off + 594 * ccomps * dcomps);

            auto g_x_0_z_0_xxy_xxxyyz = cbuffer.data(fi_geom_1010_off + 595 * ccomps * dcomps);

            auto g_x_0_z_0_xxy_xxxyzz = cbuffer.data(fi_geom_1010_off + 596 * ccomps * dcomps);

            auto g_x_0_z_0_xxy_xxxzzz = cbuffer.data(fi_geom_1010_off + 597 * ccomps * dcomps);

            auto g_x_0_z_0_xxy_xxyyyy = cbuffer.data(fi_geom_1010_off + 598 * ccomps * dcomps);

            auto g_x_0_z_0_xxy_xxyyyz = cbuffer.data(fi_geom_1010_off + 599 * ccomps * dcomps);

            auto g_x_0_z_0_xxy_xxyyzz = cbuffer.data(fi_geom_1010_off + 600 * ccomps * dcomps);

            auto g_x_0_z_0_xxy_xxyzzz = cbuffer.data(fi_geom_1010_off + 601 * ccomps * dcomps);

            auto g_x_0_z_0_xxy_xxzzzz = cbuffer.data(fi_geom_1010_off + 602 * ccomps * dcomps);

            auto g_x_0_z_0_xxy_xyyyyy = cbuffer.data(fi_geom_1010_off + 603 * ccomps * dcomps);

            auto g_x_0_z_0_xxy_xyyyyz = cbuffer.data(fi_geom_1010_off + 604 * ccomps * dcomps);

            auto g_x_0_z_0_xxy_xyyyzz = cbuffer.data(fi_geom_1010_off + 605 * ccomps * dcomps);

            auto g_x_0_z_0_xxy_xyyzzz = cbuffer.data(fi_geom_1010_off + 606 * ccomps * dcomps);

            auto g_x_0_z_0_xxy_xyzzzz = cbuffer.data(fi_geom_1010_off + 607 * ccomps * dcomps);

            auto g_x_0_z_0_xxy_xzzzzz = cbuffer.data(fi_geom_1010_off + 608 * ccomps * dcomps);

            auto g_x_0_z_0_xxy_yyyyyy = cbuffer.data(fi_geom_1010_off + 609 * ccomps * dcomps);

            auto g_x_0_z_0_xxy_yyyyyz = cbuffer.data(fi_geom_1010_off + 610 * ccomps * dcomps);

            auto g_x_0_z_0_xxy_yyyyzz = cbuffer.data(fi_geom_1010_off + 611 * ccomps * dcomps);

            auto g_x_0_z_0_xxy_yyyzzz = cbuffer.data(fi_geom_1010_off + 612 * ccomps * dcomps);

            auto g_x_0_z_0_xxy_yyzzzz = cbuffer.data(fi_geom_1010_off + 613 * ccomps * dcomps);

            auto g_x_0_z_0_xxy_yzzzzz = cbuffer.data(fi_geom_1010_off + 614 * ccomps * dcomps);

            auto g_x_0_z_0_xxy_zzzzzz = cbuffer.data(fi_geom_1010_off + 615 * ccomps * dcomps);

            #pragma omp simd aligned(g_x_0_z_0_xx_xxxxxx, g_x_0_z_0_xx_xxxxxxy, g_x_0_z_0_xx_xxxxxy, g_x_0_z_0_xx_xxxxxyy, g_x_0_z_0_xx_xxxxxyz, g_x_0_z_0_xx_xxxxxz, g_x_0_z_0_xx_xxxxyy, g_x_0_z_0_xx_xxxxyyy, g_x_0_z_0_xx_xxxxyyz, g_x_0_z_0_xx_xxxxyz, g_x_0_z_0_xx_xxxxyzz, g_x_0_z_0_xx_xxxxzz, g_x_0_z_0_xx_xxxyyy, g_x_0_z_0_xx_xxxyyyy, g_x_0_z_0_xx_xxxyyyz, g_x_0_z_0_xx_xxxyyz, g_x_0_z_0_xx_xxxyyzz, g_x_0_z_0_xx_xxxyzz, g_x_0_z_0_xx_xxxyzzz, g_x_0_z_0_xx_xxxzzz, g_x_0_z_0_xx_xxyyyy, g_x_0_z_0_xx_xxyyyyy, g_x_0_z_0_xx_xxyyyyz, g_x_0_z_0_xx_xxyyyz, g_x_0_z_0_xx_xxyyyzz, g_x_0_z_0_xx_xxyyzz, g_x_0_z_0_xx_xxyyzzz, g_x_0_z_0_xx_xxyzzz, g_x_0_z_0_xx_xxyzzzz, g_x_0_z_0_xx_xxzzzz, g_x_0_z_0_xx_xyyyyy, g_x_0_z_0_xx_xyyyyyy, g_x_0_z_0_xx_xyyyyyz, g_x_0_z_0_xx_xyyyyz, g_x_0_z_0_xx_xyyyyzz, g_x_0_z_0_xx_xyyyzz, g_x_0_z_0_xx_xyyyzzz, g_x_0_z_0_xx_xyyzzz, g_x_0_z_0_xx_xyyzzzz, g_x_0_z_0_xx_xyzzzz, g_x_0_z_0_xx_xyzzzzz, g_x_0_z_0_xx_xzzzzz, g_x_0_z_0_xx_yyyyyy, g_x_0_z_0_xx_yyyyyyy, g_x_0_z_0_xx_yyyyyyz, g_x_0_z_0_xx_yyyyyz, g_x_0_z_0_xx_yyyyyzz, g_x_0_z_0_xx_yyyyzz, g_x_0_z_0_xx_yyyyzzz, g_x_0_z_0_xx_yyyzzz, g_x_0_z_0_xx_yyyzzzz, g_x_0_z_0_xx_yyzzzz, g_x_0_z_0_xx_yyzzzzz, g_x_0_z_0_xx_yzzzzz, g_x_0_z_0_xx_yzzzzzz, g_x_0_z_0_xx_zzzzzz, g_x_0_z_0_xxy_xxxxxx, g_x_0_z_0_xxy_xxxxxy, g_x_0_z_0_xxy_xxxxxz, g_x_0_z_0_xxy_xxxxyy, g_x_0_z_0_xxy_xxxxyz, g_x_0_z_0_xxy_xxxxzz, g_x_0_z_0_xxy_xxxyyy, g_x_0_z_0_xxy_xxxyyz, g_x_0_z_0_xxy_xxxyzz, g_x_0_z_0_xxy_xxxzzz, g_x_0_z_0_xxy_xxyyyy, g_x_0_z_0_xxy_xxyyyz, g_x_0_z_0_xxy_xxyyzz, g_x_0_z_0_xxy_xxyzzz, g_x_0_z_0_xxy_xxzzzz, g_x_0_z_0_xxy_xyyyyy, g_x_0_z_0_xxy_xyyyyz, g_x_0_z_0_xxy_xyyyzz, g_x_0_z_0_xxy_xyyzzz, g_x_0_z_0_xxy_xyzzzz, g_x_0_z_0_xxy_xzzzzz, g_x_0_z_0_xxy_yyyyyy, g_x_0_z_0_xxy_yyyyyz, g_x_0_z_0_xxy_yyyyzz, g_x_0_z_0_xxy_yyyzzz, g_x_0_z_0_xxy_yyzzzz, g_x_0_z_0_xxy_yzzzzz, g_x_0_z_0_xxy_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_x_0_z_0_xxy_xxxxxx[k] = -g_x_0_z_0_xx_xxxxxx[k] * ab_y + g_x_0_z_0_xx_xxxxxxy[k];

                g_x_0_z_0_xxy_xxxxxy[k] = -g_x_0_z_0_xx_xxxxxy[k] * ab_y + g_x_0_z_0_xx_xxxxxyy[k];

                g_x_0_z_0_xxy_xxxxxz[k] = -g_x_0_z_0_xx_xxxxxz[k] * ab_y + g_x_0_z_0_xx_xxxxxyz[k];

                g_x_0_z_0_xxy_xxxxyy[k] = -g_x_0_z_0_xx_xxxxyy[k] * ab_y + g_x_0_z_0_xx_xxxxyyy[k];

                g_x_0_z_0_xxy_xxxxyz[k] = -g_x_0_z_0_xx_xxxxyz[k] * ab_y + g_x_0_z_0_xx_xxxxyyz[k];

                g_x_0_z_0_xxy_xxxxzz[k] = -g_x_0_z_0_xx_xxxxzz[k] * ab_y + g_x_0_z_0_xx_xxxxyzz[k];

                g_x_0_z_0_xxy_xxxyyy[k] = -g_x_0_z_0_xx_xxxyyy[k] * ab_y + g_x_0_z_0_xx_xxxyyyy[k];

                g_x_0_z_0_xxy_xxxyyz[k] = -g_x_0_z_0_xx_xxxyyz[k] * ab_y + g_x_0_z_0_xx_xxxyyyz[k];

                g_x_0_z_0_xxy_xxxyzz[k] = -g_x_0_z_0_xx_xxxyzz[k] * ab_y + g_x_0_z_0_xx_xxxyyzz[k];

                g_x_0_z_0_xxy_xxxzzz[k] = -g_x_0_z_0_xx_xxxzzz[k] * ab_y + g_x_0_z_0_xx_xxxyzzz[k];

                g_x_0_z_0_xxy_xxyyyy[k] = -g_x_0_z_0_xx_xxyyyy[k] * ab_y + g_x_0_z_0_xx_xxyyyyy[k];

                g_x_0_z_0_xxy_xxyyyz[k] = -g_x_0_z_0_xx_xxyyyz[k] * ab_y + g_x_0_z_0_xx_xxyyyyz[k];

                g_x_0_z_0_xxy_xxyyzz[k] = -g_x_0_z_0_xx_xxyyzz[k] * ab_y + g_x_0_z_0_xx_xxyyyzz[k];

                g_x_0_z_0_xxy_xxyzzz[k] = -g_x_0_z_0_xx_xxyzzz[k] * ab_y + g_x_0_z_0_xx_xxyyzzz[k];

                g_x_0_z_0_xxy_xxzzzz[k] = -g_x_0_z_0_xx_xxzzzz[k] * ab_y + g_x_0_z_0_xx_xxyzzzz[k];

                g_x_0_z_0_xxy_xyyyyy[k] = -g_x_0_z_0_xx_xyyyyy[k] * ab_y + g_x_0_z_0_xx_xyyyyyy[k];

                g_x_0_z_0_xxy_xyyyyz[k] = -g_x_0_z_0_xx_xyyyyz[k] * ab_y + g_x_0_z_0_xx_xyyyyyz[k];

                g_x_0_z_0_xxy_xyyyzz[k] = -g_x_0_z_0_xx_xyyyzz[k] * ab_y + g_x_0_z_0_xx_xyyyyzz[k];

                g_x_0_z_0_xxy_xyyzzz[k] = -g_x_0_z_0_xx_xyyzzz[k] * ab_y + g_x_0_z_0_xx_xyyyzzz[k];

                g_x_0_z_0_xxy_xyzzzz[k] = -g_x_0_z_0_xx_xyzzzz[k] * ab_y + g_x_0_z_0_xx_xyyzzzz[k];

                g_x_0_z_0_xxy_xzzzzz[k] = -g_x_0_z_0_xx_xzzzzz[k] * ab_y + g_x_0_z_0_xx_xyzzzzz[k];

                g_x_0_z_0_xxy_yyyyyy[k] = -g_x_0_z_0_xx_yyyyyy[k] * ab_y + g_x_0_z_0_xx_yyyyyyy[k];

                g_x_0_z_0_xxy_yyyyyz[k] = -g_x_0_z_0_xx_yyyyyz[k] * ab_y + g_x_0_z_0_xx_yyyyyyz[k];

                g_x_0_z_0_xxy_yyyyzz[k] = -g_x_0_z_0_xx_yyyyzz[k] * ab_y + g_x_0_z_0_xx_yyyyyzz[k];

                g_x_0_z_0_xxy_yyyzzz[k] = -g_x_0_z_0_xx_yyyzzz[k] * ab_y + g_x_0_z_0_xx_yyyyzzz[k];

                g_x_0_z_0_xxy_yyzzzz[k] = -g_x_0_z_0_xx_yyzzzz[k] * ab_y + g_x_0_z_0_xx_yyyzzzz[k];

                g_x_0_z_0_xxy_yzzzzz[k] = -g_x_0_z_0_xx_yzzzzz[k] * ab_y + g_x_0_z_0_xx_yyzzzzz[k];

                g_x_0_z_0_xxy_zzzzzz[k] = -g_x_0_z_0_xx_zzzzzz[k] * ab_y + g_x_0_z_0_xx_yzzzzzz[k];
            }

            /// Set up 616-644 components of targeted buffer : cbuffer.data(

            auto g_x_0_z_0_xxz_xxxxxx = cbuffer.data(fi_geom_1010_off + 616 * ccomps * dcomps);

            auto g_x_0_z_0_xxz_xxxxxy = cbuffer.data(fi_geom_1010_off + 617 * ccomps * dcomps);

            auto g_x_0_z_0_xxz_xxxxxz = cbuffer.data(fi_geom_1010_off + 618 * ccomps * dcomps);

            auto g_x_0_z_0_xxz_xxxxyy = cbuffer.data(fi_geom_1010_off + 619 * ccomps * dcomps);

            auto g_x_0_z_0_xxz_xxxxyz = cbuffer.data(fi_geom_1010_off + 620 * ccomps * dcomps);

            auto g_x_0_z_0_xxz_xxxxzz = cbuffer.data(fi_geom_1010_off + 621 * ccomps * dcomps);

            auto g_x_0_z_0_xxz_xxxyyy = cbuffer.data(fi_geom_1010_off + 622 * ccomps * dcomps);

            auto g_x_0_z_0_xxz_xxxyyz = cbuffer.data(fi_geom_1010_off + 623 * ccomps * dcomps);

            auto g_x_0_z_0_xxz_xxxyzz = cbuffer.data(fi_geom_1010_off + 624 * ccomps * dcomps);

            auto g_x_0_z_0_xxz_xxxzzz = cbuffer.data(fi_geom_1010_off + 625 * ccomps * dcomps);

            auto g_x_0_z_0_xxz_xxyyyy = cbuffer.data(fi_geom_1010_off + 626 * ccomps * dcomps);

            auto g_x_0_z_0_xxz_xxyyyz = cbuffer.data(fi_geom_1010_off + 627 * ccomps * dcomps);

            auto g_x_0_z_0_xxz_xxyyzz = cbuffer.data(fi_geom_1010_off + 628 * ccomps * dcomps);

            auto g_x_0_z_0_xxz_xxyzzz = cbuffer.data(fi_geom_1010_off + 629 * ccomps * dcomps);

            auto g_x_0_z_0_xxz_xxzzzz = cbuffer.data(fi_geom_1010_off + 630 * ccomps * dcomps);

            auto g_x_0_z_0_xxz_xyyyyy = cbuffer.data(fi_geom_1010_off + 631 * ccomps * dcomps);

            auto g_x_0_z_0_xxz_xyyyyz = cbuffer.data(fi_geom_1010_off + 632 * ccomps * dcomps);

            auto g_x_0_z_0_xxz_xyyyzz = cbuffer.data(fi_geom_1010_off + 633 * ccomps * dcomps);

            auto g_x_0_z_0_xxz_xyyzzz = cbuffer.data(fi_geom_1010_off + 634 * ccomps * dcomps);

            auto g_x_0_z_0_xxz_xyzzzz = cbuffer.data(fi_geom_1010_off + 635 * ccomps * dcomps);

            auto g_x_0_z_0_xxz_xzzzzz = cbuffer.data(fi_geom_1010_off + 636 * ccomps * dcomps);

            auto g_x_0_z_0_xxz_yyyyyy = cbuffer.data(fi_geom_1010_off + 637 * ccomps * dcomps);

            auto g_x_0_z_0_xxz_yyyyyz = cbuffer.data(fi_geom_1010_off + 638 * ccomps * dcomps);

            auto g_x_0_z_0_xxz_yyyyzz = cbuffer.data(fi_geom_1010_off + 639 * ccomps * dcomps);

            auto g_x_0_z_0_xxz_yyyzzz = cbuffer.data(fi_geom_1010_off + 640 * ccomps * dcomps);

            auto g_x_0_z_0_xxz_yyzzzz = cbuffer.data(fi_geom_1010_off + 641 * ccomps * dcomps);

            auto g_x_0_z_0_xxz_yzzzzz = cbuffer.data(fi_geom_1010_off + 642 * ccomps * dcomps);

            auto g_x_0_z_0_xxz_zzzzzz = cbuffer.data(fi_geom_1010_off + 643 * ccomps * dcomps);

            #pragma omp simd aligned(g_x_0_z_0_xx_xxxxxx, g_x_0_z_0_xx_xxxxxxz, g_x_0_z_0_xx_xxxxxy, g_x_0_z_0_xx_xxxxxyz, g_x_0_z_0_xx_xxxxxz, g_x_0_z_0_xx_xxxxxzz, g_x_0_z_0_xx_xxxxyy, g_x_0_z_0_xx_xxxxyyz, g_x_0_z_0_xx_xxxxyz, g_x_0_z_0_xx_xxxxyzz, g_x_0_z_0_xx_xxxxzz, g_x_0_z_0_xx_xxxxzzz, g_x_0_z_0_xx_xxxyyy, g_x_0_z_0_xx_xxxyyyz, g_x_0_z_0_xx_xxxyyz, g_x_0_z_0_xx_xxxyyzz, g_x_0_z_0_xx_xxxyzz, g_x_0_z_0_xx_xxxyzzz, g_x_0_z_0_xx_xxxzzz, g_x_0_z_0_xx_xxxzzzz, g_x_0_z_0_xx_xxyyyy, g_x_0_z_0_xx_xxyyyyz, g_x_0_z_0_xx_xxyyyz, g_x_0_z_0_xx_xxyyyzz, g_x_0_z_0_xx_xxyyzz, g_x_0_z_0_xx_xxyyzzz, g_x_0_z_0_xx_xxyzzz, g_x_0_z_0_xx_xxyzzzz, g_x_0_z_0_xx_xxzzzz, g_x_0_z_0_xx_xxzzzzz, g_x_0_z_0_xx_xyyyyy, g_x_0_z_0_xx_xyyyyyz, g_x_0_z_0_xx_xyyyyz, g_x_0_z_0_xx_xyyyyzz, g_x_0_z_0_xx_xyyyzz, g_x_0_z_0_xx_xyyyzzz, g_x_0_z_0_xx_xyyzzz, g_x_0_z_0_xx_xyyzzzz, g_x_0_z_0_xx_xyzzzz, g_x_0_z_0_xx_xyzzzzz, g_x_0_z_0_xx_xzzzzz, g_x_0_z_0_xx_xzzzzzz, g_x_0_z_0_xx_yyyyyy, g_x_0_z_0_xx_yyyyyyz, g_x_0_z_0_xx_yyyyyz, g_x_0_z_0_xx_yyyyyzz, g_x_0_z_0_xx_yyyyzz, g_x_0_z_0_xx_yyyyzzz, g_x_0_z_0_xx_yyyzzz, g_x_0_z_0_xx_yyyzzzz, g_x_0_z_0_xx_yyzzzz, g_x_0_z_0_xx_yyzzzzz, g_x_0_z_0_xx_yzzzzz, g_x_0_z_0_xx_yzzzzzz, g_x_0_z_0_xx_zzzzzz, g_x_0_z_0_xx_zzzzzzz, g_x_0_z_0_xxz_xxxxxx, g_x_0_z_0_xxz_xxxxxy, g_x_0_z_0_xxz_xxxxxz, g_x_0_z_0_xxz_xxxxyy, g_x_0_z_0_xxz_xxxxyz, g_x_0_z_0_xxz_xxxxzz, g_x_0_z_0_xxz_xxxyyy, g_x_0_z_0_xxz_xxxyyz, g_x_0_z_0_xxz_xxxyzz, g_x_0_z_0_xxz_xxxzzz, g_x_0_z_0_xxz_xxyyyy, g_x_0_z_0_xxz_xxyyyz, g_x_0_z_0_xxz_xxyyzz, g_x_0_z_0_xxz_xxyzzz, g_x_0_z_0_xxz_xxzzzz, g_x_0_z_0_xxz_xyyyyy, g_x_0_z_0_xxz_xyyyyz, g_x_0_z_0_xxz_xyyyzz, g_x_0_z_0_xxz_xyyzzz, g_x_0_z_0_xxz_xyzzzz, g_x_0_z_0_xxz_xzzzzz, g_x_0_z_0_xxz_yyyyyy, g_x_0_z_0_xxz_yyyyyz, g_x_0_z_0_xxz_yyyyzz, g_x_0_z_0_xxz_yyyzzz, g_x_0_z_0_xxz_yyzzzz, g_x_0_z_0_xxz_yzzzzz, g_x_0_z_0_xxz_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_x_0_z_0_xxz_xxxxxx[k] = -g_x_0_z_0_xx_xxxxxx[k] * ab_z + g_x_0_z_0_xx_xxxxxxz[k];

                g_x_0_z_0_xxz_xxxxxy[k] = -g_x_0_z_0_xx_xxxxxy[k] * ab_z + g_x_0_z_0_xx_xxxxxyz[k];

                g_x_0_z_0_xxz_xxxxxz[k] = -g_x_0_z_0_xx_xxxxxz[k] * ab_z + g_x_0_z_0_xx_xxxxxzz[k];

                g_x_0_z_0_xxz_xxxxyy[k] = -g_x_0_z_0_xx_xxxxyy[k] * ab_z + g_x_0_z_0_xx_xxxxyyz[k];

                g_x_0_z_0_xxz_xxxxyz[k] = -g_x_0_z_0_xx_xxxxyz[k] * ab_z + g_x_0_z_0_xx_xxxxyzz[k];

                g_x_0_z_0_xxz_xxxxzz[k] = -g_x_0_z_0_xx_xxxxzz[k] * ab_z + g_x_0_z_0_xx_xxxxzzz[k];

                g_x_0_z_0_xxz_xxxyyy[k] = -g_x_0_z_0_xx_xxxyyy[k] * ab_z + g_x_0_z_0_xx_xxxyyyz[k];

                g_x_0_z_0_xxz_xxxyyz[k] = -g_x_0_z_0_xx_xxxyyz[k] * ab_z + g_x_0_z_0_xx_xxxyyzz[k];

                g_x_0_z_0_xxz_xxxyzz[k] = -g_x_0_z_0_xx_xxxyzz[k] * ab_z + g_x_0_z_0_xx_xxxyzzz[k];

                g_x_0_z_0_xxz_xxxzzz[k] = -g_x_0_z_0_xx_xxxzzz[k] * ab_z + g_x_0_z_0_xx_xxxzzzz[k];

                g_x_0_z_0_xxz_xxyyyy[k] = -g_x_0_z_0_xx_xxyyyy[k] * ab_z + g_x_0_z_0_xx_xxyyyyz[k];

                g_x_0_z_0_xxz_xxyyyz[k] = -g_x_0_z_0_xx_xxyyyz[k] * ab_z + g_x_0_z_0_xx_xxyyyzz[k];

                g_x_0_z_0_xxz_xxyyzz[k] = -g_x_0_z_0_xx_xxyyzz[k] * ab_z + g_x_0_z_0_xx_xxyyzzz[k];

                g_x_0_z_0_xxz_xxyzzz[k] = -g_x_0_z_0_xx_xxyzzz[k] * ab_z + g_x_0_z_0_xx_xxyzzzz[k];

                g_x_0_z_0_xxz_xxzzzz[k] = -g_x_0_z_0_xx_xxzzzz[k] * ab_z + g_x_0_z_0_xx_xxzzzzz[k];

                g_x_0_z_0_xxz_xyyyyy[k] = -g_x_0_z_0_xx_xyyyyy[k] * ab_z + g_x_0_z_0_xx_xyyyyyz[k];

                g_x_0_z_0_xxz_xyyyyz[k] = -g_x_0_z_0_xx_xyyyyz[k] * ab_z + g_x_0_z_0_xx_xyyyyzz[k];

                g_x_0_z_0_xxz_xyyyzz[k] = -g_x_0_z_0_xx_xyyyzz[k] * ab_z + g_x_0_z_0_xx_xyyyzzz[k];

                g_x_0_z_0_xxz_xyyzzz[k] = -g_x_0_z_0_xx_xyyzzz[k] * ab_z + g_x_0_z_0_xx_xyyzzzz[k];

                g_x_0_z_0_xxz_xyzzzz[k] = -g_x_0_z_0_xx_xyzzzz[k] * ab_z + g_x_0_z_0_xx_xyzzzzz[k];

                g_x_0_z_0_xxz_xzzzzz[k] = -g_x_0_z_0_xx_xzzzzz[k] * ab_z + g_x_0_z_0_xx_xzzzzzz[k];

                g_x_0_z_0_xxz_yyyyyy[k] = -g_x_0_z_0_xx_yyyyyy[k] * ab_z + g_x_0_z_0_xx_yyyyyyz[k];

                g_x_0_z_0_xxz_yyyyyz[k] = -g_x_0_z_0_xx_yyyyyz[k] * ab_z + g_x_0_z_0_xx_yyyyyzz[k];

                g_x_0_z_0_xxz_yyyyzz[k] = -g_x_0_z_0_xx_yyyyzz[k] * ab_z + g_x_0_z_0_xx_yyyyzzz[k];

                g_x_0_z_0_xxz_yyyzzz[k] = -g_x_0_z_0_xx_yyyzzz[k] * ab_z + g_x_0_z_0_xx_yyyzzzz[k];

                g_x_0_z_0_xxz_yyzzzz[k] = -g_x_0_z_0_xx_yyzzzz[k] * ab_z + g_x_0_z_0_xx_yyzzzzz[k];

                g_x_0_z_0_xxz_yzzzzz[k] = -g_x_0_z_0_xx_yzzzzz[k] * ab_z + g_x_0_z_0_xx_yzzzzzz[k];

                g_x_0_z_0_xxz_zzzzzz[k] = -g_x_0_z_0_xx_zzzzzz[k] * ab_z + g_x_0_z_0_xx_zzzzzzz[k];
            }

            /// Set up 644-672 components of targeted buffer : cbuffer.data(

            auto g_x_0_z_0_xyy_xxxxxx = cbuffer.data(fi_geom_1010_off + 644 * ccomps * dcomps);

            auto g_x_0_z_0_xyy_xxxxxy = cbuffer.data(fi_geom_1010_off + 645 * ccomps * dcomps);

            auto g_x_0_z_0_xyy_xxxxxz = cbuffer.data(fi_geom_1010_off + 646 * ccomps * dcomps);

            auto g_x_0_z_0_xyy_xxxxyy = cbuffer.data(fi_geom_1010_off + 647 * ccomps * dcomps);

            auto g_x_0_z_0_xyy_xxxxyz = cbuffer.data(fi_geom_1010_off + 648 * ccomps * dcomps);

            auto g_x_0_z_0_xyy_xxxxzz = cbuffer.data(fi_geom_1010_off + 649 * ccomps * dcomps);

            auto g_x_0_z_0_xyy_xxxyyy = cbuffer.data(fi_geom_1010_off + 650 * ccomps * dcomps);

            auto g_x_0_z_0_xyy_xxxyyz = cbuffer.data(fi_geom_1010_off + 651 * ccomps * dcomps);

            auto g_x_0_z_0_xyy_xxxyzz = cbuffer.data(fi_geom_1010_off + 652 * ccomps * dcomps);

            auto g_x_0_z_0_xyy_xxxzzz = cbuffer.data(fi_geom_1010_off + 653 * ccomps * dcomps);

            auto g_x_0_z_0_xyy_xxyyyy = cbuffer.data(fi_geom_1010_off + 654 * ccomps * dcomps);

            auto g_x_0_z_0_xyy_xxyyyz = cbuffer.data(fi_geom_1010_off + 655 * ccomps * dcomps);

            auto g_x_0_z_0_xyy_xxyyzz = cbuffer.data(fi_geom_1010_off + 656 * ccomps * dcomps);

            auto g_x_0_z_0_xyy_xxyzzz = cbuffer.data(fi_geom_1010_off + 657 * ccomps * dcomps);

            auto g_x_0_z_0_xyy_xxzzzz = cbuffer.data(fi_geom_1010_off + 658 * ccomps * dcomps);

            auto g_x_0_z_0_xyy_xyyyyy = cbuffer.data(fi_geom_1010_off + 659 * ccomps * dcomps);

            auto g_x_0_z_0_xyy_xyyyyz = cbuffer.data(fi_geom_1010_off + 660 * ccomps * dcomps);

            auto g_x_0_z_0_xyy_xyyyzz = cbuffer.data(fi_geom_1010_off + 661 * ccomps * dcomps);

            auto g_x_0_z_0_xyy_xyyzzz = cbuffer.data(fi_geom_1010_off + 662 * ccomps * dcomps);

            auto g_x_0_z_0_xyy_xyzzzz = cbuffer.data(fi_geom_1010_off + 663 * ccomps * dcomps);

            auto g_x_0_z_0_xyy_xzzzzz = cbuffer.data(fi_geom_1010_off + 664 * ccomps * dcomps);

            auto g_x_0_z_0_xyy_yyyyyy = cbuffer.data(fi_geom_1010_off + 665 * ccomps * dcomps);

            auto g_x_0_z_0_xyy_yyyyyz = cbuffer.data(fi_geom_1010_off + 666 * ccomps * dcomps);

            auto g_x_0_z_0_xyy_yyyyzz = cbuffer.data(fi_geom_1010_off + 667 * ccomps * dcomps);

            auto g_x_0_z_0_xyy_yyyzzz = cbuffer.data(fi_geom_1010_off + 668 * ccomps * dcomps);

            auto g_x_0_z_0_xyy_yyzzzz = cbuffer.data(fi_geom_1010_off + 669 * ccomps * dcomps);

            auto g_x_0_z_0_xyy_yzzzzz = cbuffer.data(fi_geom_1010_off + 670 * ccomps * dcomps);

            auto g_x_0_z_0_xyy_zzzzzz = cbuffer.data(fi_geom_1010_off + 671 * ccomps * dcomps);

            #pragma omp simd aligned(g_x_0_z_0_xy_xxxxxx, g_x_0_z_0_xy_xxxxxxy, g_x_0_z_0_xy_xxxxxy, g_x_0_z_0_xy_xxxxxyy, g_x_0_z_0_xy_xxxxxyz, g_x_0_z_0_xy_xxxxxz, g_x_0_z_0_xy_xxxxyy, g_x_0_z_0_xy_xxxxyyy, g_x_0_z_0_xy_xxxxyyz, g_x_0_z_0_xy_xxxxyz, g_x_0_z_0_xy_xxxxyzz, g_x_0_z_0_xy_xxxxzz, g_x_0_z_0_xy_xxxyyy, g_x_0_z_0_xy_xxxyyyy, g_x_0_z_0_xy_xxxyyyz, g_x_0_z_0_xy_xxxyyz, g_x_0_z_0_xy_xxxyyzz, g_x_0_z_0_xy_xxxyzz, g_x_0_z_0_xy_xxxyzzz, g_x_0_z_0_xy_xxxzzz, g_x_0_z_0_xy_xxyyyy, g_x_0_z_0_xy_xxyyyyy, g_x_0_z_0_xy_xxyyyyz, g_x_0_z_0_xy_xxyyyz, g_x_0_z_0_xy_xxyyyzz, g_x_0_z_0_xy_xxyyzz, g_x_0_z_0_xy_xxyyzzz, g_x_0_z_0_xy_xxyzzz, g_x_0_z_0_xy_xxyzzzz, g_x_0_z_0_xy_xxzzzz, g_x_0_z_0_xy_xyyyyy, g_x_0_z_0_xy_xyyyyyy, g_x_0_z_0_xy_xyyyyyz, g_x_0_z_0_xy_xyyyyz, g_x_0_z_0_xy_xyyyyzz, g_x_0_z_0_xy_xyyyzz, g_x_0_z_0_xy_xyyyzzz, g_x_0_z_0_xy_xyyzzz, g_x_0_z_0_xy_xyyzzzz, g_x_0_z_0_xy_xyzzzz, g_x_0_z_0_xy_xyzzzzz, g_x_0_z_0_xy_xzzzzz, g_x_0_z_0_xy_yyyyyy, g_x_0_z_0_xy_yyyyyyy, g_x_0_z_0_xy_yyyyyyz, g_x_0_z_0_xy_yyyyyz, g_x_0_z_0_xy_yyyyyzz, g_x_0_z_0_xy_yyyyzz, g_x_0_z_0_xy_yyyyzzz, g_x_0_z_0_xy_yyyzzz, g_x_0_z_0_xy_yyyzzzz, g_x_0_z_0_xy_yyzzzz, g_x_0_z_0_xy_yyzzzzz, g_x_0_z_0_xy_yzzzzz, g_x_0_z_0_xy_yzzzzzz, g_x_0_z_0_xy_zzzzzz, g_x_0_z_0_xyy_xxxxxx, g_x_0_z_0_xyy_xxxxxy, g_x_0_z_0_xyy_xxxxxz, g_x_0_z_0_xyy_xxxxyy, g_x_0_z_0_xyy_xxxxyz, g_x_0_z_0_xyy_xxxxzz, g_x_0_z_0_xyy_xxxyyy, g_x_0_z_0_xyy_xxxyyz, g_x_0_z_0_xyy_xxxyzz, g_x_0_z_0_xyy_xxxzzz, g_x_0_z_0_xyy_xxyyyy, g_x_0_z_0_xyy_xxyyyz, g_x_0_z_0_xyy_xxyyzz, g_x_0_z_0_xyy_xxyzzz, g_x_0_z_0_xyy_xxzzzz, g_x_0_z_0_xyy_xyyyyy, g_x_0_z_0_xyy_xyyyyz, g_x_0_z_0_xyy_xyyyzz, g_x_0_z_0_xyy_xyyzzz, g_x_0_z_0_xyy_xyzzzz, g_x_0_z_0_xyy_xzzzzz, g_x_0_z_0_xyy_yyyyyy, g_x_0_z_0_xyy_yyyyyz, g_x_0_z_0_xyy_yyyyzz, g_x_0_z_0_xyy_yyyzzz, g_x_0_z_0_xyy_yyzzzz, g_x_0_z_0_xyy_yzzzzz, g_x_0_z_0_xyy_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_x_0_z_0_xyy_xxxxxx[k] = -g_x_0_z_0_xy_xxxxxx[k] * ab_y + g_x_0_z_0_xy_xxxxxxy[k];

                g_x_0_z_0_xyy_xxxxxy[k] = -g_x_0_z_0_xy_xxxxxy[k] * ab_y + g_x_0_z_0_xy_xxxxxyy[k];

                g_x_0_z_0_xyy_xxxxxz[k] = -g_x_0_z_0_xy_xxxxxz[k] * ab_y + g_x_0_z_0_xy_xxxxxyz[k];

                g_x_0_z_0_xyy_xxxxyy[k] = -g_x_0_z_0_xy_xxxxyy[k] * ab_y + g_x_0_z_0_xy_xxxxyyy[k];

                g_x_0_z_0_xyy_xxxxyz[k] = -g_x_0_z_0_xy_xxxxyz[k] * ab_y + g_x_0_z_0_xy_xxxxyyz[k];

                g_x_0_z_0_xyy_xxxxzz[k] = -g_x_0_z_0_xy_xxxxzz[k] * ab_y + g_x_0_z_0_xy_xxxxyzz[k];

                g_x_0_z_0_xyy_xxxyyy[k] = -g_x_0_z_0_xy_xxxyyy[k] * ab_y + g_x_0_z_0_xy_xxxyyyy[k];

                g_x_0_z_0_xyy_xxxyyz[k] = -g_x_0_z_0_xy_xxxyyz[k] * ab_y + g_x_0_z_0_xy_xxxyyyz[k];

                g_x_0_z_0_xyy_xxxyzz[k] = -g_x_0_z_0_xy_xxxyzz[k] * ab_y + g_x_0_z_0_xy_xxxyyzz[k];

                g_x_0_z_0_xyy_xxxzzz[k] = -g_x_0_z_0_xy_xxxzzz[k] * ab_y + g_x_0_z_0_xy_xxxyzzz[k];

                g_x_0_z_0_xyy_xxyyyy[k] = -g_x_0_z_0_xy_xxyyyy[k] * ab_y + g_x_0_z_0_xy_xxyyyyy[k];

                g_x_0_z_0_xyy_xxyyyz[k] = -g_x_0_z_0_xy_xxyyyz[k] * ab_y + g_x_0_z_0_xy_xxyyyyz[k];

                g_x_0_z_0_xyy_xxyyzz[k] = -g_x_0_z_0_xy_xxyyzz[k] * ab_y + g_x_0_z_0_xy_xxyyyzz[k];

                g_x_0_z_0_xyy_xxyzzz[k] = -g_x_0_z_0_xy_xxyzzz[k] * ab_y + g_x_0_z_0_xy_xxyyzzz[k];

                g_x_0_z_0_xyy_xxzzzz[k] = -g_x_0_z_0_xy_xxzzzz[k] * ab_y + g_x_0_z_0_xy_xxyzzzz[k];

                g_x_0_z_0_xyy_xyyyyy[k] = -g_x_0_z_0_xy_xyyyyy[k] * ab_y + g_x_0_z_0_xy_xyyyyyy[k];

                g_x_0_z_0_xyy_xyyyyz[k] = -g_x_0_z_0_xy_xyyyyz[k] * ab_y + g_x_0_z_0_xy_xyyyyyz[k];

                g_x_0_z_0_xyy_xyyyzz[k] = -g_x_0_z_0_xy_xyyyzz[k] * ab_y + g_x_0_z_0_xy_xyyyyzz[k];

                g_x_0_z_0_xyy_xyyzzz[k] = -g_x_0_z_0_xy_xyyzzz[k] * ab_y + g_x_0_z_0_xy_xyyyzzz[k];

                g_x_0_z_0_xyy_xyzzzz[k] = -g_x_0_z_0_xy_xyzzzz[k] * ab_y + g_x_0_z_0_xy_xyyzzzz[k];

                g_x_0_z_0_xyy_xzzzzz[k] = -g_x_0_z_0_xy_xzzzzz[k] * ab_y + g_x_0_z_0_xy_xyzzzzz[k];

                g_x_0_z_0_xyy_yyyyyy[k] = -g_x_0_z_0_xy_yyyyyy[k] * ab_y + g_x_0_z_0_xy_yyyyyyy[k];

                g_x_0_z_0_xyy_yyyyyz[k] = -g_x_0_z_0_xy_yyyyyz[k] * ab_y + g_x_0_z_0_xy_yyyyyyz[k];

                g_x_0_z_0_xyy_yyyyzz[k] = -g_x_0_z_0_xy_yyyyzz[k] * ab_y + g_x_0_z_0_xy_yyyyyzz[k];

                g_x_0_z_0_xyy_yyyzzz[k] = -g_x_0_z_0_xy_yyyzzz[k] * ab_y + g_x_0_z_0_xy_yyyyzzz[k];

                g_x_0_z_0_xyy_yyzzzz[k] = -g_x_0_z_0_xy_yyzzzz[k] * ab_y + g_x_0_z_0_xy_yyyzzzz[k];

                g_x_0_z_0_xyy_yzzzzz[k] = -g_x_0_z_0_xy_yzzzzz[k] * ab_y + g_x_0_z_0_xy_yyzzzzz[k];

                g_x_0_z_0_xyy_zzzzzz[k] = -g_x_0_z_0_xy_zzzzzz[k] * ab_y + g_x_0_z_0_xy_yzzzzzz[k];
            }

            /// Set up 672-700 components of targeted buffer : cbuffer.data(

            auto g_x_0_z_0_xyz_xxxxxx = cbuffer.data(fi_geom_1010_off + 672 * ccomps * dcomps);

            auto g_x_0_z_0_xyz_xxxxxy = cbuffer.data(fi_geom_1010_off + 673 * ccomps * dcomps);

            auto g_x_0_z_0_xyz_xxxxxz = cbuffer.data(fi_geom_1010_off + 674 * ccomps * dcomps);

            auto g_x_0_z_0_xyz_xxxxyy = cbuffer.data(fi_geom_1010_off + 675 * ccomps * dcomps);

            auto g_x_0_z_0_xyz_xxxxyz = cbuffer.data(fi_geom_1010_off + 676 * ccomps * dcomps);

            auto g_x_0_z_0_xyz_xxxxzz = cbuffer.data(fi_geom_1010_off + 677 * ccomps * dcomps);

            auto g_x_0_z_0_xyz_xxxyyy = cbuffer.data(fi_geom_1010_off + 678 * ccomps * dcomps);

            auto g_x_0_z_0_xyz_xxxyyz = cbuffer.data(fi_geom_1010_off + 679 * ccomps * dcomps);

            auto g_x_0_z_0_xyz_xxxyzz = cbuffer.data(fi_geom_1010_off + 680 * ccomps * dcomps);

            auto g_x_0_z_0_xyz_xxxzzz = cbuffer.data(fi_geom_1010_off + 681 * ccomps * dcomps);

            auto g_x_0_z_0_xyz_xxyyyy = cbuffer.data(fi_geom_1010_off + 682 * ccomps * dcomps);

            auto g_x_0_z_0_xyz_xxyyyz = cbuffer.data(fi_geom_1010_off + 683 * ccomps * dcomps);

            auto g_x_0_z_0_xyz_xxyyzz = cbuffer.data(fi_geom_1010_off + 684 * ccomps * dcomps);

            auto g_x_0_z_0_xyz_xxyzzz = cbuffer.data(fi_geom_1010_off + 685 * ccomps * dcomps);

            auto g_x_0_z_0_xyz_xxzzzz = cbuffer.data(fi_geom_1010_off + 686 * ccomps * dcomps);

            auto g_x_0_z_0_xyz_xyyyyy = cbuffer.data(fi_geom_1010_off + 687 * ccomps * dcomps);

            auto g_x_0_z_0_xyz_xyyyyz = cbuffer.data(fi_geom_1010_off + 688 * ccomps * dcomps);

            auto g_x_0_z_0_xyz_xyyyzz = cbuffer.data(fi_geom_1010_off + 689 * ccomps * dcomps);

            auto g_x_0_z_0_xyz_xyyzzz = cbuffer.data(fi_geom_1010_off + 690 * ccomps * dcomps);

            auto g_x_0_z_0_xyz_xyzzzz = cbuffer.data(fi_geom_1010_off + 691 * ccomps * dcomps);

            auto g_x_0_z_0_xyz_xzzzzz = cbuffer.data(fi_geom_1010_off + 692 * ccomps * dcomps);

            auto g_x_0_z_0_xyz_yyyyyy = cbuffer.data(fi_geom_1010_off + 693 * ccomps * dcomps);

            auto g_x_0_z_0_xyz_yyyyyz = cbuffer.data(fi_geom_1010_off + 694 * ccomps * dcomps);

            auto g_x_0_z_0_xyz_yyyyzz = cbuffer.data(fi_geom_1010_off + 695 * ccomps * dcomps);

            auto g_x_0_z_0_xyz_yyyzzz = cbuffer.data(fi_geom_1010_off + 696 * ccomps * dcomps);

            auto g_x_0_z_0_xyz_yyzzzz = cbuffer.data(fi_geom_1010_off + 697 * ccomps * dcomps);

            auto g_x_0_z_0_xyz_yzzzzz = cbuffer.data(fi_geom_1010_off + 698 * ccomps * dcomps);

            auto g_x_0_z_0_xyz_zzzzzz = cbuffer.data(fi_geom_1010_off + 699 * ccomps * dcomps);

            #pragma omp simd aligned(g_x_0_z_0_xyz_xxxxxx, g_x_0_z_0_xyz_xxxxxy, g_x_0_z_0_xyz_xxxxxz, g_x_0_z_0_xyz_xxxxyy, g_x_0_z_0_xyz_xxxxyz, g_x_0_z_0_xyz_xxxxzz, g_x_0_z_0_xyz_xxxyyy, g_x_0_z_0_xyz_xxxyyz, g_x_0_z_0_xyz_xxxyzz, g_x_0_z_0_xyz_xxxzzz, g_x_0_z_0_xyz_xxyyyy, g_x_0_z_0_xyz_xxyyyz, g_x_0_z_0_xyz_xxyyzz, g_x_0_z_0_xyz_xxyzzz, g_x_0_z_0_xyz_xxzzzz, g_x_0_z_0_xyz_xyyyyy, g_x_0_z_0_xyz_xyyyyz, g_x_0_z_0_xyz_xyyyzz, g_x_0_z_0_xyz_xyyzzz, g_x_0_z_0_xyz_xyzzzz, g_x_0_z_0_xyz_xzzzzz, g_x_0_z_0_xyz_yyyyyy, g_x_0_z_0_xyz_yyyyyz, g_x_0_z_0_xyz_yyyyzz, g_x_0_z_0_xyz_yyyzzz, g_x_0_z_0_xyz_yyzzzz, g_x_0_z_0_xyz_yzzzzz, g_x_0_z_0_xyz_zzzzzz, g_x_0_z_0_xz_xxxxxx, g_x_0_z_0_xz_xxxxxxy, g_x_0_z_0_xz_xxxxxy, g_x_0_z_0_xz_xxxxxyy, g_x_0_z_0_xz_xxxxxyz, g_x_0_z_0_xz_xxxxxz, g_x_0_z_0_xz_xxxxyy, g_x_0_z_0_xz_xxxxyyy, g_x_0_z_0_xz_xxxxyyz, g_x_0_z_0_xz_xxxxyz, g_x_0_z_0_xz_xxxxyzz, g_x_0_z_0_xz_xxxxzz, g_x_0_z_0_xz_xxxyyy, g_x_0_z_0_xz_xxxyyyy, g_x_0_z_0_xz_xxxyyyz, g_x_0_z_0_xz_xxxyyz, g_x_0_z_0_xz_xxxyyzz, g_x_0_z_0_xz_xxxyzz, g_x_0_z_0_xz_xxxyzzz, g_x_0_z_0_xz_xxxzzz, g_x_0_z_0_xz_xxyyyy, g_x_0_z_0_xz_xxyyyyy, g_x_0_z_0_xz_xxyyyyz, g_x_0_z_0_xz_xxyyyz, g_x_0_z_0_xz_xxyyyzz, g_x_0_z_0_xz_xxyyzz, g_x_0_z_0_xz_xxyyzzz, g_x_0_z_0_xz_xxyzzz, g_x_0_z_0_xz_xxyzzzz, g_x_0_z_0_xz_xxzzzz, g_x_0_z_0_xz_xyyyyy, g_x_0_z_0_xz_xyyyyyy, g_x_0_z_0_xz_xyyyyyz, g_x_0_z_0_xz_xyyyyz, g_x_0_z_0_xz_xyyyyzz, g_x_0_z_0_xz_xyyyzz, g_x_0_z_0_xz_xyyyzzz, g_x_0_z_0_xz_xyyzzz, g_x_0_z_0_xz_xyyzzzz, g_x_0_z_0_xz_xyzzzz, g_x_0_z_0_xz_xyzzzzz, g_x_0_z_0_xz_xzzzzz, g_x_0_z_0_xz_yyyyyy, g_x_0_z_0_xz_yyyyyyy, g_x_0_z_0_xz_yyyyyyz, g_x_0_z_0_xz_yyyyyz, g_x_0_z_0_xz_yyyyyzz, g_x_0_z_0_xz_yyyyzz, g_x_0_z_0_xz_yyyyzzz, g_x_0_z_0_xz_yyyzzz, g_x_0_z_0_xz_yyyzzzz, g_x_0_z_0_xz_yyzzzz, g_x_0_z_0_xz_yyzzzzz, g_x_0_z_0_xz_yzzzzz, g_x_0_z_0_xz_yzzzzzz, g_x_0_z_0_xz_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_x_0_z_0_xyz_xxxxxx[k] = -g_x_0_z_0_xz_xxxxxx[k] * ab_y + g_x_0_z_0_xz_xxxxxxy[k];

                g_x_0_z_0_xyz_xxxxxy[k] = -g_x_0_z_0_xz_xxxxxy[k] * ab_y + g_x_0_z_0_xz_xxxxxyy[k];

                g_x_0_z_0_xyz_xxxxxz[k] = -g_x_0_z_0_xz_xxxxxz[k] * ab_y + g_x_0_z_0_xz_xxxxxyz[k];

                g_x_0_z_0_xyz_xxxxyy[k] = -g_x_0_z_0_xz_xxxxyy[k] * ab_y + g_x_0_z_0_xz_xxxxyyy[k];

                g_x_0_z_0_xyz_xxxxyz[k] = -g_x_0_z_0_xz_xxxxyz[k] * ab_y + g_x_0_z_0_xz_xxxxyyz[k];

                g_x_0_z_0_xyz_xxxxzz[k] = -g_x_0_z_0_xz_xxxxzz[k] * ab_y + g_x_0_z_0_xz_xxxxyzz[k];

                g_x_0_z_0_xyz_xxxyyy[k] = -g_x_0_z_0_xz_xxxyyy[k] * ab_y + g_x_0_z_0_xz_xxxyyyy[k];

                g_x_0_z_0_xyz_xxxyyz[k] = -g_x_0_z_0_xz_xxxyyz[k] * ab_y + g_x_0_z_0_xz_xxxyyyz[k];

                g_x_0_z_0_xyz_xxxyzz[k] = -g_x_0_z_0_xz_xxxyzz[k] * ab_y + g_x_0_z_0_xz_xxxyyzz[k];

                g_x_0_z_0_xyz_xxxzzz[k] = -g_x_0_z_0_xz_xxxzzz[k] * ab_y + g_x_0_z_0_xz_xxxyzzz[k];

                g_x_0_z_0_xyz_xxyyyy[k] = -g_x_0_z_0_xz_xxyyyy[k] * ab_y + g_x_0_z_0_xz_xxyyyyy[k];

                g_x_0_z_0_xyz_xxyyyz[k] = -g_x_0_z_0_xz_xxyyyz[k] * ab_y + g_x_0_z_0_xz_xxyyyyz[k];

                g_x_0_z_0_xyz_xxyyzz[k] = -g_x_0_z_0_xz_xxyyzz[k] * ab_y + g_x_0_z_0_xz_xxyyyzz[k];

                g_x_0_z_0_xyz_xxyzzz[k] = -g_x_0_z_0_xz_xxyzzz[k] * ab_y + g_x_0_z_0_xz_xxyyzzz[k];

                g_x_0_z_0_xyz_xxzzzz[k] = -g_x_0_z_0_xz_xxzzzz[k] * ab_y + g_x_0_z_0_xz_xxyzzzz[k];

                g_x_0_z_0_xyz_xyyyyy[k] = -g_x_0_z_0_xz_xyyyyy[k] * ab_y + g_x_0_z_0_xz_xyyyyyy[k];

                g_x_0_z_0_xyz_xyyyyz[k] = -g_x_0_z_0_xz_xyyyyz[k] * ab_y + g_x_0_z_0_xz_xyyyyyz[k];

                g_x_0_z_0_xyz_xyyyzz[k] = -g_x_0_z_0_xz_xyyyzz[k] * ab_y + g_x_0_z_0_xz_xyyyyzz[k];

                g_x_0_z_0_xyz_xyyzzz[k] = -g_x_0_z_0_xz_xyyzzz[k] * ab_y + g_x_0_z_0_xz_xyyyzzz[k];

                g_x_0_z_0_xyz_xyzzzz[k] = -g_x_0_z_0_xz_xyzzzz[k] * ab_y + g_x_0_z_0_xz_xyyzzzz[k];

                g_x_0_z_0_xyz_xzzzzz[k] = -g_x_0_z_0_xz_xzzzzz[k] * ab_y + g_x_0_z_0_xz_xyzzzzz[k];

                g_x_0_z_0_xyz_yyyyyy[k] = -g_x_0_z_0_xz_yyyyyy[k] * ab_y + g_x_0_z_0_xz_yyyyyyy[k];

                g_x_0_z_0_xyz_yyyyyz[k] = -g_x_0_z_0_xz_yyyyyz[k] * ab_y + g_x_0_z_0_xz_yyyyyyz[k];

                g_x_0_z_0_xyz_yyyyzz[k] = -g_x_0_z_0_xz_yyyyzz[k] * ab_y + g_x_0_z_0_xz_yyyyyzz[k];

                g_x_0_z_0_xyz_yyyzzz[k] = -g_x_0_z_0_xz_yyyzzz[k] * ab_y + g_x_0_z_0_xz_yyyyzzz[k];

                g_x_0_z_0_xyz_yyzzzz[k] = -g_x_0_z_0_xz_yyzzzz[k] * ab_y + g_x_0_z_0_xz_yyyzzzz[k];

                g_x_0_z_0_xyz_yzzzzz[k] = -g_x_0_z_0_xz_yzzzzz[k] * ab_y + g_x_0_z_0_xz_yyzzzzz[k];

                g_x_0_z_0_xyz_zzzzzz[k] = -g_x_0_z_0_xz_zzzzzz[k] * ab_y + g_x_0_z_0_xz_yzzzzzz[k];
            }

            /// Set up 700-728 components of targeted buffer : cbuffer.data(

            auto g_x_0_z_0_xzz_xxxxxx = cbuffer.data(fi_geom_1010_off + 700 * ccomps * dcomps);

            auto g_x_0_z_0_xzz_xxxxxy = cbuffer.data(fi_geom_1010_off + 701 * ccomps * dcomps);

            auto g_x_0_z_0_xzz_xxxxxz = cbuffer.data(fi_geom_1010_off + 702 * ccomps * dcomps);

            auto g_x_0_z_0_xzz_xxxxyy = cbuffer.data(fi_geom_1010_off + 703 * ccomps * dcomps);

            auto g_x_0_z_0_xzz_xxxxyz = cbuffer.data(fi_geom_1010_off + 704 * ccomps * dcomps);

            auto g_x_0_z_0_xzz_xxxxzz = cbuffer.data(fi_geom_1010_off + 705 * ccomps * dcomps);

            auto g_x_0_z_0_xzz_xxxyyy = cbuffer.data(fi_geom_1010_off + 706 * ccomps * dcomps);

            auto g_x_0_z_0_xzz_xxxyyz = cbuffer.data(fi_geom_1010_off + 707 * ccomps * dcomps);

            auto g_x_0_z_0_xzz_xxxyzz = cbuffer.data(fi_geom_1010_off + 708 * ccomps * dcomps);

            auto g_x_0_z_0_xzz_xxxzzz = cbuffer.data(fi_geom_1010_off + 709 * ccomps * dcomps);

            auto g_x_0_z_0_xzz_xxyyyy = cbuffer.data(fi_geom_1010_off + 710 * ccomps * dcomps);

            auto g_x_0_z_0_xzz_xxyyyz = cbuffer.data(fi_geom_1010_off + 711 * ccomps * dcomps);

            auto g_x_0_z_0_xzz_xxyyzz = cbuffer.data(fi_geom_1010_off + 712 * ccomps * dcomps);

            auto g_x_0_z_0_xzz_xxyzzz = cbuffer.data(fi_geom_1010_off + 713 * ccomps * dcomps);

            auto g_x_0_z_0_xzz_xxzzzz = cbuffer.data(fi_geom_1010_off + 714 * ccomps * dcomps);

            auto g_x_0_z_0_xzz_xyyyyy = cbuffer.data(fi_geom_1010_off + 715 * ccomps * dcomps);

            auto g_x_0_z_0_xzz_xyyyyz = cbuffer.data(fi_geom_1010_off + 716 * ccomps * dcomps);

            auto g_x_0_z_0_xzz_xyyyzz = cbuffer.data(fi_geom_1010_off + 717 * ccomps * dcomps);

            auto g_x_0_z_0_xzz_xyyzzz = cbuffer.data(fi_geom_1010_off + 718 * ccomps * dcomps);

            auto g_x_0_z_0_xzz_xyzzzz = cbuffer.data(fi_geom_1010_off + 719 * ccomps * dcomps);

            auto g_x_0_z_0_xzz_xzzzzz = cbuffer.data(fi_geom_1010_off + 720 * ccomps * dcomps);

            auto g_x_0_z_0_xzz_yyyyyy = cbuffer.data(fi_geom_1010_off + 721 * ccomps * dcomps);

            auto g_x_0_z_0_xzz_yyyyyz = cbuffer.data(fi_geom_1010_off + 722 * ccomps * dcomps);

            auto g_x_0_z_0_xzz_yyyyzz = cbuffer.data(fi_geom_1010_off + 723 * ccomps * dcomps);

            auto g_x_0_z_0_xzz_yyyzzz = cbuffer.data(fi_geom_1010_off + 724 * ccomps * dcomps);

            auto g_x_0_z_0_xzz_yyzzzz = cbuffer.data(fi_geom_1010_off + 725 * ccomps * dcomps);

            auto g_x_0_z_0_xzz_yzzzzz = cbuffer.data(fi_geom_1010_off + 726 * ccomps * dcomps);

            auto g_x_0_z_0_xzz_zzzzzz = cbuffer.data(fi_geom_1010_off + 727 * ccomps * dcomps);

            #pragma omp simd aligned(g_x_0_z_0_xz_xxxxxx, g_x_0_z_0_xz_xxxxxxz, g_x_0_z_0_xz_xxxxxy, g_x_0_z_0_xz_xxxxxyz, g_x_0_z_0_xz_xxxxxz, g_x_0_z_0_xz_xxxxxzz, g_x_0_z_0_xz_xxxxyy, g_x_0_z_0_xz_xxxxyyz, g_x_0_z_0_xz_xxxxyz, g_x_0_z_0_xz_xxxxyzz, g_x_0_z_0_xz_xxxxzz, g_x_0_z_0_xz_xxxxzzz, g_x_0_z_0_xz_xxxyyy, g_x_0_z_0_xz_xxxyyyz, g_x_0_z_0_xz_xxxyyz, g_x_0_z_0_xz_xxxyyzz, g_x_0_z_0_xz_xxxyzz, g_x_0_z_0_xz_xxxyzzz, g_x_0_z_0_xz_xxxzzz, g_x_0_z_0_xz_xxxzzzz, g_x_0_z_0_xz_xxyyyy, g_x_0_z_0_xz_xxyyyyz, g_x_0_z_0_xz_xxyyyz, g_x_0_z_0_xz_xxyyyzz, g_x_0_z_0_xz_xxyyzz, g_x_0_z_0_xz_xxyyzzz, g_x_0_z_0_xz_xxyzzz, g_x_0_z_0_xz_xxyzzzz, g_x_0_z_0_xz_xxzzzz, g_x_0_z_0_xz_xxzzzzz, g_x_0_z_0_xz_xyyyyy, g_x_0_z_0_xz_xyyyyyz, g_x_0_z_0_xz_xyyyyz, g_x_0_z_0_xz_xyyyyzz, g_x_0_z_0_xz_xyyyzz, g_x_0_z_0_xz_xyyyzzz, g_x_0_z_0_xz_xyyzzz, g_x_0_z_0_xz_xyyzzzz, g_x_0_z_0_xz_xyzzzz, g_x_0_z_0_xz_xyzzzzz, g_x_0_z_0_xz_xzzzzz, g_x_0_z_0_xz_xzzzzzz, g_x_0_z_0_xz_yyyyyy, g_x_0_z_0_xz_yyyyyyz, g_x_0_z_0_xz_yyyyyz, g_x_0_z_0_xz_yyyyyzz, g_x_0_z_0_xz_yyyyzz, g_x_0_z_0_xz_yyyyzzz, g_x_0_z_0_xz_yyyzzz, g_x_0_z_0_xz_yyyzzzz, g_x_0_z_0_xz_yyzzzz, g_x_0_z_0_xz_yyzzzzz, g_x_0_z_0_xz_yzzzzz, g_x_0_z_0_xz_yzzzzzz, g_x_0_z_0_xz_zzzzzz, g_x_0_z_0_xz_zzzzzzz, g_x_0_z_0_xzz_xxxxxx, g_x_0_z_0_xzz_xxxxxy, g_x_0_z_0_xzz_xxxxxz, g_x_0_z_0_xzz_xxxxyy, g_x_0_z_0_xzz_xxxxyz, g_x_0_z_0_xzz_xxxxzz, g_x_0_z_0_xzz_xxxyyy, g_x_0_z_0_xzz_xxxyyz, g_x_0_z_0_xzz_xxxyzz, g_x_0_z_0_xzz_xxxzzz, g_x_0_z_0_xzz_xxyyyy, g_x_0_z_0_xzz_xxyyyz, g_x_0_z_0_xzz_xxyyzz, g_x_0_z_0_xzz_xxyzzz, g_x_0_z_0_xzz_xxzzzz, g_x_0_z_0_xzz_xyyyyy, g_x_0_z_0_xzz_xyyyyz, g_x_0_z_0_xzz_xyyyzz, g_x_0_z_0_xzz_xyyzzz, g_x_0_z_0_xzz_xyzzzz, g_x_0_z_0_xzz_xzzzzz, g_x_0_z_0_xzz_yyyyyy, g_x_0_z_0_xzz_yyyyyz, g_x_0_z_0_xzz_yyyyzz, g_x_0_z_0_xzz_yyyzzz, g_x_0_z_0_xzz_yyzzzz, g_x_0_z_0_xzz_yzzzzz, g_x_0_z_0_xzz_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_x_0_z_0_xzz_xxxxxx[k] = -g_x_0_z_0_xz_xxxxxx[k] * ab_z + g_x_0_z_0_xz_xxxxxxz[k];

                g_x_0_z_0_xzz_xxxxxy[k] = -g_x_0_z_0_xz_xxxxxy[k] * ab_z + g_x_0_z_0_xz_xxxxxyz[k];

                g_x_0_z_0_xzz_xxxxxz[k] = -g_x_0_z_0_xz_xxxxxz[k] * ab_z + g_x_0_z_0_xz_xxxxxzz[k];

                g_x_0_z_0_xzz_xxxxyy[k] = -g_x_0_z_0_xz_xxxxyy[k] * ab_z + g_x_0_z_0_xz_xxxxyyz[k];

                g_x_0_z_0_xzz_xxxxyz[k] = -g_x_0_z_0_xz_xxxxyz[k] * ab_z + g_x_0_z_0_xz_xxxxyzz[k];

                g_x_0_z_0_xzz_xxxxzz[k] = -g_x_0_z_0_xz_xxxxzz[k] * ab_z + g_x_0_z_0_xz_xxxxzzz[k];

                g_x_0_z_0_xzz_xxxyyy[k] = -g_x_0_z_0_xz_xxxyyy[k] * ab_z + g_x_0_z_0_xz_xxxyyyz[k];

                g_x_0_z_0_xzz_xxxyyz[k] = -g_x_0_z_0_xz_xxxyyz[k] * ab_z + g_x_0_z_0_xz_xxxyyzz[k];

                g_x_0_z_0_xzz_xxxyzz[k] = -g_x_0_z_0_xz_xxxyzz[k] * ab_z + g_x_0_z_0_xz_xxxyzzz[k];

                g_x_0_z_0_xzz_xxxzzz[k] = -g_x_0_z_0_xz_xxxzzz[k] * ab_z + g_x_0_z_0_xz_xxxzzzz[k];

                g_x_0_z_0_xzz_xxyyyy[k] = -g_x_0_z_0_xz_xxyyyy[k] * ab_z + g_x_0_z_0_xz_xxyyyyz[k];

                g_x_0_z_0_xzz_xxyyyz[k] = -g_x_0_z_0_xz_xxyyyz[k] * ab_z + g_x_0_z_0_xz_xxyyyzz[k];

                g_x_0_z_0_xzz_xxyyzz[k] = -g_x_0_z_0_xz_xxyyzz[k] * ab_z + g_x_0_z_0_xz_xxyyzzz[k];

                g_x_0_z_0_xzz_xxyzzz[k] = -g_x_0_z_0_xz_xxyzzz[k] * ab_z + g_x_0_z_0_xz_xxyzzzz[k];

                g_x_0_z_0_xzz_xxzzzz[k] = -g_x_0_z_0_xz_xxzzzz[k] * ab_z + g_x_0_z_0_xz_xxzzzzz[k];

                g_x_0_z_0_xzz_xyyyyy[k] = -g_x_0_z_0_xz_xyyyyy[k] * ab_z + g_x_0_z_0_xz_xyyyyyz[k];

                g_x_0_z_0_xzz_xyyyyz[k] = -g_x_0_z_0_xz_xyyyyz[k] * ab_z + g_x_0_z_0_xz_xyyyyzz[k];

                g_x_0_z_0_xzz_xyyyzz[k] = -g_x_0_z_0_xz_xyyyzz[k] * ab_z + g_x_0_z_0_xz_xyyyzzz[k];

                g_x_0_z_0_xzz_xyyzzz[k] = -g_x_0_z_0_xz_xyyzzz[k] * ab_z + g_x_0_z_0_xz_xyyzzzz[k];

                g_x_0_z_0_xzz_xyzzzz[k] = -g_x_0_z_0_xz_xyzzzz[k] * ab_z + g_x_0_z_0_xz_xyzzzzz[k];

                g_x_0_z_0_xzz_xzzzzz[k] = -g_x_0_z_0_xz_xzzzzz[k] * ab_z + g_x_0_z_0_xz_xzzzzzz[k];

                g_x_0_z_0_xzz_yyyyyy[k] = -g_x_0_z_0_xz_yyyyyy[k] * ab_z + g_x_0_z_0_xz_yyyyyyz[k];

                g_x_0_z_0_xzz_yyyyyz[k] = -g_x_0_z_0_xz_yyyyyz[k] * ab_z + g_x_0_z_0_xz_yyyyyzz[k];

                g_x_0_z_0_xzz_yyyyzz[k] = -g_x_0_z_0_xz_yyyyzz[k] * ab_z + g_x_0_z_0_xz_yyyyzzz[k];

                g_x_0_z_0_xzz_yyyzzz[k] = -g_x_0_z_0_xz_yyyzzz[k] * ab_z + g_x_0_z_0_xz_yyyzzzz[k];

                g_x_0_z_0_xzz_yyzzzz[k] = -g_x_0_z_0_xz_yyzzzz[k] * ab_z + g_x_0_z_0_xz_yyzzzzz[k];

                g_x_0_z_0_xzz_yzzzzz[k] = -g_x_0_z_0_xz_yzzzzz[k] * ab_z + g_x_0_z_0_xz_yzzzzzz[k];

                g_x_0_z_0_xzz_zzzzzz[k] = -g_x_0_z_0_xz_zzzzzz[k] * ab_z + g_x_0_z_0_xz_zzzzzzz[k];
            }

            /// Set up 728-756 components of targeted buffer : cbuffer.data(

            auto g_x_0_z_0_yyy_xxxxxx = cbuffer.data(fi_geom_1010_off + 728 * ccomps * dcomps);

            auto g_x_0_z_0_yyy_xxxxxy = cbuffer.data(fi_geom_1010_off + 729 * ccomps * dcomps);

            auto g_x_0_z_0_yyy_xxxxxz = cbuffer.data(fi_geom_1010_off + 730 * ccomps * dcomps);

            auto g_x_0_z_0_yyy_xxxxyy = cbuffer.data(fi_geom_1010_off + 731 * ccomps * dcomps);

            auto g_x_0_z_0_yyy_xxxxyz = cbuffer.data(fi_geom_1010_off + 732 * ccomps * dcomps);

            auto g_x_0_z_0_yyy_xxxxzz = cbuffer.data(fi_geom_1010_off + 733 * ccomps * dcomps);

            auto g_x_0_z_0_yyy_xxxyyy = cbuffer.data(fi_geom_1010_off + 734 * ccomps * dcomps);

            auto g_x_0_z_0_yyy_xxxyyz = cbuffer.data(fi_geom_1010_off + 735 * ccomps * dcomps);

            auto g_x_0_z_0_yyy_xxxyzz = cbuffer.data(fi_geom_1010_off + 736 * ccomps * dcomps);

            auto g_x_0_z_0_yyy_xxxzzz = cbuffer.data(fi_geom_1010_off + 737 * ccomps * dcomps);

            auto g_x_0_z_0_yyy_xxyyyy = cbuffer.data(fi_geom_1010_off + 738 * ccomps * dcomps);

            auto g_x_0_z_0_yyy_xxyyyz = cbuffer.data(fi_geom_1010_off + 739 * ccomps * dcomps);

            auto g_x_0_z_0_yyy_xxyyzz = cbuffer.data(fi_geom_1010_off + 740 * ccomps * dcomps);

            auto g_x_0_z_0_yyy_xxyzzz = cbuffer.data(fi_geom_1010_off + 741 * ccomps * dcomps);

            auto g_x_0_z_0_yyy_xxzzzz = cbuffer.data(fi_geom_1010_off + 742 * ccomps * dcomps);

            auto g_x_0_z_0_yyy_xyyyyy = cbuffer.data(fi_geom_1010_off + 743 * ccomps * dcomps);

            auto g_x_0_z_0_yyy_xyyyyz = cbuffer.data(fi_geom_1010_off + 744 * ccomps * dcomps);

            auto g_x_0_z_0_yyy_xyyyzz = cbuffer.data(fi_geom_1010_off + 745 * ccomps * dcomps);

            auto g_x_0_z_0_yyy_xyyzzz = cbuffer.data(fi_geom_1010_off + 746 * ccomps * dcomps);

            auto g_x_0_z_0_yyy_xyzzzz = cbuffer.data(fi_geom_1010_off + 747 * ccomps * dcomps);

            auto g_x_0_z_0_yyy_xzzzzz = cbuffer.data(fi_geom_1010_off + 748 * ccomps * dcomps);

            auto g_x_0_z_0_yyy_yyyyyy = cbuffer.data(fi_geom_1010_off + 749 * ccomps * dcomps);

            auto g_x_0_z_0_yyy_yyyyyz = cbuffer.data(fi_geom_1010_off + 750 * ccomps * dcomps);

            auto g_x_0_z_0_yyy_yyyyzz = cbuffer.data(fi_geom_1010_off + 751 * ccomps * dcomps);

            auto g_x_0_z_0_yyy_yyyzzz = cbuffer.data(fi_geom_1010_off + 752 * ccomps * dcomps);

            auto g_x_0_z_0_yyy_yyzzzz = cbuffer.data(fi_geom_1010_off + 753 * ccomps * dcomps);

            auto g_x_0_z_0_yyy_yzzzzz = cbuffer.data(fi_geom_1010_off + 754 * ccomps * dcomps);

            auto g_x_0_z_0_yyy_zzzzzz = cbuffer.data(fi_geom_1010_off + 755 * ccomps * dcomps);

            #pragma omp simd aligned(g_x_0_z_0_yy_xxxxxx, g_x_0_z_0_yy_xxxxxxy, g_x_0_z_0_yy_xxxxxy, g_x_0_z_0_yy_xxxxxyy, g_x_0_z_0_yy_xxxxxyz, g_x_0_z_0_yy_xxxxxz, g_x_0_z_0_yy_xxxxyy, g_x_0_z_0_yy_xxxxyyy, g_x_0_z_0_yy_xxxxyyz, g_x_0_z_0_yy_xxxxyz, g_x_0_z_0_yy_xxxxyzz, g_x_0_z_0_yy_xxxxzz, g_x_0_z_0_yy_xxxyyy, g_x_0_z_0_yy_xxxyyyy, g_x_0_z_0_yy_xxxyyyz, g_x_0_z_0_yy_xxxyyz, g_x_0_z_0_yy_xxxyyzz, g_x_0_z_0_yy_xxxyzz, g_x_0_z_0_yy_xxxyzzz, g_x_0_z_0_yy_xxxzzz, g_x_0_z_0_yy_xxyyyy, g_x_0_z_0_yy_xxyyyyy, g_x_0_z_0_yy_xxyyyyz, g_x_0_z_0_yy_xxyyyz, g_x_0_z_0_yy_xxyyyzz, g_x_0_z_0_yy_xxyyzz, g_x_0_z_0_yy_xxyyzzz, g_x_0_z_0_yy_xxyzzz, g_x_0_z_0_yy_xxyzzzz, g_x_0_z_0_yy_xxzzzz, g_x_0_z_0_yy_xyyyyy, g_x_0_z_0_yy_xyyyyyy, g_x_0_z_0_yy_xyyyyyz, g_x_0_z_0_yy_xyyyyz, g_x_0_z_0_yy_xyyyyzz, g_x_0_z_0_yy_xyyyzz, g_x_0_z_0_yy_xyyyzzz, g_x_0_z_0_yy_xyyzzz, g_x_0_z_0_yy_xyyzzzz, g_x_0_z_0_yy_xyzzzz, g_x_0_z_0_yy_xyzzzzz, g_x_0_z_0_yy_xzzzzz, g_x_0_z_0_yy_yyyyyy, g_x_0_z_0_yy_yyyyyyy, g_x_0_z_0_yy_yyyyyyz, g_x_0_z_0_yy_yyyyyz, g_x_0_z_0_yy_yyyyyzz, g_x_0_z_0_yy_yyyyzz, g_x_0_z_0_yy_yyyyzzz, g_x_0_z_0_yy_yyyzzz, g_x_0_z_0_yy_yyyzzzz, g_x_0_z_0_yy_yyzzzz, g_x_0_z_0_yy_yyzzzzz, g_x_0_z_0_yy_yzzzzz, g_x_0_z_0_yy_yzzzzzz, g_x_0_z_0_yy_zzzzzz, g_x_0_z_0_yyy_xxxxxx, g_x_0_z_0_yyy_xxxxxy, g_x_0_z_0_yyy_xxxxxz, g_x_0_z_0_yyy_xxxxyy, g_x_0_z_0_yyy_xxxxyz, g_x_0_z_0_yyy_xxxxzz, g_x_0_z_0_yyy_xxxyyy, g_x_0_z_0_yyy_xxxyyz, g_x_0_z_0_yyy_xxxyzz, g_x_0_z_0_yyy_xxxzzz, g_x_0_z_0_yyy_xxyyyy, g_x_0_z_0_yyy_xxyyyz, g_x_0_z_0_yyy_xxyyzz, g_x_0_z_0_yyy_xxyzzz, g_x_0_z_0_yyy_xxzzzz, g_x_0_z_0_yyy_xyyyyy, g_x_0_z_0_yyy_xyyyyz, g_x_0_z_0_yyy_xyyyzz, g_x_0_z_0_yyy_xyyzzz, g_x_0_z_0_yyy_xyzzzz, g_x_0_z_0_yyy_xzzzzz, g_x_0_z_0_yyy_yyyyyy, g_x_0_z_0_yyy_yyyyyz, g_x_0_z_0_yyy_yyyyzz, g_x_0_z_0_yyy_yyyzzz, g_x_0_z_0_yyy_yyzzzz, g_x_0_z_0_yyy_yzzzzz, g_x_0_z_0_yyy_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_x_0_z_0_yyy_xxxxxx[k] = -g_x_0_z_0_yy_xxxxxx[k] * ab_y + g_x_0_z_0_yy_xxxxxxy[k];

                g_x_0_z_0_yyy_xxxxxy[k] = -g_x_0_z_0_yy_xxxxxy[k] * ab_y + g_x_0_z_0_yy_xxxxxyy[k];

                g_x_0_z_0_yyy_xxxxxz[k] = -g_x_0_z_0_yy_xxxxxz[k] * ab_y + g_x_0_z_0_yy_xxxxxyz[k];

                g_x_0_z_0_yyy_xxxxyy[k] = -g_x_0_z_0_yy_xxxxyy[k] * ab_y + g_x_0_z_0_yy_xxxxyyy[k];

                g_x_0_z_0_yyy_xxxxyz[k] = -g_x_0_z_0_yy_xxxxyz[k] * ab_y + g_x_0_z_0_yy_xxxxyyz[k];

                g_x_0_z_0_yyy_xxxxzz[k] = -g_x_0_z_0_yy_xxxxzz[k] * ab_y + g_x_0_z_0_yy_xxxxyzz[k];

                g_x_0_z_0_yyy_xxxyyy[k] = -g_x_0_z_0_yy_xxxyyy[k] * ab_y + g_x_0_z_0_yy_xxxyyyy[k];

                g_x_0_z_0_yyy_xxxyyz[k] = -g_x_0_z_0_yy_xxxyyz[k] * ab_y + g_x_0_z_0_yy_xxxyyyz[k];

                g_x_0_z_0_yyy_xxxyzz[k] = -g_x_0_z_0_yy_xxxyzz[k] * ab_y + g_x_0_z_0_yy_xxxyyzz[k];

                g_x_0_z_0_yyy_xxxzzz[k] = -g_x_0_z_0_yy_xxxzzz[k] * ab_y + g_x_0_z_0_yy_xxxyzzz[k];

                g_x_0_z_0_yyy_xxyyyy[k] = -g_x_0_z_0_yy_xxyyyy[k] * ab_y + g_x_0_z_0_yy_xxyyyyy[k];

                g_x_0_z_0_yyy_xxyyyz[k] = -g_x_0_z_0_yy_xxyyyz[k] * ab_y + g_x_0_z_0_yy_xxyyyyz[k];

                g_x_0_z_0_yyy_xxyyzz[k] = -g_x_0_z_0_yy_xxyyzz[k] * ab_y + g_x_0_z_0_yy_xxyyyzz[k];

                g_x_0_z_0_yyy_xxyzzz[k] = -g_x_0_z_0_yy_xxyzzz[k] * ab_y + g_x_0_z_0_yy_xxyyzzz[k];

                g_x_0_z_0_yyy_xxzzzz[k] = -g_x_0_z_0_yy_xxzzzz[k] * ab_y + g_x_0_z_0_yy_xxyzzzz[k];

                g_x_0_z_0_yyy_xyyyyy[k] = -g_x_0_z_0_yy_xyyyyy[k] * ab_y + g_x_0_z_0_yy_xyyyyyy[k];

                g_x_0_z_0_yyy_xyyyyz[k] = -g_x_0_z_0_yy_xyyyyz[k] * ab_y + g_x_0_z_0_yy_xyyyyyz[k];

                g_x_0_z_0_yyy_xyyyzz[k] = -g_x_0_z_0_yy_xyyyzz[k] * ab_y + g_x_0_z_0_yy_xyyyyzz[k];

                g_x_0_z_0_yyy_xyyzzz[k] = -g_x_0_z_0_yy_xyyzzz[k] * ab_y + g_x_0_z_0_yy_xyyyzzz[k];

                g_x_0_z_0_yyy_xyzzzz[k] = -g_x_0_z_0_yy_xyzzzz[k] * ab_y + g_x_0_z_0_yy_xyyzzzz[k];

                g_x_0_z_0_yyy_xzzzzz[k] = -g_x_0_z_0_yy_xzzzzz[k] * ab_y + g_x_0_z_0_yy_xyzzzzz[k];

                g_x_0_z_0_yyy_yyyyyy[k] = -g_x_0_z_0_yy_yyyyyy[k] * ab_y + g_x_0_z_0_yy_yyyyyyy[k];

                g_x_0_z_0_yyy_yyyyyz[k] = -g_x_0_z_0_yy_yyyyyz[k] * ab_y + g_x_0_z_0_yy_yyyyyyz[k];

                g_x_0_z_0_yyy_yyyyzz[k] = -g_x_0_z_0_yy_yyyyzz[k] * ab_y + g_x_0_z_0_yy_yyyyyzz[k];

                g_x_0_z_0_yyy_yyyzzz[k] = -g_x_0_z_0_yy_yyyzzz[k] * ab_y + g_x_0_z_0_yy_yyyyzzz[k];

                g_x_0_z_0_yyy_yyzzzz[k] = -g_x_0_z_0_yy_yyzzzz[k] * ab_y + g_x_0_z_0_yy_yyyzzzz[k];

                g_x_0_z_0_yyy_yzzzzz[k] = -g_x_0_z_0_yy_yzzzzz[k] * ab_y + g_x_0_z_0_yy_yyzzzzz[k];

                g_x_0_z_0_yyy_zzzzzz[k] = -g_x_0_z_0_yy_zzzzzz[k] * ab_y + g_x_0_z_0_yy_yzzzzzz[k];
            }

            /// Set up 756-784 components of targeted buffer : cbuffer.data(

            auto g_x_0_z_0_yyz_xxxxxx = cbuffer.data(fi_geom_1010_off + 756 * ccomps * dcomps);

            auto g_x_0_z_0_yyz_xxxxxy = cbuffer.data(fi_geom_1010_off + 757 * ccomps * dcomps);

            auto g_x_0_z_0_yyz_xxxxxz = cbuffer.data(fi_geom_1010_off + 758 * ccomps * dcomps);

            auto g_x_0_z_0_yyz_xxxxyy = cbuffer.data(fi_geom_1010_off + 759 * ccomps * dcomps);

            auto g_x_0_z_0_yyz_xxxxyz = cbuffer.data(fi_geom_1010_off + 760 * ccomps * dcomps);

            auto g_x_0_z_0_yyz_xxxxzz = cbuffer.data(fi_geom_1010_off + 761 * ccomps * dcomps);

            auto g_x_0_z_0_yyz_xxxyyy = cbuffer.data(fi_geom_1010_off + 762 * ccomps * dcomps);

            auto g_x_0_z_0_yyz_xxxyyz = cbuffer.data(fi_geom_1010_off + 763 * ccomps * dcomps);

            auto g_x_0_z_0_yyz_xxxyzz = cbuffer.data(fi_geom_1010_off + 764 * ccomps * dcomps);

            auto g_x_0_z_0_yyz_xxxzzz = cbuffer.data(fi_geom_1010_off + 765 * ccomps * dcomps);

            auto g_x_0_z_0_yyz_xxyyyy = cbuffer.data(fi_geom_1010_off + 766 * ccomps * dcomps);

            auto g_x_0_z_0_yyz_xxyyyz = cbuffer.data(fi_geom_1010_off + 767 * ccomps * dcomps);

            auto g_x_0_z_0_yyz_xxyyzz = cbuffer.data(fi_geom_1010_off + 768 * ccomps * dcomps);

            auto g_x_0_z_0_yyz_xxyzzz = cbuffer.data(fi_geom_1010_off + 769 * ccomps * dcomps);

            auto g_x_0_z_0_yyz_xxzzzz = cbuffer.data(fi_geom_1010_off + 770 * ccomps * dcomps);

            auto g_x_0_z_0_yyz_xyyyyy = cbuffer.data(fi_geom_1010_off + 771 * ccomps * dcomps);

            auto g_x_0_z_0_yyz_xyyyyz = cbuffer.data(fi_geom_1010_off + 772 * ccomps * dcomps);

            auto g_x_0_z_0_yyz_xyyyzz = cbuffer.data(fi_geom_1010_off + 773 * ccomps * dcomps);

            auto g_x_0_z_0_yyz_xyyzzz = cbuffer.data(fi_geom_1010_off + 774 * ccomps * dcomps);

            auto g_x_0_z_0_yyz_xyzzzz = cbuffer.data(fi_geom_1010_off + 775 * ccomps * dcomps);

            auto g_x_0_z_0_yyz_xzzzzz = cbuffer.data(fi_geom_1010_off + 776 * ccomps * dcomps);

            auto g_x_0_z_0_yyz_yyyyyy = cbuffer.data(fi_geom_1010_off + 777 * ccomps * dcomps);

            auto g_x_0_z_0_yyz_yyyyyz = cbuffer.data(fi_geom_1010_off + 778 * ccomps * dcomps);

            auto g_x_0_z_0_yyz_yyyyzz = cbuffer.data(fi_geom_1010_off + 779 * ccomps * dcomps);

            auto g_x_0_z_0_yyz_yyyzzz = cbuffer.data(fi_geom_1010_off + 780 * ccomps * dcomps);

            auto g_x_0_z_0_yyz_yyzzzz = cbuffer.data(fi_geom_1010_off + 781 * ccomps * dcomps);

            auto g_x_0_z_0_yyz_yzzzzz = cbuffer.data(fi_geom_1010_off + 782 * ccomps * dcomps);

            auto g_x_0_z_0_yyz_zzzzzz = cbuffer.data(fi_geom_1010_off + 783 * ccomps * dcomps);

            #pragma omp simd aligned(g_x_0_z_0_yyz_xxxxxx, g_x_0_z_0_yyz_xxxxxy, g_x_0_z_0_yyz_xxxxxz, g_x_0_z_0_yyz_xxxxyy, g_x_0_z_0_yyz_xxxxyz, g_x_0_z_0_yyz_xxxxzz, g_x_0_z_0_yyz_xxxyyy, g_x_0_z_0_yyz_xxxyyz, g_x_0_z_0_yyz_xxxyzz, g_x_0_z_0_yyz_xxxzzz, g_x_0_z_0_yyz_xxyyyy, g_x_0_z_0_yyz_xxyyyz, g_x_0_z_0_yyz_xxyyzz, g_x_0_z_0_yyz_xxyzzz, g_x_0_z_0_yyz_xxzzzz, g_x_0_z_0_yyz_xyyyyy, g_x_0_z_0_yyz_xyyyyz, g_x_0_z_0_yyz_xyyyzz, g_x_0_z_0_yyz_xyyzzz, g_x_0_z_0_yyz_xyzzzz, g_x_0_z_0_yyz_xzzzzz, g_x_0_z_0_yyz_yyyyyy, g_x_0_z_0_yyz_yyyyyz, g_x_0_z_0_yyz_yyyyzz, g_x_0_z_0_yyz_yyyzzz, g_x_0_z_0_yyz_yyzzzz, g_x_0_z_0_yyz_yzzzzz, g_x_0_z_0_yyz_zzzzzz, g_x_0_z_0_yz_xxxxxx, g_x_0_z_0_yz_xxxxxxy, g_x_0_z_0_yz_xxxxxy, g_x_0_z_0_yz_xxxxxyy, g_x_0_z_0_yz_xxxxxyz, g_x_0_z_0_yz_xxxxxz, g_x_0_z_0_yz_xxxxyy, g_x_0_z_0_yz_xxxxyyy, g_x_0_z_0_yz_xxxxyyz, g_x_0_z_0_yz_xxxxyz, g_x_0_z_0_yz_xxxxyzz, g_x_0_z_0_yz_xxxxzz, g_x_0_z_0_yz_xxxyyy, g_x_0_z_0_yz_xxxyyyy, g_x_0_z_0_yz_xxxyyyz, g_x_0_z_0_yz_xxxyyz, g_x_0_z_0_yz_xxxyyzz, g_x_0_z_0_yz_xxxyzz, g_x_0_z_0_yz_xxxyzzz, g_x_0_z_0_yz_xxxzzz, g_x_0_z_0_yz_xxyyyy, g_x_0_z_0_yz_xxyyyyy, g_x_0_z_0_yz_xxyyyyz, g_x_0_z_0_yz_xxyyyz, g_x_0_z_0_yz_xxyyyzz, g_x_0_z_0_yz_xxyyzz, g_x_0_z_0_yz_xxyyzzz, g_x_0_z_0_yz_xxyzzz, g_x_0_z_0_yz_xxyzzzz, g_x_0_z_0_yz_xxzzzz, g_x_0_z_0_yz_xyyyyy, g_x_0_z_0_yz_xyyyyyy, g_x_0_z_0_yz_xyyyyyz, g_x_0_z_0_yz_xyyyyz, g_x_0_z_0_yz_xyyyyzz, g_x_0_z_0_yz_xyyyzz, g_x_0_z_0_yz_xyyyzzz, g_x_0_z_0_yz_xyyzzz, g_x_0_z_0_yz_xyyzzzz, g_x_0_z_0_yz_xyzzzz, g_x_0_z_0_yz_xyzzzzz, g_x_0_z_0_yz_xzzzzz, g_x_0_z_0_yz_yyyyyy, g_x_0_z_0_yz_yyyyyyy, g_x_0_z_0_yz_yyyyyyz, g_x_0_z_0_yz_yyyyyz, g_x_0_z_0_yz_yyyyyzz, g_x_0_z_0_yz_yyyyzz, g_x_0_z_0_yz_yyyyzzz, g_x_0_z_0_yz_yyyzzz, g_x_0_z_0_yz_yyyzzzz, g_x_0_z_0_yz_yyzzzz, g_x_0_z_0_yz_yyzzzzz, g_x_0_z_0_yz_yzzzzz, g_x_0_z_0_yz_yzzzzzz, g_x_0_z_0_yz_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_x_0_z_0_yyz_xxxxxx[k] = -g_x_0_z_0_yz_xxxxxx[k] * ab_y + g_x_0_z_0_yz_xxxxxxy[k];

                g_x_0_z_0_yyz_xxxxxy[k] = -g_x_0_z_0_yz_xxxxxy[k] * ab_y + g_x_0_z_0_yz_xxxxxyy[k];

                g_x_0_z_0_yyz_xxxxxz[k] = -g_x_0_z_0_yz_xxxxxz[k] * ab_y + g_x_0_z_0_yz_xxxxxyz[k];

                g_x_0_z_0_yyz_xxxxyy[k] = -g_x_0_z_0_yz_xxxxyy[k] * ab_y + g_x_0_z_0_yz_xxxxyyy[k];

                g_x_0_z_0_yyz_xxxxyz[k] = -g_x_0_z_0_yz_xxxxyz[k] * ab_y + g_x_0_z_0_yz_xxxxyyz[k];

                g_x_0_z_0_yyz_xxxxzz[k] = -g_x_0_z_0_yz_xxxxzz[k] * ab_y + g_x_0_z_0_yz_xxxxyzz[k];

                g_x_0_z_0_yyz_xxxyyy[k] = -g_x_0_z_0_yz_xxxyyy[k] * ab_y + g_x_0_z_0_yz_xxxyyyy[k];

                g_x_0_z_0_yyz_xxxyyz[k] = -g_x_0_z_0_yz_xxxyyz[k] * ab_y + g_x_0_z_0_yz_xxxyyyz[k];

                g_x_0_z_0_yyz_xxxyzz[k] = -g_x_0_z_0_yz_xxxyzz[k] * ab_y + g_x_0_z_0_yz_xxxyyzz[k];

                g_x_0_z_0_yyz_xxxzzz[k] = -g_x_0_z_0_yz_xxxzzz[k] * ab_y + g_x_0_z_0_yz_xxxyzzz[k];

                g_x_0_z_0_yyz_xxyyyy[k] = -g_x_0_z_0_yz_xxyyyy[k] * ab_y + g_x_0_z_0_yz_xxyyyyy[k];

                g_x_0_z_0_yyz_xxyyyz[k] = -g_x_0_z_0_yz_xxyyyz[k] * ab_y + g_x_0_z_0_yz_xxyyyyz[k];

                g_x_0_z_0_yyz_xxyyzz[k] = -g_x_0_z_0_yz_xxyyzz[k] * ab_y + g_x_0_z_0_yz_xxyyyzz[k];

                g_x_0_z_0_yyz_xxyzzz[k] = -g_x_0_z_0_yz_xxyzzz[k] * ab_y + g_x_0_z_0_yz_xxyyzzz[k];

                g_x_0_z_0_yyz_xxzzzz[k] = -g_x_0_z_0_yz_xxzzzz[k] * ab_y + g_x_0_z_0_yz_xxyzzzz[k];

                g_x_0_z_0_yyz_xyyyyy[k] = -g_x_0_z_0_yz_xyyyyy[k] * ab_y + g_x_0_z_0_yz_xyyyyyy[k];

                g_x_0_z_0_yyz_xyyyyz[k] = -g_x_0_z_0_yz_xyyyyz[k] * ab_y + g_x_0_z_0_yz_xyyyyyz[k];

                g_x_0_z_0_yyz_xyyyzz[k] = -g_x_0_z_0_yz_xyyyzz[k] * ab_y + g_x_0_z_0_yz_xyyyyzz[k];

                g_x_0_z_0_yyz_xyyzzz[k] = -g_x_0_z_0_yz_xyyzzz[k] * ab_y + g_x_0_z_0_yz_xyyyzzz[k];

                g_x_0_z_0_yyz_xyzzzz[k] = -g_x_0_z_0_yz_xyzzzz[k] * ab_y + g_x_0_z_0_yz_xyyzzzz[k];

                g_x_0_z_0_yyz_xzzzzz[k] = -g_x_0_z_0_yz_xzzzzz[k] * ab_y + g_x_0_z_0_yz_xyzzzzz[k];

                g_x_0_z_0_yyz_yyyyyy[k] = -g_x_0_z_0_yz_yyyyyy[k] * ab_y + g_x_0_z_0_yz_yyyyyyy[k];

                g_x_0_z_0_yyz_yyyyyz[k] = -g_x_0_z_0_yz_yyyyyz[k] * ab_y + g_x_0_z_0_yz_yyyyyyz[k];

                g_x_0_z_0_yyz_yyyyzz[k] = -g_x_0_z_0_yz_yyyyzz[k] * ab_y + g_x_0_z_0_yz_yyyyyzz[k];

                g_x_0_z_0_yyz_yyyzzz[k] = -g_x_0_z_0_yz_yyyzzz[k] * ab_y + g_x_0_z_0_yz_yyyyzzz[k];

                g_x_0_z_0_yyz_yyzzzz[k] = -g_x_0_z_0_yz_yyzzzz[k] * ab_y + g_x_0_z_0_yz_yyyzzzz[k];

                g_x_0_z_0_yyz_yzzzzz[k] = -g_x_0_z_0_yz_yzzzzz[k] * ab_y + g_x_0_z_0_yz_yyzzzzz[k];

                g_x_0_z_0_yyz_zzzzzz[k] = -g_x_0_z_0_yz_zzzzzz[k] * ab_y + g_x_0_z_0_yz_yzzzzzz[k];
            }

            /// Set up 784-812 components of targeted buffer : cbuffer.data(

            auto g_x_0_z_0_yzz_xxxxxx = cbuffer.data(fi_geom_1010_off + 784 * ccomps * dcomps);

            auto g_x_0_z_0_yzz_xxxxxy = cbuffer.data(fi_geom_1010_off + 785 * ccomps * dcomps);

            auto g_x_0_z_0_yzz_xxxxxz = cbuffer.data(fi_geom_1010_off + 786 * ccomps * dcomps);

            auto g_x_0_z_0_yzz_xxxxyy = cbuffer.data(fi_geom_1010_off + 787 * ccomps * dcomps);

            auto g_x_0_z_0_yzz_xxxxyz = cbuffer.data(fi_geom_1010_off + 788 * ccomps * dcomps);

            auto g_x_0_z_0_yzz_xxxxzz = cbuffer.data(fi_geom_1010_off + 789 * ccomps * dcomps);

            auto g_x_0_z_0_yzz_xxxyyy = cbuffer.data(fi_geom_1010_off + 790 * ccomps * dcomps);

            auto g_x_0_z_0_yzz_xxxyyz = cbuffer.data(fi_geom_1010_off + 791 * ccomps * dcomps);

            auto g_x_0_z_0_yzz_xxxyzz = cbuffer.data(fi_geom_1010_off + 792 * ccomps * dcomps);

            auto g_x_0_z_0_yzz_xxxzzz = cbuffer.data(fi_geom_1010_off + 793 * ccomps * dcomps);

            auto g_x_0_z_0_yzz_xxyyyy = cbuffer.data(fi_geom_1010_off + 794 * ccomps * dcomps);

            auto g_x_0_z_0_yzz_xxyyyz = cbuffer.data(fi_geom_1010_off + 795 * ccomps * dcomps);

            auto g_x_0_z_0_yzz_xxyyzz = cbuffer.data(fi_geom_1010_off + 796 * ccomps * dcomps);

            auto g_x_0_z_0_yzz_xxyzzz = cbuffer.data(fi_geom_1010_off + 797 * ccomps * dcomps);

            auto g_x_0_z_0_yzz_xxzzzz = cbuffer.data(fi_geom_1010_off + 798 * ccomps * dcomps);

            auto g_x_0_z_0_yzz_xyyyyy = cbuffer.data(fi_geom_1010_off + 799 * ccomps * dcomps);

            auto g_x_0_z_0_yzz_xyyyyz = cbuffer.data(fi_geom_1010_off + 800 * ccomps * dcomps);

            auto g_x_0_z_0_yzz_xyyyzz = cbuffer.data(fi_geom_1010_off + 801 * ccomps * dcomps);

            auto g_x_0_z_0_yzz_xyyzzz = cbuffer.data(fi_geom_1010_off + 802 * ccomps * dcomps);

            auto g_x_0_z_0_yzz_xyzzzz = cbuffer.data(fi_geom_1010_off + 803 * ccomps * dcomps);

            auto g_x_0_z_0_yzz_xzzzzz = cbuffer.data(fi_geom_1010_off + 804 * ccomps * dcomps);

            auto g_x_0_z_0_yzz_yyyyyy = cbuffer.data(fi_geom_1010_off + 805 * ccomps * dcomps);

            auto g_x_0_z_0_yzz_yyyyyz = cbuffer.data(fi_geom_1010_off + 806 * ccomps * dcomps);

            auto g_x_0_z_0_yzz_yyyyzz = cbuffer.data(fi_geom_1010_off + 807 * ccomps * dcomps);

            auto g_x_0_z_0_yzz_yyyzzz = cbuffer.data(fi_geom_1010_off + 808 * ccomps * dcomps);

            auto g_x_0_z_0_yzz_yyzzzz = cbuffer.data(fi_geom_1010_off + 809 * ccomps * dcomps);

            auto g_x_0_z_0_yzz_yzzzzz = cbuffer.data(fi_geom_1010_off + 810 * ccomps * dcomps);

            auto g_x_0_z_0_yzz_zzzzzz = cbuffer.data(fi_geom_1010_off + 811 * ccomps * dcomps);

            #pragma omp simd aligned(g_x_0_z_0_yzz_xxxxxx, g_x_0_z_0_yzz_xxxxxy, g_x_0_z_0_yzz_xxxxxz, g_x_0_z_0_yzz_xxxxyy, g_x_0_z_0_yzz_xxxxyz, g_x_0_z_0_yzz_xxxxzz, g_x_0_z_0_yzz_xxxyyy, g_x_0_z_0_yzz_xxxyyz, g_x_0_z_0_yzz_xxxyzz, g_x_0_z_0_yzz_xxxzzz, g_x_0_z_0_yzz_xxyyyy, g_x_0_z_0_yzz_xxyyyz, g_x_0_z_0_yzz_xxyyzz, g_x_0_z_0_yzz_xxyzzz, g_x_0_z_0_yzz_xxzzzz, g_x_0_z_0_yzz_xyyyyy, g_x_0_z_0_yzz_xyyyyz, g_x_0_z_0_yzz_xyyyzz, g_x_0_z_0_yzz_xyyzzz, g_x_0_z_0_yzz_xyzzzz, g_x_0_z_0_yzz_xzzzzz, g_x_0_z_0_yzz_yyyyyy, g_x_0_z_0_yzz_yyyyyz, g_x_0_z_0_yzz_yyyyzz, g_x_0_z_0_yzz_yyyzzz, g_x_0_z_0_yzz_yyzzzz, g_x_0_z_0_yzz_yzzzzz, g_x_0_z_0_yzz_zzzzzz, g_x_0_z_0_zz_xxxxxx, g_x_0_z_0_zz_xxxxxxy, g_x_0_z_0_zz_xxxxxy, g_x_0_z_0_zz_xxxxxyy, g_x_0_z_0_zz_xxxxxyz, g_x_0_z_0_zz_xxxxxz, g_x_0_z_0_zz_xxxxyy, g_x_0_z_0_zz_xxxxyyy, g_x_0_z_0_zz_xxxxyyz, g_x_0_z_0_zz_xxxxyz, g_x_0_z_0_zz_xxxxyzz, g_x_0_z_0_zz_xxxxzz, g_x_0_z_0_zz_xxxyyy, g_x_0_z_0_zz_xxxyyyy, g_x_0_z_0_zz_xxxyyyz, g_x_0_z_0_zz_xxxyyz, g_x_0_z_0_zz_xxxyyzz, g_x_0_z_0_zz_xxxyzz, g_x_0_z_0_zz_xxxyzzz, g_x_0_z_0_zz_xxxzzz, g_x_0_z_0_zz_xxyyyy, g_x_0_z_0_zz_xxyyyyy, g_x_0_z_0_zz_xxyyyyz, g_x_0_z_0_zz_xxyyyz, g_x_0_z_0_zz_xxyyyzz, g_x_0_z_0_zz_xxyyzz, g_x_0_z_0_zz_xxyyzzz, g_x_0_z_0_zz_xxyzzz, g_x_0_z_0_zz_xxyzzzz, g_x_0_z_0_zz_xxzzzz, g_x_0_z_0_zz_xyyyyy, g_x_0_z_0_zz_xyyyyyy, g_x_0_z_0_zz_xyyyyyz, g_x_0_z_0_zz_xyyyyz, g_x_0_z_0_zz_xyyyyzz, g_x_0_z_0_zz_xyyyzz, g_x_0_z_0_zz_xyyyzzz, g_x_0_z_0_zz_xyyzzz, g_x_0_z_0_zz_xyyzzzz, g_x_0_z_0_zz_xyzzzz, g_x_0_z_0_zz_xyzzzzz, g_x_0_z_0_zz_xzzzzz, g_x_0_z_0_zz_yyyyyy, g_x_0_z_0_zz_yyyyyyy, g_x_0_z_0_zz_yyyyyyz, g_x_0_z_0_zz_yyyyyz, g_x_0_z_0_zz_yyyyyzz, g_x_0_z_0_zz_yyyyzz, g_x_0_z_0_zz_yyyyzzz, g_x_0_z_0_zz_yyyzzz, g_x_0_z_0_zz_yyyzzzz, g_x_0_z_0_zz_yyzzzz, g_x_0_z_0_zz_yyzzzzz, g_x_0_z_0_zz_yzzzzz, g_x_0_z_0_zz_yzzzzzz, g_x_0_z_0_zz_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_x_0_z_0_yzz_xxxxxx[k] = -g_x_0_z_0_zz_xxxxxx[k] * ab_y + g_x_0_z_0_zz_xxxxxxy[k];

                g_x_0_z_0_yzz_xxxxxy[k] = -g_x_0_z_0_zz_xxxxxy[k] * ab_y + g_x_0_z_0_zz_xxxxxyy[k];

                g_x_0_z_0_yzz_xxxxxz[k] = -g_x_0_z_0_zz_xxxxxz[k] * ab_y + g_x_0_z_0_zz_xxxxxyz[k];

                g_x_0_z_0_yzz_xxxxyy[k] = -g_x_0_z_0_zz_xxxxyy[k] * ab_y + g_x_0_z_0_zz_xxxxyyy[k];

                g_x_0_z_0_yzz_xxxxyz[k] = -g_x_0_z_0_zz_xxxxyz[k] * ab_y + g_x_0_z_0_zz_xxxxyyz[k];

                g_x_0_z_0_yzz_xxxxzz[k] = -g_x_0_z_0_zz_xxxxzz[k] * ab_y + g_x_0_z_0_zz_xxxxyzz[k];

                g_x_0_z_0_yzz_xxxyyy[k] = -g_x_0_z_0_zz_xxxyyy[k] * ab_y + g_x_0_z_0_zz_xxxyyyy[k];

                g_x_0_z_0_yzz_xxxyyz[k] = -g_x_0_z_0_zz_xxxyyz[k] * ab_y + g_x_0_z_0_zz_xxxyyyz[k];

                g_x_0_z_0_yzz_xxxyzz[k] = -g_x_0_z_0_zz_xxxyzz[k] * ab_y + g_x_0_z_0_zz_xxxyyzz[k];

                g_x_0_z_0_yzz_xxxzzz[k] = -g_x_0_z_0_zz_xxxzzz[k] * ab_y + g_x_0_z_0_zz_xxxyzzz[k];

                g_x_0_z_0_yzz_xxyyyy[k] = -g_x_0_z_0_zz_xxyyyy[k] * ab_y + g_x_0_z_0_zz_xxyyyyy[k];

                g_x_0_z_0_yzz_xxyyyz[k] = -g_x_0_z_0_zz_xxyyyz[k] * ab_y + g_x_0_z_0_zz_xxyyyyz[k];

                g_x_0_z_0_yzz_xxyyzz[k] = -g_x_0_z_0_zz_xxyyzz[k] * ab_y + g_x_0_z_0_zz_xxyyyzz[k];

                g_x_0_z_0_yzz_xxyzzz[k] = -g_x_0_z_0_zz_xxyzzz[k] * ab_y + g_x_0_z_0_zz_xxyyzzz[k];

                g_x_0_z_0_yzz_xxzzzz[k] = -g_x_0_z_0_zz_xxzzzz[k] * ab_y + g_x_0_z_0_zz_xxyzzzz[k];

                g_x_0_z_0_yzz_xyyyyy[k] = -g_x_0_z_0_zz_xyyyyy[k] * ab_y + g_x_0_z_0_zz_xyyyyyy[k];

                g_x_0_z_0_yzz_xyyyyz[k] = -g_x_0_z_0_zz_xyyyyz[k] * ab_y + g_x_0_z_0_zz_xyyyyyz[k];

                g_x_0_z_0_yzz_xyyyzz[k] = -g_x_0_z_0_zz_xyyyzz[k] * ab_y + g_x_0_z_0_zz_xyyyyzz[k];

                g_x_0_z_0_yzz_xyyzzz[k] = -g_x_0_z_0_zz_xyyzzz[k] * ab_y + g_x_0_z_0_zz_xyyyzzz[k];

                g_x_0_z_0_yzz_xyzzzz[k] = -g_x_0_z_0_zz_xyzzzz[k] * ab_y + g_x_0_z_0_zz_xyyzzzz[k];

                g_x_0_z_0_yzz_xzzzzz[k] = -g_x_0_z_0_zz_xzzzzz[k] * ab_y + g_x_0_z_0_zz_xyzzzzz[k];

                g_x_0_z_0_yzz_yyyyyy[k] = -g_x_0_z_0_zz_yyyyyy[k] * ab_y + g_x_0_z_0_zz_yyyyyyy[k];

                g_x_0_z_0_yzz_yyyyyz[k] = -g_x_0_z_0_zz_yyyyyz[k] * ab_y + g_x_0_z_0_zz_yyyyyyz[k];

                g_x_0_z_0_yzz_yyyyzz[k] = -g_x_0_z_0_zz_yyyyzz[k] * ab_y + g_x_0_z_0_zz_yyyyyzz[k];

                g_x_0_z_0_yzz_yyyzzz[k] = -g_x_0_z_0_zz_yyyzzz[k] * ab_y + g_x_0_z_0_zz_yyyyzzz[k];

                g_x_0_z_0_yzz_yyzzzz[k] = -g_x_0_z_0_zz_yyzzzz[k] * ab_y + g_x_0_z_0_zz_yyyzzzz[k];

                g_x_0_z_0_yzz_yzzzzz[k] = -g_x_0_z_0_zz_yzzzzz[k] * ab_y + g_x_0_z_0_zz_yyzzzzz[k];

                g_x_0_z_0_yzz_zzzzzz[k] = -g_x_0_z_0_zz_zzzzzz[k] * ab_y + g_x_0_z_0_zz_yzzzzzz[k];
            }

            /// Set up 812-840 components of targeted buffer : cbuffer.data(

            auto g_x_0_z_0_zzz_xxxxxx = cbuffer.data(fi_geom_1010_off + 812 * ccomps * dcomps);

            auto g_x_0_z_0_zzz_xxxxxy = cbuffer.data(fi_geom_1010_off + 813 * ccomps * dcomps);

            auto g_x_0_z_0_zzz_xxxxxz = cbuffer.data(fi_geom_1010_off + 814 * ccomps * dcomps);

            auto g_x_0_z_0_zzz_xxxxyy = cbuffer.data(fi_geom_1010_off + 815 * ccomps * dcomps);

            auto g_x_0_z_0_zzz_xxxxyz = cbuffer.data(fi_geom_1010_off + 816 * ccomps * dcomps);

            auto g_x_0_z_0_zzz_xxxxzz = cbuffer.data(fi_geom_1010_off + 817 * ccomps * dcomps);

            auto g_x_0_z_0_zzz_xxxyyy = cbuffer.data(fi_geom_1010_off + 818 * ccomps * dcomps);

            auto g_x_0_z_0_zzz_xxxyyz = cbuffer.data(fi_geom_1010_off + 819 * ccomps * dcomps);

            auto g_x_0_z_0_zzz_xxxyzz = cbuffer.data(fi_geom_1010_off + 820 * ccomps * dcomps);

            auto g_x_0_z_0_zzz_xxxzzz = cbuffer.data(fi_geom_1010_off + 821 * ccomps * dcomps);

            auto g_x_0_z_0_zzz_xxyyyy = cbuffer.data(fi_geom_1010_off + 822 * ccomps * dcomps);

            auto g_x_0_z_0_zzz_xxyyyz = cbuffer.data(fi_geom_1010_off + 823 * ccomps * dcomps);

            auto g_x_0_z_0_zzz_xxyyzz = cbuffer.data(fi_geom_1010_off + 824 * ccomps * dcomps);

            auto g_x_0_z_0_zzz_xxyzzz = cbuffer.data(fi_geom_1010_off + 825 * ccomps * dcomps);

            auto g_x_0_z_0_zzz_xxzzzz = cbuffer.data(fi_geom_1010_off + 826 * ccomps * dcomps);

            auto g_x_0_z_0_zzz_xyyyyy = cbuffer.data(fi_geom_1010_off + 827 * ccomps * dcomps);

            auto g_x_0_z_0_zzz_xyyyyz = cbuffer.data(fi_geom_1010_off + 828 * ccomps * dcomps);

            auto g_x_0_z_0_zzz_xyyyzz = cbuffer.data(fi_geom_1010_off + 829 * ccomps * dcomps);

            auto g_x_0_z_0_zzz_xyyzzz = cbuffer.data(fi_geom_1010_off + 830 * ccomps * dcomps);

            auto g_x_0_z_0_zzz_xyzzzz = cbuffer.data(fi_geom_1010_off + 831 * ccomps * dcomps);

            auto g_x_0_z_0_zzz_xzzzzz = cbuffer.data(fi_geom_1010_off + 832 * ccomps * dcomps);

            auto g_x_0_z_0_zzz_yyyyyy = cbuffer.data(fi_geom_1010_off + 833 * ccomps * dcomps);

            auto g_x_0_z_0_zzz_yyyyyz = cbuffer.data(fi_geom_1010_off + 834 * ccomps * dcomps);

            auto g_x_0_z_0_zzz_yyyyzz = cbuffer.data(fi_geom_1010_off + 835 * ccomps * dcomps);

            auto g_x_0_z_0_zzz_yyyzzz = cbuffer.data(fi_geom_1010_off + 836 * ccomps * dcomps);

            auto g_x_0_z_0_zzz_yyzzzz = cbuffer.data(fi_geom_1010_off + 837 * ccomps * dcomps);

            auto g_x_0_z_0_zzz_yzzzzz = cbuffer.data(fi_geom_1010_off + 838 * ccomps * dcomps);

            auto g_x_0_z_0_zzz_zzzzzz = cbuffer.data(fi_geom_1010_off + 839 * ccomps * dcomps);

            #pragma omp simd aligned(g_x_0_z_0_zz_xxxxxx, g_x_0_z_0_zz_xxxxxxz, g_x_0_z_0_zz_xxxxxy, g_x_0_z_0_zz_xxxxxyz, g_x_0_z_0_zz_xxxxxz, g_x_0_z_0_zz_xxxxxzz, g_x_0_z_0_zz_xxxxyy, g_x_0_z_0_zz_xxxxyyz, g_x_0_z_0_zz_xxxxyz, g_x_0_z_0_zz_xxxxyzz, g_x_0_z_0_zz_xxxxzz, g_x_0_z_0_zz_xxxxzzz, g_x_0_z_0_zz_xxxyyy, g_x_0_z_0_zz_xxxyyyz, g_x_0_z_0_zz_xxxyyz, g_x_0_z_0_zz_xxxyyzz, g_x_0_z_0_zz_xxxyzz, g_x_0_z_0_zz_xxxyzzz, g_x_0_z_0_zz_xxxzzz, g_x_0_z_0_zz_xxxzzzz, g_x_0_z_0_zz_xxyyyy, g_x_0_z_0_zz_xxyyyyz, g_x_0_z_0_zz_xxyyyz, g_x_0_z_0_zz_xxyyyzz, g_x_0_z_0_zz_xxyyzz, g_x_0_z_0_zz_xxyyzzz, g_x_0_z_0_zz_xxyzzz, g_x_0_z_0_zz_xxyzzzz, g_x_0_z_0_zz_xxzzzz, g_x_0_z_0_zz_xxzzzzz, g_x_0_z_0_zz_xyyyyy, g_x_0_z_0_zz_xyyyyyz, g_x_0_z_0_zz_xyyyyz, g_x_0_z_0_zz_xyyyyzz, g_x_0_z_0_zz_xyyyzz, g_x_0_z_0_zz_xyyyzzz, g_x_0_z_0_zz_xyyzzz, g_x_0_z_0_zz_xyyzzzz, g_x_0_z_0_zz_xyzzzz, g_x_0_z_0_zz_xyzzzzz, g_x_0_z_0_zz_xzzzzz, g_x_0_z_0_zz_xzzzzzz, g_x_0_z_0_zz_yyyyyy, g_x_0_z_0_zz_yyyyyyz, g_x_0_z_0_zz_yyyyyz, g_x_0_z_0_zz_yyyyyzz, g_x_0_z_0_zz_yyyyzz, g_x_0_z_0_zz_yyyyzzz, g_x_0_z_0_zz_yyyzzz, g_x_0_z_0_zz_yyyzzzz, g_x_0_z_0_zz_yyzzzz, g_x_0_z_0_zz_yyzzzzz, g_x_0_z_0_zz_yzzzzz, g_x_0_z_0_zz_yzzzzzz, g_x_0_z_0_zz_zzzzzz, g_x_0_z_0_zz_zzzzzzz, g_x_0_z_0_zzz_xxxxxx, g_x_0_z_0_zzz_xxxxxy, g_x_0_z_0_zzz_xxxxxz, g_x_0_z_0_zzz_xxxxyy, g_x_0_z_0_zzz_xxxxyz, g_x_0_z_0_zzz_xxxxzz, g_x_0_z_0_zzz_xxxyyy, g_x_0_z_0_zzz_xxxyyz, g_x_0_z_0_zzz_xxxyzz, g_x_0_z_0_zzz_xxxzzz, g_x_0_z_0_zzz_xxyyyy, g_x_0_z_0_zzz_xxyyyz, g_x_0_z_0_zzz_xxyyzz, g_x_0_z_0_zzz_xxyzzz, g_x_0_z_0_zzz_xxzzzz, g_x_0_z_0_zzz_xyyyyy, g_x_0_z_0_zzz_xyyyyz, g_x_0_z_0_zzz_xyyyzz, g_x_0_z_0_zzz_xyyzzz, g_x_0_z_0_zzz_xyzzzz, g_x_0_z_0_zzz_xzzzzz, g_x_0_z_0_zzz_yyyyyy, g_x_0_z_0_zzz_yyyyyz, g_x_0_z_0_zzz_yyyyzz, g_x_0_z_0_zzz_yyyzzz, g_x_0_z_0_zzz_yyzzzz, g_x_0_z_0_zzz_yzzzzz, g_x_0_z_0_zzz_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_x_0_z_0_zzz_xxxxxx[k] = -g_x_0_z_0_zz_xxxxxx[k] * ab_z + g_x_0_z_0_zz_xxxxxxz[k];

                g_x_0_z_0_zzz_xxxxxy[k] = -g_x_0_z_0_zz_xxxxxy[k] * ab_z + g_x_0_z_0_zz_xxxxxyz[k];

                g_x_0_z_0_zzz_xxxxxz[k] = -g_x_0_z_0_zz_xxxxxz[k] * ab_z + g_x_0_z_0_zz_xxxxxzz[k];

                g_x_0_z_0_zzz_xxxxyy[k] = -g_x_0_z_0_zz_xxxxyy[k] * ab_z + g_x_0_z_0_zz_xxxxyyz[k];

                g_x_0_z_0_zzz_xxxxyz[k] = -g_x_0_z_0_zz_xxxxyz[k] * ab_z + g_x_0_z_0_zz_xxxxyzz[k];

                g_x_0_z_0_zzz_xxxxzz[k] = -g_x_0_z_0_zz_xxxxzz[k] * ab_z + g_x_0_z_0_zz_xxxxzzz[k];

                g_x_0_z_0_zzz_xxxyyy[k] = -g_x_0_z_0_zz_xxxyyy[k] * ab_z + g_x_0_z_0_zz_xxxyyyz[k];

                g_x_0_z_0_zzz_xxxyyz[k] = -g_x_0_z_0_zz_xxxyyz[k] * ab_z + g_x_0_z_0_zz_xxxyyzz[k];

                g_x_0_z_0_zzz_xxxyzz[k] = -g_x_0_z_0_zz_xxxyzz[k] * ab_z + g_x_0_z_0_zz_xxxyzzz[k];

                g_x_0_z_0_zzz_xxxzzz[k] = -g_x_0_z_0_zz_xxxzzz[k] * ab_z + g_x_0_z_0_zz_xxxzzzz[k];

                g_x_0_z_0_zzz_xxyyyy[k] = -g_x_0_z_0_zz_xxyyyy[k] * ab_z + g_x_0_z_0_zz_xxyyyyz[k];

                g_x_0_z_0_zzz_xxyyyz[k] = -g_x_0_z_0_zz_xxyyyz[k] * ab_z + g_x_0_z_0_zz_xxyyyzz[k];

                g_x_0_z_0_zzz_xxyyzz[k] = -g_x_0_z_0_zz_xxyyzz[k] * ab_z + g_x_0_z_0_zz_xxyyzzz[k];

                g_x_0_z_0_zzz_xxyzzz[k] = -g_x_0_z_0_zz_xxyzzz[k] * ab_z + g_x_0_z_0_zz_xxyzzzz[k];

                g_x_0_z_0_zzz_xxzzzz[k] = -g_x_0_z_0_zz_xxzzzz[k] * ab_z + g_x_0_z_0_zz_xxzzzzz[k];

                g_x_0_z_0_zzz_xyyyyy[k] = -g_x_0_z_0_zz_xyyyyy[k] * ab_z + g_x_0_z_0_zz_xyyyyyz[k];

                g_x_0_z_0_zzz_xyyyyz[k] = -g_x_0_z_0_zz_xyyyyz[k] * ab_z + g_x_0_z_0_zz_xyyyyzz[k];

                g_x_0_z_0_zzz_xyyyzz[k] = -g_x_0_z_0_zz_xyyyzz[k] * ab_z + g_x_0_z_0_zz_xyyyzzz[k];

                g_x_0_z_0_zzz_xyyzzz[k] = -g_x_0_z_0_zz_xyyzzz[k] * ab_z + g_x_0_z_0_zz_xyyzzzz[k];

                g_x_0_z_0_zzz_xyzzzz[k] = -g_x_0_z_0_zz_xyzzzz[k] * ab_z + g_x_0_z_0_zz_xyzzzzz[k];

                g_x_0_z_0_zzz_xzzzzz[k] = -g_x_0_z_0_zz_xzzzzz[k] * ab_z + g_x_0_z_0_zz_xzzzzzz[k];

                g_x_0_z_0_zzz_yyyyyy[k] = -g_x_0_z_0_zz_yyyyyy[k] * ab_z + g_x_0_z_0_zz_yyyyyyz[k];

                g_x_0_z_0_zzz_yyyyyz[k] = -g_x_0_z_0_zz_yyyyyz[k] * ab_z + g_x_0_z_0_zz_yyyyyzz[k];

                g_x_0_z_0_zzz_yyyyzz[k] = -g_x_0_z_0_zz_yyyyzz[k] * ab_z + g_x_0_z_0_zz_yyyyzzz[k];

                g_x_0_z_0_zzz_yyyzzz[k] = -g_x_0_z_0_zz_yyyzzz[k] * ab_z + g_x_0_z_0_zz_yyyzzzz[k];

                g_x_0_z_0_zzz_yyzzzz[k] = -g_x_0_z_0_zz_yyzzzz[k] * ab_z + g_x_0_z_0_zz_yyzzzzz[k];

                g_x_0_z_0_zzz_yzzzzz[k] = -g_x_0_z_0_zz_yzzzzz[k] * ab_z + g_x_0_z_0_zz_yzzzzzz[k];

                g_x_0_z_0_zzz_zzzzzz[k] = -g_x_0_z_0_zz_zzzzzz[k] * ab_z + g_x_0_z_0_zz_zzzzzzz[k];
            }

            /// Set up 840-868 components of targeted buffer : cbuffer.data(

            auto g_y_0_x_0_xxx_xxxxxx = cbuffer.data(fi_geom_1010_off + 840 * ccomps * dcomps);

            auto g_y_0_x_0_xxx_xxxxxy = cbuffer.data(fi_geom_1010_off + 841 * ccomps * dcomps);

            auto g_y_0_x_0_xxx_xxxxxz = cbuffer.data(fi_geom_1010_off + 842 * ccomps * dcomps);

            auto g_y_0_x_0_xxx_xxxxyy = cbuffer.data(fi_geom_1010_off + 843 * ccomps * dcomps);

            auto g_y_0_x_0_xxx_xxxxyz = cbuffer.data(fi_geom_1010_off + 844 * ccomps * dcomps);

            auto g_y_0_x_0_xxx_xxxxzz = cbuffer.data(fi_geom_1010_off + 845 * ccomps * dcomps);

            auto g_y_0_x_0_xxx_xxxyyy = cbuffer.data(fi_geom_1010_off + 846 * ccomps * dcomps);

            auto g_y_0_x_0_xxx_xxxyyz = cbuffer.data(fi_geom_1010_off + 847 * ccomps * dcomps);

            auto g_y_0_x_0_xxx_xxxyzz = cbuffer.data(fi_geom_1010_off + 848 * ccomps * dcomps);

            auto g_y_0_x_0_xxx_xxxzzz = cbuffer.data(fi_geom_1010_off + 849 * ccomps * dcomps);

            auto g_y_0_x_0_xxx_xxyyyy = cbuffer.data(fi_geom_1010_off + 850 * ccomps * dcomps);

            auto g_y_0_x_0_xxx_xxyyyz = cbuffer.data(fi_geom_1010_off + 851 * ccomps * dcomps);

            auto g_y_0_x_0_xxx_xxyyzz = cbuffer.data(fi_geom_1010_off + 852 * ccomps * dcomps);

            auto g_y_0_x_0_xxx_xxyzzz = cbuffer.data(fi_geom_1010_off + 853 * ccomps * dcomps);

            auto g_y_0_x_0_xxx_xxzzzz = cbuffer.data(fi_geom_1010_off + 854 * ccomps * dcomps);

            auto g_y_0_x_0_xxx_xyyyyy = cbuffer.data(fi_geom_1010_off + 855 * ccomps * dcomps);

            auto g_y_0_x_0_xxx_xyyyyz = cbuffer.data(fi_geom_1010_off + 856 * ccomps * dcomps);

            auto g_y_0_x_0_xxx_xyyyzz = cbuffer.data(fi_geom_1010_off + 857 * ccomps * dcomps);

            auto g_y_0_x_0_xxx_xyyzzz = cbuffer.data(fi_geom_1010_off + 858 * ccomps * dcomps);

            auto g_y_0_x_0_xxx_xyzzzz = cbuffer.data(fi_geom_1010_off + 859 * ccomps * dcomps);

            auto g_y_0_x_0_xxx_xzzzzz = cbuffer.data(fi_geom_1010_off + 860 * ccomps * dcomps);

            auto g_y_0_x_0_xxx_yyyyyy = cbuffer.data(fi_geom_1010_off + 861 * ccomps * dcomps);

            auto g_y_0_x_0_xxx_yyyyyz = cbuffer.data(fi_geom_1010_off + 862 * ccomps * dcomps);

            auto g_y_0_x_0_xxx_yyyyzz = cbuffer.data(fi_geom_1010_off + 863 * ccomps * dcomps);

            auto g_y_0_x_0_xxx_yyyzzz = cbuffer.data(fi_geom_1010_off + 864 * ccomps * dcomps);

            auto g_y_0_x_0_xxx_yyzzzz = cbuffer.data(fi_geom_1010_off + 865 * ccomps * dcomps);

            auto g_y_0_x_0_xxx_yzzzzz = cbuffer.data(fi_geom_1010_off + 866 * ccomps * dcomps);

            auto g_y_0_x_0_xxx_zzzzzz = cbuffer.data(fi_geom_1010_off + 867 * ccomps * dcomps);

            #pragma omp simd aligned(g_y_0_x_0_xx_xxxxxx, g_y_0_x_0_xx_xxxxxxx, g_y_0_x_0_xx_xxxxxxy, g_y_0_x_0_xx_xxxxxxz, g_y_0_x_0_xx_xxxxxy, g_y_0_x_0_xx_xxxxxyy, g_y_0_x_0_xx_xxxxxyz, g_y_0_x_0_xx_xxxxxz, g_y_0_x_0_xx_xxxxxzz, g_y_0_x_0_xx_xxxxyy, g_y_0_x_0_xx_xxxxyyy, g_y_0_x_0_xx_xxxxyyz, g_y_0_x_0_xx_xxxxyz, g_y_0_x_0_xx_xxxxyzz, g_y_0_x_0_xx_xxxxzz, g_y_0_x_0_xx_xxxxzzz, g_y_0_x_0_xx_xxxyyy, g_y_0_x_0_xx_xxxyyyy, g_y_0_x_0_xx_xxxyyyz, g_y_0_x_0_xx_xxxyyz, g_y_0_x_0_xx_xxxyyzz, g_y_0_x_0_xx_xxxyzz, g_y_0_x_0_xx_xxxyzzz, g_y_0_x_0_xx_xxxzzz, g_y_0_x_0_xx_xxxzzzz, g_y_0_x_0_xx_xxyyyy, g_y_0_x_0_xx_xxyyyyy, g_y_0_x_0_xx_xxyyyyz, g_y_0_x_0_xx_xxyyyz, g_y_0_x_0_xx_xxyyyzz, g_y_0_x_0_xx_xxyyzz, g_y_0_x_0_xx_xxyyzzz, g_y_0_x_0_xx_xxyzzz, g_y_0_x_0_xx_xxyzzzz, g_y_0_x_0_xx_xxzzzz, g_y_0_x_0_xx_xxzzzzz, g_y_0_x_0_xx_xyyyyy, g_y_0_x_0_xx_xyyyyyy, g_y_0_x_0_xx_xyyyyyz, g_y_0_x_0_xx_xyyyyz, g_y_0_x_0_xx_xyyyyzz, g_y_0_x_0_xx_xyyyzz, g_y_0_x_0_xx_xyyyzzz, g_y_0_x_0_xx_xyyzzz, g_y_0_x_0_xx_xyyzzzz, g_y_0_x_0_xx_xyzzzz, g_y_0_x_0_xx_xyzzzzz, g_y_0_x_0_xx_xzzzzz, g_y_0_x_0_xx_xzzzzzz, g_y_0_x_0_xx_yyyyyy, g_y_0_x_0_xx_yyyyyz, g_y_0_x_0_xx_yyyyzz, g_y_0_x_0_xx_yyyzzz, g_y_0_x_0_xx_yyzzzz, g_y_0_x_0_xx_yzzzzz, g_y_0_x_0_xx_zzzzzz, g_y_0_x_0_xxx_xxxxxx, g_y_0_x_0_xxx_xxxxxy, g_y_0_x_0_xxx_xxxxxz, g_y_0_x_0_xxx_xxxxyy, g_y_0_x_0_xxx_xxxxyz, g_y_0_x_0_xxx_xxxxzz, g_y_0_x_0_xxx_xxxyyy, g_y_0_x_0_xxx_xxxyyz, g_y_0_x_0_xxx_xxxyzz, g_y_0_x_0_xxx_xxxzzz, g_y_0_x_0_xxx_xxyyyy, g_y_0_x_0_xxx_xxyyyz, g_y_0_x_0_xxx_xxyyzz, g_y_0_x_0_xxx_xxyzzz, g_y_0_x_0_xxx_xxzzzz, g_y_0_x_0_xxx_xyyyyy, g_y_0_x_0_xxx_xyyyyz, g_y_0_x_0_xxx_xyyyzz, g_y_0_x_0_xxx_xyyzzz, g_y_0_x_0_xxx_xyzzzz, g_y_0_x_0_xxx_xzzzzz, g_y_0_x_0_xxx_yyyyyy, g_y_0_x_0_xxx_yyyyyz, g_y_0_x_0_xxx_yyyyzz, g_y_0_x_0_xxx_yyyzzz, g_y_0_x_0_xxx_yyzzzz, g_y_0_x_0_xxx_yzzzzz, g_y_0_x_0_xxx_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_y_0_x_0_xxx_xxxxxx[k] = -g_y_0_x_0_xx_xxxxxx[k] * ab_x + g_y_0_x_0_xx_xxxxxxx[k];

                g_y_0_x_0_xxx_xxxxxy[k] = -g_y_0_x_0_xx_xxxxxy[k] * ab_x + g_y_0_x_0_xx_xxxxxxy[k];

                g_y_0_x_0_xxx_xxxxxz[k] = -g_y_0_x_0_xx_xxxxxz[k] * ab_x + g_y_0_x_0_xx_xxxxxxz[k];

                g_y_0_x_0_xxx_xxxxyy[k] = -g_y_0_x_0_xx_xxxxyy[k] * ab_x + g_y_0_x_0_xx_xxxxxyy[k];

                g_y_0_x_0_xxx_xxxxyz[k] = -g_y_0_x_0_xx_xxxxyz[k] * ab_x + g_y_0_x_0_xx_xxxxxyz[k];

                g_y_0_x_0_xxx_xxxxzz[k] = -g_y_0_x_0_xx_xxxxzz[k] * ab_x + g_y_0_x_0_xx_xxxxxzz[k];

                g_y_0_x_0_xxx_xxxyyy[k] = -g_y_0_x_0_xx_xxxyyy[k] * ab_x + g_y_0_x_0_xx_xxxxyyy[k];

                g_y_0_x_0_xxx_xxxyyz[k] = -g_y_0_x_0_xx_xxxyyz[k] * ab_x + g_y_0_x_0_xx_xxxxyyz[k];

                g_y_0_x_0_xxx_xxxyzz[k] = -g_y_0_x_0_xx_xxxyzz[k] * ab_x + g_y_0_x_0_xx_xxxxyzz[k];

                g_y_0_x_0_xxx_xxxzzz[k] = -g_y_0_x_0_xx_xxxzzz[k] * ab_x + g_y_0_x_0_xx_xxxxzzz[k];

                g_y_0_x_0_xxx_xxyyyy[k] = -g_y_0_x_0_xx_xxyyyy[k] * ab_x + g_y_0_x_0_xx_xxxyyyy[k];

                g_y_0_x_0_xxx_xxyyyz[k] = -g_y_0_x_0_xx_xxyyyz[k] * ab_x + g_y_0_x_0_xx_xxxyyyz[k];

                g_y_0_x_0_xxx_xxyyzz[k] = -g_y_0_x_0_xx_xxyyzz[k] * ab_x + g_y_0_x_0_xx_xxxyyzz[k];

                g_y_0_x_0_xxx_xxyzzz[k] = -g_y_0_x_0_xx_xxyzzz[k] * ab_x + g_y_0_x_0_xx_xxxyzzz[k];

                g_y_0_x_0_xxx_xxzzzz[k] = -g_y_0_x_0_xx_xxzzzz[k] * ab_x + g_y_0_x_0_xx_xxxzzzz[k];

                g_y_0_x_0_xxx_xyyyyy[k] = -g_y_0_x_0_xx_xyyyyy[k] * ab_x + g_y_0_x_0_xx_xxyyyyy[k];

                g_y_0_x_0_xxx_xyyyyz[k] = -g_y_0_x_0_xx_xyyyyz[k] * ab_x + g_y_0_x_0_xx_xxyyyyz[k];

                g_y_0_x_0_xxx_xyyyzz[k] = -g_y_0_x_0_xx_xyyyzz[k] * ab_x + g_y_0_x_0_xx_xxyyyzz[k];

                g_y_0_x_0_xxx_xyyzzz[k] = -g_y_0_x_0_xx_xyyzzz[k] * ab_x + g_y_0_x_0_xx_xxyyzzz[k];

                g_y_0_x_0_xxx_xyzzzz[k] = -g_y_0_x_0_xx_xyzzzz[k] * ab_x + g_y_0_x_0_xx_xxyzzzz[k];

                g_y_0_x_0_xxx_xzzzzz[k] = -g_y_0_x_0_xx_xzzzzz[k] * ab_x + g_y_0_x_0_xx_xxzzzzz[k];

                g_y_0_x_0_xxx_yyyyyy[k] = -g_y_0_x_0_xx_yyyyyy[k] * ab_x + g_y_0_x_0_xx_xyyyyyy[k];

                g_y_0_x_0_xxx_yyyyyz[k] = -g_y_0_x_0_xx_yyyyyz[k] * ab_x + g_y_0_x_0_xx_xyyyyyz[k];

                g_y_0_x_0_xxx_yyyyzz[k] = -g_y_0_x_0_xx_yyyyzz[k] * ab_x + g_y_0_x_0_xx_xyyyyzz[k];

                g_y_0_x_0_xxx_yyyzzz[k] = -g_y_0_x_0_xx_yyyzzz[k] * ab_x + g_y_0_x_0_xx_xyyyzzz[k];

                g_y_0_x_0_xxx_yyzzzz[k] = -g_y_0_x_0_xx_yyzzzz[k] * ab_x + g_y_0_x_0_xx_xyyzzzz[k];

                g_y_0_x_0_xxx_yzzzzz[k] = -g_y_0_x_0_xx_yzzzzz[k] * ab_x + g_y_0_x_0_xx_xyzzzzz[k];

                g_y_0_x_0_xxx_zzzzzz[k] = -g_y_0_x_0_xx_zzzzzz[k] * ab_x + g_y_0_x_0_xx_xzzzzzz[k];
            }

            /// Set up 868-896 components of targeted buffer : cbuffer.data(

            auto g_y_0_x_0_xxy_xxxxxx = cbuffer.data(fi_geom_1010_off + 868 * ccomps * dcomps);

            auto g_y_0_x_0_xxy_xxxxxy = cbuffer.data(fi_geom_1010_off + 869 * ccomps * dcomps);

            auto g_y_0_x_0_xxy_xxxxxz = cbuffer.data(fi_geom_1010_off + 870 * ccomps * dcomps);

            auto g_y_0_x_0_xxy_xxxxyy = cbuffer.data(fi_geom_1010_off + 871 * ccomps * dcomps);

            auto g_y_0_x_0_xxy_xxxxyz = cbuffer.data(fi_geom_1010_off + 872 * ccomps * dcomps);

            auto g_y_0_x_0_xxy_xxxxzz = cbuffer.data(fi_geom_1010_off + 873 * ccomps * dcomps);

            auto g_y_0_x_0_xxy_xxxyyy = cbuffer.data(fi_geom_1010_off + 874 * ccomps * dcomps);

            auto g_y_0_x_0_xxy_xxxyyz = cbuffer.data(fi_geom_1010_off + 875 * ccomps * dcomps);

            auto g_y_0_x_0_xxy_xxxyzz = cbuffer.data(fi_geom_1010_off + 876 * ccomps * dcomps);

            auto g_y_0_x_0_xxy_xxxzzz = cbuffer.data(fi_geom_1010_off + 877 * ccomps * dcomps);

            auto g_y_0_x_0_xxy_xxyyyy = cbuffer.data(fi_geom_1010_off + 878 * ccomps * dcomps);

            auto g_y_0_x_0_xxy_xxyyyz = cbuffer.data(fi_geom_1010_off + 879 * ccomps * dcomps);

            auto g_y_0_x_0_xxy_xxyyzz = cbuffer.data(fi_geom_1010_off + 880 * ccomps * dcomps);

            auto g_y_0_x_0_xxy_xxyzzz = cbuffer.data(fi_geom_1010_off + 881 * ccomps * dcomps);

            auto g_y_0_x_0_xxy_xxzzzz = cbuffer.data(fi_geom_1010_off + 882 * ccomps * dcomps);

            auto g_y_0_x_0_xxy_xyyyyy = cbuffer.data(fi_geom_1010_off + 883 * ccomps * dcomps);

            auto g_y_0_x_0_xxy_xyyyyz = cbuffer.data(fi_geom_1010_off + 884 * ccomps * dcomps);

            auto g_y_0_x_0_xxy_xyyyzz = cbuffer.data(fi_geom_1010_off + 885 * ccomps * dcomps);

            auto g_y_0_x_0_xxy_xyyzzz = cbuffer.data(fi_geom_1010_off + 886 * ccomps * dcomps);

            auto g_y_0_x_0_xxy_xyzzzz = cbuffer.data(fi_geom_1010_off + 887 * ccomps * dcomps);

            auto g_y_0_x_0_xxy_xzzzzz = cbuffer.data(fi_geom_1010_off + 888 * ccomps * dcomps);

            auto g_y_0_x_0_xxy_yyyyyy = cbuffer.data(fi_geom_1010_off + 889 * ccomps * dcomps);

            auto g_y_0_x_0_xxy_yyyyyz = cbuffer.data(fi_geom_1010_off + 890 * ccomps * dcomps);

            auto g_y_0_x_0_xxy_yyyyzz = cbuffer.data(fi_geom_1010_off + 891 * ccomps * dcomps);

            auto g_y_0_x_0_xxy_yyyzzz = cbuffer.data(fi_geom_1010_off + 892 * ccomps * dcomps);

            auto g_y_0_x_0_xxy_yyzzzz = cbuffer.data(fi_geom_1010_off + 893 * ccomps * dcomps);

            auto g_y_0_x_0_xxy_yzzzzz = cbuffer.data(fi_geom_1010_off + 894 * ccomps * dcomps);

            auto g_y_0_x_0_xxy_zzzzzz = cbuffer.data(fi_geom_1010_off + 895 * ccomps * dcomps);

            #pragma omp simd aligned(g_y_0_x_0_xxy_xxxxxx, g_y_0_x_0_xxy_xxxxxy, g_y_0_x_0_xxy_xxxxxz, g_y_0_x_0_xxy_xxxxyy, g_y_0_x_0_xxy_xxxxyz, g_y_0_x_0_xxy_xxxxzz, g_y_0_x_0_xxy_xxxyyy, g_y_0_x_0_xxy_xxxyyz, g_y_0_x_0_xxy_xxxyzz, g_y_0_x_0_xxy_xxxzzz, g_y_0_x_0_xxy_xxyyyy, g_y_0_x_0_xxy_xxyyyz, g_y_0_x_0_xxy_xxyyzz, g_y_0_x_0_xxy_xxyzzz, g_y_0_x_0_xxy_xxzzzz, g_y_0_x_0_xxy_xyyyyy, g_y_0_x_0_xxy_xyyyyz, g_y_0_x_0_xxy_xyyyzz, g_y_0_x_0_xxy_xyyzzz, g_y_0_x_0_xxy_xyzzzz, g_y_0_x_0_xxy_xzzzzz, g_y_0_x_0_xxy_yyyyyy, g_y_0_x_0_xxy_yyyyyz, g_y_0_x_0_xxy_yyyyzz, g_y_0_x_0_xxy_yyyzzz, g_y_0_x_0_xxy_yyzzzz, g_y_0_x_0_xxy_yzzzzz, g_y_0_x_0_xxy_zzzzzz, g_y_0_x_0_xy_xxxxxx, g_y_0_x_0_xy_xxxxxxx, g_y_0_x_0_xy_xxxxxxy, g_y_0_x_0_xy_xxxxxxz, g_y_0_x_0_xy_xxxxxy, g_y_0_x_0_xy_xxxxxyy, g_y_0_x_0_xy_xxxxxyz, g_y_0_x_0_xy_xxxxxz, g_y_0_x_0_xy_xxxxxzz, g_y_0_x_0_xy_xxxxyy, g_y_0_x_0_xy_xxxxyyy, g_y_0_x_0_xy_xxxxyyz, g_y_0_x_0_xy_xxxxyz, g_y_0_x_0_xy_xxxxyzz, g_y_0_x_0_xy_xxxxzz, g_y_0_x_0_xy_xxxxzzz, g_y_0_x_0_xy_xxxyyy, g_y_0_x_0_xy_xxxyyyy, g_y_0_x_0_xy_xxxyyyz, g_y_0_x_0_xy_xxxyyz, g_y_0_x_0_xy_xxxyyzz, g_y_0_x_0_xy_xxxyzz, g_y_0_x_0_xy_xxxyzzz, g_y_0_x_0_xy_xxxzzz, g_y_0_x_0_xy_xxxzzzz, g_y_0_x_0_xy_xxyyyy, g_y_0_x_0_xy_xxyyyyy, g_y_0_x_0_xy_xxyyyyz, g_y_0_x_0_xy_xxyyyz, g_y_0_x_0_xy_xxyyyzz, g_y_0_x_0_xy_xxyyzz, g_y_0_x_0_xy_xxyyzzz, g_y_0_x_0_xy_xxyzzz, g_y_0_x_0_xy_xxyzzzz, g_y_0_x_0_xy_xxzzzz, g_y_0_x_0_xy_xxzzzzz, g_y_0_x_0_xy_xyyyyy, g_y_0_x_0_xy_xyyyyyy, g_y_0_x_0_xy_xyyyyyz, g_y_0_x_0_xy_xyyyyz, g_y_0_x_0_xy_xyyyyzz, g_y_0_x_0_xy_xyyyzz, g_y_0_x_0_xy_xyyyzzz, g_y_0_x_0_xy_xyyzzz, g_y_0_x_0_xy_xyyzzzz, g_y_0_x_0_xy_xyzzzz, g_y_0_x_0_xy_xyzzzzz, g_y_0_x_0_xy_xzzzzz, g_y_0_x_0_xy_xzzzzzz, g_y_0_x_0_xy_yyyyyy, g_y_0_x_0_xy_yyyyyz, g_y_0_x_0_xy_yyyyzz, g_y_0_x_0_xy_yyyzzz, g_y_0_x_0_xy_yyzzzz, g_y_0_x_0_xy_yzzzzz, g_y_0_x_0_xy_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_y_0_x_0_xxy_xxxxxx[k] = -g_y_0_x_0_xy_xxxxxx[k] * ab_x + g_y_0_x_0_xy_xxxxxxx[k];

                g_y_0_x_0_xxy_xxxxxy[k] = -g_y_0_x_0_xy_xxxxxy[k] * ab_x + g_y_0_x_0_xy_xxxxxxy[k];

                g_y_0_x_0_xxy_xxxxxz[k] = -g_y_0_x_0_xy_xxxxxz[k] * ab_x + g_y_0_x_0_xy_xxxxxxz[k];

                g_y_0_x_0_xxy_xxxxyy[k] = -g_y_0_x_0_xy_xxxxyy[k] * ab_x + g_y_0_x_0_xy_xxxxxyy[k];

                g_y_0_x_0_xxy_xxxxyz[k] = -g_y_0_x_0_xy_xxxxyz[k] * ab_x + g_y_0_x_0_xy_xxxxxyz[k];

                g_y_0_x_0_xxy_xxxxzz[k] = -g_y_0_x_0_xy_xxxxzz[k] * ab_x + g_y_0_x_0_xy_xxxxxzz[k];

                g_y_0_x_0_xxy_xxxyyy[k] = -g_y_0_x_0_xy_xxxyyy[k] * ab_x + g_y_0_x_0_xy_xxxxyyy[k];

                g_y_0_x_0_xxy_xxxyyz[k] = -g_y_0_x_0_xy_xxxyyz[k] * ab_x + g_y_0_x_0_xy_xxxxyyz[k];

                g_y_0_x_0_xxy_xxxyzz[k] = -g_y_0_x_0_xy_xxxyzz[k] * ab_x + g_y_0_x_0_xy_xxxxyzz[k];

                g_y_0_x_0_xxy_xxxzzz[k] = -g_y_0_x_0_xy_xxxzzz[k] * ab_x + g_y_0_x_0_xy_xxxxzzz[k];

                g_y_0_x_0_xxy_xxyyyy[k] = -g_y_0_x_0_xy_xxyyyy[k] * ab_x + g_y_0_x_0_xy_xxxyyyy[k];

                g_y_0_x_0_xxy_xxyyyz[k] = -g_y_0_x_0_xy_xxyyyz[k] * ab_x + g_y_0_x_0_xy_xxxyyyz[k];

                g_y_0_x_0_xxy_xxyyzz[k] = -g_y_0_x_0_xy_xxyyzz[k] * ab_x + g_y_0_x_0_xy_xxxyyzz[k];

                g_y_0_x_0_xxy_xxyzzz[k] = -g_y_0_x_0_xy_xxyzzz[k] * ab_x + g_y_0_x_0_xy_xxxyzzz[k];

                g_y_0_x_0_xxy_xxzzzz[k] = -g_y_0_x_0_xy_xxzzzz[k] * ab_x + g_y_0_x_0_xy_xxxzzzz[k];

                g_y_0_x_0_xxy_xyyyyy[k] = -g_y_0_x_0_xy_xyyyyy[k] * ab_x + g_y_0_x_0_xy_xxyyyyy[k];

                g_y_0_x_0_xxy_xyyyyz[k] = -g_y_0_x_0_xy_xyyyyz[k] * ab_x + g_y_0_x_0_xy_xxyyyyz[k];

                g_y_0_x_0_xxy_xyyyzz[k] = -g_y_0_x_0_xy_xyyyzz[k] * ab_x + g_y_0_x_0_xy_xxyyyzz[k];

                g_y_0_x_0_xxy_xyyzzz[k] = -g_y_0_x_0_xy_xyyzzz[k] * ab_x + g_y_0_x_0_xy_xxyyzzz[k];

                g_y_0_x_0_xxy_xyzzzz[k] = -g_y_0_x_0_xy_xyzzzz[k] * ab_x + g_y_0_x_0_xy_xxyzzzz[k];

                g_y_0_x_0_xxy_xzzzzz[k] = -g_y_0_x_0_xy_xzzzzz[k] * ab_x + g_y_0_x_0_xy_xxzzzzz[k];

                g_y_0_x_0_xxy_yyyyyy[k] = -g_y_0_x_0_xy_yyyyyy[k] * ab_x + g_y_0_x_0_xy_xyyyyyy[k];

                g_y_0_x_0_xxy_yyyyyz[k] = -g_y_0_x_0_xy_yyyyyz[k] * ab_x + g_y_0_x_0_xy_xyyyyyz[k];

                g_y_0_x_0_xxy_yyyyzz[k] = -g_y_0_x_0_xy_yyyyzz[k] * ab_x + g_y_0_x_0_xy_xyyyyzz[k];

                g_y_0_x_0_xxy_yyyzzz[k] = -g_y_0_x_0_xy_yyyzzz[k] * ab_x + g_y_0_x_0_xy_xyyyzzz[k];

                g_y_0_x_0_xxy_yyzzzz[k] = -g_y_0_x_0_xy_yyzzzz[k] * ab_x + g_y_0_x_0_xy_xyyzzzz[k];

                g_y_0_x_0_xxy_yzzzzz[k] = -g_y_0_x_0_xy_yzzzzz[k] * ab_x + g_y_0_x_0_xy_xyzzzzz[k];

                g_y_0_x_0_xxy_zzzzzz[k] = -g_y_0_x_0_xy_zzzzzz[k] * ab_x + g_y_0_x_0_xy_xzzzzzz[k];
            }

            /// Set up 896-924 components of targeted buffer : cbuffer.data(

            auto g_y_0_x_0_xxz_xxxxxx = cbuffer.data(fi_geom_1010_off + 896 * ccomps * dcomps);

            auto g_y_0_x_0_xxz_xxxxxy = cbuffer.data(fi_geom_1010_off + 897 * ccomps * dcomps);

            auto g_y_0_x_0_xxz_xxxxxz = cbuffer.data(fi_geom_1010_off + 898 * ccomps * dcomps);

            auto g_y_0_x_0_xxz_xxxxyy = cbuffer.data(fi_geom_1010_off + 899 * ccomps * dcomps);

            auto g_y_0_x_0_xxz_xxxxyz = cbuffer.data(fi_geom_1010_off + 900 * ccomps * dcomps);

            auto g_y_0_x_0_xxz_xxxxzz = cbuffer.data(fi_geom_1010_off + 901 * ccomps * dcomps);

            auto g_y_0_x_0_xxz_xxxyyy = cbuffer.data(fi_geom_1010_off + 902 * ccomps * dcomps);

            auto g_y_0_x_0_xxz_xxxyyz = cbuffer.data(fi_geom_1010_off + 903 * ccomps * dcomps);

            auto g_y_0_x_0_xxz_xxxyzz = cbuffer.data(fi_geom_1010_off + 904 * ccomps * dcomps);

            auto g_y_0_x_0_xxz_xxxzzz = cbuffer.data(fi_geom_1010_off + 905 * ccomps * dcomps);

            auto g_y_0_x_0_xxz_xxyyyy = cbuffer.data(fi_geom_1010_off + 906 * ccomps * dcomps);

            auto g_y_0_x_0_xxz_xxyyyz = cbuffer.data(fi_geom_1010_off + 907 * ccomps * dcomps);

            auto g_y_0_x_0_xxz_xxyyzz = cbuffer.data(fi_geom_1010_off + 908 * ccomps * dcomps);

            auto g_y_0_x_0_xxz_xxyzzz = cbuffer.data(fi_geom_1010_off + 909 * ccomps * dcomps);

            auto g_y_0_x_0_xxz_xxzzzz = cbuffer.data(fi_geom_1010_off + 910 * ccomps * dcomps);

            auto g_y_0_x_0_xxz_xyyyyy = cbuffer.data(fi_geom_1010_off + 911 * ccomps * dcomps);

            auto g_y_0_x_0_xxz_xyyyyz = cbuffer.data(fi_geom_1010_off + 912 * ccomps * dcomps);

            auto g_y_0_x_0_xxz_xyyyzz = cbuffer.data(fi_geom_1010_off + 913 * ccomps * dcomps);

            auto g_y_0_x_0_xxz_xyyzzz = cbuffer.data(fi_geom_1010_off + 914 * ccomps * dcomps);

            auto g_y_0_x_0_xxz_xyzzzz = cbuffer.data(fi_geom_1010_off + 915 * ccomps * dcomps);

            auto g_y_0_x_0_xxz_xzzzzz = cbuffer.data(fi_geom_1010_off + 916 * ccomps * dcomps);

            auto g_y_0_x_0_xxz_yyyyyy = cbuffer.data(fi_geom_1010_off + 917 * ccomps * dcomps);

            auto g_y_0_x_0_xxz_yyyyyz = cbuffer.data(fi_geom_1010_off + 918 * ccomps * dcomps);

            auto g_y_0_x_0_xxz_yyyyzz = cbuffer.data(fi_geom_1010_off + 919 * ccomps * dcomps);

            auto g_y_0_x_0_xxz_yyyzzz = cbuffer.data(fi_geom_1010_off + 920 * ccomps * dcomps);

            auto g_y_0_x_0_xxz_yyzzzz = cbuffer.data(fi_geom_1010_off + 921 * ccomps * dcomps);

            auto g_y_0_x_0_xxz_yzzzzz = cbuffer.data(fi_geom_1010_off + 922 * ccomps * dcomps);

            auto g_y_0_x_0_xxz_zzzzzz = cbuffer.data(fi_geom_1010_off + 923 * ccomps * dcomps);

            #pragma omp simd aligned(g_y_0_x_0_xxz_xxxxxx, g_y_0_x_0_xxz_xxxxxy, g_y_0_x_0_xxz_xxxxxz, g_y_0_x_0_xxz_xxxxyy, g_y_0_x_0_xxz_xxxxyz, g_y_0_x_0_xxz_xxxxzz, g_y_0_x_0_xxz_xxxyyy, g_y_0_x_0_xxz_xxxyyz, g_y_0_x_0_xxz_xxxyzz, g_y_0_x_0_xxz_xxxzzz, g_y_0_x_0_xxz_xxyyyy, g_y_0_x_0_xxz_xxyyyz, g_y_0_x_0_xxz_xxyyzz, g_y_0_x_0_xxz_xxyzzz, g_y_0_x_0_xxz_xxzzzz, g_y_0_x_0_xxz_xyyyyy, g_y_0_x_0_xxz_xyyyyz, g_y_0_x_0_xxz_xyyyzz, g_y_0_x_0_xxz_xyyzzz, g_y_0_x_0_xxz_xyzzzz, g_y_0_x_0_xxz_xzzzzz, g_y_0_x_0_xxz_yyyyyy, g_y_0_x_0_xxz_yyyyyz, g_y_0_x_0_xxz_yyyyzz, g_y_0_x_0_xxz_yyyzzz, g_y_0_x_0_xxz_yyzzzz, g_y_0_x_0_xxz_yzzzzz, g_y_0_x_0_xxz_zzzzzz, g_y_0_x_0_xz_xxxxxx, g_y_0_x_0_xz_xxxxxxx, g_y_0_x_0_xz_xxxxxxy, g_y_0_x_0_xz_xxxxxxz, g_y_0_x_0_xz_xxxxxy, g_y_0_x_0_xz_xxxxxyy, g_y_0_x_0_xz_xxxxxyz, g_y_0_x_0_xz_xxxxxz, g_y_0_x_0_xz_xxxxxzz, g_y_0_x_0_xz_xxxxyy, g_y_0_x_0_xz_xxxxyyy, g_y_0_x_0_xz_xxxxyyz, g_y_0_x_0_xz_xxxxyz, g_y_0_x_0_xz_xxxxyzz, g_y_0_x_0_xz_xxxxzz, g_y_0_x_0_xz_xxxxzzz, g_y_0_x_0_xz_xxxyyy, g_y_0_x_0_xz_xxxyyyy, g_y_0_x_0_xz_xxxyyyz, g_y_0_x_0_xz_xxxyyz, g_y_0_x_0_xz_xxxyyzz, g_y_0_x_0_xz_xxxyzz, g_y_0_x_0_xz_xxxyzzz, g_y_0_x_0_xz_xxxzzz, g_y_0_x_0_xz_xxxzzzz, g_y_0_x_0_xz_xxyyyy, g_y_0_x_0_xz_xxyyyyy, g_y_0_x_0_xz_xxyyyyz, g_y_0_x_0_xz_xxyyyz, g_y_0_x_0_xz_xxyyyzz, g_y_0_x_0_xz_xxyyzz, g_y_0_x_0_xz_xxyyzzz, g_y_0_x_0_xz_xxyzzz, g_y_0_x_0_xz_xxyzzzz, g_y_0_x_0_xz_xxzzzz, g_y_0_x_0_xz_xxzzzzz, g_y_0_x_0_xz_xyyyyy, g_y_0_x_0_xz_xyyyyyy, g_y_0_x_0_xz_xyyyyyz, g_y_0_x_0_xz_xyyyyz, g_y_0_x_0_xz_xyyyyzz, g_y_0_x_0_xz_xyyyzz, g_y_0_x_0_xz_xyyyzzz, g_y_0_x_0_xz_xyyzzz, g_y_0_x_0_xz_xyyzzzz, g_y_0_x_0_xz_xyzzzz, g_y_0_x_0_xz_xyzzzzz, g_y_0_x_0_xz_xzzzzz, g_y_0_x_0_xz_xzzzzzz, g_y_0_x_0_xz_yyyyyy, g_y_0_x_0_xz_yyyyyz, g_y_0_x_0_xz_yyyyzz, g_y_0_x_0_xz_yyyzzz, g_y_0_x_0_xz_yyzzzz, g_y_0_x_0_xz_yzzzzz, g_y_0_x_0_xz_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_y_0_x_0_xxz_xxxxxx[k] = -g_y_0_x_0_xz_xxxxxx[k] * ab_x + g_y_0_x_0_xz_xxxxxxx[k];

                g_y_0_x_0_xxz_xxxxxy[k] = -g_y_0_x_0_xz_xxxxxy[k] * ab_x + g_y_0_x_0_xz_xxxxxxy[k];

                g_y_0_x_0_xxz_xxxxxz[k] = -g_y_0_x_0_xz_xxxxxz[k] * ab_x + g_y_0_x_0_xz_xxxxxxz[k];

                g_y_0_x_0_xxz_xxxxyy[k] = -g_y_0_x_0_xz_xxxxyy[k] * ab_x + g_y_0_x_0_xz_xxxxxyy[k];

                g_y_0_x_0_xxz_xxxxyz[k] = -g_y_0_x_0_xz_xxxxyz[k] * ab_x + g_y_0_x_0_xz_xxxxxyz[k];

                g_y_0_x_0_xxz_xxxxzz[k] = -g_y_0_x_0_xz_xxxxzz[k] * ab_x + g_y_0_x_0_xz_xxxxxzz[k];

                g_y_0_x_0_xxz_xxxyyy[k] = -g_y_0_x_0_xz_xxxyyy[k] * ab_x + g_y_0_x_0_xz_xxxxyyy[k];

                g_y_0_x_0_xxz_xxxyyz[k] = -g_y_0_x_0_xz_xxxyyz[k] * ab_x + g_y_0_x_0_xz_xxxxyyz[k];

                g_y_0_x_0_xxz_xxxyzz[k] = -g_y_0_x_0_xz_xxxyzz[k] * ab_x + g_y_0_x_0_xz_xxxxyzz[k];

                g_y_0_x_0_xxz_xxxzzz[k] = -g_y_0_x_0_xz_xxxzzz[k] * ab_x + g_y_0_x_0_xz_xxxxzzz[k];

                g_y_0_x_0_xxz_xxyyyy[k] = -g_y_0_x_0_xz_xxyyyy[k] * ab_x + g_y_0_x_0_xz_xxxyyyy[k];

                g_y_0_x_0_xxz_xxyyyz[k] = -g_y_0_x_0_xz_xxyyyz[k] * ab_x + g_y_0_x_0_xz_xxxyyyz[k];

                g_y_0_x_0_xxz_xxyyzz[k] = -g_y_0_x_0_xz_xxyyzz[k] * ab_x + g_y_0_x_0_xz_xxxyyzz[k];

                g_y_0_x_0_xxz_xxyzzz[k] = -g_y_0_x_0_xz_xxyzzz[k] * ab_x + g_y_0_x_0_xz_xxxyzzz[k];

                g_y_0_x_0_xxz_xxzzzz[k] = -g_y_0_x_0_xz_xxzzzz[k] * ab_x + g_y_0_x_0_xz_xxxzzzz[k];

                g_y_0_x_0_xxz_xyyyyy[k] = -g_y_0_x_0_xz_xyyyyy[k] * ab_x + g_y_0_x_0_xz_xxyyyyy[k];

                g_y_0_x_0_xxz_xyyyyz[k] = -g_y_0_x_0_xz_xyyyyz[k] * ab_x + g_y_0_x_0_xz_xxyyyyz[k];

                g_y_0_x_0_xxz_xyyyzz[k] = -g_y_0_x_0_xz_xyyyzz[k] * ab_x + g_y_0_x_0_xz_xxyyyzz[k];

                g_y_0_x_0_xxz_xyyzzz[k] = -g_y_0_x_0_xz_xyyzzz[k] * ab_x + g_y_0_x_0_xz_xxyyzzz[k];

                g_y_0_x_0_xxz_xyzzzz[k] = -g_y_0_x_0_xz_xyzzzz[k] * ab_x + g_y_0_x_0_xz_xxyzzzz[k];

                g_y_0_x_0_xxz_xzzzzz[k] = -g_y_0_x_0_xz_xzzzzz[k] * ab_x + g_y_0_x_0_xz_xxzzzzz[k];

                g_y_0_x_0_xxz_yyyyyy[k] = -g_y_0_x_0_xz_yyyyyy[k] * ab_x + g_y_0_x_0_xz_xyyyyyy[k];

                g_y_0_x_0_xxz_yyyyyz[k] = -g_y_0_x_0_xz_yyyyyz[k] * ab_x + g_y_0_x_0_xz_xyyyyyz[k];

                g_y_0_x_0_xxz_yyyyzz[k] = -g_y_0_x_0_xz_yyyyzz[k] * ab_x + g_y_0_x_0_xz_xyyyyzz[k];

                g_y_0_x_0_xxz_yyyzzz[k] = -g_y_0_x_0_xz_yyyzzz[k] * ab_x + g_y_0_x_0_xz_xyyyzzz[k];

                g_y_0_x_0_xxz_yyzzzz[k] = -g_y_0_x_0_xz_yyzzzz[k] * ab_x + g_y_0_x_0_xz_xyyzzzz[k];

                g_y_0_x_0_xxz_yzzzzz[k] = -g_y_0_x_0_xz_yzzzzz[k] * ab_x + g_y_0_x_0_xz_xyzzzzz[k];

                g_y_0_x_0_xxz_zzzzzz[k] = -g_y_0_x_0_xz_zzzzzz[k] * ab_x + g_y_0_x_0_xz_xzzzzzz[k];
            }

            /// Set up 924-952 components of targeted buffer : cbuffer.data(

            auto g_y_0_x_0_xyy_xxxxxx = cbuffer.data(fi_geom_1010_off + 924 * ccomps * dcomps);

            auto g_y_0_x_0_xyy_xxxxxy = cbuffer.data(fi_geom_1010_off + 925 * ccomps * dcomps);

            auto g_y_0_x_0_xyy_xxxxxz = cbuffer.data(fi_geom_1010_off + 926 * ccomps * dcomps);

            auto g_y_0_x_0_xyy_xxxxyy = cbuffer.data(fi_geom_1010_off + 927 * ccomps * dcomps);

            auto g_y_0_x_0_xyy_xxxxyz = cbuffer.data(fi_geom_1010_off + 928 * ccomps * dcomps);

            auto g_y_0_x_0_xyy_xxxxzz = cbuffer.data(fi_geom_1010_off + 929 * ccomps * dcomps);

            auto g_y_0_x_0_xyy_xxxyyy = cbuffer.data(fi_geom_1010_off + 930 * ccomps * dcomps);

            auto g_y_0_x_0_xyy_xxxyyz = cbuffer.data(fi_geom_1010_off + 931 * ccomps * dcomps);

            auto g_y_0_x_0_xyy_xxxyzz = cbuffer.data(fi_geom_1010_off + 932 * ccomps * dcomps);

            auto g_y_0_x_0_xyy_xxxzzz = cbuffer.data(fi_geom_1010_off + 933 * ccomps * dcomps);

            auto g_y_0_x_0_xyy_xxyyyy = cbuffer.data(fi_geom_1010_off + 934 * ccomps * dcomps);

            auto g_y_0_x_0_xyy_xxyyyz = cbuffer.data(fi_geom_1010_off + 935 * ccomps * dcomps);

            auto g_y_0_x_0_xyy_xxyyzz = cbuffer.data(fi_geom_1010_off + 936 * ccomps * dcomps);

            auto g_y_0_x_0_xyy_xxyzzz = cbuffer.data(fi_geom_1010_off + 937 * ccomps * dcomps);

            auto g_y_0_x_0_xyy_xxzzzz = cbuffer.data(fi_geom_1010_off + 938 * ccomps * dcomps);

            auto g_y_0_x_0_xyy_xyyyyy = cbuffer.data(fi_geom_1010_off + 939 * ccomps * dcomps);

            auto g_y_0_x_0_xyy_xyyyyz = cbuffer.data(fi_geom_1010_off + 940 * ccomps * dcomps);

            auto g_y_0_x_0_xyy_xyyyzz = cbuffer.data(fi_geom_1010_off + 941 * ccomps * dcomps);

            auto g_y_0_x_0_xyy_xyyzzz = cbuffer.data(fi_geom_1010_off + 942 * ccomps * dcomps);

            auto g_y_0_x_0_xyy_xyzzzz = cbuffer.data(fi_geom_1010_off + 943 * ccomps * dcomps);

            auto g_y_0_x_0_xyy_xzzzzz = cbuffer.data(fi_geom_1010_off + 944 * ccomps * dcomps);

            auto g_y_0_x_0_xyy_yyyyyy = cbuffer.data(fi_geom_1010_off + 945 * ccomps * dcomps);

            auto g_y_0_x_0_xyy_yyyyyz = cbuffer.data(fi_geom_1010_off + 946 * ccomps * dcomps);

            auto g_y_0_x_0_xyy_yyyyzz = cbuffer.data(fi_geom_1010_off + 947 * ccomps * dcomps);

            auto g_y_0_x_0_xyy_yyyzzz = cbuffer.data(fi_geom_1010_off + 948 * ccomps * dcomps);

            auto g_y_0_x_0_xyy_yyzzzz = cbuffer.data(fi_geom_1010_off + 949 * ccomps * dcomps);

            auto g_y_0_x_0_xyy_yzzzzz = cbuffer.data(fi_geom_1010_off + 950 * ccomps * dcomps);

            auto g_y_0_x_0_xyy_zzzzzz = cbuffer.data(fi_geom_1010_off + 951 * ccomps * dcomps);

            #pragma omp simd aligned(g_y_0_x_0_xyy_xxxxxx, g_y_0_x_0_xyy_xxxxxy, g_y_0_x_0_xyy_xxxxxz, g_y_0_x_0_xyy_xxxxyy, g_y_0_x_0_xyy_xxxxyz, g_y_0_x_0_xyy_xxxxzz, g_y_0_x_0_xyy_xxxyyy, g_y_0_x_0_xyy_xxxyyz, g_y_0_x_0_xyy_xxxyzz, g_y_0_x_0_xyy_xxxzzz, g_y_0_x_0_xyy_xxyyyy, g_y_0_x_0_xyy_xxyyyz, g_y_0_x_0_xyy_xxyyzz, g_y_0_x_0_xyy_xxyzzz, g_y_0_x_0_xyy_xxzzzz, g_y_0_x_0_xyy_xyyyyy, g_y_0_x_0_xyy_xyyyyz, g_y_0_x_0_xyy_xyyyzz, g_y_0_x_0_xyy_xyyzzz, g_y_0_x_0_xyy_xyzzzz, g_y_0_x_0_xyy_xzzzzz, g_y_0_x_0_xyy_yyyyyy, g_y_0_x_0_xyy_yyyyyz, g_y_0_x_0_xyy_yyyyzz, g_y_0_x_0_xyy_yyyzzz, g_y_0_x_0_xyy_yyzzzz, g_y_0_x_0_xyy_yzzzzz, g_y_0_x_0_xyy_zzzzzz, g_y_0_x_0_yy_xxxxxx, g_y_0_x_0_yy_xxxxxxx, g_y_0_x_0_yy_xxxxxxy, g_y_0_x_0_yy_xxxxxxz, g_y_0_x_0_yy_xxxxxy, g_y_0_x_0_yy_xxxxxyy, g_y_0_x_0_yy_xxxxxyz, g_y_0_x_0_yy_xxxxxz, g_y_0_x_0_yy_xxxxxzz, g_y_0_x_0_yy_xxxxyy, g_y_0_x_0_yy_xxxxyyy, g_y_0_x_0_yy_xxxxyyz, g_y_0_x_0_yy_xxxxyz, g_y_0_x_0_yy_xxxxyzz, g_y_0_x_0_yy_xxxxzz, g_y_0_x_0_yy_xxxxzzz, g_y_0_x_0_yy_xxxyyy, g_y_0_x_0_yy_xxxyyyy, g_y_0_x_0_yy_xxxyyyz, g_y_0_x_0_yy_xxxyyz, g_y_0_x_0_yy_xxxyyzz, g_y_0_x_0_yy_xxxyzz, g_y_0_x_0_yy_xxxyzzz, g_y_0_x_0_yy_xxxzzz, g_y_0_x_0_yy_xxxzzzz, g_y_0_x_0_yy_xxyyyy, g_y_0_x_0_yy_xxyyyyy, g_y_0_x_0_yy_xxyyyyz, g_y_0_x_0_yy_xxyyyz, g_y_0_x_0_yy_xxyyyzz, g_y_0_x_0_yy_xxyyzz, g_y_0_x_0_yy_xxyyzzz, g_y_0_x_0_yy_xxyzzz, g_y_0_x_0_yy_xxyzzzz, g_y_0_x_0_yy_xxzzzz, g_y_0_x_0_yy_xxzzzzz, g_y_0_x_0_yy_xyyyyy, g_y_0_x_0_yy_xyyyyyy, g_y_0_x_0_yy_xyyyyyz, g_y_0_x_0_yy_xyyyyz, g_y_0_x_0_yy_xyyyyzz, g_y_0_x_0_yy_xyyyzz, g_y_0_x_0_yy_xyyyzzz, g_y_0_x_0_yy_xyyzzz, g_y_0_x_0_yy_xyyzzzz, g_y_0_x_0_yy_xyzzzz, g_y_0_x_0_yy_xyzzzzz, g_y_0_x_0_yy_xzzzzz, g_y_0_x_0_yy_xzzzzzz, g_y_0_x_0_yy_yyyyyy, g_y_0_x_0_yy_yyyyyz, g_y_0_x_0_yy_yyyyzz, g_y_0_x_0_yy_yyyzzz, g_y_0_x_0_yy_yyzzzz, g_y_0_x_0_yy_yzzzzz, g_y_0_x_0_yy_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_y_0_x_0_xyy_xxxxxx[k] = -g_y_0_x_0_yy_xxxxxx[k] * ab_x + g_y_0_x_0_yy_xxxxxxx[k];

                g_y_0_x_0_xyy_xxxxxy[k] = -g_y_0_x_0_yy_xxxxxy[k] * ab_x + g_y_0_x_0_yy_xxxxxxy[k];

                g_y_0_x_0_xyy_xxxxxz[k] = -g_y_0_x_0_yy_xxxxxz[k] * ab_x + g_y_0_x_0_yy_xxxxxxz[k];

                g_y_0_x_0_xyy_xxxxyy[k] = -g_y_0_x_0_yy_xxxxyy[k] * ab_x + g_y_0_x_0_yy_xxxxxyy[k];

                g_y_0_x_0_xyy_xxxxyz[k] = -g_y_0_x_0_yy_xxxxyz[k] * ab_x + g_y_0_x_0_yy_xxxxxyz[k];

                g_y_0_x_0_xyy_xxxxzz[k] = -g_y_0_x_0_yy_xxxxzz[k] * ab_x + g_y_0_x_0_yy_xxxxxzz[k];

                g_y_0_x_0_xyy_xxxyyy[k] = -g_y_0_x_0_yy_xxxyyy[k] * ab_x + g_y_0_x_0_yy_xxxxyyy[k];

                g_y_0_x_0_xyy_xxxyyz[k] = -g_y_0_x_0_yy_xxxyyz[k] * ab_x + g_y_0_x_0_yy_xxxxyyz[k];

                g_y_0_x_0_xyy_xxxyzz[k] = -g_y_0_x_0_yy_xxxyzz[k] * ab_x + g_y_0_x_0_yy_xxxxyzz[k];

                g_y_0_x_0_xyy_xxxzzz[k] = -g_y_0_x_0_yy_xxxzzz[k] * ab_x + g_y_0_x_0_yy_xxxxzzz[k];

                g_y_0_x_0_xyy_xxyyyy[k] = -g_y_0_x_0_yy_xxyyyy[k] * ab_x + g_y_0_x_0_yy_xxxyyyy[k];

                g_y_0_x_0_xyy_xxyyyz[k] = -g_y_0_x_0_yy_xxyyyz[k] * ab_x + g_y_0_x_0_yy_xxxyyyz[k];

                g_y_0_x_0_xyy_xxyyzz[k] = -g_y_0_x_0_yy_xxyyzz[k] * ab_x + g_y_0_x_0_yy_xxxyyzz[k];

                g_y_0_x_0_xyy_xxyzzz[k] = -g_y_0_x_0_yy_xxyzzz[k] * ab_x + g_y_0_x_0_yy_xxxyzzz[k];

                g_y_0_x_0_xyy_xxzzzz[k] = -g_y_0_x_0_yy_xxzzzz[k] * ab_x + g_y_0_x_0_yy_xxxzzzz[k];

                g_y_0_x_0_xyy_xyyyyy[k] = -g_y_0_x_0_yy_xyyyyy[k] * ab_x + g_y_0_x_0_yy_xxyyyyy[k];

                g_y_0_x_0_xyy_xyyyyz[k] = -g_y_0_x_0_yy_xyyyyz[k] * ab_x + g_y_0_x_0_yy_xxyyyyz[k];

                g_y_0_x_0_xyy_xyyyzz[k] = -g_y_0_x_0_yy_xyyyzz[k] * ab_x + g_y_0_x_0_yy_xxyyyzz[k];

                g_y_0_x_0_xyy_xyyzzz[k] = -g_y_0_x_0_yy_xyyzzz[k] * ab_x + g_y_0_x_0_yy_xxyyzzz[k];

                g_y_0_x_0_xyy_xyzzzz[k] = -g_y_0_x_0_yy_xyzzzz[k] * ab_x + g_y_0_x_0_yy_xxyzzzz[k];

                g_y_0_x_0_xyy_xzzzzz[k] = -g_y_0_x_0_yy_xzzzzz[k] * ab_x + g_y_0_x_0_yy_xxzzzzz[k];

                g_y_0_x_0_xyy_yyyyyy[k] = -g_y_0_x_0_yy_yyyyyy[k] * ab_x + g_y_0_x_0_yy_xyyyyyy[k];

                g_y_0_x_0_xyy_yyyyyz[k] = -g_y_0_x_0_yy_yyyyyz[k] * ab_x + g_y_0_x_0_yy_xyyyyyz[k];

                g_y_0_x_0_xyy_yyyyzz[k] = -g_y_0_x_0_yy_yyyyzz[k] * ab_x + g_y_0_x_0_yy_xyyyyzz[k];

                g_y_0_x_0_xyy_yyyzzz[k] = -g_y_0_x_0_yy_yyyzzz[k] * ab_x + g_y_0_x_0_yy_xyyyzzz[k];

                g_y_0_x_0_xyy_yyzzzz[k] = -g_y_0_x_0_yy_yyzzzz[k] * ab_x + g_y_0_x_0_yy_xyyzzzz[k];

                g_y_0_x_0_xyy_yzzzzz[k] = -g_y_0_x_0_yy_yzzzzz[k] * ab_x + g_y_0_x_0_yy_xyzzzzz[k];

                g_y_0_x_0_xyy_zzzzzz[k] = -g_y_0_x_0_yy_zzzzzz[k] * ab_x + g_y_0_x_0_yy_xzzzzzz[k];
            }

            /// Set up 952-980 components of targeted buffer : cbuffer.data(

            auto g_y_0_x_0_xyz_xxxxxx = cbuffer.data(fi_geom_1010_off + 952 * ccomps * dcomps);

            auto g_y_0_x_0_xyz_xxxxxy = cbuffer.data(fi_geom_1010_off + 953 * ccomps * dcomps);

            auto g_y_0_x_0_xyz_xxxxxz = cbuffer.data(fi_geom_1010_off + 954 * ccomps * dcomps);

            auto g_y_0_x_0_xyz_xxxxyy = cbuffer.data(fi_geom_1010_off + 955 * ccomps * dcomps);

            auto g_y_0_x_0_xyz_xxxxyz = cbuffer.data(fi_geom_1010_off + 956 * ccomps * dcomps);

            auto g_y_0_x_0_xyz_xxxxzz = cbuffer.data(fi_geom_1010_off + 957 * ccomps * dcomps);

            auto g_y_0_x_0_xyz_xxxyyy = cbuffer.data(fi_geom_1010_off + 958 * ccomps * dcomps);

            auto g_y_0_x_0_xyz_xxxyyz = cbuffer.data(fi_geom_1010_off + 959 * ccomps * dcomps);

            auto g_y_0_x_0_xyz_xxxyzz = cbuffer.data(fi_geom_1010_off + 960 * ccomps * dcomps);

            auto g_y_0_x_0_xyz_xxxzzz = cbuffer.data(fi_geom_1010_off + 961 * ccomps * dcomps);

            auto g_y_0_x_0_xyz_xxyyyy = cbuffer.data(fi_geom_1010_off + 962 * ccomps * dcomps);

            auto g_y_0_x_0_xyz_xxyyyz = cbuffer.data(fi_geom_1010_off + 963 * ccomps * dcomps);

            auto g_y_0_x_0_xyz_xxyyzz = cbuffer.data(fi_geom_1010_off + 964 * ccomps * dcomps);

            auto g_y_0_x_0_xyz_xxyzzz = cbuffer.data(fi_geom_1010_off + 965 * ccomps * dcomps);

            auto g_y_0_x_0_xyz_xxzzzz = cbuffer.data(fi_geom_1010_off + 966 * ccomps * dcomps);

            auto g_y_0_x_0_xyz_xyyyyy = cbuffer.data(fi_geom_1010_off + 967 * ccomps * dcomps);

            auto g_y_0_x_0_xyz_xyyyyz = cbuffer.data(fi_geom_1010_off + 968 * ccomps * dcomps);

            auto g_y_0_x_0_xyz_xyyyzz = cbuffer.data(fi_geom_1010_off + 969 * ccomps * dcomps);

            auto g_y_0_x_0_xyz_xyyzzz = cbuffer.data(fi_geom_1010_off + 970 * ccomps * dcomps);

            auto g_y_0_x_0_xyz_xyzzzz = cbuffer.data(fi_geom_1010_off + 971 * ccomps * dcomps);

            auto g_y_0_x_0_xyz_xzzzzz = cbuffer.data(fi_geom_1010_off + 972 * ccomps * dcomps);

            auto g_y_0_x_0_xyz_yyyyyy = cbuffer.data(fi_geom_1010_off + 973 * ccomps * dcomps);

            auto g_y_0_x_0_xyz_yyyyyz = cbuffer.data(fi_geom_1010_off + 974 * ccomps * dcomps);

            auto g_y_0_x_0_xyz_yyyyzz = cbuffer.data(fi_geom_1010_off + 975 * ccomps * dcomps);

            auto g_y_0_x_0_xyz_yyyzzz = cbuffer.data(fi_geom_1010_off + 976 * ccomps * dcomps);

            auto g_y_0_x_0_xyz_yyzzzz = cbuffer.data(fi_geom_1010_off + 977 * ccomps * dcomps);

            auto g_y_0_x_0_xyz_yzzzzz = cbuffer.data(fi_geom_1010_off + 978 * ccomps * dcomps);

            auto g_y_0_x_0_xyz_zzzzzz = cbuffer.data(fi_geom_1010_off + 979 * ccomps * dcomps);

            #pragma omp simd aligned(g_y_0_x_0_xyz_xxxxxx, g_y_0_x_0_xyz_xxxxxy, g_y_0_x_0_xyz_xxxxxz, g_y_0_x_0_xyz_xxxxyy, g_y_0_x_0_xyz_xxxxyz, g_y_0_x_0_xyz_xxxxzz, g_y_0_x_0_xyz_xxxyyy, g_y_0_x_0_xyz_xxxyyz, g_y_0_x_0_xyz_xxxyzz, g_y_0_x_0_xyz_xxxzzz, g_y_0_x_0_xyz_xxyyyy, g_y_0_x_0_xyz_xxyyyz, g_y_0_x_0_xyz_xxyyzz, g_y_0_x_0_xyz_xxyzzz, g_y_0_x_0_xyz_xxzzzz, g_y_0_x_0_xyz_xyyyyy, g_y_0_x_0_xyz_xyyyyz, g_y_0_x_0_xyz_xyyyzz, g_y_0_x_0_xyz_xyyzzz, g_y_0_x_0_xyz_xyzzzz, g_y_0_x_0_xyz_xzzzzz, g_y_0_x_0_xyz_yyyyyy, g_y_0_x_0_xyz_yyyyyz, g_y_0_x_0_xyz_yyyyzz, g_y_0_x_0_xyz_yyyzzz, g_y_0_x_0_xyz_yyzzzz, g_y_0_x_0_xyz_yzzzzz, g_y_0_x_0_xyz_zzzzzz, g_y_0_x_0_yz_xxxxxx, g_y_0_x_0_yz_xxxxxxx, g_y_0_x_0_yz_xxxxxxy, g_y_0_x_0_yz_xxxxxxz, g_y_0_x_0_yz_xxxxxy, g_y_0_x_0_yz_xxxxxyy, g_y_0_x_0_yz_xxxxxyz, g_y_0_x_0_yz_xxxxxz, g_y_0_x_0_yz_xxxxxzz, g_y_0_x_0_yz_xxxxyy, g_y_0_x_0_yz_xxxxyyy, g_y_0_x_0_yz_xxxxyyz, g_y_0_x_0_yz_xxxxyz, g_y_0_x_0_yz_xxxxyzz, g_y_0_x_0_yz_xxxxzz, g_y_0_x_0_yz_xxxxzzz, g_y_0_x_0_yz_xxxyyy, g_y_0_x_0_yz_xxxyyyy, g_y_0_x_0_yz_xxxyyyz, g_y_0_x_0_yz_xxxyyz, g_y_0_x_0_yz_xxxyyzz, g_y_0_x_0_yz_xxxyzz, g_y_0_x_0_yz_xxxyzzz, g_y_0_x_0_yz_xxxzzz, g_y_0_x_0_yz_xxxzzzz, g_y_0_x_0_yz_xxyyyy, g_y_0_x_0_yz_xxyyyyy, g_y_0_x_0_yz_xxyyyyz, g_y_0_x_0_yz_xxyyyz, g_y_0_x_0_yz_xxyyyzz, g_y_0_x_0_yz_xxyyzz, g_y_0_x_0_yz_xxyyzzz, g_y_0_x_0_yz_xxyzzz, g_y_0_x_0_yz_xxyzzzz, g_y_0_x_0_yz_xxzzzz, g_y_0_x_0_yz_xxzzzzz, g_y_0_x_0_yz_xyyyyy, g_y_0_x_0_yz_xyyyyyy, g_y_0_x_0_yz_xyyyyyz, g_y_0_x_0_yz_xyyyyz, g_y_0_x_0_yz_xyyyyzz, g_y_0_x_0_yz_xyyyzz, g_y_0_x_0_yz_xyyyzzz, g_y_0_x_0_yz_xyyzzz, g_y_0_x_0_yz_xyyzzzz, g_y_0_x_0_yz_xyzzzz, g_y_0_x_0_yz_xyzzzzz, g_y_0_x_0_yz_xzzzzz, g_y_0_x_0_yz_xzzzzzz, g_y_0_x_0_yz_yyyyyy, g_y_0_x_0_yz_yyyyyz, g_y_0_x_0_yz_yyyyzz, g_y_0_x_0_yz_yyyzzz, g_y_0_x_0_yz_yyzzzz, g_y_0_x_0_yz_yzzzzz, g_y_0_x_0_yz_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_y_0_x_0_xyz_xxxxxx[k] = -g_y_0_x_0_yz_xxxxxx[k] * ab_x + g_y_0_x_0_yz_xxxxxxx[k];

                g_y_0_x_0_xyz_xxxxxy[k] = -g_y_0_x_0_yz_xxxxxy[k] * ab_x + g_y_0_x_0_yz_xxxxxxy[k];

                g_y_0_x_0_xyz_xxxxxz[k] = -g_y_0_x_0_yz_xxxxxz[k] * ab_x + g_y_0_x_0_yz_xxxxxxz[k];

                g_y_0_x_0_xyz_xxxxyy[k] = -g_y_0_x_0_yz_xxxxyy[k] * ab_x + g_y_0_x_0_yz_xxxxxyy[k];

                g_y_0_x_0_xyz_xxxxyz[k] = -g_y_0_x_0_yz_xxxxyz[k] * ab_x + g_y_0_x_0_yz_xxxxxyz[k];

                g_y_0_x_0_xyz_xxxxzz[k] = -g_y_0_x_0_yz_xxxxzz[k] * ab_x + g_y_0_x_0_yz_xxxxxzz[k];

                g_y_0_x_0_xyz_xxxyyy[k] = -g_y_0_x_0_yz_xxxyyy[k] * ab_x + g_y_0_x_0_yz_xxxxyyy[k];

                g_y_0_x_0_xyz_xxxyyz[k] = -g_y_0_x_0_yz_xxxyyz[k] * ab_x + g_y_0_x_0_yz_xxxxyyz[k];

                g_y_0_x_0_xyz_xxxyzz[k] = -g_y_0_x_0_yz_xxxyzz[k] * ab_x + g_y_0_x_0_yz_xxxxyzz[k];

                g_y_0_x_0_xyz_xxxzzz[k] = -g_y_0_x_0_yz_xxxzzz[k] * ab_x + g_y_0_x_0_yz_xxxxzzz[k];

                g_y_0_x_0_xyz_xxyyyy[k] = -g_y_0_x_0_yz_xxyyyy[k] * ab_x + g_y_0_x_0_yz_xxxyyyy[k];

                g_y_0_x_0_xyz_xxyyyz[k] = -g_y_0_x_0_yz_xxyyyz[k] * ab_x + g_y_0_x_0_yz_xxxyyyz[k];

                g_y_0_x_0_xyz_xxyyzz[k] = -g_y_0_x_0_yz_xxyyzz[k] * ab_x + g_y_0_x_0_yz_xxxyyzz[k];

                g_y_0_x_0_xyz_xxyzzz[k] = -g_y_0_x_0_yz_xxyzzz[k] * ab_x + g_y_0_x_0_yz_xxxyzzz[k];

                g_y_0_x_0_xyz_xxzzzz[k] = -g_y_0_x_0_yz_xxzzzz[k] * ab_x + g_y_0_x_0_yz_xxxzzzz[k];

                g_y_0_x_0_xyz_xyyyyy[k] = -g_y_0_x_0_yz_xyyyyy[k] * ab_x + g_y_0_x_0_yz_xxyyyyy[k];

                g_y_0_x_0_xyz_xyyyyz[k] = -g_y_0_x_0_yz_xyyyyz[k] * ab_x + g_y_0_x_0_yz_xxyyyyz[k];

                g_y_0_x_0_xyz_xyyyzz[k] = -g_y_0_x_0_yz_xyyyzz[k] * ab_x + g_y_0_x_0_yz_xxyyyzz[k];

                g_y_0_x_0_xyz_xyyzzz[k] = -g_y_0_x_0_yz_xyyzzz[k] * ab_x + g_y_0_x_0_yz_xxyyzzz[k];

                g_y_0_x_0_xyz_xyzzzz[k] = -g_y_0_x_0_yz_xyzzzz[k] * ab_x + g_y_0_x_0_yz_xxyzzzz[k];

                g_y_0_x_0_xyz_xzzzzz[k] = -g_y_0_x_0_yz_xzzzzz[k] * ab_x + g_y_0_x_0_yz_xxzzzzz[k];

                g_y_0_x_0_xyz_yyyyyy[k] = -g_y_0_x_0_yz_yyyyyy[k] * ab_x + g_y_0_x_0_yz_xyyyyyy[k];

                g_y_0_x_0_xyz_yyyyyz[k] = -g_y_0_x_0_yz_yyyyyz[k] * ab_x + g_y_0_x_0_yz_xyyyyyz[k];

                g_y_0_x_0_xyz_yyyyzz[k] = -g_y_0_x_0_yz_yyyyzz[k] * ab_x + g_y_0_x_0_yz_xyyyyzz[k];

                g_y_0_x_0_xyz_yyyzzz[k] = -g_y_0_x_0_yz_yyyzzz[k] * ab_x + g_y_0_x_0_yz_xyyyzzz[k];

                g_y_0_x_0_xyz_yyzzzz[k] = -g_y_0_x_0_yz_yyzzzz[k] * ab_x + g_y_0_x_0_yz_xyyzzzz[k];

                g_y_0_x_0_xyz_yzzzzz[k] = -g_y_0_x_0_yz_yzzzzz[k] * ab_x + g_y_0_x_0_yz_xyzzzzz[k];

                g_y_0_x_0_xyz_zzzzzz[k] = -g_y_0_x_0_yz_zzzzzz[k] * ab_x + g_y_0_x_0_yz_xzzzzzz[k];
            }

            /// Set up 980-1008 components of targeted buffer : cbuffer.data(

            auto g_y_0_x_0_xzz_xxxxxx = cbuffer.data(fi_geom_1010_off + 980 * ccomps * dcomps);

            auto g_y_0_x_0_xzz_xxxxxy = cbuffer.data(fi_geom_1010_off + 981 * ccomps * dcomps);

            auto g_y_0_x_0_xzz_xxxxxz = cbuffer.data(fi_geom_1010_off + 982 * ccomps * dcomps);

            auto g_y_0_x_0_xzz_xxxxyy = cbuffer.data(fi_geom_1010_off + 983 * ccomps * dcomps);

            auto g_y_0_x_0_xzz_xxxxyz = cbuffer.data(fi_geom_1010_off + 984 * ccomps * dcomps);

            auto g_y_0_x_0_xzz_xxxxzz = cbuffer.data(fi_geom_1010_off + 985 * ccomps * dcomps);

            auto g_y_0_x_0_xzz_xxxyyy = cbuffer.data(fi_geom_1010_off + 986 * ccomps * dcomps);

            auto g_y_0_x_0_xzz_xxxyyz = cbuffer.data(fi_geom_1010_off + 987 * ccomps * dcomps);

            auto g_y_0_x_0_xzz_xxxyzz = cbuffer.data(fi_geom_1010_off + 988 * ccomps * dcomps);

            auto g_y_0_x_0_xzz_xxxzzz = cbuffer.data(fi_geom_1010_off + 989 * ccomps * dcomps);

            auto g_y_0_x_0_xzz_xxyyyy = cbuffer.data(fi_geom_1010_off + 990 * ccomps * dcomps);

            auto g_y_0_x_0_xzz_xxyyyz = cbuffer.data(fi_geom_1010_off + 991 * ccomps * dcomps);

            auto g_y_0_x_0_xzz_xxyyzz = cbuffer.data(fi_geom_1010_off + 992 * ccomps * dcomps);

            auto g_y_0_x_0_xzz_xxyzzz = cbuffer.data(fi_geom_1010_off + 993 * ccomps * dcomps);

            auto g_y_0_x_0_xzz_xxzzzz = cbuffer.data(fi_geom_1010_off + 994 * ccomps * dcomps);

            auto g_y_0_x_0_xzz_xyyyyy = cbuffer.data(fi_geom_1010_off + 995 * ccomps * dcomps);

            auto g_y_0_x_0_xzz_xyyyyz = cbuffer.data(fi_geom_1010_off + 996 * ccomps * dcomps);

            auto g_y_0_x_0_xzz_xyyyzz = cbuffer.data(fi_geom_1010_off + 997 * ccomps * dcomps);

            auto g_y_0_x_0_xzz_xyyzzz = cbuffer.data(fi_geom_1010_off + 998 * ccomps * dcomps);

            auto g_y_0_x_0_xzz_xyzzzz = cbuffer.data(fi_geom_1010_off + 999 * ccomps * dcomps);

            auto g_y_0_x_0_xzz_xzzzzz = cbuffer.data(fi_geom_1010_off + 1000 * ccomps * dcomps);

            auto g_y_0_x_0_xzz_yyyyyy = cbuffer.data(fi_geom_1010_off + 1001 * ccomps * dcomps);

            auto g_y_0_x_0_xzz_yyyyyz = cbuffer.data(fi_geom_1010_off + 1002 * ccomps * dcomps);

            auto g_y_0_x_0_xzz_yyyyzz = cbuffer.data(fi_geom_1010_off + 1003 * ccomps * dcomps);

            auto g_y_0_x_0_xzz_yyyzzz = cbuffer.data(fi_geom_1010_off + 1004 * ccomps * dcomps);

            auto g_y_0_x_0_xzz_yyzzzz = cbuffer.data(fi_geom_1010_off + 1005 * ccomps * dcomps);

            auto g_y_0_x_0_xzz_yzzzzz = cbuffer.data(fi_geom_1010_off + 1006 * ccomps * dcomps);

            auto g_y_0_x_0_xzz_zzzzzz = cbuffer.data(fi_geom_1010_off + 1007 * ccomps * dcomps);

            #pragma omp simd aligned(g_y_0_x_0_xzz_xxxxxx, g_y_0_x_0_xzz_xxxxxy, g_y_0_x_0_xzz_xxxxxz, g_y_0_x_0_xzz_xxxxyy, g_y_0_x_0_xzz_xxxxyz, g_y_0_x_0_xzz_xxxxzz, g_y_0_x_0_xzz_xxxyyy, g_y_0_x_0_xzz_xxxyyz, g_y_0_x_0_xzz_xxxyzz, g_y_0_x_0_xzz_xxxzzz, g_y_0_x_0_xzz_xxyyyy, g_y_0_x_0_xzz_xxyyyz, g_y_0_x_0_xzz_xxyyzz, g_y_0_x_0_xzz_xxyzzz, g_y_0_x_0_xzz_xxzzzz, g_y_0_x_0_xzz_xyyyyy, g_y_0_x_0_xzz_xyyyyz, g_y_0_x_0_xzz_xyyyzz, g_y_0_x_0_xzz_xyyzzz, g_y_0_x_0_xzz_xyzzzz, g_y_0_x_0_xzz_xzzzzz, g_y_0_x_0_xzz_yyyyyy, g_y_0_x_0_xzz_yyyyyz, g_y_0_x_0_xzz_yyyyzz, g_y_0_x_0_xzz_yyyzzz, g_y_0_x_0_xzz_yyzzzz, g_y_0_x_0_xzz_yzzzzz, g_y_0_x_0_xzz_zzzzzz, g_y_0_x_0_zz_xxxxxx, g_y_0_x_0_zz_xxxxxxx, g_y_0_x_0_zz_xxxxxxy, g_y_0_x_0_zz_xxxxxxz, g_y_0_x_0_zz_xxxxxy, g_y_0_x_0_zz_xxxxxyy, g_y_0_x_0_zz_xxxxxyz, g_y_0_x_0_zz_xxxxxz, g_y_0_x_0_zz_xxxxxzz, g_y_0_x_0_zz_xxxxyy, g_y_0_x_0_zz_xxxxyyy, g_y_0_x_0_zz_xxxxyyz, g_y_0_x_0_zz_xxxxyz, g_y_0_x_0_zz_xxxxyzz, g_y_0_x_0_zz_xxxxzz, g_y_0_x_0_zz_xxxxzzz, g_y_0_x_0_zz_xxxyyy, g_y_0_x_0_zz_xxxyyyy, g_y_0_x_0_zz_xxxyyyz, g_y_0_x_0_zz_xxxyyz, g_y_0_x_0_zz_xxxyyzz, g_y_0_x_0_zz_xxxyzz, g_y_0_x_0_zz_xxxyzzz, g_y_0_x_0_zz_xxxzzz, g_y_0_x_0_zz_xxxzzzz, g_y_0_x_0_zz_xxyyyy, g_y_0_x_0_zz_xxyyyyy, g_y_0_x_0_zz_xxyyyyz, g_y_0_x_0_zz_xxyyyz, g_y_0_x_0_zz_xxyyyzz, g_y_0_x_0_zz_xxyyzz, g_y_0_x_0_zz_xxyyzzz, g_y_0_x_0_zz_xxyzzz, g_y_0_x_0_zz_xxyzzzz, g_y_0_x_0_zz_xxzzzz, g_y_0_x_0_zz_xxzzzzz, g_y_0_x_0_zz_xyyyyy, g_y_0_x_0_zz_xyyyyyy, g_y_0_x_0_zz_xyyyyyz, g_y_0_x_0_zz_xyyyyz, g_y_0_x_0_zz_xyyyyzz, g_y_0_x_0_zz_xyyyzz, g_y_0_x_0_zz_xyyyzzz, g_y_0_x_0_zz_xyyzzz, g_y_0_x_0_zz_xyyzzzz, g_y_0_x_0_zz_xyzzzz, g_y_0_x_0_zz_xyzzzzz, g_y_0_x_0_zz_xzzzzz, g_y_0_x_0_zz_xzzzzzz, g_y_0_x_0_zz_yyyyyy, g_y_0_x_0_zz_yyyyyz, g_y_0_x_0_zz_yyyyzz, g_y_0_x_0_zz_yyyzzz, g_y_0_x_0_zz_yyzzzz, g_y_0_x_0_zz_yzzzzz, g_y_0_x_0_zz_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_y_0_x_0_xzz_xxxxxx[k] = -g_y_0_x_0_zz_xxxxxx[k] * ab_x + g_y_0_x_0_zz_xxxxxxx[k];

                g_y_0_x_0_xzz_xxxxxy[k] = -g_y_0_x_0_zz_xxxxxy[k] * ab_x + g_y_0_x_0_zz_xxxxxxy[k];

                g_y_0_x_0_xzz_xxxxxz[k] = -g_y_0_x_0_zz_xxxxxz[k] * ab_x + g_y_0_x_0_zz_xxxxxxz[k];

                g_y_0_x_0_xzz_xxxxyy[k] = -g_y_0_x_0_zz_xxxxyy[k] * ab_x + g_y_0_x_0_zz_xxxxxyy[k];

                g_y_0_x_0_xzz_xxxxyz[k] = -g_y_0_x_0_zz_xxxxyz[k] * ab_x + g_y_0_x_0_zz_xxxxxyz[k];

                g_y_0_x_0_xzz_xxxxzz[k] = -g_y_0_x_0_zz_xxxxzz[k] * ab_x + g_y_0_x_0_zz_xxxxxzz[k];

                g_y_0_x_0_xzz_xxxyyy[k] = -g_y_0_x_0_zz_xxxyyy[k] * ab_x + g_y_0_x_0_zz_xxxxyyy[k];

                g_y_0_x_0_xzz_xxxyyz[k] = -g_y_0_x_0_zz_xxxyyz[k] * ab_x + g_y_0_x_0_zz_xxxxyyz[k];

                g_y_0_x_0_xzz_xxxyzz[k] = -g_y_0_x_0_zz_xxxyzz[k] * ab_x + g_y_0_x_0_zz_xxxxyzz[k];

                g_y_0_x_0_xzz_xxxzzz[k] = -g_y_0_x_0_zz_xxxzzz[k] * ab_x + g_y_0_x_0_zz_xxxxzzz[k];

                g_y_0_x_0_xzz_xxyyyy[k] = -g_y_0_x_0_zz_xxyyyy[k] * ab_x + g_y_0_x_0_zz_xxxyyyy[k];

                g_y_0_x_0_xzz_xxyyyz[k] = -g_y_0_x_0_zz_xxyyyz[k] * ab_x + g_y_0_x_0_zz_xxxyyyz[k];

                g_y_0_x_0_xzz_xxyyzz[k] = -g_y_0_x_0_zz_xxyyzz[k] * ab_x + g_y_0_x_0_zz_xxxyyzz[k];

                g_y_0_x_0_xzz_xxyzzz[k] = -g_y_0_x_0_zz_xxyzzz[k] * ab_x + g_y_0_x_0_zz_xxxyzzz[k];

                g_y_0_x_0_xzz_xxzzzz[k] = -g_y_0_x_0_zz_xxzzzz[k] * ab_x + g_y_0_x_0_zz_xxxzzzz[k];

                g_y_0_x_0_xzz_xyyyyy[k] = -g_y_0_x_0_zz_xyyyyy[k] * ab_x + g_y_0_x_0_zz_xxyyyyy[k];

                g_y_0_x_0_xzz_xyyyyz[k] = -g_y_0_x_0_zz_xyyyyz[k] * ab_x + g_y_0_x_0_zz_xxyyyyz[k];

                g_y_0_x_0_xzz_xyyyzz[k] = -g_y_0_x_0_zz_xyyyzz[k] * ab_x + g_y_0_x_0_zz_xxyyyzz[k];

                g_y_0_x_0_xzz_xyyzzz[k] = -g_y_0_x_0_zz_xyyzzz[k] * ab_x + g_y_0_x_0_zz_xxyyzzz[k];

                g_y_0_x_0_xzz_xyzzzz[k] = -g_y_0_x_0_zz_xyzzzz[k] * ab_x + g_y_0_x_0_zz_xxyzzzz[k];

                g_y_0_x_0_xzz_xzzzzz[k] = -g_y_0_x_0_zz_xzzzzz[k] * ab_x + g_y_0_x_0_zz_xxzzzzz[k];

                g_y_0_x_0_xzz_yyyyyy[k] = -g_y_0_x_0_zz_yyyyyy[k] * ab_x + g_y_0_x_0_zz_xyyyyyy[k];

                g_y_0_x_0_xzz_yyyyyz[k] = -g_y_0_x_0_zz_yyyyyz[k] * ab_x + g_y_0_x_0_zz_xyyyyyz[k];

                g_y_0_x_0_xzz_yyyyzz[k] = -g_y_0_x_0_zz_yyyyzz[k] * ab_x + g_y_0_x_0_zz_xyyyyzz[k];

                g_y_0_x_0_xzz_yyyzzz[k] = -g_y_0_x_0_zz_yyyzzz[k] * ab_x + g_y_0_x_0_zz_xyyyzzz[k];

                g_y_0_x_0_xzz_yyzzzz[k] = -g_y_0_x_0_zz_yyzzzz[k] * ab_x + g_y_0_x_0_zz_xyyzzzz[k];

                g_y_0_x_0_xzz_yzzzzz[k] = -g_y_0_x_0_zz_yzzzzz[k] * ab_x + g_y_0_x_0_zz_xyzzzzz[k];

                g_y_0_x_0_xzz_zzzzzz[k] = -g_y_0_x_0_zz_zzzzzz[k] * ab_x + g_y_0_x_0_zz_xzzzzzz[k];
            }

            /// Set up 1008-1036 components of targeted buffer : cbuffer.data(

            auto g_y_0_x_0_yyy_xxxxxx = cbuffer.data(fi_geom_1010_off + 1008 * ccomps * dcomps);

            auto g_y_0_x_0_yyy_xxxxxy = cbuffer.data(fi_geom_1010_off + 1009 * ccomps * dcomps);

            auto g_y_0_x_0_yyy_xxxxxz = cbuffer.data(fi_geom_1010_off + 1010 * ccomps * dcomps);

            auto g_y_0_x_0_yyy_xxxxyy = cbuffer.data(fi_geom_1010_off + 1011 * ccomps * dcomps);

            auto g_y_0_x_0_yyy_xxxxyz = cbuffer.data(fi_geom_1010_off + 1012 * ccomps * dcomps);

            auto g_y_0_x_0_yyy_xxxxzz = cbuffer.data(fi_geom_1010_off + 1013 * ccomps * dcomps);

            auto g_y_0_x_0_yyy_xxxyyy = cbuffer.data(fi_geom_1010_off + 1014 * ccomps * dcomps);

            auto g_y_0_x_0_yyy_xxxyyz = cbuffer.data(fi_geom_1010_off + 1015 * ccomps * dcomps);

            auto g_y_0_x_0_yyy_xxxyzz = cbuffer.data(fi_geom_1010_off + 1016 * ccomps * dcomps);

            auto g_y_0_x_0_yyy_xxxzzz = cbuffer.data(fi_geom_1010_off + 1017 * ccomps * dcomps);

            auto g_y_0_x_0_yyy_xxyyyy = cbuffer.data(fi_geom_1010_off + 1018 * ccomps * dcomps);

            auto g_y_0_x_0_yyy_xxyyyz = cbuffer.data(fi_geom_1010_off + 1019 * ccomps * dcomps);

            auto g_y_0_x_0_yyy_xxyyzz = cbuffer.data(fi_geom_1010_off + 1020 * ccomps * dcomps);

            auto g_y_0_x_0_yyy_xxyzzz = cbuffer.data(fi_geom_1010_off + 1021 * ccomps * dcomps);

            auto g_y_0_x_0_yyy_xxzzzz = cbuffer.data(fi_geom_1010_off + 1022 * ccomps * dcomps);

            auto g_y_0_x_0_yyy_xyyyyy = cbuffer.data(fi_geom_1010_off + 1023 * ccomps * dcomps);

            auto g_y_0_x_0_yyy_xyyyyz = cbuffer.data(fi_geom_1010_off + 1024 * ccomps * dcomps);

            auto g_y_0_x_0_yyy_xyyyzz = cbuffer.data(fi_geom_1010_off + 1025 * ccomps * dcomps);

            auto g_y_0_x_0_yyy_xyyzzz = cbuffer.data(fi_geom_1010_off + 1026 * ccomps * dcomps);

            auto g_y_0_x_0_yyy_xyzzzz = cbuffer.data(fi_geom_1010_off + 1027 * ccomps * dcomps);

            auto g_y_0_x_0_yyy_xzzzzz = cbuffer.data(fi_geom_1010_off + 1028 * ccomps * dcomps);

            auto g_y_0_x_0_yyy_yyyyyy = cbuffer.data(fi_geom_1010_off + 1029 * ccomps * dcomps);

            auto g_y_0_x_0_yyy_yyyyyz = cbuffer.data(fi_geom_1010_off + 1030 * ccomps * dcomps);

            auto g_y_0_x_0_yyy_yyyyzz = cbuffer.data(fi_geom_1010_off + 1031 * ccomps * dcomps);

            auto g_y_0_x_0_yyy_yyyzzz = cbuffer.data(fi_geom_1010_off + 1032 * ccomps * dcomps);

            auto g_y_0_x_0_yyy_yyzzzz = cbuffer.data(fi_geom_1010_off + 1033 * ccomps * dcomps);

            auto g_y_0_x_0_yyy_yzzzzz = cbuffer.data(fi_geom_1010_off + 1034 * ccomps * dcomps);

            auto g_y_0_x_0_yyy_zzzzzz = cbuffer.data(fi_geom_1010_off + 1035 * ccomps * dcomps);

            #pragma omp simd aligned(g_0_0_x_0_yy_xxxxxx, g_0_0_x_0_yy_xxxxxy, g_0_0_x_0_yy_xxxxxz, g_0_0_x_0_yy_xxxxyy, g_0_0_x_0_yy_xxxxyz, g_0_0_x_0_yy_xxxxzz, g_0_0_x_0_yy_xxxyyy, g_0_0_x_0_yy_xxxyyz, g_0_0_x_0_yy_xxxyzz, g_0_0_x_0_yy_xxxzzz, g_0_0_x_0_yy_xxyyyy, g_0_0_x_0_yy_xxyyyz, g_0_0_x_0_yy_xxyyzz, g_0_0_x_0_yy_xxyzzz, g_0_0_x_0_yy_xxzzzz, g_0_0_x_0_yy_xyyyyy, g_0_0_x_0_yy_xyyyyz, g_0_0_x_0_yy_xyyyzz, g_0_0_x_0_yy_xyyzzz, g_0_0_x_0_yy_xyzzzz, g_0_0_x_0_yy_xzzzzz, g_0_0_x_0_yy_yyyyyy, g_0_0_x_0_yy_yyyyyz, g_0_0_x_0_yy_yyyyzz, g_0_0_x_0_yy_yyyzzz, g_0_0_x_0_yy_yyzzzz, g_0_0_x_0_yy_yzzzzz, g_0_0_x_0_yy_zzzzzz, g_y_0_x_0_yy_xxxxxx, g_y_0_x_0_yy_xxxxxxy, g_y_0_x_0_yy_xxxxxy, g_y_0_x_0_yy_xxxxxyy, g_y_0_x_0_yy_xxxxxyz, g_y_0_x_0_yy_xxxxxz, g_y_0_x_0_yy_xxxxyy, g_y_0_x_0_yy_xxxxyyy, g_y_0_x_0_yy_xxxxyyz, g_y_0_x_0_yy_xxxxyz, g_y_0_x_0_yy_xxxxyzz, g_y_0_x_0_yy_xxxxzz, g_y_0_x_0_yy_xxxyyy, g_y_0_x_0_yy_xxxyyyy, g_y_0_x_0_yy_xxxyyyz, g_y_0_x_0_yy_xxxyyz, g_y_0_x_0_yy_xxxyyzz, g_y_0_x_0_yy_xxxyzz, g_y_0_x_0_yy_xxxyzzz, g_y_0_x_0_yy_xxxzzz, g_y_0_x_0_yy_xxyyyy, g_y_0_x_0_yy_xxyyyyy, g_y_0_x_0_yy_xxyyyyz, g_y_0_x_0_yy_xxyyyz, g_y_0_x_0_yy_xxyyyzz, g_y_0_x_0_yy_xxyyzz, g_y_0_x_0_yy_xxyyzzz, g_y_0_x_0_yy_xxyzzz, g_y_0_x_0_yy_xxyzzzz, g_y_0_x_0_yy_xxzzzz, g_y_0_x_0_yy_xyyyyy, g_y_0_x_0_yy_xyyyyyy, g_y_0_x_0_yy_xyyyyyz, g_y_0_x_0_yy_xyyyyz, g_y_0_x_0_yy_xyyyyzz, g_y_0_x_0_yy_xyyyzz, g_y_0_x_0_yy_xyyyzzz, g_y_0_x_0_yy_xyyzzz, g_y_0_x_0_yy_xyyzzzz, g_y_0_x_0_yy_xyzzzz, g_y_0_x_0_yy_xyzzzzz, g_y_0_x_0_yy_xzzzzz, g_y_0_x_0_yy_yyyyyy, g_y_0_x_0_yy_yyyyyyy, g_y_0_x_0_yy_yyyyyyz, g_y_0_x_0_yy_yyyyyz, g_y_0_x_0_yy_yyyyyzz, g_y_0_x_0_yy_yyyyzz, g_y_0_x_0_yy_yyyyzzz, g_y_0_x_0_yy_yyyzzz, g_y_0_x_0_yy_yyyzzzz, g_y_0_x_0_yy_yyzzzz, g_y_0_x_0_yy_yyzzzzz, g_y_0_x_0_yy_yzzzzz, g_y_0_x_0_yy_yzzzzzz, g_y_0_x_0_yy_zzzzzz, g_y_0_x_0_yyy_xxxxxx, g_y_0_x_0_yyy_xxxxxy, g_y_0_x_0_yyy_xxxxxz, g_y_0_x_0_yyy_xxxxyy, g_y_0_x_0_yyy_xxxxyz, g_y_0_x_0_yyy_xxxxzz, g_y_0_x_0_yyy_xxxyyy, g_y_0_x_0_yyy_xxxyyz, g_y_0_x_0_yyy_xxxyzz, g_y_0_x_0_yyy_xxxzzz, g_y_0_x_0_yyy_xxyyyy, g_y_0_x_0_yyy_xxyyyz, g_y_0_x_0_yyy_xxyyzz, g_y_0_x_0_yyy_xxyzzz, g_y_0_x_0_yyy_xxzzzz, g_y_0_x_0_yyy_xyyyyy, g_y_0_x_0_yyy_xyyyyz, g_y_0_x_0_yyy_xyyyzz, g_y_0_x_0_yyy_xyyzzz, g_y_0_x_0_yyy_xyzzzz, g_y_0_x_0_yyy_xzzzzz, g_y_0_x_0_yyy_yyyyyy, g_y_0_x_0_yyy_yyyyyz, g_y_0_x_0_yyy_yyyyzz, g_y_0_x_0_yyy_yyyzzz, g_y_0_x_0_yyy_yyzzzz, g_y_0_x_0_yyy_yzzzzz, g_y_0_x_0_yyy_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_y_0_x_0_yyy_xxxxxx[k] = -g_0_0_x_0_yy_xxxxxx[k] - g_y_0_x_0_yy_xxxxxx[k] * ab_y + g_y_0_x_0_yy_xxxxxxy[k];

                g_y_0_x_0_yyy_xxxxxy[k] = -g_0_0_x_0_yy_xxxxxy[k] - g_y_0_x_0_yy_xxxxxy[k] * ab_y + g_y_0_x_0_yy_xxxxxyy[k];

                g_y_0_x_0_yyy_xxxxxz[k] = -g_0_0_x_0_yy_xxxxxz[k] - g_y_0_x_0_yy_xxxxxz[k] * ab_y + g_y_0_x_0_yy_xxxxxyz[k];

                g_y_0_x_0_yyy_xxxxyy[k] = -g_0_0_x_0_yy_xxxxyy[k] - g_y_0_x_0_yy_xxxxyy[k] * ab_y + g_y_0_x_0_yy_xxxxyyy[k];

                g_y_0_x_0_yyy_xxxxyz[k] = -g_0_0_x_0_yy_xxxxyz[k] - g_y_0_x_0_yy_xxxxyz[k] * ab_y + g_y_0_x_0_yy_xxxxyyz[k];

                g_y_0_x_0_yyy_xxxxzz[k] = -g_0_0_x_0_yy_xxxxzz[k] - g_y_0_x_0_yy_xxxxzz[k] * ab_y + g_y_0_x_0_yy_xxxxyzz[k];

                g_y_0_x_0_yyy_xxxyyy[k] = -g_0_0_x_0_yy_xxxyyy[k] - g_y_0_x_0_yy_xxxyyy[k] * ab_y + g_y_0_x_0_yy_xxxyyyy[k];

                g_y_0_x_0_yyy_xxxyyz[k] = -g_0_0_x_0_yy_xxxyyz[k] - g_y_0_x_0_yy_xxxyyz[k] * ab_y + g_y_0_x_0_yy_xxxyyyz[k];

                g_y_0_x_0_yyy_xxxyzz[k] = -g_0_0_x_0_yy_xxxyzz[k] - g_y_0_x_0_yy_xxxyzz[k] * ab_y + g_y_0_x_0_yy_xxxyyzz[k];

                g_y_0_x_0_yyy_xxxzzz[k] = -g_0_0_x_0_yy_xxxzzz[k] - g_y_0_x_0_yy_xxxzzz[k] * ab_y + g_y_0_x_0_yy_xxxyzzz[k];

                g_y_0_x_0_yyy_xxyyyy[k] = -g_0_0_x_0_yy_xxyyyy[k] - g_y_0_x_0_yy_xxyyyy[k] * ab_y + g_y_0_x_0_yy_xxyyyyy[k];

                g_y_0_x_0_yyy_xxyyyz[k] = -g_0_0_x_0_yy_xxyyyz[k] - g_y_0_x_0_yy_xxyyyz[k] * ab_y + g_y_0_x_0_yy_xxyyyyz[k];

                g_y_0_x_0_yyy_xxyyzz[k] = -g_0_0_x_0_yy_xxyyzz[k] - g_y_0_x_0_yy_xxyyzz[k] * ab_y + g_y_0_x_0_yy_xxyyyzz[k];

                g_y_0_x_0_yyy_xxyzzz[k] = -g_0_0_x_0_yy_xxyzzz[k] - g_y_0_x_0_yy_xxyzzz[k] * ab_y + g_y_0_x_0_yy_xxyyzzz[k];

                g_y_0_x_0_yyy_xxzzzz[k] = -g_0_0_x_0_yy_xxzzzz[k] - g_y_0_x_0_yy_xxzzzz[k] * ab_y + g_y_0_x_0_yy_xxyzzzz[k];

                g_y_0_x_0_yyy_xyyyyy[k] = -g_0_0_x_0_yy_xyyyyy[k] - g_y_0_x_0_yy_xyyyyy[k] * ab_y + g_y_0_x_0_yy_xyyyyyy[k];

                g_y_0_x_0_yyy_xyyyyz[k] = -g_0_0_x_0_yy_xyyyyz[k] - g_y_0_x_0_yy_xyyyyz[k] * ab_y + g_y_0_x_0_yy_xyyyyyz[k];

                g_y_0_x_0_yyy_xyyyzz[k] = -g_0_0_x_0_yy_xyyyzz[k] - g_y_0_x_0_yy_xyyyzz[k] * ab_y + g_y_0_x_0_yy_xyyyyzz[k];

                g_y_0_x_0_yyy_xyyzzz[k] = -g_0_0_x_0_yy_xyyzzz[k] - g_y_0_x_0_yy_xyyzzz[k] * ab_y + g_y_0_x_0_yy_xyyyzzz[k];

                g_y_0_x_0_yyy_xyzzzz[k] = -g_0_0_x_0_yy_xyzzzz[k] - g_y_0_x_0_yy_xyzzzz[k] * ab_y + g_y_0_x_0_yy_xyyzzzz[k];

                g_y_0_x_0_yyy_xzzzzz[k] = -g_0_0_x_0_yy_xzzzzz[k] - g_y_0_x_0_yy_xzzzzz[k] * ab_y + g_y_0_x_0_yy_xyzzzzz[k];

                g_y_0_x_0_yyy_yyyyyy[k] = -g_0_0_x_0_yy_yyyyyy[k] - g_y_0_x_0_yy_yyyyyy[k] * ab_y + g_y_0_x_0_yy_yyyyyyy[k];

                g_y_0_x_0_yyy_yyyyyz[k] = -g_0_0_x_0_yy_yyyyyz[k] - g_y_0_x_0_yy_yyyyyz[k] * ab_y + g_y_0_x_0_yy_yyyyyyz[k];

                g_y_0_x_0_yyy_yyyyzz[k] = -g_0_0_x_0_yy_yyyyzz[k] - g_y_0_x_0_yy_yyyyzz[k] * ab_y + g_y_0_x_0_yy_yyyyyzz[k];

                g_y_0_x_0_yyy_yyyzzz[k] = -g_0_0_x_0_yy_yyyzzz[k] - g_y_0_x_0_yy_yyyzzz[k] * ab_y + g_y_0_x_0_yy_yyyyzzz[k];

                g_y_0_x_0_yyy_yyzzzz[k] = -g_0_0_x_0_yy_yyzzzz[k] - g_y_0_x_0_yy_yyzzzz[k] * ab_y + g_y_0_x_0_yy_yyyzzzz[k];

                g_y_0_x_0_yyy_yzzzzz[k] = -g_0_0_x_0_yy_yzzzzz[k] - g_y_0_x_0_yy_yzzzzz[k] * ab_y + g_y_0_x_0_yy_yyzzzzz[k];

                g_y_0_x_0_yyy_zzzzzz[k] = -g_0_0_x_0_yy_zzzzzz[k] - g_y_0_x_0_yy_zzzzzz[k] * ab_y + g_y_0_x_0_yy_yzzzzzz[k];
            }

            /// Set up 1036-1064 components of targeted buffer : cbuffer.data(

            auto g_y_0_x_0_yyz_xxxxxx = cbuffer.data(fi_geom_1010_off + 1036 * ccomps * dcomps);

            auto g_y_0_x_0_yyz_xxxxxy = cbuffer.data(fi_geom_1010_off + 1037 * ccomps * dcomps);

            auto g_y_0_x_0_yyz_xxxxxz = cbuffer.data(fi_geom_1010_off + 1038 * ccomps * dcomps);

            auto g_y_0_x_0_yyz_xxxxyy = cbuffer.data(fi_geom_1010_off + 1039 * ccomps * dcomps);

            auto g_y_0_x_0_yyz_xxxxyz = cbuffer.data(fi_geom_1010_off + 1040 * ccomps * dcomps);

            auto g_y_0_x_0_yyz_xxxxzz = cbuffer.data(fi_geom_1010_off + 1041 * ccomps * dcomps);

            auto g_y_0_x_0_yyz_xxxyyy = cbuffer.data(fi_geom_1010_off + 1042 * ccomps * dcomps);

            auto g_y_0_x_0_yyz_xxxyyz = cbuffer.data(fi_geom_1010_off + 1043 * ccomps * dcomps);

            auto g_y_0_x_0_yyz_xxxyzz = cbuffer.data(fi_geom_1010_off + 1044 * ccomps * dcomps);

            auto g_y_0_x_0_yyz_xxxzzz = cbuffer.data(fi_geom_1010_off + 1045 * ccomps * dcomps);

            auto g_y_0_x_0_yyz_xxyyyy = cbuffer.data(fi_geom_1010_off + 1046 * ccomps * dcomps);

            auto g_y_0_x_0_yyz_xxyyyz = cbuffer.data(fi_geom_1010_off + 1047 * ccomps * dcomps);

            auto g_y_0_x_0_yyz_xxyyzz = cbuffer.data(fi_geom_1010_off + 1048 * ccomps * dcomps);

            auto g_y_0_x_0_yyz_xxyzzz = cbuffer.data(fi_geom_1010_off + 1049 * ccomps * dcomps);

            auto g_y_0_x_0_yyz_xxzzzz = cbuffer.data(fi_geom_1010_off + 1050 * ccomps * dcomps);

            auto g_y_0_x_0_yyz_xyyyyy = cbuffer.data(fi_geom_1010_off + 1051 * ccomps * dcomps);

            auto g_y_0_x_0_yyz_xyyyyz = cbuffer.data(fi_geom_1010_off + 1052 * ccomps * dcomps);

            auto g_y_0_x_0_yyz_xyyyzz = cbuffer.data(fi_geom_1010_off + 1053 * ccomps * dcomps);

            auto g_y_0_x_0_yyz_xyyzzz = cbuffer.data(fi_geom_1010_off + 1054 * ccomps * dcomps);

            auto g_y_0_x_0_yyz_xyzzzz = cbuffer.data(fi_geom_1010_off + 1055 * ccomps * dcomps);

            auto g_y_0_x_0_yyz_xzzzzz = cbuffer.data(fi_geom_1010_off + 1056 * ccomps * dcomps);

            auto g_y_0_x_0_yyz_yyyyyy = cbuffer.data(fi_geom_1010_off + 1057 * ccomps * dcomps);

            auto g_y_0_x_0_yyz_yyyyyz = cbuffer.data(fi_geom_1010_off + 1058 * ccomps * dcomps);

            auto g_y_0_x_0_yyz_yyyyzz = cbuffer.data(fi_geom_1010_off + 1059 * ccomps * dcomps);

            auto g_y_0_x_0_yyz_yyyzzz = cbuffer.data(fi_geom_1010_off + 1060 * ccomps * dcomps);

            auto g_y_0_x_0_yyz_yyzzzz = cbuffer.data(fi_geom_1010_off + 1061 * ccomps * dcomps);

            auto g_y_0_x_0_yyz_yzzzzz = cbuffer.data(fi_geom_1010_off + 1062 * ccomps * dcomps);

            auto g_y_0_x_0_yyz_zzzzzz = cbuffer.data(fi_geom_1010_off + 1063 * ccomps * dcomps);

            #pragma omp simd aligned(g_y_0_x_0_yy_xxxxxx, g_y_0_x_0_yy_xxxxxxz, g_y_0_x_0_yy_xxxxxy, g_y_0_x_0_yy_xxxxxyz, g_y_0_x_0_yy_xxxxxz, g_y_0_x_0_yy_xxxxxzz, g_y_0_x_0_yy_xxxxyy, g_y_0_x_0_yy_xxxxyyz, g_y_0_x_0_yy_xxxxyz, g_y_0_x_0_yy_xxxxyzz, g_y_0_x_0_yy_xxxxzz, g_y_0_x_0_yy_xxxxzzz, g_y_0_x_0_yy_xxxyyy, g_y_0_x_0_yy_xxxyyyz, g_y_0_x_0_yy_xxxyyz, g_y_0_x_0_yy_xxxyyzz, g_y_0_x_0_yy_xxxyzz, g_y_0_x_0_yy_xxxyzzz, g_y_0_x_0_yy_xxxzzz, g_y_0_x_0_yy_xxxzzzz, g_y_0_x_0_yy_xxyyyy, g_y_0_x_0_yy_xxyyyyz, g_y_0_x_0_yy_xxyyyz, g_y_0_x_0_yy_xxyyyzz, g_y_0_x_0_yy_xxyyzz, g_y_0_x_0_yy_xxyyzzz, g_y_0_x_0_yy_xxyzzz, g_y_0_x_0_yy_xxyzzzz, g_y_0_x_0_yy_xxzzzz, g_y_0_x_0_yy_xxzzzzz, g_y_0_x_0_yy_xyyyyy, g_y_0_x_0_yy_xyyyyyz, g_y_0_x_0_yy_xyyyyz, g_y_0_x_0_yy_xyyyyzz, g_y_0_x_0_yy_xyyyzz, g_y_0_x_0_yy_xyyyzzz, g_y_0_x_0_yy_xyyzzz, g_y_0_x_0_yy_xyyzzzz, g_y_0_x_0_yy_xyzzzz, g_y_0_x_0_yy_xyzzzzz, g_y_0_x_0_yy_xzzzzz, g_y_0_x_0_yy_xzzzzzz, g_y_0_x_0_yy_yyyyyy, g_y_0_x_0_yy_yyyyyyz, g_y_0_x_0_yy_yyyyyz, g_y_0_x_0_yy_yyyyyzz, g_y_0_x_0_yy_yyyyzz, g_y_0_x_0_yy_yyyyzzz, g_y_0_x_0_yy_yyyzzz, g_y_0_x_0_yy_yyyzzzz, g_y_0_x_0_yy_yyzzzz, g_y_0_x_0_yy_yyzzzzz, g_y_0_x_0_yy_yzzzzz, g_y_0_x_0_yy_yzzzzzz, g_y_0_x_0_yy_zzzzzz, g_y_0_x_0_yy_zzzzzzz, g_y_0_x_0_yyz_xxxxxx, g_y_0_x_0_yyz_xxxxxy, g_y_0_x_0_yyz_xxxxxz, g_y_0_x_0_yyz_xxxxyy, g_y_0_x_0_yyz_xxxxyz, g_y_0_x_0_yyz_xxxxzz, g_y_0_x_0_yyz_xxxyyy, g_y_0_x_0_yyz_xxxyyz, g_y_0_x_0_yyz_xxxyzz, g_y_0_x_0_yyz_xxxzzz, g_y_0_x_0_yyz_xxyyyy, g_y_0_x_0_yyz_xxyyyz, g_y_0_x_0_yyz_xxyyzz, g_y_0_x_0_yyz_xxyzzz, g_y_0_x_0_yyz_xxzzzz, g_y_0_x_0_yyz_xyyyyy, g_y_0_x_0_yyz_xyyyyz, g_y_0_x_0_yyz_xyyyzz, g_y_0_x_0_yyz_xyyzzz, g_y_0_x_0_yyz_xyzzzz, g_y_0_x_0_yyz_xzzzzz, g_y_0_x_0_yyz_yyyyyy, g_y_0_x_0_yyz_yyyyyz, g_y_0_x_0_yyz_yyyyzz, g_y_0_x_0_yyz_yyyzzz, g_y_0_x_0_yyz_yyzzzz, g_y_0_x_0_yyz_yzzzzz, g_y_0_x_0_yyz_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_y_0_x_0_yyz_xxxxxx[k] = -g_y_0_x_0_yy_xxxxxx[k] * ab_z + g_y_0_x_0_yy_xxxxxxz[k];

                g_y_0_x_0_yyz_xxxxxy[k] = -g_y_0_x_0_yy_xxxxxy[k] * ab_z + g_y_0_x_0_yy_xxxxxyz[k];

                g_y_0_x_0_yyz_xxxxxz[k] = -g_y_0_x_0_yy_xxxxxz[k] * ab_z + g_y_0_x_0_yy_xxxxxzz[k];

                g_y_0_x_0_yyz_xxxxyy[k] = -g_y_0_x_0_yy_xxxxyy[k] * ab_z + g_y_0_x_0_yy_xxxxyyz[k];

                g_y_0_x_0_yyz_xxxxyz[k] = -g_y_0_x_0_yy_xxxxyz[k] * ab_z + g_y_0_x_0_yy_xxxxyzz[k];

                g_y_0_x_0_yyz_xxxxzz[k] = -g_y_0_x_0_yy_xxxxzz[k] * ab_z + g_y_0_x_0_yy_xxxxzzz[k];

                g_y_0_x_0_yyz_xxxyyy[k] = -g_y_0_x_0_yy_xxxyyy[k] * ab_z + g_y_0_x_0_yy_xxxyyyz[k];

                g_y_0_x_0_yyz_xxxyyz[k] = -g_y_0_x_0_yy_xxxyyz[k] * ab_z + g_y_0_x_0_yy_xxxyyzz[k];

                g_y_0_x_0_yyz_xxxyzz[k] = -g_y_0_x_0_yy_xxxyzz[k] * ab_z + g_y_0_x_0_yy_xxxyzzz[k];

                g_y_0_x_0_yyz_xxxzzz[k] = -g_y_0_x_0_yy_xxxzzz[k] * ab_z + g_y_0_x_0_yy_xxxzzzz[k];

                g_y_0_x_0_yyz_xxyyyy[k] = -g_y_0_x_0_yy_xxyyyy[k] * ab_z + g_y_0_x_0_yy_xxyyyyz[k];

                g_y_0_x_0_yyz_xxyyyz[k] = -g_y_0_x_0_yy_xxyyyz[k] * ab_z + g_y_0_x_0_yy_xxyyyzz[k];

                g_y_0_x_0_yyz_xxyyzz[k] = -g_y_0_x_0_yy_xxyyzz[k] * ab_z + g_y_0_x_0_yy_xxyyzzz[k];

                g_y_0_x_0_yyz_xxyzzz[k] = -g_y_0_x_0_yy_xxyzzz[k] * ab_z + g_y_0_x_0_yy_xxyzzzz[k];

                g_y_0_x_0_yyz_xxzzzz[k] = -g_y_0_x_0_yy_xxzzzz[k] * ab_z + g_y_0_x_0_yy_xxzzzzz[k];

                g_y_0_x_0_yyz_xyyyyy[k] = -g_y_0_x_0_yy_xyyyyy[k] * ab_z + g_y_0_x_0_yy_xyyyyyz[k];

                g_y_0_x_0_yyz_xyyyyz[k] = -g_y_0_x_0_yy_xyyyyz[k] * ab_z + g_y_0_x_0_yy_xyyyyzz[k];

                g_y_0_x_0_yyz_xyyyzz[k] = -g_y_0_x_0_yy_xyyyzz[k] * ab_z + g_y_0_x_0_yy_xyyyzzz[k];

                g_y_0_x_0_yyz_xyyzzz[k] = -g_y_0_x_0_yy_xyyzzz[k] * ab_z + g_y_0_x_0_yy_xyyzzzz[k];

                g_y_0_x_0_yyz_xyzzzz[k] = -g_y_0_x_0_yy_xyzzzz[k] * ab_z + g_y_0_x_0_yy_xyzzzzz[k];

                g_y_0_x_0_yyz_xzzzzz[k] = -g_y_0_x_0_yy_xzzzzz[k] * ab_z + g_y_0_x_0_yy_xzzzzzz[k];

                g_y_0_x_0_yyz_yyyyyy[k] = -g_y_0_x_0_yy_yyyyyy[k] * ab_z + g_y_0_x_0_yy_yyyyyyz[k];

                g_y_0_x_0_yyz_yyyyyz[k] = -g_y_0_x_0_yy_yyyyyz[k] * ab_z + g_y_0_x_0_yy_yyyyyzz[k];

                g_y_0_x_0_yyz_yyyyzz[k] = -g_y_0_x_0_yy_yyyyzz[k] * ab_z + g_y_0_x_0_yy_yyyyzzz[k];

                g_y_0_x_0_yyz_yyyzzz[k] = -g_y_0_x_0_yy_yyyzzz[k] * ab_z + g_y_0_x_0_yy_yyyzzzz[k];

                g_y_0_x_0_yyz_yyzzzz[k] = -g_y_0_x_0_yy_yyzzzz[k] * ab_z + g_y_0_x_0_yy_yyzzzzz[k];

                g_y_0_x_0_yyz_yzzzzz[k] = -g_y_0_x_0_yy_yzzzzz[k] * ab_z + g_y_0_x_0_yy_yzzzzzz[k];

                g_y_0_x_0_yyz_zzzzzz[k] = -g_y_0_x_0_yy_zzzzzz[k] * ab_z + g_y_0_x_0_yy_zzzzzzz[k];
            }

            /// Set up 1064-1092 components of targeted buffer : cbuffer.data(

            auto g_y_0_x_0_yzz_xxxxxx = cbuffer.data(fi_geom_1010_off + 1064 * ccomps * dcomps);

            auto g_y_0_x_0_yzz_xxxxxy = cbuffer.data(fi_geom_1010_off + 1065 * ccomps * dcomps);

            auto g_y_0_x_0_yzz_xxxxxz = cbuffer.data(fi_geom_1010_off + 1066 * ccomps * dcomps);

            auto g_y_0_x_0_yzz_xxxxyy = cbuffer.data(fi_geom_1010_off + 1067 * ccomps * dcomps);

            auto g_y_0_x_0_yzz_xxxxyz = cbuffer.data(fi_geom_1010_off + 1068 * ccomps * dcomps);

            auto g_y_0_x_0_yzz_xxxxzz = cbuffer.data(fi_geom_1010_off + 1069 * ccomps * dcomps);

            auto g_y_0_x_0_yzz_xxxyyy = cbuffer.data(fi_geom_1010_off + 1070 * ccomps * dcomps);

            auto g_y_0_x_0_yzz_xxxyyz = cbuffer.data(fi_geom_1010_off + 1071 * ccomps * dcomps);

            auto g_y_0_x_0_yzz_xxxyzz = cbuffer.data(fi_geom_1010_off + 1072 * ccomps * dcomps);

            auto g_y_0_x_0_yzz_xxxzzz = cbuffer.data(fi_geom_1010_off + 1073 * ccomps * dcomps);

            auto g_y_0_x_0_yzz_xxyyyy = cbuffer.data(fi_geom_1010_off + 1074 * ccomps * dcomps);

            auto g_y_0_x_0_yzz_xxyyyz = cbuffer.data(fi_geom_1010_off + 1075 * ccomps * dcomps);

            auto g_y_0_x_0_yzz_xxyyzz = cbuffer.data(fi_geom_1010_off + 1076 * ccomps * dcomps);

            auto g_y_0_x_0_yzz_xxyzzz = cbuffer.data(fi_geom_1010_off + 1077 * ccomps * dcomps);

            auto g_y_0_x_0_yzz_xxzzzz = cbuffer.data(fi_geom_1010_off + 1078 * ccomps * dcomps);

            auto g_y_0_x_0_yzz_xyyyyy = cbuffer.data(fi_geom_1010_off + 1079 * ccomps * dcomps);

            auto g_y_0_x_0_yzz_xyyyyz = cbuffer.data(fi_geom_1010_off + 1080 * ccomps * dcomps);

            auto g_y_0_x_0_yzz_xyyyzz = cbuffer.data(fi_geom_1010_off + 1081 * ccomps * dcomps);

            auto g_y_0_x_0_yzz_xyyzzz = cbuffer.data(fi_geom_1010_off + 1082 * ccomps * dcomps);

            auto g_y_0_x_0_yzz_xyzzzz = cbuffer.data(fi_geom_1010_off + 1083 * ccomps * dcomps);

            auto g_y_0_x_0_yzz_xzzzzz = cbuffer.data(fi_geom_1010_off + 1084 * ccomps * dcomps);

            auto g_y_0_x_0_yzz_yyyyyy = cbuffer.data(fi_geom_1010_off + 1085 * ccomps * dcomps);

            auto g_y_0_x_0_yzz_yyyyyz = cbuffer.data(fi_geom_1010_off + 1086 * ccomps * dcomps);

            auto g_y_0_x_0_yzz_yyyyzz = cbuffer.data(fi_geom_1010_off + 1087 * ccomps * dcomps);

            auto g_y_0_x_0_yzz_yyyzzz = cbuffer.data(fi_geom_1010_off + 1088 * ccomps * dcomps);

            auto g_y_0_x_0_yzz_yyzzzz = cbuffer.data(fi_geom_1010_off + 1089 * ccomps * dcomps);

            auto g_y_0_x_0_yzz_yzzzzz = cbuffer.data(fi_geom_1010_off + 1090 * ccomps * dcomps);

            auto g_y_0_x_0_yzz_zzzzzz = cbuffer.data(fi_geom_1010_off + 1091 * ccomps * dcomps);

            #pragma omp simd aligned(g_y_0_x_0_yz_xxxxxx, g_y_0_x_0_yz_xxxxxxz, g_y_0_x_0_yz_xxxxxy, g_y_0_x_0_yz_xxxxxyz, g_y_0_x_0_yz_xxxxxz, g_y_0_x_0_yz_xxxxxzz, g_y_0_x_0_yz_xxxxyy, g_y_0_x_0_yz_xxxxyyz, g_y_0_x_0_yz_xxxxyz, g_y_0_x_0_yz_xxxxyzz, g_y_0_x_0_yz_xxxxzz, g_y_0_x_0_yz_xxxxzzz, g_y_0_x_0_yz_xxxyyy, g_y_0_x_0_yz_xxxyyyz, g_y_0_x_0_yz_xxxyyz, g_y_0_x_0_yz_xxxyyzz, g_y_0_x_0_yz_xxxyzz, g_y_0_x_0_yz_xxxyzzz, g_y_0_x_0_yz_xxxzzz, g_y_0_x_0_yz_xxxzzzz, g_y_0_x_0_yz_xxyyyy, g_y_0_x_0_yz_xxyyyyz, g_y_0_x_0_yz_xxyyyz, g_y_0_x_0_yz_xxyyyzz, g_y_0_x_0_yz_xxyyzz, g_y_0_x_0_yz_xxyyzzz, g_y_0_x_0_yz_xxyzzz, g_y_0_x_0_yz_xxyzzzz, g_y_0_x_0_yz_xxzzzz, g_y_0_x_0_yz_xxzzzzz, g_y_0_x_0_yz_xyyyyy, g_y_0_x_0_yz_xyyyyyz, g_y_0_x_0_yz_xyyyyz, g_y_0_x_0_yz_xyyyyzz, g_y_0_x_0_yz_xyyyzz, g_y_0_x_0_yz_xyyyzzz, g_y_0_x_0_yz_xyyzzz, g_y_0_x_0_yz_xyyzzzz, g_y_0_x_0_yz_xyzzzz, g_y_0_x_0_yz_xyzzzzz, g_y_0_x_0_yz_xzzzzz, g_y_0_x_0_yz_xzzzzzz, g_y_0_x_0_yz_yyyyyy, g_y_0_x_0_yz_yyyyyyz, g_y_0_x_0_yz_yyyyyz, g_y_0_x_0_yz_yyyyyzz, g_y_0_x_0_yz_yyyyzz, g_y_0_x_0_yz_yyyyzzz, g_y_0_x_0_yz_yyyzzz, g_y_0_x_0_yz_yyyzzzz, g_y_0_x_0_yz_yyzzzz, g_y_0_x_0_yz_yyzzzzz, g_y_0_x_0_yz_yzzzzz, g_y_0_x_0_yz_yzzzzzz, g_y_0_x_0_yz_zzzzzz, g_y_0_x_0_yz_zzzzzzz, g_y_0_x_0_yzz_xxxxxx, g_y_0_x_0_yzz_xxxxxy, g_y_0_x_0_yzz_xxxxxz, g_y_0_x_0_yzz_xxxxyy, g_y_0_x_0_yzz_xxxxyz, g_y_0_x_0_yzz_xxxxzz, g_y_0_x_0_yzz_xxxyyy, g_y_0_x_0_yzz_xxxyyz, g_y_0_x_0_yzz_xxxyzz, g_y_0_x_0_yzz_xxxzzz, g_y_0_x_0_yzz_xxyyyy, g_y_0_x_0_yzz_xxyyyz, g_y_0_x_0_yzz_xxyyzz, g_y_0_x_0_yzz_xxyzzz, g_y_0_x_0_yzz_xxzzzz, g_y_0_x_0_yzz_xyyyyy, g_y_0_x_0_yzz_xyyyyz, g_y_0_x_0_yzz_xyyyzz, g_y_0_x_0_yzz_xyyzzz, g_y_0_x_0_yzz_xyzzzz, g_y_0_x_0_yzz_xzzzzz, g_y_0_x_0_yzz_yyyyyy, g_y_0_x_0_yzz_yyyyyz, g_y_0_x_0_yzz_yyyyzz, g_y_0_x_0_yzz_yyyzzz, g_y_0_x_0_yzz_yyzzzz, g_y_0_x_0_yzz_yzzzzz, g_y_0_x_0_yzz_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_y_0_x_0_yzz_xxxxxx[k] = -g_y_0_x_0_yz_xxxxxx[k] * ab_z + g_y_0_x_0_yz_xxxxxxz[k];

                g_y_0_x_0_yzz_xxxxxy[k] = -g_y_0_x_0_yz_xxxxxy[k] * ab_z + g_y_0_x_0_yz_xxxxxyz[k];

                g_y_0_x_0_yzz_xxxxxz[k] = -g_y_0_x_0_yz_xxxxxz[k] * ab_z + g_y_0_x_0_yz_xxxxxzz[k];

                g_y_0_x_0_yzz_xxxxyy[k] = -g_y_0_x_0_yz_xxxxyy[k] * ab_z + g_y_0_x_0_yz_xxxxyyz[k];

                g_y_0_x_0_yzz_xxxxyz[k] = -g_y_0_x_0_yz_xxxxyz[k] * ab_z + g_y_0_x_0_yz_xxxxyzz[k];

                g_y_0_x_0_yzz_xxxxzz[k] = -g_y_0_x_0_yz_xxxxzz[k] * ab_z + g_y_0_x_0_yz_xxxxzzz[k];

                g_y_0_x_0_yzz_xxxyyy[k] = -g_y_0_x_0_yz_xxxyyy[k] * ab_z + g_y_0_x_0_yz_xxxyyyz[k];

                g_y_0_x_0_yzz_xxxyyz[k] = -g_y_0_x_0_yz_xxxyyz[k] * ab_z + g_y_0_x_0_yz_xxxyyzz[k];

                g_y_0_x_0_yzz_xxxyzz[k] = -g_y_0_x_0_yz_xxxyzz[k] * ab_z + g_y_0_x_0_yz_xxxyzzz[k];

                g_y_0_x_0_yzz_xxxzzz[k] = -g_y_0_x_0_yz_xxxzzz[k] * ab_z + g_y_0_x_0_yz_xxxzzzz[k];

                g_y_0_x_0_yzz_xxyyyy[k] = -g_y_0_x_0_yz_xxyyyy[k] * ab_z + g_y_0_x_0_yz_xxyyyyz[k];

                g_y_0_x_0_yzz_xxyyyz[k] = -g_y_0_x_0_yz_xxyyyz[k] * ab_z + g_y_0_x_0_yz_xxyyyzz[k];

                g_y_0_x_0_yzz_xxyyzz[k] = -g_y_0_x_0_yz_xxyyzz[k] * ab_z + g_y_0_x_0_yz_xxyyzzz[k];

                g_y_0_x_0_yzz_xxyzzz[k] = -g_y_0_x_0_yz_xxyzzz[k] * ab_z + g_y_0_x_0_yz_xxyzzzz[k];

                g_y_0_x_0_yzz_xxzzzz[k] = -g_y_0_x_0_yz_xxzzzz[k] * ab_z + g_y_0_x_0_yz_xxzzzzz[k];

                g_y_0_x_0_yzz_xyyyyy[k] = -g_y_0_x_0_yz_xyyyyy[k] * ab_z + g_y_0_x_0_yz_xyyyyyz[k];

                g_y_0_x_0_yzz_xyyyyz[k] = -g_y_0_x_0_yz_xyyyyz[k] * ab_z + g_y_0_x_0_yz_xyyyyzz[k];

                g_y_0_x_0_yzz_xyyyzz[k] = -g_y_0_x_0_yz_xyyyzz[k] * ab_z + g_y_0_x_0_yz_xyyyzzz[k];

                g_y_0_x_0_yzz_xyyzzz[k] = -g_y_0_x_0_yz_xyyzzz[k] * ab_z + g_y_0_x_0_yz_xyyzzzz[k];

                g_y_0_x_0_yzz_xyzzzz[k] = -g_y_0_x_0_yz_xyzzzz[k] * ab_z + g_y_0_x_0_yz_xyzzzzz[k];

                g_y_0_x_0_yzz_xzzzzz[k] = -g_y_0_x_0_yz_xzzzzz[k] * ab_z + g_y_0_x_0_yz_xzzzzzz[k];

                g_y_0_x_0_yzz_yyyyyy[k] = -g_y_0_x_0_yz_yyyyyy[k] * ab_z + g_y_0_x_0_yz_yyyyyyz[k];

                g_y_0_x_0_yzz_yyyyyz[k] = -g_y_0_x_0_yz_yyyyyz[k] * ab_z + g_y_0_x_0_yz_yyyyyzz[k];

                g_y_0_x_0_yzz_yyyyzz[k] = -g_y_0_x_0_yz_yyyyzz[k] * ab_z + g_y_0_x_0_yz_yyyyzzz[k];

                g_y_0_x_0_yzz_yyyzzz[k] = -g_y_0_x_0_yz_yyyzzz[k] * ab_z + g_y_0_x_0_yz_yyyzzzz[k];

                g_y_0_x_0_yzz_yyzzzz[k] = -g_y_0_x_0_yz_yyzzzz[k] * ab_z + g_y_0_x_0_yz_yyzzzzz[k];

                g_y_0_x_0_yzz_yzzzzz[k] = -g_y_0_x_0_yz_yzzzzz[k] * ab_z + g_y_0_x_0_yz_yzzzzzz[k];

                g_y_0_x_0_yzz_zzzzzz[k] = -g_y_0_x_0_yz_zzzzzz[k] * ab_z + g_y_0_x_0_yz_zzzzzzz[k];
            }

            /// Set up 1092-1120 components of targeted buffer : cbuffer.data(

            auto g_y_0_x_0_zzz_xxxxxx = cbuffer.data(fi_geom_1010_off + 1092 * ccomps * dcomps);

            auto g_y_0_x_0_zzz_xxxxxy = cbuffer.data(fi_geom_1010_off + 1093 * ccomps * dcomps);

            auto g_y_0_x_0_zzz_xxxxxz = cbuffer.data(fi_geom_1010_off + 1094 * ccomps * dcomps);

            auto g_y_0_x_0_zzz_xxxxyy = cbuffer.data(fi_geom_1010_off + 1095 * ccomps * dcomps);

            auto g_y_0_x_0_zzz_xxxxyz = cbuffer.data(fi_geom_1010_off + 1096 * ccomps * dcomps);

            auto g_y_0_x_0_zzz_xxxxzz = cbuffer.data(fi_geom_1010_off + 1097 * ccomps * dcomps);

            auto g_y_0_x_0_zzz_xxxyyy = cbuffer.data(fi_geom_1010_off + 1098 * ccomps * dcomps);

            auto g_y_0_x_0_zzz_xxxyyz = cbuffer.data(fi_geom_1010_off + 1099 * ccomps * dcomps);

            auto g_y_0_x_0_zzz_xxxyzz = cbuffer.data(fi_geom_1010_off + 1100 * ccomps * dcomps);

            auto g_y_0_x_0_zzz_xxxzzz = cbuffer.data(fi_geom_1010_off + 1101 * ccomps * dcomps);

            auto g_y_0_x_0_zzz_xxyyyy = cbuffer.data(fi_geom_1010_off + 1102 * ccomps * dcomps);

            auto g_y_0_x_0_zzz_xxyyyz = cbuffer.data(fi_geom_1010_off + 1103 * ccomps * dcomps);

            auto g_y_0_x_0_zzz_xxyyzz = cbuffer.data(fi_geom_1010_off + 1104 * ccomps * dcomps);

            auto g_y_0_x_0_zzz_xxyzzz = cbuffer.data(fi_geom_1010_off + 1105 * ccomps * dcomps);

            auto g_y_0_x_0_zzz_xxzzzz = cbuffer.data(fi_geom_1010_off + 1106 * ccomps * dcomps);

            auto g_y_0_x_0_zzz_xyyyyy = cbuffer.data(fi_geom_1010_off + 1107 * ccomps * dcomps);

            auto g_y_0_x_0_zzz_xyyyyz = cbuffer.data(fi_geom_1010_off + 1108 * ccomps * dcomps);

            auto g_y_0_x_0_zzz_xyyyzz = cbuffer.data(fi_geom_1010_off + 1109 * ccomps * dcomps);

            auto g_y_0_x_0_zzz_xyyzzz = cbuffer.data(fi_geom_1010_off + 1110 * ccomps * dcomps);

            auto g_y_0_x_0_zzz_xyzzzz = cbuffer.data(fi_geom_1010_off + 1111 * ccomps * dcomps);

            auto g_y_0_x_0_zzz_xzzzzz = cbuffer.data(fi_geom_1010_off + 1112 * ccomps * dcomps);

            auto g_y_0_x_0_zzz_yyyyyy = cbuffer.data(fi_geom_1010_off + 1113 * ccomps * dcomps);

            auto g_y_0_x_0_zzz_yyyyyz = cbuffer.data(fi_geom_1010_off + 1114 * ccomps * dcomps);

            auto g_y_0_x_0_zzz_yyyyzz = cbuffer.data(fi_geom_1010_off + 1115 * ccomps * dcomps);

            auto g_y_0_x_0_zzz_yyyzzz = cbuffer.data(fi_geom_1010_off + 1116 * ccomps * dcomps);

            auto g_y_0_x_0_zzz_yyzzzz = cbuffer.data(fi_geom_1010_off + 1117 * ccomps * dcomps);

            auto g_y_0_x_0_zzz_yzzzzz = cbuffer.data(fi_geom_1010_off + 1118 * ccomps * dcomps);

            auto g_y_0_x_0_zzz_zzzzzz = cbuffer.data(fi_geom_1010_off + 1119 * ccomps * dcomps);

            #pragma omp simd aligned(g_y_0_x_0_zz_xxxxxx, g_y_0_x_0_zz_xxxxxxz, g_y_0_x_0_zz_xxxxxy, g_y_0_x_0_zz_xxxxxyz, g_y_0_x_0_zz_xxxxxz, g_y_0_x_0_zz_xxxxxzz, g_y_0_x_0_zz_xxxxyy, g_y_0_x_0_zz_xxxxyyz, g_y_0_x_0_zz_xxxxyz, g_y_0_x_0_zz_xxxxyzz, g_y_0_x_0_zz_xxxxzz, g_y_0_x_0_zz_xxxxzzz, g_y_0_x_0_zz_xxxyyy, g_y_0_x_0_zz_xxxyyyz, g_y_0_x_0_zz_xxxyyz, g_y_0_x_0_zz_xxxyyzz, g_y_0_x_0_zz_xxxyzz, g_y_0_x_0_zz_xxxyzzz, g_y_0_x_0_zz_xxxzzz, g_y_0_x_0_zz_xxxzzzz, g_y_0_x_0_zz_xxyyyy, g_y_0_x_0_zz_xxyyyyz, g_y_0_x_0_zz_xxyyyz, g_y_0_x_0_zz_xxyyyzz, g_y_0_x_0_zz_xxyyzz, g_y_0_x_0_zz_xxyyzzz, g_y_0_x_0_zz_xxyzzz, g_y_0_x_0_zz_xxyzzzz, g_y_0_x_0_zz_xxzzzz, g_y_0_x_0_zz_xxzzzzz, g_y_0_x_0_zz_xyyyyy, g_y_0_x_0_zz_xyyyyyz, g_y_0_x_0_zz_xyyyyz, g_y_0_x_0_zz_xyyyyzz, g_y_0_x_0_zz_xyyyzz, g_y_0_x_0_zz_xyyyzzz, g_y_0_x_0_zz_xyyzzz, g_y_0_x_0_zz_xyyzzzz, g_y_0_x_0_zz_xyzzzz, g_y_0_x_0_zz_xyzzzzz, g_y_0_x_0_zz_xzzzzz, g_y_0_x_0_zz_xzzzzzz, g_y_0_x_0_zz_yyyyyy, g_y_0_x_0_zz_yyyyyyz, g_y_0_x_0_zz_yyyyyz, g_y_0_x_0_zz_yyyyyzz, g_y_0_x_0_zz_yyyyzz, g_y_0_x_0_zz_yyyyzzz, g_y_0_x_0_zz_yyyzzz, g_y_0_x_0_zz_yyyzzzz, g_y_0_x_0_zz_yyzzzz, g_y_0_x_0_zz_yyzzzzz, g_y_0_x_0_zz_yzzzzz, g_y_0_x_0_zz_yzzzzzz, g_y_0_x_0_zz_zzzzzz, g_y_0_x_0_zz_zzzzzzz, g_y_0_x_0_zzz_xxxxxx, g_y_0_x_0_zzz_xxxxxy, g_y_0_x_0_zzz_xxxxxz, g_y_0_x_0_zzz_xxxxyy, g_y_0_x_0_zzz_xxxxyz, g_y_0_x_0_zzz_xxxxzz, g_y_0_x_0_zzz_xxxyyy, g_y_0_x_0_zzz_xxxyyz, g_y_0_x_0_zzz_xxxyzz, g_y_0_x_0_zzz_xxxzzz, g_y_0_x_0_zzz_xxyyyy, g_y_0_x_0_zzz_xxyyyz, g_y_0_x_0_zzz_xxyyzz, g_y_0_x_0_zzz_xxyzzz, g_y_0_x_0_zzz_xxzzzz, g_y_0_x_0_zzz_xyyyyy, g_y_0_x_0_zzz_xyyyyz, g_y_0_x_0_zzz_xyyyzz, g_y_0_x_0_zzz_xyyzzz, g_y_0_x_0_zzz_xyzzzz, g_y_0_x_0_zzz_xzzzzz, g_y_0_x_0_zzz_yyyyyy, g_y_0_x_0_zzz_yyyyyz, g_y_0_x_0_zzz_yyyyzz, g_y_0_x_0_zzz_yyyzzz, g_y_0_x_0_zzz_yyzzzz, g_y_0_x_0_zzz_yzzzzz, g_y_0_x_0_zzz_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_y_0_x_0_zzz_xxxxxx[k] = -g_y_0_x_0_zz_xxxxxx[k] * ab_z + g_y_0_x_0_zz_xxxxxxz[k];

                g_y_0_x_0_zzz_xxxxxy[k] = -g_y_0_x_0_zz_xxxxxy[k] * ab_z + g_y_0_x_0_zz_xxxxxyz[k];

                g_y_0_x_0_zzz_xxxxxz[k] = -g_y_0_x_0_zz_xxxxxz[k] * ab_z + g_y_0_x_0_zz_xxxxxzz[k];

                g_y_0_x_0_zzz_xxxxyy[k] = -g_y_0_x_0_zz_xxxxyy[k] * ab_z + g_y_0_x_0_zz_xxxxyyz[k];

                g_y_0_x_0_zzz_xxxxyz[k] = -g_y_0_x_0_zz_xxxxyz[k] * ab_z + g_y_0_x_0_zz_xxxxyzz[k];

                g_y_0_x_0_zzz_xxxxzz[k] = -g_y_0_x_0_zz_xxxxzz[k] * ab_z + g_y_0_x_0_zz_xxxxzzz[k];

                g_y_0_x_0_zzz_xxxyyy[k] = -g_y_0_x_0_zz_xxxyyy[k] * ab_z + g_y_0_x_0_zz_xxxyyyz[k];

                g_y_0_x_0_zzz_xxxyyz[k] = -g_y_0_x_0_zz_xxxyyz[k] * ab_z + g_y_0_x_0_zz_xxxyyzz[k];

                g_y_0_x_0_zzz_xxxyzz[k] = -g_y_0_x_0_zz_xxxyzz[k] * ab_z + g_y_0_x_0_zz_xxxyzzz[k];

                g_y_0_x_0_zzz_xxxzzz[k] = -g_y_0_x_0_zz_xxxzzz[k] * ab_z + g_y_0_x_0_zz_xxxzzzz[k];

                g_y_0_x_0_zzz_xxyyyy[k] = -g_y_0_x_0_zz_xxyyyy[k] * ab_z + g_y_0_x_0_zz_xxyyyyz[k];

                g_y_0_x_0_zzz_xxyyyz[k] = -g_y_0_x_0_zz_xxyyyz[k] * ab_z + g_y_0_x_0_zz_xxyyyzz[k];

                g_y_0_x_0_zzz_xxyyzz[k] = -g_y_0_x_0_zz_xxyyzz[k] * ab_z + g_y_0_x_0_zz_xxyyzzz[k];

                g_y_0_x_0_zzz_xxyzzz[k] = -g_y_0_x_0_zz_xxyzzz[k] * ab_z + g_y_0_x_0_zz_xxyzzzz[k];

                g_y_0_x_0_zzz_xxzzzz[k] = -g_y_0_x_0_zz_xxzzzz[k] * ab_z + g_y_0_x_0_zz_xxzzzzz[k];

                g_y_0_x_0_zzz_xyyyyy[k] = -g_y_0_x_0_zz_xyyyyy[k] * ab_z + g_y_0_x_0_zz_xyyyyyz[k];

                g_y_0_x_0_zzz_xyyyyz[k] = -g_y_0_x_0_zz_xyyyyz[k] * ab_z + g_y_0_x_0_zz_xyyyyzz[k];

                g_y_0_x_0_zzz_xyyyzz[k] = -g_y_0_x_0_zz_xyyyzz[k] * ab_z + g_y_0_x_0_zz_xyyyzzz[k];

                g_y_0_x_0_zzz_xyyzzz[k] = -g_y_0_x_0_zz_xyyzzz[k] * ab_z + g_y_0_x_0_zz_xyyzzzz[k];

                g_y_0_x_0_zzz_xyzzzz[k] = -g_y_0_x_0_zz_xyzzzz[k] * ab_z + g_y_0_x_0_zz_xyzzzzz[k];

                g_y_0_x_0_zzz_xzzzzz[k] = -g_y_0_x_0_zz_xzzzzz[k] * ab_z + g_y_0_x_0_zz_xzzzzzz[k];

                g_y_0_x_0_zzz_yyyyyy[k] = -g_y_0_x_0_zz_yyyyyy[k] * ab_z + g_y_0_x_0_zz_yyyyyyz[k];

                g_y_0_x_0_zzz_yyyyyz[k] = -g_y_0_x_0_zz_yyyyyz[k] * ab_z + g_y_0_x_0_zz_yyyyyzz[k];

                g_y_0_x_0_zzz_yyyyzz[k] = -g_y_0_x_0_zz_yyyyzz[k] * ab_z + g_y_0_x_0_zz_yyyyzzz[k];

                g_y_0_x_0_zzz_yyyzzz[k] = -g_y_0_x_0_zz_yyyzzz[k] * ab_z + g_y_0_x_0_zz_yyyzzzz[k];

                g_y_0_x_0_zzz_yyzzzz[k] = -g_y_0_x_0_zz_yyzzzz[k] * ab_z + g_y_0_x_0_zz_yyzzzzz[k];

                g_y_0_x_0_zzz_yzzzzz[k] = -g_y_0_x_0_zz_yzzzzz[k] * ab_z + g_y_0_x_0_zz_yzzzzzz[k];

                g_y_0_x_0_zzz_zzzzzz[k] = -g_y_0_x_0_zz_zzzzzz[k] * ab_z + g_y_0_x_0_zz_zzzzzzz[k];
            }

            /// Set up 1120-1148 components of targeted buffer : cbuffer.data(

            auto g_y_0_y_0_xxx_xxxxxx = cbuffer.data(fi_geom_1010_off + 1120 * ccomps * dcomps);

            auto g_y_0_y_0_xxx_xxxxxy = cbuffer.data(fi_geom_1010_off + 1121 * ccomps * dcomps);

            auto g_y_0_y_0_xxx_xxxxxz = cbuffer.data(fi_geom_1010_off + 1122 * ccomps * dcomps);

            auto g_y_0_y_0_xxx_xxxxyy = cbuffer.data(fi_geom_1010_off + 1123 * ccomps * dcomps);

            auto g_y_0_y_0_xxx_xxxxyz = cbuffer.data(fi_geom_1010_off + 1124 * ccomps * dcomps);

            auto g_y_0_y_0_xxx_xxxxzz = cbuffer.data(fi_geom_1010_off + 1125 * ccomps * dcomps);

            auto g_y_0_y_0_xxx_xxxyyy = cbuffer.data(fi_geom_1010_off + 1126 * ccomps * dcomps);

            auto g_y_0_y_0_xxx_xxxyyz = cbuffer.data(fi_geom_1010_off + 1127 * ccomps * dcomps);

            auto g_y_0_y_0_xxx_xxxyzz = cbuffer.data(fi_geom_1010_off + 1128 * ccomps * dcomps);

            auto g_y_0_y_0_xxx_xxxzzz = cbuffer.data(fi_geom_1010_off + 1129 * ccomps * dcomps);

            auto g_y_0_y_0_xxx_xxyyyy = cbuffer.data(fi_geom_1010_off + 1130 * ccomps * dcomps);

            auto g_y_0_y_0_xxx_xxyyyz = cbuffer.data(fi_geom_1010_off + 1131 * ccomps * dcomps);

            auto g_y_0_y_0_xxx_xxyyzz = cbuffer.data(fi_geom_1010_off + 1132 * ccomps * dcomps);

            auto g_y_0_y_0_xxx_xxyzzz = cbuffer.data(fi_geom_1010_off + 1133 * ccomps * dcomps);

            auto g_y_0_y_0_xxx_xxzzzz = cbuffer.data(fi_geom_1010_off + 1134 * ccomps * dcomps);

            auto g_y_0_y_0_xxx_xyyyyy = cbuffer.data(fi_geom_1010_off + 1135 * ccomps * dcomps);

            auto g_y_0_y_0_xxx_xyyyyz = cbuffer.data(fi_geom_1010_off + 1136 * ccomps * dcomps);

            auto g_y_0_y_0_xxx_xyyyzz = cbuffer.data(fi_geom_1010_off + 1137 * ccomps * dcomps);

            auto g_y_0_y_0_xxx_xyyzzz = cbuffer.data(fi_geom_1010_off + 1138 * ccomps * dcomps);

            auto g_y_0_y_0_xxx_xyzzzz = cbuffer.data(fi_geom_1010_off + 1139 * ccomps * dcomps);

            auto g_y_0_y_0_xxx_xzzzzz = cbuffer.data(fi_geom_1010_off + 1140 * ccomps * dcomps);

            auto g_y_0_y_0_xxx_yyyyyy = cbuffer.data(fi_geom_1010_off + 1141 * ccomps * dcomps);

            auto g_y_0_y_0_xxx_yyyyyz = cbuffer.data(fi_geom_1010_off + 1142 * ccomps * dcomps);

            auto g_y_0_y_0_xxx_yyyyzz = cbuffer.data(fi_geom_1010_off + 1143 * ccomps * dcomps);

            auto g_y_0_y_0_xxx_yyyzzz = cbuffer.data(fi_geom_1010_off + 1144 * ccomps * dcomps);

            auto g_y_0_y_0_xxx_yyzzzz = cbuffer.data(fi_geom_1010_off + 1145 * ccomps * dcomps);

            auto g_y_0_y_0_xxx_yzzzzz = cbuffer.data(fi_geom_1010_off + 1146 * ccomps * dcomps);

            auto g_y_0_y_0_xxx_zzzzzz = cbuffer.data(fi_geom_1010_off + 1147 * ccomps * dcomps);

            #pragma omp simd aligned(g_y_0_y_0_xx_xxxxxx, g_y_0_y_0_xx_xxxxxxx, g_y_0_y_0_xx_xxxxxxy, g_y_0_y_0_xx_xxxxxxz, g_y_0_y_0_xx_xxxxxy, g_y_0_y_0_xx_xxxxxyy, g_y_0_y_0_xx_xxxxxyz, g_y_0_y_0_xx_xxxxxz, g_y_0_y_0_xx_xxxxxzz, g_y_0_y_0_xx_xxxxyy, g_y_0_y_0_xx_xxxxyyy, g_y_0_y_0_xx_xxxxyyz, g_y_0_y_0_xx_xxxxyz, g_y_0_y_0_xx_xxxxyzz, g_y_0_y_0_xx_xxxxzz, g_y_0_y_0_xx_xxxxzzz, g_y_0_y_0_xx_xxxyyy, g_y_0_y_0_xx_xxxyyyy, g_y_0_y_0_xx_xxxyyyz, g_y_0_y_0_xx_xxxyyz, g_y_0_y_0_xx_xxxyyzz, g_y_0_y_0_xx_xxxyzz, g_y_0_y_0_xx_xxxyzzz, g_y_0_y_0_xx_xxxzzz, g_y_0_y_0_xx_xxxzzzz, g_y_0_y_0_xx_xxyyyy, g_y_0_y_0_xx_xxyyyyy, g_y_0_y_0_xx_xxyyyyz, g_y_0_y_0_xx_xxyyyz, g_y_0_y_0_xx_xxyyyzz, g_y_0_y_0_xx_xxyyzz, g_y_0_y_0_xx_xxyyzzz, g_y_0_y_0_xx_xxyzzz, g_y_0_y_0_xx_xxyzzzz, g_y_0_y_0_xx_xxzzzz, g_y_0_y_0_xx_xxzzzzz, g_y_0_y_0_xx_xyyyyy, g_y_0_y_0_xx_xyyyyyy, g_y_0_y_0_xx_xyyyyyz, g_y_0_y_0_xx_xyyyyz, g_y_0_y_0_xx_xyyyyzz, g_y_0_y_0_xx_xyyyzz, g_y_0_y_0_xx_xyyyzzz, g_y_0_y_0_xx_xyyzzz, g_y_0_y_0_xx_xyyzzzz, g_y_0_y_0_xx_xyzzzz, g_y_0_y_0_xx_xyzzzzz, g_y_0_y_0_xx_xzzzzz, g_y_0_y_0_xx_xzzzzzz, g_y_0_y_0_xx_yyyyyy, g_y_0_y_0_xx_yyyyyz, g_y_0_y_0_xx_yyyyzz, g_y_0_y_0_xx_yyyzzz, g_y_0_y_0_xx_yyzzzz, g_y_0_y_0_xx_yzzzzz, g_y_0_y_0_xx_zzzzzz, g_y_0_y_0_xxx_xxxxxx, g_y_0_y_0_xxx_xxxxxy, g_y_0_y_0_xxx_xxxxxz, g_y_0_y_0_xxx_xxxxyy, g_y_0_y_0_xxx_xxxxyz, g_y_0_y_0_xxx_xxxxzz, g_y_0_y_0_xxx_xxxyyy, g_y_0_y_0_xxx_xxxyyz, g_y_0_y_0_xxx_xxxyzz, g_y_0_y_0_xxx_xxxzzz, g_y_0_y_0_xxx_xxyyyy, g_y_0_y_0_xxx_xxyyyz, g_y_0_y_0_xxx_xxyyzz, g_y_0_y_0_xxx_xxyzzz, g_y_0_y_0_xxx_xxzzzz, g_y_0_y_0_xxx_xyyyyy, g_y_0_y_0_xxx_xyyyyz, g_y_0_y_0_xxx_xyyyzz, g_y_0_y_0_xxx_xyyzzz, g_y_0_y_0_xxx_xyzzzz, g_y_0_y_0_xxx_xzzzzz, g_y_0_y_0_xxx_yyyyyy, g_y_0_y_0_xxx_yyyyyz, g_y_0_y_0_xxx_yyyyzz, g_y_0_y_0_xxx_yyyzzz, g_y_0_y_0_xxx_yyzzzz, g_y_0_y_0_xxx_yzzzzz, g_y_0_y_0_xxx_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_y_0_y_0_xxx_xxxxxx[k] = -g_y_0_y_0_xx_xxxxxx[k] * ab_x + g_y_0_y_0_xx_xxxxxxx[k];

                g_y_0_y_0_xxx_xxxxxy[k] = -g_y_0_y_0_xx_xxxxxy[k] * ab_x + g_y_0_y_0_xx_xxxxxxy[k];

                g_y_0_y_0_xxx_xxxxxz[k] = -g_y_0_y_0_xx_xxxxxz[k] * ab_x + g_y_0_y_0_xx_xxxxxxz[k];

                g_y_0_y_0_xxx_xxxxyy[k] = -g_y_0_y_0_xx_xxxxyy[k] * ab_x + g_y_0_y_0_xx_xxxxxyy[k];

                g_y_0_y_0_xxx_xxxxyz[k] = -g_y_0_y_0_xx_xxxxyz[k] * ab_x + g_y_0_y_0_xx_xxxxxyz[k];

                g_y_0_y_0_xxx_xxxxzz[k] = -g_y_0_y_0_xx_xxxxzz[k] * ab_x + g_y_0_y_0_xx_xxxxxzz[k];

                g_y_0_y_0_xxx_xxxyyy[k] = -g_y_0_y_0_xx_xxxyyy[k] * ab_x + g_y_0_y_0_xx_xxxxyyy[k];

                g_y_0_y_0_xxx_xxxyyz[k] = -g_y_0_y_0_xx_xxxyyz[k] * ab_x + g_y_0_y_0_xx_xxxxyyz[k];

                g_y_0_y_0_xxx_xxxyzz[k] = -g_y_0_y_0_xx_xxxyzz[k] * ab_x + g_y_0_y_0_xx_xxxxyzz[k];

                g_y_0_y_0_xxx_xxxzzz[k] = -g_y_0_y_0_xx_xxxzzz[k] * ab_x + g_y_0_y_0_xx_xxxxzzz[k];

                g_y_0_y_0_xxx_xxyyyy[k] = -g_y_0_y_0_xx_xxyyyy[k] * ab_x + g_y_0_y_0_xx_xxxyyyy[k];

                g_y_0_y_0_xxx_xxyyyz[k] = -g_y_0_y_0_xx_xxyyyz[k] * ab_x + g_y_0_y_0_xx_xxxyyyz[k];

                g_y_0_y_0_xxx_xxyyzz[k] = -g_y_0_y_0_xx_xxyyzz[k] * ab_x + g_y_0_y_0_xx_xxxyyzz[k];

                g_y_0_y_0_xxx_xxyzzz[k] = -g_y_0_y_0_xx_xxyzzz[k] * ab_x + g_y_0_y_0_xx_xxxyzzz[k];

                g_y_0_y_0_xxx_xxzzzz[k] = -g_y_0_y_0_xx_xxzzzz[k] * ab_x + g_y_0_y_0_xx_xxxzzzz[k];

                g_y_0_y_0_xxx_xyyyyy[k] = -g_y_0_y_0_xx_xyyyyy[k] * ab_x + g_y_0_y_0_xx_xxyyyyy[k];

                g_y_0_y_0_xxx_xyyyyz[k] = -g_y_0_y_0_xx_xyyyyz[k] * ab_x + g_y_0_y_0_xx_xxyyyyz[k];

                g_y_0_y_0_xxx_xyyyzz[k] = -g_y_0_y_0_xx_xyyyzz[k] * ab_x + g_y_0_y_0_xx_xxyyyzz[k];

                g_y_0_y_0_xxx_xyyzzz[k] = -g_y_0_y_0_xx_xyyzzz[k] * ab_x + g_y_0_y_0_xx_xxyyzzz[k];

                g_y_0_y_0_xxx_xyzzzz[k] = -g_y_0_y_0_xx_xyzzzz[k] * ab_x + g_y_0_y_0_xx_xxyzzzz[k];

                g_y_0_y_0_xxx_xzzzzz[k] = -g_y_0_y_0_xx_xzzzzz[k] * ab_x + g_y_0_y_0_xx_xxzzzzz[k];

                g_y_0_y_0_xxx_yyyyyy[k] = -g_y_0_y_0_xx_yyyyyy[k] * ab_x + g_y_0_y_0_xx_xyyyyyy[k];

                g_y_0_y_0_xxx_yyyyyz[k] = -g_y_0_y_0_xx_yyyyyz[k] * ab_x + g_y_0_y_0_xx_xyyyyyz[k];

                g_y_0_y_0_xxx_yyyyzz[k] = -g_y_0_y_0_xx_yyyyzz[k] * ab_x + g_y_0_y_0_xx_xyyyyzz[k];

                g_y_0_y_0_xxx_yyyzzz[k] = -g_y_0_y_0_xx_yyyzzz[k] * ab_x + g_y_0_y_0_xx_xyyyzzz[k];

                g_y_0_y_0_xxx_yyzzzz[k] = -g_y_0_y_0_xx_yyzzzz[k] * ab_x + g_y_0_y_0_xx_xyyzzzz[k];

                g_y_0_y_0_xxx_yzzzzz[k] = -g_y_0_y_0_xx_yzzzzz[k] * ab_x + g_y_0_y_0_xx_xyzzzzz[k];

                g_y_0_y_0_xxx_zzzzzz[k] = -g_y_0_y_0_xx_zzzzzz[k] * ab_x + g_y_0_y_0_xx_xzzzzzz[k];
            }

            /// Set up 1148-1176 components of targeted buffer : cbuffer.data(

            auto g_y_0_y_0_xxy_xxxxxx = cbuffer.data(fi_geom_1010_off + 1148 * ccomps * dcomps);

            auto g_y_0_y_0_xxy_xxxxxy = cbuffer.data(fi_geom_1010_off + 1149 * ccomps * dcomps);

            auto g_y_0_y_0_xxy_xxxxxz = cbuffer.data(fi_geom_1010_off + 1150 * ccomps * dcomps);

            auto g_y_0_y_0_xxy_xxxxyy = cbuffer.data(fi_geom_1010_off + 1151 * ccomps * dcomps);

            auto g_y_0_y_0_xxy_xxxxyz = cbuffer.data(fi_geom_1010_off + 1152 * ccomps * dcomps);

            auto g_y_0_y_0_xxy_xxxxzz = cbuffer.data(fi_geom_1010_off + 1153 * ccomps * dcomps);

            auto g_y_0_y_0_xxy_xxxyyy = cbuffer.data(fi_geom_1010_off + 1154 * ccomps * dcomps);

            auto g_y_0_y_0_xxy_xxxyyz = cbuffer.data(fi_geom_1010_off + 1155 * ccomps * dcomps);

            auto g_y_0_y_0_xxy_xxxyzz = cbuffer.data(fi_geom_1010_off + 1156 * ccomps * dcomps);

            auto g_y_0_y_0_xxy_xxxzzz = cbuffer.data(fi_geom_1010_off + 1157 * ccomps * dcomps);

            auto g_y_0_y_0_xxy_xxyyyy = cbuffer.data(fi_geom_1010_off + 1158 * ccomps * dcomps);

            auto g_y_0_y_0_xxy_xxyyyz = cbuffer.data(fi_geom_1010_off + 1159 * ccomps * dcomps);

            auto g_y_0_y_0_xxy_xxyyzz = cbuffer.data(fi_geom_1010_off + 1160 * ccomps * dcomps);

            auto g_y_0_y_0_xxy_xxyzzz = cbuffer.data(fi_geom_1010_off + 1161 * ccomps * dcomps);

            auto g_y_0_y_0_xxy_xxzzzz = cbuffer.data(fi_geom_1010_off + 1162 * ccomps * dcomps);

            auto g_y_0_y_0_xxy_xyyyyy = cbuffer.data(fi_geom_1010_off + 1163 * ccomps * dcomps);

            auto g_y_0_y_0_xxy_xyyyyz = cbuffer.data(fi_geom_1010_off + 1164 * ccomps * dcomps);

            auto g_y_0_y_0_xxy_xyyyzz = cbuffer.data(fi_geom_1010_off + 1165 * ccomps * dcomps);

            auto g_y_0_y_0_xxy_xyyzzz = cbuffer.data(fi_geom_1010_off + 1166 * ccomps * dcomps);

            auto g_y_0_y_0_xxy_xyzzzz = cbuffer.data(fi_geom_1010_off + 1167 * ccomps * dcomps);

            auto g_y_0_y_0_xxy_xzzzzz = cbuffer.data(fi_geom_1010_off + 1168 * ccomps * dcomps);

            auto g_y_0_y_0_xxy_yyyyyy = cbuffer.data(fi_geom_1010_off + 1169 * ccomps * dcomps);

            auto g_y_0_y_0_xxy_yyyyyz = cbuffer.data(fi_geom_1010_off + 1170 * ccomps * dcomps);

            auto g_y_0_y_0_xxy_yyyyzz = cbuffer.data(fi_geom_1010_off + 1171 * ccomps * dcomps);

            auto g_y_0_y_0_xxy_yyyzzz = cbuffer.data(fi_geom_1010_off + 1172 * ccomps * dcomps);

            auto g_y_0_y_0_xxy_yyzzzz = cbuffer.data(fi_geom_1010_off + 1173 * ccomps * dcomps);

            auto g_y_0_y_0_xxy_yzzzzz = cbuffer.data(fi_geom_1010_off + 1174 * ccomps * dcomps);

            auto g_y_0_y_0_xxy_zzzzzz = cbuffer.data(fi_geom_1010_off + 1175 * ccomps * dcomps);

            #pragma omp simd aligned(g_y_0_y_0_xxy_xxxxxx, g_y_0_y_0_xxy_xxxxxy, g_y_0_y_0_xxy_xxxxxz, g_y_0_y_0_xxy_xxxxyy, g_y_0_y_0_xxy_xxxxyz, g_y_0_y_0_xxy_xxxxzz, g_y_0_y_0_xxy_xxxyyy, g_y_0_y_0_xxy_xxxyyz, g_y_0_y_0_xxy_xxxyzz, g_y_0_y_0_xxy_xxxzzz, g_y_0_y_0_xxy_xxyyyy, g_y_0_y_0_xxy_xxyyyz, g_y_0_y_0_xxy_xxyyzz, g_y_0_y_0_xxy_xxyzzz, g_y_0_y_0_xxy_xxzzzz, g_y_0_y_0_xxy_xyyyyy, g_y_0_y_0_xxy_xyyyyz, g_y_0_y_0_xxy_xyyyzz, g_y_0_y_0_xxy_xyyzzz, g_y_0_y_0_xxy_xyzzzz, g_y_0_y_0_xxy_xzzzzz, g_y_0_y_0_xxy_yyyyyy, g_y_0_y_0_xxy_yyyyyz, g_y_0_y_0_xxy_yyyyzz, g_y_0_y_0_xxy_yyyzzz, g_y_0_y_0_xxy_yyzzzz, g_y_0_y_0_xxy_yzzzzz, g_y_0_y_0_xxy_zzzzzz, g_y_0_y_0_xy_xxxxxx, g_y_0_y_0_xy_xxxxxxx, g_y_0_y_0_xy_xxxxxxy, g_y_0_y_0_xy_xxxxxxz, g_y_0_y_0_xy_xxxxxy, g_y_0_y_0_xy_xxxxxyy, g_y_0_y_0_xy_xxxxxyz, g_y_0_y_0_xy_xxxxxz, g_y_0_y_0_xy_xxxxxzz, g_y_0_y_0_xy_xxxxyy, g_y_0_y_0_xy_xxxxyyy, g_y_0_y_0_xy_xxxxyyz, g_y_0_y_0_xy_xxxxyz, g_y_0_y_0_xy_xxxxyzz, g_y_0_y_0_xy_xxxxzz, g_y_0_y_0_xy_xxxxzzz, g_y_0_y_0_xy_xxxyyy, g_y_0_y_0_xy_xxxyyyy, g_y_0_y_0_xy_xxxyyyz, g_y_0_y_0_xy_xxxyyz, g_y_0_y_0_xy_xxxyyzz, g_y_0_y_0_xy_xxxyzz, g_y_0_y_0_xy_xxxyzzz, g_y_0_y_0_xy_xxxzzz, g_y_0_y_0_xy_xxxzzzz, g_y_0_y_0_xy_xxyyyy, g_y_0_y_0_xy_xxyyyyy, g_y_0_y_0_xy_xxyyyyz, g_y_0_y_0_xy_xxyyyz, g_y_0_y_0_xy_xxyyyzz, g_y_0_y_0_xy_xxyyzz, g_y_0_y_0_xy_xxyyzzz, g_y_0_y_0_xy_xxyzzz, g_y_0_y_0_xy_xxyzzzz, g_y_0_y_0_xy_xxzzzz, g_y_0_y_0_xy_xxzzzzz, g_y_0_y_0_xy_xyyyyy, g_y_0_y_0_xy_xyyyyyy, g_y_0_y_0_xy_xyyyyyz, g_y_0_y_0_xy_xyyyyz, g_y_0_y_0_xy_xyyyyzz, g_y_0_y_0_xy_xyyyzz, g_y_0_y_0_xy_xyyyzzz, g_y_0_y_0_xy_xyyzzz, g_y_0_y_0_xy_xyyzzzz, g_y_0_y_0_xy_xyzzzz, g_y_0_y_0_xy_xyzzzzz, g_y_0_y_0_xy_xzzzzz, g_y_0_y_0_xy_xzzzzzz, g_y_0_y_0_xy_yyyyyy, g_y_0_y_0_xy_yyyyyz, g_y_0_y_0_xy_yyyyzz, g_y_0_y_0_xy_yyyzzz, g_y_0_y_0_xy_yyzzzz, g_y_0_y_0_xy_yzzzzz, g_y_0_y_0_xy_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_y_0_y_0_xxy_xxxxxx[k] = -g_y_0_y_0_xy_xxxxxx[k] * ab_x + g_y_0_y_0_xy_xxxxxxx[k];

                g_y_0_y_0_xxy_xxxxxy[k] = -g_y_0_y_0_xy_xxxxxy[k] * ab_x + g_y_0_y_0_xy_xxxxxxy[k];

                g_y_0_y_0_xxy_xxxxxz[k] = -g_y_0_y_0_xy_xxxxxz[k] * ab_x + g_y_0_y_0_xy_xxxxxxz[k];

                g_y_0_y_0_xxy_xxxxyy[k] = -g_y_0_y_0_xy_xxxxyy[k] * ab_x + g_y_0_y_0_xy_xxxxxyy[k];

                g_y_0_y_0_xxy_xxxxyz[k] = -g_y_0_y_0_xy_xxxxyz[k] * ab_x + g_y_0_y_0_xy_xxxxxyz[k];

                g_y_0_y_0_xxy_xxxxzz[k] = -g_y_0_y_0_xy_xxxxzz[k] * ab_x + g_y_0_y_0_xy_xxxxxzz[k];

                g_y_0_y_0_xxy_xxxyyy[k] = -g_y_0_y_0_xy_xxxyyy[k] * ab_x + g_y_0_y_0_xy_xxxxyyy[k];

                g_y_0_y_0_xxy_xxxyyz[k] = -g_y_0_y_0_xy_xxxyyz[k] * ab_x + g_y_0_y_0_xy_xxxxyyz[k];

                g_y_0_y_0_xxy_xxxyzz[k] = -g_y_0_y_0_xy_xxxyzz[k] * ab_x + g_y_0_y_0_xy_xxxxyzz[k];

                g_y_0_y_0_xxy_xxxzzz[k] = -g_y_0_y_0_xy_xxxzzz[k] * ab_x + g_y_0_y_0_xy_xxxxzzz[k];

                g_y_0_y_0_xxy_xxyyyy[k] = -g_y_0_y_0_xy_xxyyyy[k] * ab_x + g_y_0_y_0_xy_xxxyyyy[k];

                g_y_0_y_0_xxy_xxyyyz[k] = -g_y_0_y_0_xy_xxyyyz[k] * ab_x + g_y_0_y_0_xy_xxxyyyz[k];

                g_y_0_y_0_xxy_xxyyzz[k] = -g_y_0_y_0_xy_xxyyzz[k] * ab_x + g_y_0_y_0_xy_xxxyyzz[k];

                g_y_0_y_0_xxy_xxyzzz[k] = -g_y_0_y_0_xy_xxyzzz[k] * ab_x + g_y_0_y_0_xy_xxxyzzz[k];

                g_y_0_y_0_xxy_xxzzzz[k] = -g_y_0_y_0_xy_xxzzzz[k] * ab_x + g_y_0_y_0_xy_xxxzzzz[k];

                g_y_0_y_0_xxy_xyyyyy[k] = -g_y_0_y_0_xy_xyyyyy[k] * ab_x + g_y_0_y_0_xy_xxyyyyy[k];

                g_y_0_y_0_xxy_xyyyyz[k] = -g_y_0_y_0_xy_xyyyyz[k] * ab_x + g_y_0_y_0_xy_xxyyyyz[k];

                g_y_0_y_0_xxy_xyyyzz[k] = -g_y_0_y_0_xy_xyyyzz[k] * ab_x + g_y_0_y_0_xy_xxyyyzz[k];

                g_y_0_y_0_xxy_xyyzzz[k] = -g_y_0_y_0_xy_xyyzzz[k] * ab_x + g_y_0_y_0_xy_xxyyzzz[k];

                g_y_0_y_0_xxy_xyzzzz[k] = -g_y_0_y_0_xy_xyzzzz[k] * ab_x + g_y_0_y_0_xy_xxyzzzz[k];

                g_y_0_y_0_xxy_xzzzzz[k] = -g_y_0_y_0_xy_xzzzzz[k] * ab_x + g_y_0_y_0_xy_xxzzzzz[k];

                g_y_0_y_0_xxy_yyyyyy[k] = -g_y_0_y_0_xy_yyyyyy[k] * ab_x + g_y_0_y_0_xy_xyyyyyy[k];

                g_y_0_y_0_xxy_yyyyyz[k] = -g_y_0_y_0_xy_yyyyyz[k] * ab_x + g_y_0_y_0_xy_xyyyyyz[k];

                g_y_0_y_0_xxy_yyyyzz[k] = -g_y_0_y_0_xy_yyyyzz[k] * ab_x + g_y_0_y_0_xy_xyyyyzz[k];

                g_y_0_y_0_xxy_yyyzzz[k] = -g_y_0_y_0_xy_yyyzzz[k] * ab_x + g_y_0_y_0_xy_xyyyzzz[k];

                g_y_0_y_0_xxy_yyzzzz[k] = -g_y_0_y_0_xy_yyzzzz[k] * ab_x + g_y_0_y_0_xy_xyyzzzz[k];

                g_y_0_y_0_xxy_yzzzzz[k] = -g_y_0_y_0_xy_yzzzzz[k] * ab_x + g_y_0_y_0_xy_xyzzzzz[k];

                g_y_0_y_0_xxy_zzzzzz[k] = -g_y_0_y_0_xy_zzzzzz[k] * ab_x + g_y_0_y_0_xy_xzzzzzz[k];
            }

            /// Set up 1176-1204 components of targeted buffer : cbuffer.data(

            auto g_y_0_y_0_xxz_xxxxxx = cbuffer.data(fi_geom_1010_off + 1176 * ccomps * dcomps);

            auto g_y_0_y_0_xxz_xxxxxy = cbuffer.data(fi_geom_1010_off + 1177 * ccomps * dcomps);

            auto g_y_0_y_0_xxz_xxxxxz = cbuffer.data(fi_geom_1010_off + 1178 * ccomps * dcomps);

            auto g_y_0_y_0_xxz_xxxxyy = cbuffer.data(fi_geom_1010_off + 1179 * ccomps * dcomps);

            auto g_y_0_y_0_xxz_xxxxyz = cbuffer.data(fi_geom_1010_off + 1180 * ccomps * dcomps);

            auto g_y_0_y_0_xxz_xxxxzz = cbuffer.data(fi_geom_1010_off + 1181 * ccomps * dcomps);

            auto g_y_0_y_0_xxz_xxxyyy = cbuffer.data(fi_geom_1010_off + 1182 * ccomps * dcomps);

            auto g_y_0_y_0_xxz_xxxyyz = cbuffer.data(fi_geom_1010_off + 1183 * ccomps * dcomps);

            auto g_y_0_y_0_xxz_xxxyzz = cbuffer.data(fi_geom_1010_off + 1184 * ccomps * dcomps);

            auto g_y_0_y_0_xxz_xxxzzz = cbuffer.data(fi_geom_1010_off + 1185 * ccomps * dcomps);

            auto g_y_0_y_0_xxz_xxyyyy = cbuffer.data(fi_geom_1010_off + 1186 * ccomps * dcomps);

            auto g_y_0_y_0_xxz_xxyyyz = cbuffer.data(fi_geom_1010_off + 1187 * ccomps * dcomps);

            auto g_y_0_y_0_xxz_xxyyzz = cbuffer.data(fi_geom_1010_off + 1188 * ccomps * dcomps);

            auto g_y_0_y_0_xxz_xxyzzz = cbuffer.data(fi_geom_1010_off + 1189 * ccomps * dcomps);

            auto g_y_0_y_0_xxz_xxzzzz = cbuffer.data(fi_geom_1010_off + 1190 * ccomps * dcomps);

            auto g_y_0_y_0_xxz_xyyyyy = cbuffer.data(fi_geom_1010_off + 1191 * ccomps * dcomps);

            auto g_y_0_y_0_xxz_xyyyyz = cbuffer.data(fi_geom_1010_off + 1192 * ccomps * dcomps);

            auto g_y_0_y_0_xxz_xyyyzz = cbuffer.data(fi_geom_1010_off + 1193 * ccomps * dcomps);

            auto g_y_0_y_0_xxz_xyyzzz = cbuffer.data(fi_geom_1010_off + 1194 * ccomps * dcomps);

            auto g_y_0_y_0_xxz_xyzzzz = cbuffer.data(fi_geom_1010_off + 1195 * ccomps * dcomps);

            auto g_y_0_y_0_xxz_xzzzzz = cbuffer.data(fi_geom_1010_off + 1196 * ccomps * dcomps);

            auto g_y_0_y_0_xxz_yyyyyy = cbuffer.data(fi_geom_1010_off + 1197 * ccomps * dcomps);

            auto g_y_0_y_0_xxz_yyyyyz = cbuffer.data(fi_geom_1010_off + 1198 * ccomps * dcomps);

            auto g_y_0_y_0_xxz_yyyyzz = cbuffer.data(fi_geom_1010_off + 1199 * ccomps * dcomps);

            auto g_y_0_y_0_xxz_yyyzzz = cbuffer.data(fi_geom_1010_off + 1200 * ccomps * dcomps);

            auto g_y_0_y_0_xxz_yyzzzz = cbuffer.data(fi_geom_1010_off + 1201 * ccomps * dcomps);

            auto g_y_0_y_0_xxz_yzzzzz = cbuffer.data(fi_geom_1010_off + 1202 * ccomps * dcomps);

            auto g_y_0_y_0_xxz_zzzzzz = cbuffer.data(fi_geom_1010_off + 1203 * ccomps * dcomps);

            #pragma omp simd aligned(g_y_0_y_0_xxz_xxxxxx, g_y_0_y_0_xxz_xxxxxy, g_y_0_y_0_xxz_xxxxxz, g_y_0_y_0_xxz_xxxxyy, g_y_0_y_0_xxz_xxxxyz, g_y_0_y_0_xxz_xxxxzz, g_y_0_y_0_xxz_xxxyyy, g_y_0_y_0_xxz_xxxyyz, g_y_0_y_0_xxz_xxxyzz, g_y_0_y_0_xxz_xxxzzz, g_y_0_y_0_xxz_xxyyyy, g_y_0_y_0_xxz_xxyyyz, g_y_0_y_0_xxz_xxyyzz, g_y_0_y_0_xxz_xxyzzz, g_y_0_y_0_xxz_xxzzzz, g_y_0_y_0_xxz_xyyyyy, g_y_0_y_0_xxz_xyyyyz, g_y_0_y_0_xxz_xyyyzz, g_y_0_y_0_xxz_xyyzzz, g_y_0_y_0_xxz_xyzzzz, g_y_0_y_0_xxz_xzzzzz, g_y_0_y_0_xxz_yyyyyy, g_y_0_y_0_xxz_yyyyyz, g_y_0_y_0_xxz_yyyyzz, g_y_0_y_0_xxz_yyyzzz, g_y_0_y_0_xxz_yyzzzz, g_y_0_y_0_xxz_yzzzzz, g_y_0_y_0_xxz_zzzzzz, g_y_0_y_0_xz_xxxxxx, g_y_0_y_0_xz_xxxxxxx, g_y_0_y_0_xz_xxxxxxy, g_y_0_y_0_xz_xxxxxxz, g_y_0_y_0_xz_xxxxxy, g_y_0_y_0_xz_xxxxxyy, g_y_0_y_0_xz_xxxxxyz, g_y_0_y_0_xz_xxxxxz, g_y_0_y_0_xz_xxxxxzz, g_y_0_y_0_xz_xxxxyy, g_y_0_y_0_xz_xxxxyyy, g_y_0_y_0_xz_xxxxyyz, g_y_0_y_0_xz_xxxxyz, g_y_0_y_0_xz_xxxxyzz, g_y_0_y_0_xz_xxxxzz, g_y_0_y_0_xz_xxxxzzz, g_y_0_y_0_xz_xxxyyy, g_y_0_y_0_xz_xxxyyyy, g_y_0_y_0_xz_xxxyyyz, g_y_0_y_0_xz_xxxyyz, g_y_0_y_0_xz_xxxyyzz, g_y_0_y_0_xz_xxxyzz, g_y_0_y_0_xz_xxxyzzz, g_y_0_y_0_xz_xxxzzz, g_y_0_y_0_xz_xxxzzzz, g_y_0_y_0_xz_xxyyyy, g_y_0_y_0_xz_xxyyyyy, g_y_0_y_0_xz_xxyyyyz, g_y_0_y_0_xz_xxyyyz, g_y_0_y_0_xz_xxyyyzz, g_y_0_y_0_xz_xxyyzz, g_y_0_y_0_xz_xxyyzzz, g_y_0_y_0_xz_xxyzzz, g_y_0_y_0_xz_xxyzzzz, g_y_0_y_0_xz_xxzzzz, g_y_0_y_0_xz_xxzzzzz, g_y_0_y_0_xz_xyyyyy, g_y_0_y_0_xz_xyyyyyy, g_y_0_y_0_xz_xyyyyyz, g_y_0_y_0_xz_xyyyyz, g_y_0_y_0_xz_xyyyyzz, g_y_0_y_0_xz_xyyyzz, g_y_0_y_0_xz_xyyyzzz, g_y_0_y_0_xz_xyyzzz, g_y_0_y_0_xz_xyyzzzz, g_y_0_y_0_xz_xyzzzz, g_y_0_y_0_xz_xyzzzzz, g_y_0_y_0_xz_xzzzzz, g_y_0_y_0_xz_xzzzzzz, g_y_0_y_0_xz_yyyyyy, g_y_0_y_0_xz_yyyyyz, g_y_0_y_0_xz_yyyyzz, g_y_0_y_0_xz_yyyzzz, g_y_0_y_0_xz_yyzzzz, g_y_0_y_0_xz_yzzzzz, g_y_0_y_0_xz_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_y_0_y_0_xxz_xxxxxx[k] = -g_y_0_y_0_xz_xxxxxx[k] * ab_x + g_y_0_y_0_xz_xxxxxxx[k];

                g_y_0_y_0_xxz_xxxxxy[k] = -g_y_0_y_0_xz_xxxxxy[k] * ab_x + g_y_0_y_0_xz_xxxxxxy[k];

                g_y_0_y_0_xxz_xxxxxz[k] = -g_y_0_y_0_xz_xxxxxz[k] * ab_x + g_y_0_y_0_xz_xxxxxxz[k];

                g_y_0_y_0_xxz_xxxxyy[k] = -g_y_0_y_0_xz_xxxxyy[k] * ab_x + g_y_0_y_0_xz_xxxxxyy[k];

                g_y_0_y_0_xxz_xxxxyz[k] = -g_y_0_y_0_xz_xxxxyz[k] * ab_x + g_y_0_y_0_xz_xxxxxyz[k];

                g_y_0_y_0_xxz_xxxxzz[k] = -g_y_0_y_0_xz_xxxxzz[k] * ab_x + g_y_0_y_0_xz_xxxxxzz[k];

                g_y_0_y_0_xxz_xxxyyy[k] = -g_y_0_y_0_xz_xxxyyy[k] * ab_x + g_y_0_y_0_xz_xxxxyyy[k];

                g_y_0_y_0_xxz_xxxyyz[k] = -g_y_0_y_0_xz_xxxyyz[k] * ab_x + g_y_0_y_0_xz_xxxxyyz[k];

                g_y_0_y_0_xxz_xxxyzz[k] = -g_y_0_y_0_xz_xxxyzz[k] * ab_x + g_y_0_y_0_xz_xxxxyzz[k];

                g_y_0_y_0_xxz_xxxzzz[k] = -g_y_0_y_0_xz_xxxzzz[k] * ab_x + g_y_0_y_0_xz_xxxxzzz[k];

                g_y_0_y_0_xxz_xxyyyy[k] = -g_y_0_y_0_xz_xxyyyy[k] * ab_x + g_y_0_y_0_xz_xxxyyyy[k];

                g_y_0_y_0_xxz_xxyyyz[k] = -g_y_0_y_0_xz_xxyyyz[k] * ab_x + g_y_0_y_0_xz_xxxyyyz[k];

                g_y_0_y_0_xxz_xxyyzz[k] = -g_y_0_y_0_xz_xxyyzz[k] * ab_x + g_y_0_y_0_xz_xxxyyzz[k];

                g_y_0_y_0_xxz_xxyzzz[k] = -g_y_0_y_0_xz_xxyzzz[k] * ab_x + g_y_0_y_0_xz_xxxyzzz[k];

                g_y_0_y_0_xxz_xxzzzz[k] = -g_y_0_y_0_xz_xxzzzz[k] * ab_x + g_y_0_y_0_xz_xxxzzzz[k];

                g_y_0_y_0_xxz_xyyyyy[k] = -g_y_0_y_0_xz_xyyyyy[k] * ab_x + g_y_0_y_0_xz_xxyyyyy[k];

                g_y_0_y_0_xxz_xyyyyz[k] = -g_y_0_y_0_xz_xyyyyz[k] * ab_x + g_y_0_y_0_xz_xxyyyyz[k];

                g_y_0_y_0_xxz_xyyyzz[k] = -g_y_0_y_0_xz_xyyyzz[k] * ab_x + g_y_0_y_0_xz_xxyyyzz[k];

                g_y_0_y_0_xxz_xyyzzz[k] = -g_y_0_y_0_xz_xyyzzz[k] * ab_x + g_y_0_y_0_xz_xxyyzzz[k];

                g_y_0_y_0_xxz_xyzzzz[k] = -g_y_0_y_0_xz_xyzzzz[k] * ab_x + g_y_0_y_0_xz_xxyzzzz[k];

                g_y_0_y_0_xxz_xzzzzz[k] = -g_y_0_y_0_xz_xzzzzz[k] * ab_x + g_y_0_y_0_xz_xxzzzzz[k];

                g_y_0_y_0_xxz_yyyyyy[k] = -g_y_0_y_0_xz_yyyyyy[k] * ab_x + g_y_0_y_0_xz_xyyyyyy[k];

                g_y_0_y_0_xxz_yyyyyz[k] = -g_y_0_y_0_xz_yyyyyz[k] * ab_x + g_y_0_y_0_xz_xyyyyyz[k];

                g_y_0_y_0_xxz_yyyyzz[k] = -g_y_0_y_0_xz_yyyyzz[k] * ab_x + g_y_0_y_0_xz_xyyyyzz[k];

                g_y_0_y_0_xxz_yyyzzz[k] = -g_y_0_y_0_xz_yyyzzz[k] * ab_x + g_y_0_y_0_xz_xyyyzzz[k];

                g_y_0_y_0_xxz_yyzzzz[k] = -g_y_0_y_0_xz_yyzzzz[k] * ab_x + g_y_0_y_0_xz_xyyzzzz[k];

                g_y_0_y_0_xxz_yzzzzz[k] = -g_y_0_y_0_xz_yzzzzz[k] * ab_x + g_y_0_y_0_xz_xyzzzzz[k];

                g_y_0_y_0_xxz_zzzzzz[k] = -g_y_0_y_0_xz_zzzzzz[k] * ab_x + g_y_0_y_0_xz_xzzzzzz[k];
            }

            /// Set up 1204-1232 components of targeted buffer : cbuffer.data(

            auto g_y_0_y_0_xyy_xxxxxx = cbuffer.data(fi_geom_1010_off + 1204 * ccomps * dcomps);

            auto g_y_0_y_0_xyy_xxxxxy = cbuffer.data(fi_geom_1010_off + 1205 * ccomps * dcomps);

            auto g_y_0_y_0_xyy_xxxxxz = cbuffer.data(fi_geom_1010_off + 1206 * ccomps * dcomps);

            auto g_y_0_y_0_xyy_xxxxyy = cbuffer.data(fi_geom_1010_off + 1207 * ccomps * dcomps);

            auto g_y_0_y_0_xyy_xxxxyz = cbuffer.data(fi_geom_1010_off + 1208 * ccomps * dcomps);

            auto g_y_0_y_0_xyy_xxxxzz = cbuffer.data(fi_geom_1010_off + 1209 * ccomps * dcomps);

            auto g_y_0_y_0_xyy_xxxyyy = cbuffer.data(fi_geom_1010_off + 1210 * ccomps * dcomps);

            auto g_y_0_y_0_xyy_xxxyyz = cbuffer.data(fi_geom_1010_off + 1211 * ccomps * dcomps);

            auto g_y_0_y_0_xyy_xxxyzz = cbuffer.data(fi_geom_1010_off + 1212 * ccomps * dcomps);

            auto g_y_0_y_0_xyy_xxxzzz = cbuffer.data(fi_geom_1010_off + 1213 * ccomps * dcomps);

            auto g_y_0_y_0_xyy_xxyyyy = cbuffer.data(fi_geom_1010_off + 1214 * ccomps * dcomps);

            auto g_y_0_y_0_xyy_xxyyyz = cbuffer.data(fi_geom_1010_off + 1215 * ccomps * dcomps);

            auto g_y_0_y_0_xyy_xxyyzz = cbuffer.data(fi_geom_1010_off + 1216 * ccomps * dcomps);

            auto g_y_0_y_0_xyy_xxyzzz = cbuffer.data(fi_geom_1010_off + 1217 * ccomps * dcomps);

            auto g_y_0_y_0_xyy_xxzzzz = cbuffer.data(fi_geom_1010_off + 1218 * ccomps * dcomps);

            auto g_y_0_y_0_xyy_xyyyyy = cbuffer.data(fi_geom_1010_off + 1219 * ccomps * dcomps);

            auto g_y_0_y_0_xyy_xyyyyz = cbuffer.data(fi_geom_1010_off + 1220 * ccomps * dcomps);

            auto g_y_0_y_0_xyy_xyyyzz = cbuffer.data(fi_geom_1010_off + 1221 * ccomps * dcomps);

            auto g_y_0_y_0_xyy_xyyzzz = cbuffer.data(fi_geom_1010_off + 1222 * ccomps * dcomps);

            auto g_y_0_y_0_xyy_xyzzzz = cbuffer.data(fi_geom_1010_off + 1223 * ccomps * dcomps);

            auto g_y_0_y_0_xyy_xzzzzz = cbuffer.data(fi_geom_1010_off + 1224 * ccomps * dcomps);

            auto g_y_0_y_0_xyy_yyyyyy = cbuffer.data(fi_geom_1010_off + 1225 * ccomps * dcomps);

            auto g_y_0_y_0_xyy_yyyyyz = cbuffer.data(fi_geom_1010_off + 1226 * ccomps * dcomps);

            auto g_y_0_y_0_xyy_yyyyzz = cbuffer.data(fi_geom_1010_off + 1227 * ccomps * dcomps);

            auto g_y_0_y_0_xyy_yyyzzz = cbuffer.data(fi_geom_1010_off + 1228 * ccomps * dcomps);

            auto g_y_0_y_0_xyy_yyzzzz = cbuffer.data(fi_geom_1010_off + 1229 * ccomps * dcomps);

            auto g_y_0_y_0_xyy_yzzzzz = cbuffer.data(fi_geom_1010_off + 1230 * ccomps * dcomps);

            auto g_y_0_y_0_xyy_zzzzzz = cbuffer.data(fi_geom_1010_off + 1231 * ccomps * dcomps);

            #pragma omp simd aligned(g_y_0_y_0_xyy_xxxxxx, g_y_0_y_0_xyy_xxxxxy, g_y_0_y_0_xyy_xxxxxz, g_y_0_y_0_xyy_xxxxyy, g_y_0_y_0_xyy_xxxxyz, g_y_0_y_0_xyy_xxxxzz, g_y_0_y_0_xyy_xxxyyy, g_y_0_y_0_xyy_xxxyyz, g_y_0_y_0_xyy_xxxyzz, g_y_0_y_0_xyy_xxxzzz, g_y_0_y_0_xyy_xxyyyy, g_y_0_y_0_xyy_xxyyyz, g_y_0_y_0_xyy_xxyyzz, g_y_0_y_0_xyy_xxyzzz, g_y_0_y_0_xyy_xxzzzz, g_y_0_y_0_xyy_xyyyyy, g_y_0_y_0_xyy_xyyyyz, g_y_0_y_0_xyy_xyyyzz, g_y_0_y_0_xyy_xyyzzz, g_y_0_y_0_xyy_xyzzzz, g_y_0_y_0_xyy_xzzzzz, g_y_0_y_0_xyy_yyyyyy, g_y_0_y_0_xyy_yyyyyz, g_y_0_y_0_xyy_yyyyzz, g_y_0_y_0_xyy_yyyzzz, g_y_0_y_0_xyy_yyzzzz, g_y_0_y_0_xyy_yzzzzz, g_y_0_y_0_xyy_zzzzzz, g_y_0_y_0_yy_xxxxxx, g_y_0_y_0_yy_xxxxxxx, g_y_0_y_0_yy_xxxxxxy, g_y_0_y_0_yy_xxxxxxz, g_y_0_y_0_yy_xxxxxy, g_y_0_y_0_yy_xxxxxyy, g_y_0_y_0_yy_xxxxxyz, g_y_0_y_0_yy_xxxxxz, g_y_0_y_0_yy_xxxxxzz, g_y_0_y_0_yy_xxxxyy, g_y_0_y_0_yy_xxxxyyy, g_y_0_y_0_yy_xxxxyyz, g_y_0_y_0_yy_xxxxyz, g_y_0_y_0_yy_xxxxyzz, g_y_0_y_0_yy_xxxxzz, g_y_0_y_0_yy_xxxxzzz, g_y_0_y_0_yy_xxxyyy, g_y_0_y_0_yy_xxxyyyy, g_y_0_y_0_yy_xxxyyyz, g_y_0_y_0_yy_xxxyyz, g_y_0_y_0_yy_xxxyyzz, g_y_0_y_0_yy_xxxyzz, g_y_0_y_0_yy_xxxyzzz, g_y_0_y_0_yy_xxxzzz, g_y_0_y_0_yy_xxxzzzz, g_y_0_y_0_yy_xxyyyy, g_y_0_y_0_yy_xxyyyyy, g_y_0_y_0_yy_xxyyyyz, g_y_0_y_0_yy_xxyyyz, g_y_0_y_0_yy_xxyyyzz, g_y_0_y_0_yy_xxyyzz, g_y_0_y_0_yy_xxyyzzz, g_y_0_y_0_yy_xxyzzz, g_y_0_y_0_yy_xxyzzzz, g_y_0_y_0_yy_xxzzzz, g_y_0_y_0_yy_xxzzzzz, g_y_0_y_0_yy_xyyyyy, g_y_0_y_0_yy_xyyyyyy, g_y_0_y_0_yy_xyyyyyz, g_y_0_y_0_yy_xyyyyz, g_y_0_y_0_yy_xyyyyzz, g_y_0_y_0_yy_xyyyzz, g_y_0_y_0_yy_xyyyzzz, g_y_0_y_0_yy_xyyzzz, g_y_0_y_0_yy_xyyzzzz, g_y_0_y_0_yy_xyzzzz, g_y_0_y_0_yy_xyzzzzz, g_y_0_y_0_yy_xzzzzz, g_y_0_y_0_yy_xzzzzzz, g_y_0_y_0_yy_yyyyyy, g_y_0_y_0_yy_yyyyyz, g_y_0_y_0_yy_yyyyzz, g_y_0_y_0_yy_yyyzzz, g_y_0_y_0_yy_yyzzzz, g_y_0_y_0_yy_yzzzzz, g_y_0_y_0_yy_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_y_0_y_0_xyy_xxxxxx[k] = -g_y_0_y_0_yy_xxxxxx[k] * ab_x + g_y_0_y_0_yy_xxxxxxx[k];

                g_y_0_y_0_xyy_xxxxxy[k] = -g_y_0_y_0_yy_xxxxxy[k] * ab_x + g_y_0_y_0_yy_xxxxxxy[k];

                g_y_0_y_0_xyy_xxxxxz[k] = -g_y_0_y_0_yy_xxxxxz[k] * ab_x + g_y_0_y_0_yy_xxxxxxz[k];

                g_y_0_y_0_xyy_xxxxyy[k] = -g_y_0_y_0_yy_xxxxyy[k] * ab_x + g_y_0_y_0_yy_xxxxxyy[k];

                g_y_0_y_0_xyy_xxxxyz[k] = -g_y_0_y_0_yy_xxxxyz[k] * ab_x + g_y_0_y_0_yy_xxxxxyz[k];

                g_y_0_y_0_xyy_xxxxzz[k] = -g_y_0_y_0_yy_xxxxzz[k] * ab_x + g_y_0_y_0_yy_xxxxxzz[k];

                g_y_0_y_0_xyy_xxxyyy[k] = -g_y_0_y_0_yy_xxxyyy[k] * ab_x + g_y_0_y_0_yy_xxxxyyy[k];

                g_y_0_y_0_xyy_xxxyyz[k] = -g_y_0_y_0_yy_xxxyyz[k] * ab_x + g_y_0_y_0_yy_xxxxyyz[k];

                g_y_0_y_0_xyy_xxxyzz[k] = -g_y_0_y_0_yy_xxxyzz[k] * ab_x + g_y_0_y_0_yy_xxxxyzz[k];

                g_y_0_y_0_xyy_xxxzzz[k] = -g_y_0_y_0_yy_xxxzzz[k] * ab_x + g_y_0_y_0_yy_xxxxzzz[k];

                g_y_0_y_0_xyy_xxyyyy[k] = -g_y_0_y_0_yy_xxyyyy[k] * ab_x + g_y_0_y_0_yy_xxxyyyy[k];

                g_y_0_y_0_xyy_xxyyyz[k] = -g_y_0_y_0_yy_xxyyyz[k] * ab_x + g_y_0_y_0_yy_xxxyyyz[k];

                g_y_0_y_0_xyy_xxyyzz[k] = -g_y_0_y_0_yy_xxyyzz[k] * ab_x + g_y_0_y_0_yy_xxxyyzz[k];

                g_y_0_y_0_xyy_xxyzzz[k] = -g_y_0_y_0_yy_xxyzzz[k] * ab_x + g_y_0_y_0_yy_xxxyzzz[k];

                g_y_0_y_0_xyy_xxzzzz[k] = -g_y_0_y_0_yy_xxzzzz[k] * ab_x + g_y_0_y_0_yy_xxxzzzz[k];

                g_y_0_y_0_xyy_xyyyyy[k] = -g_y_0_y_0_yy_xyyyyy[k] * ab_x + g_y_0_y_0_yy_xxyyyyy[k];

                g_y_0_y_0_xyy_xyyyyz[k] = -g_y_0_y_0_yy_xyyyyz[k] * ab_x + g_y_0_y_0_yy_xxyyyyz[k];

                g_y_0_y_0_xyy_xyyyzz[k] = -g_y_0_y_0_yy_xyyyzz[k] * ab_x + g_y_0_y_0_yy_xxyyyzz[k];

                g_y_0_y_0_xyy_xyyzzz[k] = -g_y_0_y_0_yy_xyyzzz[k] * ab_x + g_y_0_y_0_yy_xxyyzzz[k];

                g_y_0_y_0_xyy_xyzzzz[k] = -g_y_0_y_0_yy_xyzzzz[k] * ab_x + g_y_0_y_0_yy_xxyzzzz[k];

                g_y_0_y_0_xyy_xzzzzz[k] = -g_y_0_y_0_yy_xzzzzz[k] * ab_x + g_y_0_y_0_yy_xxzzzzz[k];

                g_y_0_y_0_xyy_yyyyyy[k] = -g_y_0_y_0_yy_yyyyyy[k] * ab_x + g_y_0_y_0_yy_xyyyyyy[k];

                g_y_0_y_0_xyy_yyyyyz[k] = -g_y_0_y_0_yy_yyyyyz[k] * ab_x + g_y_0_y_0_yy_xyyyyyz[k];

                g_y_0_y_0_xyy_yyyyzz[k] = -g_y_0_y_0_yy_yyyyzz[k] * ab_x + g_y_0_y_0_yy_xyyyyzz[k];

                g_y_0_y_0_xyy_yyyzzz[k] = -g_y_0_y_0_yy_yyyzzz[k] * ab_x + g_y_0_y_0_yy_xyyyzzz[k];

                g_y_0_y_0_xyy_yyzzzz[k] = -g_y_0_y_0_yy_yyzzzz[k] * ab_x + g_y_0_y_0_yy_xyyzzzz[k];

                g_y_0_y_0_xyy_yzzzzz[k] = -g_y_0_y_0_yy_yzzzzz[k] * ab_x + g_y_0_y_0_yy_xyzzzzz[k];

                g_y_0_y_0_xyy_zzzzzz[k] = -g_y_0_y_0_yy_zzzzzz[k] * ab_x + g_y_0_y_0_yy_xzzzzzz[k];
            }

            /// Set up 1232-1260 components of targeted buffer : cbuffer.data(

            auto g_y_0_y_0_xyz_xxxxxx = cbuffer.data(fi_geom_1010_off + 1232 * ccomps * dcomps);

            auto g_y_0_y_0_xyz_xxxxxy = cbuffer.data(fi_geom_1010_off + 1233 * ccomps * dcomps);

            auto g_y_0_y_0_xyz_xxxxxz = cbuffer.data(fi_geom_1010_off + 1234 * ccomps * dcomps);

            auto g_y_0_y_0_xyz_xxxxyy = cbuffer.data(fi_geom_1010_off + 1235 * ccomps * dcomps);

            auto g_y_0_y_0_xyz_xxxxyz = cbuffer.data(fi_geom_1010_off + 1236 * ccomps * dcomps);

            auto g_y_0_y_0_xyz_xxxxzz = cbuffer.data(fi_geom_1010_off + 1237 * ccomps * dcomps);

            auto g_y_0_y_0_xyz_xxxyyy = cbuffer.data(fi_geom_1010_off + 1238 * ccomps * dcomps);

            auto g_y_0_y_0_xyz_xxxyyz = cbuffer.data(fi_geom_1010_off + 1239 * ccomps * dcomps);

            auto g_y_0_y_0_xyz_xxxyzz = cbuffer.data(fi_geom_1010_off + 1240 * ccomps * dcomps);

            auto g_y_0_y_0_xyz_xxxzzz = cbuffer.data(fi_geom_1010_off + 1241 * ccomps * dcomps);

            auto g_y_0_y_0_xyz_xxyyyy = cbuffer.data(fi_geom_1010_off + 1242 * ccomps * dcomps);

            auto g_y_0_y_0_xyz_xxyyyz = cbuffer.data(fi_geom_1010_off + 1243 * ccomps * dcomps);

            auto g_y_0_y_0_xyz_xxyyzz = cbuffer.data(fi_geom_1010_off + 1244 * ccomps * dcomps);

            auto g_y_0_y_0_xyz_xxyzzz = cbuffer.data(fi_geom_1010_off + 1245 * ccomps * dcomps);

            auto g_y_0_y_0_xyz_xxzzzz = cbuffer.data(fi_geom_1010_off + 1246 * ccomps * dcomps);

            auto g_y_0_y_0_xyz_xyyyyy = cbuffer.data(fi_geom_1010_off + 1247 * ccomps * dcomps);

            auto g_y_0_y_0_xyz_xyyyyz = cbuffer.data(fi_geom_1010_off + 1248 * ccomps * dcomps);

            auto g_y_0_y_0_xyz_xyyyzz = cbuffer.data(fi_geom_1010_off + 1249 * ccomps * dcomps);

            auto g_y_0_y_0_xyz_xyyzzz = cbuffer.data(fi_geom_1010_off + 1250 * ccomps * dcomps);

            auto g_y_0_y_0_xyz_xyzzzz = cbuffer.data(fi_geom_1010_off + 1251 * ccomps * dcomps);

            auto g_y_0_y_0_xyz_xzzzzz = cbuffer.data(fi_geom_1010_off + 1252 * ccomps * dcomps);

            auto g_y_0_y_0_xyz_yyyyyy = cbuffer.data(fi_geom_1010_off + 1253 * ccomps * dcomps);

            auto g_y_0_y_0_xyz_yyyyyz = cbuffer.data(fi_geom_1010_off + 1254 * ccomps * dcomps);

            auto g_y_0_y_0_xyz_yyyyzz = cbuffer.data(fi_geom_1010_off + 1255 * ccomps * dcomps);

            auto g_y_0_y_0_xyz_yyyzzz = cbuffer.data(fi_geom_1010_off + 1256 * ccomps * dcomps);

            auto g_y_0_y_0_xyz_yyzzzz = cbuffer.data(fi_geom_1010_off + 1257 * ccomps * dcomps);

            auto g_y_0_y_0_xyz_yzzzzz = cbuffer.data(fi_geom_1010_off + 1258 * ccomps * dcomps);

            auto g_y_0_y_0_xyz_zzzzzz = cbuffer.data(fi_geom_1010_off + 1259 * ccomps * dcomps);

            #pragma omp simd aligned(g_y_0_y_0_xyz_xxxxxx, g_y_0_y_0_xyz_xxxxxy, g_y_0_y_0_xyz_xxxxxz, g_y_0_y_0_xyz_xxxxyy, g_y_0_y_0_xyz_xxxxyz, g_y_0_y_0_xyz_xxxxzz, g_y_0_y_0_xyz_xxxyyy, g_y_0_y_0_xyz_xxxyyz, g_y_0_y_0_xyz_xxxyzz, g_y_0_y_0_xyz_xxxzzz, g_y_0_y_0_xyz_xxyyyy, g_y_0_y_0_xyz_xxyyyz, g_y_0_y_0_xyz_xxyyzz, g_y_0_y_0_xyz_xxyzzz, g_y_0_y_0_xyz_xxzzzz, g_y_0_y_0_xyz_xyyyyy, g_y_0_y_0_xyz_xyyyyz, g_y_0_y_0_xyz_xyyyzz, g_y_0_y_0_xyz_xyyzzz, g_y_0_y_0_xyz_xyzzzz, g_y_0_y_0_xyz_xzzzzz, g_y_0_y_0_xyz_yyyyyy, g_y_0_y_0_xyz_yyyyyz, g_y_0_y_0_xyz_yyyyzz, g_y_0_y_0_xyz_yyyzzz, g_y_0_y_0_xyz_yyzzzz, g_y_0_y_0_xyz_yzzzzz, g_y_0_y_0_xyz_zzzzzz, g_y_0_y_0_yz_xxxxxx, g_y_0_y_0_yz_xxxxxxx, g_y_0_y_0_yz_xxxxxxy, g_y_0_y_0_yz_xxxxxxz, g_y_0_y_0_yz_xxxxxy, g_y_0_y_0_yz_xxxxxyy, g_y_0_y_0_yz_xxxxxyz, g_y_0_y_0_yz_xxxxxz, g_y_0_y_0_yz_xxxxxzz, g_y_0_y_0_yz_xxxxyy, g_y_0_y_0_yz_xxxxyyy, g_y_0_y_0_yz_xxxxyyz, g_y_0_y_0_yz_xxxxyz, g_y_0_y_0_yz_xxxxyzz, g_y_0_y_0_yz_xxxxzz, g_y_0_y_0_yz_xxxxzzz, g_y_0_y_0_yz_xxxyyy, g_y_0_y_0_yz_xxxyyyy, g_y_0_y_0_yz_xxxyyyz, g_y_0_y_0_yz_xxxyyz, g_y_0_y_0_yz_xxxyyzz, g_y_0_y_0_yz_xxxyzz, g_y_0_y_0_yz_xxxyzzz, g_y_0_y_0_yz_xxxzzz, g_y_0_y_0_yz_xxxzzzz, g_y_0_y_0_yz_xxyyyy, g_y_0_y_0_yz_xxyyyyy, g_y_0_y_0_yz_xxyyyyz, g_y_0_y_0_yz_xxyyyz, g_y_0_y_0_yz_xxyyyzz, g_y_0_y_0_yz_xxyyzz, g_y_0_y_0_yz_xxyyzzz, g_y_0_y_0_yz_xxyzzz, g_y_0_y_0_yz_xxyzzzz, g_y_0_y_0_yz_xxzzzz, g_y_0_y_0_yz_xxzzzzz, g_y_0_y_0_yz_xyyyyy, g_y_0_y_0_yz_xyyyyyy, g_y_0_y_0_yz_xyyyyyz, g_y_0_y_0_yz_xyyyyz, g_y_0_y_0_yz_xyyyyzz, g_y_0_y_0_yz_xyyyzz, g_y_0_y_0_yz_xyyyzzz, g_y_0_y_0_yz_xyyzzz, g_y_0_y_0_yz_xyyzzzz, g_y_0_y_0_yz_xyzzzz, g_y_0_y_0_yz_xyzzzzz, g_y_0_y_0_yz_xzzzzz, g_y_0_y_0_yz_xzzzzzz, g_y_0_y_0_yz_yyyyyy, g_y_0_y_0_yz_yyyyyz, g_y_0_y_0_yz_yyyyzz, g_y_0_y_0_yz_yyyzzz, g_y_0_y_0_yz_yyzzzz, g_y_0_y_0_yz_yzzzzz, g_y_0_y_0_yz_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_y_0_y_0_xyz_xxxxxx[k] = -g_y_0_y_0_yz_xxxxxx[k] * ab_x + g_y_0_y_0_yz_xxxxxxx[k];

                g_y_0_y_0_xyz_xxxxxy[k] = -g_y_0_y_0_yz_xxxxxy[k] * ab_x + g_y_0_y_0_yz_xxxxxxy[k];

                g_y_0_y_0_xyz_xxxxxz[k] = -g_y_0_y_0_yz_xxxxxz[k] * ab_x + g_y_0_y_0_yz_xxxxxxz[k];

                g_y_0_y_0_xyz_xxxxyy[k] = -g_y_0_y_0_yz_xxxxyy[k] * ab_x + g_y_0_y_0_yz_xxxxxyy[k];

                g_y_0_y_0_xyz_xxxxyz[k] = -g_y_0_y_0_yz_xxxxyz[k] * ab_x + g_y_0_y_0_yz_xxxxxyz[k];

                g_y_0_y_0_xyz_xxxxzz[k] = -g_y_0_y_0_yz_xxxxzz[k] * ab_x + g_y_0_y_0_yz_xxxxxzz[k];

                g_y_0_y_0_xyz_xxxyyy[k] = -g_y_0_y_0_yz_xxxyyy[k] * ab_x + g_y_0_y_0_yz_xxxxyyy[k];

                g_y_0_y_0_xyz_xxxyyz[k] = -g_y_0_y_0_yz_xxxyyz[k] * ab_x + g_y_0_y_0_yz_xxxxyyz[k];

                g_y_0_y_0_xyz_xxxyzz[k] = -g_y_0_y_0_yz_xxxyzz[k] * ab_x + g_y_0_y_0_yz_xxxxyzz[k];

                g_y_0_y_0_xyz_xxxzzz[k] = -g_y_0_y_0_yz_xxxzzz[k] * ab_x + g_y_0_y_0_yz_xxxxzzz[k];

                g_y_0_y_0_xyz_xxyyyy[k] = -g_y_0_y_0_yz_xxyyyy[k] * ab_x + g_y_0_y_0_yz_xxxyyyy[k];

                g_y_0_y_0_xyz_xxyyyz[k] = -g_y_0_y_0_yz_xxyyyz[k] * ab_x + g_y_0_y_0_yz_xxxyyyz[k];

                g_y_0_y_0_xyz_xxyyzz[k] = -g_y_0_y_0_yz_xxyyzz[k] * ab_x + g_y_0_y_0_yz_xxxyyzz[k];

                g_y_0_y_0_xyz_xxyzzz[k] = -g_y_0_y_0_yz_xxyzzz[k] * ab_x + g_y_0_y_0_yz_xxxyzzz[k];

                g_y_0_y_0_xyz_xxzzzz[k] = -g_y_0_y_0_yz_xxzzzz[k] * ab_x + g_y_0_y_0_yz_xxxzzzz[k];

                g_y_0_y_0_xyz_xyyyyy[k] = -g_y_0_y_0_yz_xyyyyy[k] * ab_x + g_y_0_y_0_yz_xxyyyyy[k];

                g_y_0_y_0_xyz_xyyyyz[k] = -g_y_0_y_0_yz_xyyyyz[k] * ab_x + g_y_0_y_0_yz_xxyyyyz[k];

                g_y_0_y_0_xyz_xyyyzz[k] = -g_y_0_y_0_yz_xyyyzz[k] * ab_x + g_y_0_y_0_yz_xxyyyzz[k];

                g_y_0_y_0_xyz_xyyzzz[k] = -g_y_0_y_0_yz_xyyzzz[k] * ab_x + g_y_0_y_0_yz_xxyyzzz[k];

                g_y_0_y_0_xyz_xyzzzz[k] = -g_y_0_y_0_yz_xyzzzz[k] * ab_x + g_y_0_y_0_yz_xxyzzzz[k];

                g_y_0_y_0_xyz_xzzzzz[k] = -g_y_0_y_0_yz_xzzzzz[k] * ab_x + g_y_0_y_0_yz_xxzzzzz[k];

                g_y_0_y_0_xyz_yyyyyy[k] = -g_y_0_y_0_yz_yyyyyy[k] * ab_x + g_y_0_y_0_yz_xyyyyyy[k];

                g_y_0_y_0_xyz_yyyyyz[k] = -g_y_0_y_0_yz_yyyyyz[k] * ab_x + g_y_0_y_0_yz_xyyyyyz[k];

                g_y_0_y_0_xyz_yyyyzz[k] = -g_y_0_y_0_yz_yyyyzz[k] * ab_x + g_y_0_y_0_yz_xyyyyzz[k];

                g_y_0_y_0_xyz_yyyzzz[k] = -g_y_0_y_0_yz_yyyzzz[k] * ab_x + g_y_0_y_0_yz_xyyyzzz[k];

                g_y_0_y_0_xyz_yyzzzz[k] = -g_y_0_y_0_yz_yyzzzz[k] * ab_x + g_y_0_y_0_yz_xyyzzzz[k];

                g_y_0_y_0_xyz_yzzzzz[k] = -g_y_0_y_0_yz_yzzzzz[k] * ab_x + g_y_0_y_0_yz_xyzzzzz[k];

                g_y_0_y_0_xyz_zzzzzz[k] = -g_y_0_y_0_yz_zzzzzz[k] * ab_x + g_y_0_y_0_yz_xzzzzzz[k];
            }

            /// Set up 1260-1288 components of targeted buffer : cbuffer.data(

            auto g_y_0_y_0_xzz_xxxxxx = cbuffer.data(fi_geom_1010_off + 1260 * ccomps * dcomps);

            auto g_y_0_y_0_xzz_xxxxxy = cbuffer.data(fi_geom_1010_off + 1261 * ccomps * dcomps);

            auto g_y_0_y_0_xzz_xxxxxz = cbuffer.data(fi_geom_1010_off + 1262 * ccomps * dcomps);

            auto g_y_0_y_0_xzz_xxxxyy = cbuffer.data(fi_geom_1010_off + 1263 * ccomps * dcomps);

            auto g_y_0_y_0_xzz_xxxxyz = cbuffer.data(fi_geom_1010_off + 1264 * ccomps * dcomps);

            auto g_y_0_y_0_xzz_xxxxzz = cbuffer.data(fi_geom_1010_off + 1265 * ccomps * dcomps);

            auto g_y_0_y_0_xzz_xxxyyy = cbuffer.data(fi_geom_1010_off + 1266 * ccomps * dcomps);

            auto g_y_0_y_0_xzz_xxxyyz = cbuffer.data(fi_geom_1010_off + 1267 * ccomps * dcomps);

            auto g_y_0_y_0_xzz_xxxyzz = cbuffer.data(fi_geom_1010_off + 1268 * ccomps * dcomps);

            auto g_y_0_y_0_xzz_xxxzzz = cbuffer.data(fi_geom_1010_off + 1269 * ccomps * dcomps);

            auto g_y_0_y_0_xzz_xxyyyy = cbuffer.data(fi_geom_1010_off + 1270 * ccomps * dcomps);

            auto g_y_0_y_0_xzz_xxyyyz = cbuffer.data(fi_geom_1010_off + 1271 * ccomps * dcomps);

            auto g_y_0_y_0_xzz_xxyyzz = cbuffer.data(fi_geom_1010_off + 1272 * ccomps * dcomps);

            auto g_y_0_y_0_xzz_xxyzzz = cbuffer.data(fi_geom_1010_off + 1273 * ccomps * dcomps);

            auto g_y_0_y_0_xzz_xxzzzz = cbuffer.data(fi_geom_1010_off + 1274 * ccomps * dcomps);

            auto g_y_0_y_0_xzz_xyyyyy = cbuffer.data(fi_geom_1010_off + 1275 * ccomps * dcomps);

            auto g_y_0_y_0_xzz_xyyyyz = cbuffer.data(fi_geom_1010_off + 1276 * ccomps * dcomps);

            auto g_y_0_y_0_xzz_xyyyzz = cbuffer.data(fi_geom_1010_off + 1277 * ccomps * dcomps);

            auto g_y_0_y_0_xzz_xyyzzz = cbuffer.data(fi_geom_1010_off + 1278 * ccomps * dcomps);

            auto g_y_0_y_0_xzz_xyzzzz = cbuffer.data(fi_geom_1010_off + 1279 * ccomps * dcomps);

            auto g_y_0_y_0_xzz_xzzzzz = cbuffer.data(fi_geom_1010_off + 1280 * ccomps * dcomps);

            auto g_y_0_y_0_xzz_yyyyyy = cbuffer.data(fi_geom_1010_off + 1281 * ccomps * dcomps);

            auto g_y_0_y_0_xzz_yyyyyz = cbuffer.data(fi_geom_1010_off + 1282 * ccomps * dcomps);

            auto g_y_0_y_0_xzz_yyyyzz = cbuffer.data(fi_geom_1010_off + 1283 * ccomps * dcomps);

            auto g_y_0_y_0_xzz_yyyzzz = cbuffer.data(fi_geom_1010_off + 1284 * ccomps * dcomps);

            auto g_y_0_y_0_xzz_yyzzzz = cbuffer.data(fi_geom_1010_off + 1285 * ccomps * dcomps);

            auto g_y_0_y_0_xzz_yzzzzz = cbuffer.data(fi_geom_1010_off + 1286 * ccomps * dcomps);

            auto g_y_0_y_0_xzz_zzzzzz = cbuffer.data(fi_geom_1010_off + 1287 * ccomps * dcomps);

            #pragma omp simd aligned(g_y_0_y_0_xzz_xxxxxx, g_y_0_y_0_xzz_xxxxxy, g_y_0_y_0_xzz_xxxxxz, g_y_0_y_0_xzz_xxxxyy, g_y_0_y_0_xzz_xxxxyz, g_y_0_y_0_xzz_xxxxzz, g_y_0_y_0_xzz_xxxyyy, g_y_0_y_0_xzz_xxxyyz, g_y_0_y_0_xzz_xxxyzz, g_y_0_y_0_xzz_xxxzzz, g_y_0_y_0_xzz_xxyyyy, g_y_0_y_0_xzz_xxyyyz, g_y_0_y_0_xzz_xxyyzz, g_y_0_y_0_xzz_xxyzzz, g_y_0_y_0_xzz_xxzzzz, g_y_0_y_0_xzz_xyyyyy, g_y_0_y_0_xzz_xyyyyz, g_y_0_y_0_xzz_xyyyzz, g_y_0_y_0_xzz_xyyzzz, g_y_0_y_0_xzz_xyzzzz, g_y_0_y_0_xzz_xzzzzz, g_y_0_y_0_xzz_yyyyyy, g_y_0_y_0_xzz_yyyyyz, g_y_0_y_0_xzz_yyyyzz, g_y_0_y_0_xzz_yyyzzz, g_y_0_y_0_xzz_yyzzzz, g_y_0_y_0_xzz_yzzzzz, g_y_0_y_0_xzz_zzzzzz, g_y_0_y_0_zz_xxxxxx, g_y_0_y_0_zz_xxxxxxx, g_y_0_y_0_zz_xxxxxxy, g_y_0_y_0_zz_xxxxxxz, g_y_0_y_0_zz_xxxxxy, g_y_0_y_0_zz_xxxxxyy, g_y_0_y_0_zz_xxxxxyz, g_y_0_y_0_zz_xxxxxz, g_y_0_y_0_zz_xxxxxzz, g_y_0_y_0_zz_xxxxyy, g_y_0_y_0_zz_xxxxyyy, g_y_0_y_0_zz_xxxxyyz, g_y_0_y_0_zz_xxxxyz, g_y_0_y_0_zz_xxxxyzz, g_y_0_y_0_zz_xxxxzz, g_y_0_y_0_zz_xxxxzzz, g_y_0_y_0_zz_xxxyyy, g_y_0_y_0_zz_xxxyyyy, g_y_0_y_0_zz_xxxyyyz, g_y_0_y_0_zz_xxxyyz, g_y_0_y_0_zz_xxxyyzz, g_y_0_y_0_zz_xxxyzz, g_y_0_y_0_zz_xxxyzzz, g_y_0_y_0_zz_xxxzzz, g_y_0_y_0_zz_xxxzzzz, g_y_0_y_0_zz_xxyyyy, g_y_0_y_0_zz_xxyyyyy, g_y_0_y_0_zz_xxyyyyz, g_y_0_y_0_zz_xxyyyz, g_y_0_y_0_zz_xxyyyzz, g_y_0_y_0_zz_xxyyzz, g_y_0_y_0_zz_xxyyzzz, g_y_0_y_0_zz_xxyzzz, g_y_0_y_0_zz_xxyzzzz, g_y_0_y_0_zz_xxzzzz, g_y_0_y_0_zz_xxzzzzz, g_y_0_y_0_zz_xyyyyy, g_y_0_y_0_zz_xyyyyyy, g_y_0_y_0_zz_xyyyyyz, g_y_0_y_0_zz_xyyyyz, g_y_0_y_0_zz_xyyyyzz, g_y_0_y_0_zz_xyyyzz, g_y_0_y_0_zz_xyyyzzz, g_y_0_y_0_zz_xyyzzz, g_y_0_y_0_zz_xyyzzzz, g_y_0_y_0_zz_xyzzzz, g_y_0_y_0_zz_xyzzzzz, g_y_0_y_0_zz_xzzzzz, g_y_0_y_0_zz_xzzzzzz, g_y_0_y_0_zz_yyyyyy, g_y_0_y_0_zz_yyyyyz, g_y_0_y_0_zz_yyyyzz, g_y_0_y_0_zz_yyyzzz, g_y_0_y_0_zz_yyzzzz, g_y_0_y_0_zz_yzzzzz, g_y_0_y_0_zz_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_y_0_y_0_xzz_xxxxxx[k] = -g_y_0_y_0_zz_xxxxxx[k] * ab_x + g_y_0_y_0_zz_xxxxxxx[k];

                g_y_0_y_0_xzz_xxxxxy[k] = -g_y_0_y_0_zz_xxxxxy[k] * ab_x + g_y_0_y_0_zz_xxxxxxy[k];

                g_y_0_y_0_xzz_xxxxxz[k] = -g_y_0_y_0_zz_xxxxxz[k] * ab_x + g_y_0_y_0_zz_xxxxxxz[k];

                g_y_0_y_0_xzz_xxxxyy[k] = -g_y_0_y_0_zz_xxxxyy[k] * ab_x + g_y_0_y_0_zz_xxxxxyy[k];

                g_y_0_y_0_xzz_xxxxyz[k] = -g_y_0_y_0_zz_xxxxyz[k] * ab_x + g_y_0_y_0_zz_xxxxxyz[k];

                g_y_0_y_0_xzz_xxxxzz[k] = -g_y_0_y_0_zz_xxxxzz[k] * ab_x + g_y_0_y_0_zz_xxxxxzz[k];

                g_y_0_y_0_xzz_xxxyyy[k] = -g_y_0_y_0_zz_xxxyyy[k] * ab_x + g_y_0_y_0_zz_xxxxyyy[k];

                g_y_0_y_0_xzz_xxxyyz[k] = -g_y_0_y_0_zz_xxxyyz[k] * ab_x + g_y_0_y_0_zz_xxxxyyz[k];

                g_y_0_y_0_xzz_xxxyzz[k] = -g_y_0_y_0_zz_xxxyzz[k] * ab_x + g_y_0_y_0_zz_xxxxyzz[k];

                g_y_0_y_0_xzz_xxxzzz[k] = -g_y_0_y_0_zz_xxxzzz[k] * ab_x + g_y_0_y_0_zz_xxxxzzz[k];

                g_y_0_y_0_xzz_xxyyyy[k] = -g_y_0_y_0_zz_xxyyyy[k] * ab_x + g_y_0_y_0_zz_xxxyyyy[k];

                g_y_0_y_0_xzz_xxyyyz[k] = -g_y_0_y_0_zz_xxyyyz[k] * ab_x + g_y_0_y_0_zz_xxxyyyz[k];

                g_y_0_y_0_xzz_xxyyzz[k] = -g_y_0_y_0_zz_xxyyzz[k] * ab_x + g_y_0_y_0_zz_xxxyyzz[k];

                g_y_0_y_0_xzz_xxyzzz[k] = -g_y_0_y_0_zz_xxyzzz[k] * ab_x + g_y_0_y_0_zz_xxxyzzz[k];

                g_y_0_y_0_xzz_xxzzzz[k] = -g_y_0_y_0_zz_xxzzzz[k] * ab_x + g_y_0_y_0_zz_xxxzzzz[k];

                g_y_0_y_0_xzz_xyyyyy[k] = -g_y_0_y_0_zz_xyyyyy[k] * ab_x + g_y_0_y_0_zz_xxyyyyy[k];

                g_y_0_y_0_xzz_xyyyyz[k] = -g_y_0_y_0_zz_xyyyyz[k] * ab_x + g_y_0_y_0_zz_xxyyyyz[k];

                g_y_0_y_0_xzz_xyyyzz[k] = -g_y_0_y_0_zz_xyyyzz[k] * ab_x + g_y_0_y_0_zz_xxyyyzz[k];

                g_y_0_y_0_xzz_xyyzzz[k] = -g_y_0_y_0_zz_xyyzzz[k] * ab_x + g_y_0_y_0_zz_xxyyzzz[k];

                g_y_0_y_0_xzz_xyzzzz[k] = -g_y_0_y_0_zz_xyzzzz[k] * ab_x + g_y_0_y_0_zz_xxyzzzz[k];

                g_y_0_y_0_xzz_xzzzzz[k] = -g_y_0_y_0_zz_xzzzzz[k] * ab_x + g_y_0_y_0_zz_xxzzzzz[k];

                g_y_0_y_0_xzz_yyyyyy[k] = -g_y_0_y_0_zz_yyyyyy[k] * ab_x + g_y_0_y_0_zz_xyyyyyy[k];

                g_y_0_y_0_xzz_yyyyyz[k] = -g_y_0_y_0_zz_yyyyyz[k] * ab_x + g_y_0_y_0_zz_xyyyyyz[k];

                g_y_0_y_0_xzz_yyyyzz[k] = -g_y_0_y_0_zz_yyyyzz[k] * ab_x + g_y_0_y_0_zz_xyyyyzz[k];

                g_y_0_y_0_xzz_yyyzzz[k] = -g_y_0_y_0_zz_yyyzzz[k] * ab_x + g_y_0_y_0_zz_xyyyzzz[k];

                g_y_0_y_0_xzz_yyzzzz[k] = -g_y_0_y_0_zz_yyzzzz[k] * ab_x + g_y_0_y_0_zz_xyyzzzz[k];

                g_y_0_y_0_xzz_yzzzzz[k] = -g_y_0_y_0_zz_yzzzzz[k] * ab_x + g_y_0_y_0_zz_xyzzzzz[k];

                g_y_0_y_0_xzz_zzzzzz[k] = -g_y_0_y_0_zz_zzzzzz[k] * ab_x + g_y_0_y_0_zz_xzzzzzz[k];
            }

            /// Set up 1288-1316 components of targeted buffer : cbuffer.data(

            auto g_y_0_y_0_yyy_xxxxxx = cbuffer.data(fi_geom_1010_off + 1288 * ccomps * dcomps);

            auto g_y_0_y_0_yyy_xxxxxy = cbuffer.data(fi_geom_1010_off + 1289 * ccomps * dcomps);

            auto g_y_0_y_0_yyy_xxxxxz = cbuffer.data(fi_geom_1010_off + 1290 * ccomps * dcomps);

            auto g_y_0_y_0_yyy_xxxxyy = cbuffer.data(fi_geom_1010_off + 1291 * ccomps * dcomps);

            auto g_y_0_y_0_yyy_xxxxyz = cbuffer.data(fi_geom_1010_off + 1292 * ccomps * dcomps);

            auto g_y_0_y_0_yyy_xxxxzz = cbuffer.data(fi_geom_1010_off + 1293 * ccomps * dcomps);

            auto g_y_0_y_0_yyy_xxxyyy = cbuffer.data(fi_geom_1010_off + 1294 * ccomps * dcomps);

            auto g_y_0_y_0_yyy_xxxyyz = cbuffer.data(fi_geom_1010_off + 1295 * ccomps * dcomps);

            auto g_y_0_y_0_yyy_xxxyzz = cbuffer.data(fi_geom_1010_off + 1296 * ccomps * dcomps);

            auto g_y_0_y_0_yyy_xxxzzz = cbuffer.data(fi_geom_1010_off + 1297 * ccomps * dcomps);

            auto g_y_0_y_0_yyy_xxyyyy = cbuffer.data(fi_geom_1010_off + 1298 * ccomps * dcomps);

            auto g_y_0_y_0_yyy_xxyyyz = cbuffer.data(fi_geom_1010_off + 1299 * ccomps * dcomps);

            auto g_y_0_y_0_yyy_xxyyzz = cbuffer.data(fi_geom_1010_off + 1300 * ccomps * dcomps);

            auto g_y_0_y_0_yyy_xxyzzz = cbuffer.data(fi_geom_1010_off + 1301 * ccomps * dcomps);

            auto g_y_0_y_0_yyy_xxzzzz = cbuffer.data(fi_geom_1010_off + 1302 * ccomps * dcomps);

            auto g_y_0_y_0_yyy_xyyyyy = cbuffer.data(fi_geom_1010_off + 1303 * ccomps * dcomps);

            auto g_y_0_y_0_yyy_xyyyyz = cbuffer.data(fi_geom_1010_off + 1304 * ccomps * dcomps);

            auto g_y_0_y_0_yyy_xyyyzz = cbuffer.data(fi_geom_1010_off + 1305 * ccomps * dcomps);

            auto g_y_0_y_0_yyy_xyyzzz = cbuffer.data(fi_geom_1010_off + 1306 * ccomps * dcomps);

            auto g_y_0_y_0_yyy_xyzzzz = cbuffer.data(fi_geom_1010_off + 1307 * ccomps * dcomps);

            auto g_y_0_y_0_yyy_xzzzzz = cbuffer.data(fi_geom_1010_off + 1308 * ccomps * dcomps);

            auto g_y_0_y_0_yyy_yyyyyy = cbuffer.data(fi_geom_1010_off + 1309 * ccomps * dcomps);

            auto g_y_0_y_0_yyy_yyyyyz = cbuffer.data(fi_geom_1010_off + 1310 * ccomps * dcomps);

            auto g_y_0_y_0_yyy_yyyyzz = cbuffer.data(fi_geom_1010_off + 1311 * ccomps * dcomps);

            auto g_y_0_y_0_yyy_yyyzzz = cbuffer.data(fi_geom_1010_off + 1312 * ccomps * dcomps);

            auto g_y_0_y_0_yyy_yyzzzz = cbuffer.data(fi_geom_1010_off + 1313 * ccomps * dcomps);

            auto g_y_0_y_0_yyy_yzzzzz = cbuffer.data(fi_geom_1010_off + 1314 * ccomps * dcomps);

            auto g_y_0_y_0_yyy_zzzzzz = cbuffer.data(fi_geom_1010_off + 1315 * ccomps * dcomps);

            #pragma omp simd aligned(g_0_0_y_0_yy_xxxxxx, g_0_0_y_0_yy_xxxxxy, g_0_0_y_0_yy_xxxxxz, g_0_0_y_0_yy_xxxxyy, g_0_0_y_0_yy_xxxxyz, g_0_0_y_0_yy_xxxxzz, g_0_0_y_0_yy_xxxyyy, g_0_0_y_0_yy_xxxyyz, g_0_0_y_0_yy_xxxyzz, g_0_0_y_0_yy_xxxzzz, g_0_0_y_0_yy_xxyyyy, g_0_0_y_0_yy_xxyyyz, g_0_0_y_0_yy_xxyyzz, g_0_0_y_0_yy_xxyzzz, g_0_0_y_0_yy_xxzzzz, g_0_0_y_0_yy_xyyyyy, g_0_0_y_0_yy_xyyyyz, g_0_0_y_0_yy_xyyyzz, g_0_0_y_0_yy_xyyzzz, g_0_0_y_0_yy_xyzzzz, g_0_0_y_0_yy_xzzzzz, g_0_0_y_0_yy_yyyyyy, g_0_0_y_0_yy_yyyyyz, g_0_0_y_0_yy_yyyyzz, g_0_0_y_0_yy_yyyzzz, g_0_0_y_0_yy_yyzzzz, g_0_0_y_0_yy_yzzzzz, g_0_0_y_0_yy_zzzzzz, g_y_0_y_0_yy_xxxxxx, g_y_0_y_0_yy_xxxxxxy, g_y_0_y_0_yy_xxxxxy, g_y_0_y_0_yy_xxxxxyy, g_y_0_y_0_yy_xxxxxyz, g_y_0_y_0_yy_xxxxxz, g_y_0_y_0_yy_xxxxyy, g_y_0_y_0_yy_xxxxyyy, g_y_0_y_0_yy_xxxxyyz, g_y_0_y_0_yy_xxxxyz, g_y_0_y_0_yy_xxxxyzz, g_y_0_y_0_yy_xxxxzz, g_y_0_y_0_yy_xxxyyy, g_y_0_y_0_yy_xxxyyyy, g_y_0_y_0_yy_xxxyyyz, g_y_0_y_0_yy_xxxyyz, g_y_0_y_0_yy_xxxyyzz, g_y_0_y_0_yy_xxxyzz, g_y_0_y_0_yy_xxxyzzz, g_y_0_y_0_yy_xxxzzz, g_y_0_y_0_yy_xxyyyy, g_y_0_y_0_yy_xxyyyyy, g_y_0_y_0_yy_xxyyyyz, g_y_0_y_0_yy_xxyyyz, g_y_0_y_0_yy_xxyyyzz, g_y_0_y_0_yy_xxyyzz, g_y_0_y_0_yy_xxyyzzz, g_y_0_y_0_yy_xxyzzz, g_y_0_y_0_yy_xxyzzzz, g_y_0_y_0_yy_xxzzzz, g_y_0_y_0_yy_xyyyyy, g_y_0_y_0_yy_xyyyyyy, g_y_0_y_0_yy_xyyyyyz, g_y_0_y_0_yy_xyyyyz, g_y_0_y_0_yy_xyyyyzz, g_y_0_y_0_yy_xyyyzz, g_y_0_y_0_yy_xyyyzzz, g_y_0_y_0_yy_xyyzzz, g_y_0_y_0_yy_xyyzzzz, g_y_0_y_0_yy_xyzzzz, g_y_0_y_0_yy_xyzzzzz, g_y_0_y_0_yy_xzzzzz, g_y_0_y_0_yy_yyyyyy, g_y_0_y_0_yy_yyyyyyy, g_y_0_y_0_yy_yyyyyyz, g_y_0_y_0_yy_yyyyyz, g_y_0_y_0_yy_yyyyyzz, g_y_0_y_0_yy_yyyyzz, g_y_0_y_0_yy_yyyyzzz, g_y_0_y_0_yy_yyyzzz, g_y_0_y_0_yy_yyyzzzz, g_y_0_y_0_yy_yyzzzz, g_y_0_y_0_yy_yyzzzzz, g_y_0_y_0_yy_yzzzzz, g_y_0_y_0_yy_yzzzzzz, g_y_0_y_0_yy_zzzzzz, g_y_0_y_0_yyy_xxxxxx, g_y_0_y_0_yyy_xxxxxy, g_y_0_y_0_yyy_xxxxxz, g_y_0_y_0_yyy_xxxxyy, g_y_0_y_0_yyy_xxxxyz, g_y_0_y_0_yyy_xxxxzz, g_y_0_y_0_yyy_xxxyyy, g_y_0_y_0_yyy_xxxyyz, g_y_0_y_0_yyy_xxxyzz, g_y_0_y_0_yyy_xxxzzz, g_y_0_y_0_yyy_xxyyyy, g_y_0_y_0_yyy_xxyyyz, g_y_0_y_0_yyy_xxyyzz, g_y_0_y_0_yyy_xxyzzz, g_y_0_y_0_yyy_xxzzzz, g_y_0_y_0_yyy_xyyyyy, g_y_0_y_0_yyy_xyyyyz, g_y_0_y_0_yyy_xyyyzz, g_y_0_y_0_yyy_xyyzzz, g_y_0_y_0_yyy_xyzzzz, g_y_0_y_0_yyy_xzzzzz, g_y_0_y_0_yyy_yyyyyy, g_y_0_y_0_yyy_yyyyyz, g_y_0_y_0_yyy_yyyyzz, g_y_0_y_0_yyy_yyyzzz, g_y_0_y_0_yyy_yyzzzz, g_y_0_y_0_yyy_yzzzzz, g_y_0_y_0_yyy_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_y_0_y_0_yyy_xxxxxx[k] = -g_0_0_y_0_yy_xxxxxx[k] - g_y_0_y_0_yy_xxxxxx[k] * ab_y + g_y_0_y_0_yy_xxxxxxy[k];

                g_y_0_y_0_yyy_xxxxxy[k] = -g_0_0_y_0_yy_xxxxxy[k] - g_y_0_y_0_yy_xxxxxy[k] * ab_y + g_y_0_y_0_yy_xxxxxyy[k];

                g_y_0_y_0_yyy_xxxxxz[k] = -g_0_0_y_0_yy_xxxxxz[k] - g_y_0_y_0_yy_xxxxxz[k] * ab_y + g_y_0_y_0_yy_xxxxxyz[k];

                g_y_0_y_0_yyy_xxxxyy[k] = -g_0_0_y_0_yy_xxxxyy[k] - g_y_0_y_0_yy_xxxxyy[k] * ab_y + g_y_0_y_0_yy_xxxxyyy[k];

                g_y_0_y_0_yyy_xxxxyz[k] = -g_0_0_y_0_yy_xxxxyz[k] - g_y_0_y_0_yy_xxxxyz[k] * ab_y + g_y_0_y_0_yy_xxxxyyz[k];

                g_y_0_y_0_yyy_xxxxzz[k] = -g_0_0_y_0_yy_xxxxzz[k] - g_y_0_y_0_yy_xxxxzz[k] * ab_y + g_y_0_y_0_yy_xxxxyzz[k];

                g_y_0_y_0_yyy_xxxyyy[k] = -g_0_0_y_0_yy_xxxyyy[k] - g_y_0_y_0_yy_xxxyyy[k] * ab_y + g_y_0_y_0_yy_xxxyyyy[k];

                g_y_0_y_0_yyy_xxxyyz[k] = -g_0_0_y_0_yy_xxxyyz[k] - g_y_0_y_0_yy_xxxyyz[k] * ab_y + g_y_0_y_0_yy_xxxyyyz[k];

                g_y_0_y_0_yyy_xxxyzz[k] = -g_0_0_y_0_yy_xxxyzz[k] - g_y_0_y_0_yy_xxxyzz[k] * ab_y + g_y_0_y_0_yy_xxxyyzz[k];

                g_y_0_y_0_yyy_xxxzzz[k] = -g_0_0_y_0_yy_xxxzzz[k] - g_y_0_y_0_yy_xxxzzz[k] * ab_y + g_y_0_y_0_yy_xxxyzzz[k];

                g_y_0_y_0_yyy_xxyyyy[k] = -g_0_0_y_0_yy_xxyyyy[k] - g_y_0_y_0_yy_xxyyyy[k] * ab_y + g_y_0_y_0_yy_xxyyyyy[k];

                g_y_0_y_0_yyy_xxyyyz[k] = -g_0_0_y_0_yy_xxyyyz[k] - g_y_0_y_0_yy_xxyyyz[k] * ab_y + g_y_0_y_0_yy_xxyyyyz[k];

                g_y_0_y_0_yyy_xxyyzz[k] = -g_0_0_y_0_yy_xxyyzz[k] - g_y_0_y_0_yy_xxyyzz[k] * ab_y + g_y_0_y_0_yy_xxyyyzz[k];

                g_y_0_y_0_yyy_xxyzzz[k] = -g_0_0_y_0_yy_xxyzzz[k] - g_y_0_y_0_yy_xxyzzz[k] * ab_y + g_y_0_y_0_yy_xxyyzzz[k];

                g_y_0_y_0_yyy_xxzzzz[k] = -g_0_0_y_0_yy_xxzzzz[k] - g_y_0_y_0_yy_xxzzzz[k] * ab_y + g_y_0_y_0_yy_xxyzzzz[k];

                g_y_0_y_0_yyy_xyyyyy[k] = -g_0_0_y_0_yy_xyyyyy[k] - g_y_0_y_0_yy_xyyyyy[k] * ab_y + g_y_0_y_0_yy_xyyyyyy[k];

                g_y_0_y_0_yyy_xyyyyz[k] = -g_0_0_y_0_yy_xyyyyz[k] - g_y_0_y_0_yy_xyyyyz[k] * ab_y + g_y_0_y_0_yy_xyyyyyz[k];

                g_y_0_y_0_yyy_xyyyzz[k] = -g_0_0_y_0_yy_xyyyzz[k] - g_y_0_y_0_yy_xyyyzz[k] * ab_y + g_y_0_y_0_yy_xyyyyzz[k];

                g_y_0_y_0_yyy_xyyzzz[k] = -g_0_0_y_0_yy_xyyzzz[k] - g_y_0_y_0_yy_xyyzzz[k] * ab_y + g_y_0_y_0_yy_xyyyzzz[k];

                g_y_0_y_0_yyy_xyzzzz[k] = -g_0_0_y_0_yy_xyzzzz[k] - g_y_0_y_0_yy_xyzzzz[k] * ab_y + g_y_0_y_0_yy_xyyzzzz[k];

                g_y_0_y_0_yyy_xzzzzz[k] = -g_0_0_y_0_yy_xzzzzz[k] - g_y_0_y_0_yy_xzzzzz[k] * ab_y + g_y_0_y_0_yy_xyzzzzz[k];

                g_y_0_y_0_yyy_yyyyyy[k] = -g_0_0_y_0_yy_yyyyyy[k] - g_y_0_y_0_yy_yyyyyy[k] * ab_y + g_y_0_y_0_yy_yyyyyyy[k];

                g_y_0_y_0_yyy_yyyyyz[k] = -g_0_0_y_0_yy_yyyyyz[k] - g_y_0_y_0_yy_yyyyyz[k] * ab_y + g_y_0_y_0_yy_yyyyyyz[k];

                g_y_0_y_0_yyy_yyyyzz[k] = -g_0_0_y_0_yy_yyyyzz[k] - g_y_0_y_0_yy_yyyyzz[k] * ab_y + g_y_0_y_0_yy_yyyyyzz[k];

                g_y_0_y_0_yyy_yyyzzz[k] = -g_0_0_y_0_yy_yyyzzz[k] - g_y_0_y_0_yy_yyyzzz[k] * ab_y + g_y_0_y_0_yy_yyyyzzz[k];

                g_y_0_y_0_yyy_yyzzzz[k] = -g_0_0_y_0_yy_yyzzzz[k] - g_y_0_y_0_yy_yyzzzz[k] * ab_y + g_y_0_y_0_yy_yyyzzzz[k];

                g_y_0_y_0_yyy_yzzzzz[k] = -g_0_0_y_0_yy_yzzzzz[k] - g_y_0_y_0_yy_yzzzzz[k] * ab_y + g_y_0_y_0_yy_yyzzzzz[k];

                g_y_0_y_0_yyy_zzzzzz[k] = -g_0_0_y_0_yy_zzzzzz[k] - g_y_0_y_0_yy_zzzzzz[k] * ab_y + g_y_0_y_0_yy_yzzzzzz[k];
            }

            /// Set up 1316-1344 components of targeted buffer : cbuffer.data(

            auto g_y_0_y_0_yyz_xxxxxx = cbuffer.data(fi_geom_1010_off + 1316 * ccomps * dcomps);

            auto g_y_0_y_0_yyz_xxxxxy = cbuffer.data(fi_geom_1010_off + 1317 * ccomps * dcomps);

            auto g_y_0_y_0_yyz_xxxxxz = cbuffer.data(fi_geom_1010_off + 1318 * ccomps * dcomps);

            auto g_y_0_y_0_yyz_xxxxyy = cbuffer.data(fi_geom_1010_off + 1319 * ccomps * dcomps);

            auto g_y_0_y_0_yyz_xxxxyz = cbuffer.data(fi_geom_1010_off + 1320 * ccomps * dcomps);

            auto g_y_0_y_0_yyz_xxxxzz = cbuffer.data(fi_geom_1010_off + 1321 * ccomps * dcomps);

            auto g_y_0_y_0_yyz_xxxyyy = cbuffer.data(fi_geom_1010_off + 1322 * ccomps * dcomps);

            auto g_y_0_y_0_yyz_xxxyyz = cbuffer.data(fi_geom_1010_off + 1323 * ccomps * dcomps);

            auto g_y_0_y_0_yyz_xxxyzz = cbuffer.data(fi_geom_1010_off + 1324 * ccomps * dcomps);

            auto g_y_0_y_0_yyz_xxxzzz = cbuffer.data(fi_geom_1010_off + 1325 * ccomps * dcomps);

            auto g_y_0_y_0_yyz_xxyyyy = cbuffer.data(fi_geom_1010_off + 1326 * ccomps * dcomps);

            auto g_y_0_y_0_yyz_xxyyyz = cbuffer.data(fi_geom_1010_off + 1327 * ccomps * dcomps);

            auto g_y_0_y_0_yyz_xxyyzz = cbuffer.data(fi_geom_1010_off + 1328 * ccomps * dcomps);

            auto g_y_0_y_0_yyz_xxyzzz = cbuffer.data(fi_geom_1010_off + 1329 * ccomps * dcomps);

            auto g_y_0_y_0_yyz_xxzzzz = cbuffer.data(fi_geom_1010_off + 1330 * ccomps * dcomps);

            auto g_y_0_y_0_yyz_xyyyyy = cbuffer.data(fi_geom_1010_off + 1331 * ccomps * dcomps);

            auto g_y_0_y_0_yyz_xyyyyz = cbuffer.data(fi_geom_1010_off + 1332 * ccomps * dcomps);

            auto g_y_0_y_0_yyz_xyyyzz = cbuffer.data(fi_geom_1010_off + 1333 * ccomps * dcomps);

            auto g_y_0_y_0_yyz_xyyzzz = cbuffer.data(fi_geom_1010_off + 1334 * ccomps * dcomps);

            auto g_y_0_y_0_yyz_xyzzzz = cbuffer.data(fi_geom_1010_off + 1335 * ccomps * dcomps);

            auto g_y_0_y_0_yyz_xzzzzz = cbuffer.data(fi_geom_1010_off + 1336 * ccomps * dcomps);

            auto g_y_0_y_0_yyz_yyyyyy = cbuffer.data(fi_geom_1010_off + 1337 * ccomps * dcomps);

            auto g_y_0_y_0_yyz_yyyyyz = cbuffer.data(fi_geom_1010_off + 1338 * ccomps * dcomps);

            auto g_y_0_y_0_yyz_yyyyzz = cbuffer.data(fi_geom_1010_off + 1339 * ccomps * dcomps);

            auto g_y_0_y_0_yyz_yyyzzz = cbuffer.data(fi_geom_1010_off + 1340 * ccomps * dcomps);

            auto g_y_0_y_0_yyz_yyzzzz = cbuffer.data(fi_geom_1010_off + 1341 * ccomps * dcomps);

            auto g_y_0_y_0_yyz_yzzzzz = cbuffer.data(fi_geom_1010_off + 1342 * ccomps * dcomps);

            auto g_y_0_y_0_yyz_zzzzzz = cbuffer.data(fi_geom_1010_off + 1343 * ccomps * dcomps);

            #pragma omp simd aligned(g_y_0_y_0_yy_xxxxxx, g_y_0_y_0_yy_xxxxxxz, g_y_0_y_0_yy_xxxxxy, g_y_0_y_0_yy_xxxxxyz, g_y_0_y_0_yy_xxxxxz, g_y_0_y_0_yy_xxxxxzz, g_y_0_y_0_yy_xxxxyy, g_y_0_y_0_yy_xxxxyyz, g_y_0_y_0_yy_xxxxyz, g_y_0_y_0_yy_xxxxyzz, g_y_0_y_0_yy_xxxxzz, g_y_0_y_0_yy_xxxxzzz, g_y_0_y_0_yy_xxxyyy, g_y_0_y_0_yy_xxxyyyz, g_y_0_y_0_yy_xxxyyz, g_y_0_y_0_yy_xxxyyzz, g_y_0_y_0_yy_xxxyzz, g_y_0_y_0_yy_xxxyzzz, g_y_0_y_0_yy_xxxzzz, g_y_0_y_0_yy_xxxzzzz, g_y_0_y_0_yy_xxyyyy, g_y_0_y_0_yy_xxyyyyz, g_y_0_y_0_yy_xxyyyz, g_y_0_y_0_yy_xxyyyzz, g_y_0_y_0_yy_xxyyzz, g_y_0_y_0_yy_xxyyzzz, g_y_0_y_0_yy_xxyzzz, g_y_0_y_0_yy_xxyzzzz, g_y_0_y_0_yy_xxzzzz, g_y_0_y_0_yy_xxzzzzz, g_y_0_y_0_yy_xyyyyy, g_y_0_y_0_yy_xyyyyyz, g_y_0_y_0_yy_xyyyyz, g_y_0_y_0_yy_xyyyyzz, g_y_0_y_0_yy_xyyyzz, g_y_0_y_0_yy_xyyyzzz, g_y_0_y_0_yy_xyyzzz, g_y_0_y_0_yy_xyyzzzz, g_y_0_y_0_yy_xyzzzz, g_y_0_y_0_yy_xyzzzzz, g_y_0_y_0_yy_xzzzzz, g_y_0_y_0_yy_xzzzzzz, g_y_0_y_0_yy_yyyyyy, g_y_0_y_0_yy_yyyyyyz, g_y_0_y_0_yy_yyyyyz, g_y_0_y_0_yy_yyyyyzz, g_y_0_y_0_yy_yyyyzz, g_y_0_y_0_yy_yyyyzzz, g_y_0_y_0_yy_yyyzzz, g_y_0_y_0_yy_yyyzzzz, g_y_0_y_0_yy_yyzzzz, g_y_0_y_0_yy_yyzzzzz, g_y_0_y_0_yy_yzzzzz, g_y_0_y_0_yy_yzzzzzz, g_y_0_y_0_yy_zzzzzz, g_y_0_y_0_yy_zzzzzzz, g_y_0_y_0_yyz_xxxxxx, g_y_0_y_0_yyz_xxxxxy, g_y_0_y_0_yyz_xxxxxz, g_y_0_y_0_yyz_xxxxyy, g_y_0_y_0_yyz_xxxxyz, g_y_0_y_0_yyz_xxxxzz, g_y_0_y_0_yyz_xxxyyy, g_y_0_y_0_yyz_xxxyyz, g_y_0_y_0_yyz_xxxyzz, g_y_0_y_0_yyz_xxxzzz, g_y_0_y_0_yyz_xxyyyy, g_y_0_y_0_yyz_xxyyyz, g_y_0_y_0_yyz_xxyyzz, g_y_0_y_0_yyz_xxyzzz, g_y_0_y_0_yyz_xxzzzz, g_y_0_y_0_yyz_xyyyyy, g_y_0_y_0_yyz_xyyyyz, g_y_0_y_0_yyz_xyyyzz, g_y_0_y_0_yyz_xyyzzz, g_y_0_y_0_yyz_xyzzzz, g_y_0_y_0_yyz_xzzzzz, g_y_0_y_0_yyz_yyyyyy, g_y_0_y_0_yyz_yyyyyz, g_y_0_y_0_yyz_yyyyzz, g_y_0_y_0_yyz_yyyzzz, g_y_0_y_0_yyz_yyzzzz, g_y_0_y_0_yyz_yzzzzz, g_y_0_y_0_yyz_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_y_0_y_0_yyz_xxxxxx[k] = -g_y_0_y_0_yy_xxxxxx[k] * ab_z + g_y_0_y_0_yy_xxxxxxz[k];

                g_y_0_y_0_yyz_xxxxxy[k] = -g_y_0_y_0_yy_xxxxxy[k] * ab_z + g_y_0_y_0_yy_xxxxxyz[k];

                g_y_0_y_0_yyz_xxxxxz[k] = -g_y_0_y_0_yy_xxxxxz[k] * ab_z + g_y_0_y_0_yy_xxxxxzz[k];

                g_y_0_y_0_yyz_xxxxyy[k] = -g_y_0_y_0_yy_xxxxyy[k] * ab_z + g_y_0_y_0_yy_xxxxyyz[k];

                g_y_0_y_0_yyz_xxxxyz[k] = -g_y_0_y_0_yy_xxxxyz[k] * ab_z + g_y_0_y_0_yy_xxxxyzz[k];

                g_y_0_y_0_yyz_xxxxzz[k] = -g_y_0_y_0_yy_xxxxzz[k] * ab_z + g_y_0_y_0_yy_xxxxzzz[k];

                g_y_0_y_0_yyz_xxxyyy[k] = -g_y_0_y_0_yy_xxxyyy[k] * ab_z + g_y_0_y_0_yy_xxxyyyz[k];

                g_y_0_y_0_yyz_xxxyyz[k] = -g_y_0_y_0_yy_xxxyyz[k] * ab_z + g_y_0_y_0_yy_xxxyyzz[k];

                g_y_0_y_0_yyz_xxxyzz[k] = -g_y_0_y_0_yy_xxxyzz[k] * ab_z + g_y_0_y_0_yy_xxxyzzz[k];

                g_y_0_y_0_yyz_xxxzzz[k] = -g_y_0_y_0_yy_xxxzzz[k] * ab_z + g_y_0_y_0_yy_xxxzzzz[k];

                g_y_0_y_0_yyz_xxyyyy[k] = -g_y_0_y_0_yy_xxyyyy[k] * ab_z + g_y_0_y_0_yy_xxyyyyz[k];

                g_y_0_y_0_yyz_xxyyyz[k] = -g_y_0_y_0_yy_xxyyyz[k] * ab_z + g_y_0_y_0_yy_xxyyyzz[k];

                g_y_0_y_0_yyz_xxyyzz[k] = -g_y_0_y_0_yy_xxyyzz[k] * ab_z + g_y_0_y_0_yy_xxyyzzz[k];

                g_y_0_y_0_yyz_xxyzzz[k] = -g_y_0_y_0_yy_xxyzzz[k] * ab_z + g_y_0_y_0_yy_xxyzzzz[k];

                g_y_0_y_0_yyz_xxzzzz[k] = -g_y_0_y_0_yy_xxzzzz[k] * ab_z + g_y_0_y_0_yy_xxzzzzz[k];

                g_y_0_y_0_yyz_xyyyyy[k] = -g_y_0_y_0_yy_xyyyyy[k] * ab_z + g_y_0_y_0_yy_xyyyyyz[k];

                g_y_0_y_0_yyz_xyyyyz[k] = -g_y_0_y_0_yy_xyyyyz[k] * ab_z + g_y_0_y_0_yy_xyyyyzz[k];

                g_y_0_y_0_yyz_xyyyzz[k] = -g_y_0_y_0_yy_xyyyzz[k] * ab_z + g_y_0_y_0_yy_xyyyzzz[k];

                g_y_0_y_0_yyz_xyyzzz[k] = -g_y_0_y_0_yy_xyyzzz[k] * ab_z + g_y_0_y_0_yy_xyyzzzz[k];

                g_y_0_y_0_yyz_xyzzzz[k] = -g_y_0_y_0_yy_xyzzzz[k] * ab_z + g_y_0_y_0_yy_xyzzzzz[k];

                g_y_0_y_0_yyz_xzzzzz[k] = -g_y_0_y_0_yy_xzzzzz[k] * ab_z + g_y_0_y_0_yy_xzzzzzz[k];

                g_y_0_y_0_yyz_yyyyyy[k] = -g_y_0_y_0_yy_yyyyyy[k] * ab_z + g_y_0_y_0_yy_yyyyyyz[k];

                g_y_0_y_0_yyz_yyyyyz[k] = -g_y_0_y_0_yy_yyyyyz[k] * ab_z + g_y_0_y_0_yy_yyyyyzz[k];

                g_y_0_y_0_yyz_yyyyzz[k] = -g_y_0_y_0_yy_yyyyzz[k] * ab_z + g_y_0_y_0_yy_yyyyzzz[k];

                g_y_0_y_0_yyz_yyyzzz[k] = -g_y_0_y_0_yy_yyyzzz[k] * ab_z + g_y_0_y_0_yy_yyyzzzz[k];

                g_y_0_y_0_yyz_yyzzzz[k] = -g_y_0_y_0_yy_yyzzzz[k] * ab_z + g_y_0_y_0_yy_yyzzzzz[k];

                g_y_0_y_0_yyz_yzzzzz[k] = -g_y_0_y_0_yy_yzzzzz[k] * ab_z + g_y_0_y_0_yy_yzzzzzz[k];

                g_y_0_y_0_yyz_zzzzzz[k] = -g_y_0_y_0_yy_zzzzzz[k] * ab_z + g_y_0_y_0_yy_zzzzzzz[k];
            }

            /// Set up 1344-1372 components of targeted buffer : cbuffer.data(

            auto g_y_0_y_0_yzz_xxxxxx = cbuffer.data(fi_geom_1010_off + 1344 * ccomps * dcomps);

            auto g_y_0_y_0_yzz_xxxxxy = cbuffer.data(fi_geom_1010_off + 1345 * ccomps * dcomps);

            auto g_y_0_y_0_yzz_xxxxxz = cbuffer.data(fi_geom_1010_off + 1346 * ccomps * dcomps);

            auto g_y_0_y_0_yzz_xxxxyy = cbuffer.data(fi_geom_1010_off + 1347 * ccomps * dcomps);

            auto g_y_0_y_0_yzz_xxxxyz = cbuffer.data(fi_geom_1010_off + 1348 * ccomps * dcomps);

            auto g_y_0_y_0_yzz_xxxxzz = cbuffer.data(fi_geom_1010_off + 1349 * ccomps * dcomps);

            auto g_y_0_y_0_yzz_xxxyyy = cbuffer.data(fi_geom_1010_off + 1350 * ccomps * dcomps);

            auto g_y_0_y_0_yzz_xxxyyz = cbuffer.data(fi_geom_1010_off + 1351 * ccomps * dcomps);

            auto g_y_0_y_0_yzz_xxxyzz = cbuffer.data(fi_geom_1010_off + 1352 * ccomps * dcomps);

            auto g_y_0_y_0_yzz_xxxzzz = cbuffer.data(fi_geom_1010_off + 1353 * ccomps * dcomps);

            auto g_y_0_y_0_yzz_xxyyyy = cbuffer.data(fi_geom_1010_off + 1354 * ccomps * dcomps);

            auto g_y_0_y_0_yzz_xxyyyz = cbuffer.data(fi_geom_1010_off + 1355 * ccomps * dcomps);

            auto g_y_0_y_0_yzz_xxyyzz = cbuffer.data(fi_geom_1010_off + 1356 * ccomps * dcomps);

            auto g_y_0_y_0_yzz_xxyzzz = cbuffer.data(fi_geom_1010_off + 1357 * ccomps * dcomps);

            auto g_y_0_y_0_yzz_xxzzzz = cbuffer.data(fi_geom_1010_off + 1358 * ccomps * dcomps);

            auto g_y_0_y_0_yzz_xyyyyy = cbuffer.data(fi_geom_1010_off + 1359 * ccomps * dcomps);

            auto g_y_0_y_0_yzz_xyyyyz = cbuffer.data(fi_geom_1010_off + 1360 * ccomps * dcomps);

            auto g_y_0_y_0_yzz_xyyyzz = cbuffer.data(fi_geom_1010_off + 1361 * ccomps * dcomps);

            auto g_y_0_y_0_yzz_xyyzzz = cbuffer.data(fi_geom_1010_off + 1362 * ccomps * dcomps);

            auto g_y_0_y_0_yzz_xyzzzz = cbuffer.data(fi_geom_1010_off + 1363 * ccomps * dcomps);

            auto g_y_0_y_0_yzz_xzzzzz = cbuffer.data(fi_geom_1010_off + 1364 * ccomps * dcomps);

            auto g_y_0_y_0_yzz_yyyyyy = cbuffer.data(fi_geom_1010_off + 1365 * ccomps * dcomps);

            auto g_y_0_y_0_yzz_yyyyyz = cbuffer.data(fi_geom_1010_off + 1366 * ccomps * dcomps);

            auto g_y_0_y_0_yzz_yyyyzz = cbuffer.data(fi_geom_1010_off + 1367 * ccomps * dcomps);

            auto g_y_0_y_0_yzz_yyyzzz = cbuffer.data(fi_geom_1010_off + 1368 * ccomps * dcomps);

            auto g_y_0_y_0_yzz_yyzzzz = cbuffer.data(fi_geom_1010_off + 1369 * ccomps * dcomps);

            auto g_y_0_y_0_yzz_yzzzzz = cbuffer.data(fi_geom_1010_off + 1370 * ccomps * dcomps);

            auto g_y_0_y_0_yzz_zzzzzz = cbuffer.data(fi_geom_1010_off + 1371 * ccomps * dcomps);

            #pragma omp simd aligned(g_y_0_y_0_yz_xxxxxx, g_y_0_y_0_yz_xxxxxxz, g_y_0_y_0_yz_xxxxxy, g_y_0_y_0_yz_xxxxxyz, g_y_0_y_0_yz_xxxxxz, g_y_0_y_0_yz_xxxxxzz, g_y_0_y_0_yz_xxxxyy, g_y_0_y_0_yz_xxxxyyz, g_y_0_y_0_yz_xxxxyz, g_y_0_y_0_yz_xxxxyzz, g_y_0_y_0_yz_xxxxzz, g_y_0_y_0_yz_xxxxzzz, g_y_0_y_0_yz_xxxyyy, g_y_0_y_0_yz_xxxyyyz, g_y_0_y_0_yz_xxxyyz, g_y_0_y_0_yz_xxxyyzz, g_y_0_y_0_yz_xxxyzz, g_y_0_y_0_yz_xxxyzzz, g_y_0_y_0_yz_xxxzzz, g_y_0_y_0_yz_xxxzzzz, g_y_0_y_0_yz_xxyyyy, g_y_0_y_0_yz_xxyyyyz, g_y_0_y_0_yz_xxyyyz, g_y_0_y_0_yz_xxyyyzz, g_y_0_y_0_yz_xxyyzz, g_y_0_y_0_yz_xxyyzzz, g_y_0_y_0_yz_xxyzzz, g_y_0_y_0_yz_xxyzzzz, g_y_0_y_0_yz_xxzzzz, g_y_0_y_0_yz_xxzzzzz, g_y_0_y_0_yz_xyyyyy, g_y_0_y_0_yz_xyyyyyz, g_y_0_y_0_yz_xyyyyz, g_y_0_y_0_yz_xyyyyzz, g_y_0_y_0_yz_xyyyzz, g_y_0_y_0_yz_xyyyzzz, g_y_0_y_0_yz_xyyzzz, g_y_0_y_0_yz_xyyzzzz, g_y_0_y_0_yz_xyzzzz, g_y_0_y_0_yz_xyzzzzz, g_y_0_y_0_yz_xzzzzz, g_y_0_y_0_yz_xzzzzzz, g_y_0_y_0_yz_yyyyyy, g_y_0_y_0_yz_yyyyyyz, g_y_0_y_0_yz_yyyyyz, g_y_0_y_0_yz_yyyyyzz, g_y_0_y_0_yz_yyyyzz, g_y_0_y_0_yz_yyyyzzz, g_y_0_y_0_yz_yyyzzz, g_y_0_y_0_yz_yyyzzzz, g_y_0_y_0_yz_yyzzzz, g_y_0_y_0_yz_yyzzzzz, g_y_0_y_0_yz_yzzzzz, g_y_0_y_0_yz_yzzzzzz, g_y_0_y_0_yz_zzzzzz, g_y_0_y_0_yz_zzzzzzz, g_y_0_y_0_yzz_xxxxxx, g_y_0_y_0_yzz_xxxxxy, g_y_0_y_0_yzz_xxxxxz, g_y_0_y_0_yzz_xxxxyy, g_y_0_y_0_yzz_xxxxyz, g_y_0_y_0_yzz_xxxxzz, g_y_0_y_0_yzz_xxxyyy, g_y_0_y_0_yzz_xxxyyz, g_y_0_y_0_yzz_xxxyzz, g_y_0_y_0_yzz_xxxzzz, g_y_0_y_0_yzz_xxyyyy, g_y_0_y_0_yzz_xxyyyz, g_y_0_y_0_yzz_xxyyzz, g_y_0_y_0_yzz_xxyzzz, g_y_0_y_0_yzz_xxzzzz, g_y_0_y_0_yzz_xyyyyy, g_y_0_y_0_yzz_xyyyyz, g_y_0_y_0_yzz_xyyyzz, g_y_0_y_0_yzz_xyyzzz, g_y_0_y_0_yzz_xyzzzz, g_y_0_y_0_yzz_xzzzzz, g_y_0_y_0_yzz_yyyyyy, g_y_0_y_0_yzz_yyyyyz, g_y_0_y_0_yzz_yyyyzz, g_y_0_y_0_yzz_yyyzzz, g_y_0_y_0_yzz_yyzzzz, g_y_0_y_0_yzz_yzzzzz, g_y_0_y_0_yzz_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_y_0_y_0_yzz_xxxxxx[k] = -g_y_0_y_0_yz_xxxxxx[k] * ab_z + g_y_0_y_0_yz_xxxxxxz[k];

                g_y_0_y_0_yzz_xxxxxy[k] = -g_y_0_y_0_yz_xxxxxy[k] * ab_z + g_y_0_y_0_yz_xxxxxyz[k];

                g_y_0_y_0_yzz_xxxxxz[k] = -g_y_0_y_0_yz_xxxxxz[k] * ab_z + g_y_0_y_0_yz_xxxxxzz[k];

                g_y_0_y_0_yzz_xxxxyy[k] = -g_y_0_y_0_yz_xxxxyy[k] * ab_z + g_y_0_y_0_yz_xxxxyyz[k];

                g_y_0_y_0_yzz_xxxxyz[k] = -g_y_0_y_0_yz_xxxxyz[k] * ab_z + g_y_0_y_0_yz_xxxxyzz[k];

                g_y_0_y_0_yzz_xxxxzz[k] = -g_y_0_y_0_yz_xxxxzz[k] * ab_z + g_y_0_y_0_yz_xxxxzzz[k];

                g_y_0_y_0_yzz_xxxyyy[k] = -g_y_0_y_0_yz_xxxyyy[k] * ab_z + g_y_0_y_0_yz_xxxyyyz[k];

                g_y_0_y_0_yzz_xxxyyz[k] = -g_y_0_y_0_yz_xxxyyz[k] * ab_z + g_y_0_y_0_yz_xxxyyzz[k];

                g_y_0_y_0_yzz_xxxyzz[k] = -g_y_0_y_0_yz_xxxyzz[k] * ab_z + g_y_0_y_0_yz_xxxyzzz[k];

                g_y_0_y_0_yzz_xxxzzz[k] = -g_y_0_y_0_yz_xxxzzz[k] * ab_z + g_y_0_y_0_yz_xxxzzzz[k];

                g_y_0_y_0_yzz_xxyyyy[k] = -g_y_0_y_0_yz_xxyyyy[k] * ab_z + g_y_0_y_0_yz_xxyyyyz[k];

                g_y_0_y_0_yzz_xxyyyz[k] = -g_y_0_y_0_yz_xxyyyz[k] * ab_z + g_y_0_y_0_yz_xxyyyzz[k];

                g_y_0_y_0_yzz_xxyyzz[k] = -g_y_0_y_0_yz_xxyyzz[k] * ab_z + g_y_0_y_0_yz_xxyyzzz[k];

                g_y_0_y_0_yzz_xxyzzz[k] = -g_y_0_y_0_yz_xxyzzz[k] * ab_z + g_y_0_y_0_yz_xxyzzzz[k];

                g_y_0_y_0_yzz_xxzzzz[k] = -g_y_0_y_0_yz_xxzzzz[k] * ab_z + g_y_0_y_0_yz_xxzzzzz[k];

                g_y_0_y_0_yzz_xyyyyy[k] = -g_y_0_y_0_yz_xyyyyy[k] * ab_z + g_y_0_y_0_yz_xyyyyyz[k];

                g_y_0_y_0_yzz_xyyyyz[k] = -g_y_0_y_0_yz_xyyyyz[k] * ab_z + g_y_0_y_0_yz_xyyyyzz[k];

                g_y_0_y_0_yzz_xyyyzz[k] = -g_y_0_y_0_yz_xyyyzz[k] * ab_z + g_y_0_y_0_yz_xyyyzzz[k];

                g_y_0_y_0_yzz_xyyzzz[k] = -g_y_0_y_0_yz_xyyzzz[k] * ab_z + g_y_0_y_0_yz_xyyzzzz[k];

                g_y_0_y_0_yzz_xyzzzz[k] = -g_y_0_y_0_yz_xyzzzz[k] * ab_z + g_y_0_y_0_yz_xyzzzzz[k];

                g_y_0_y_0_yzz_xzzzzz[k] = -g_y_0_y_0_yz_xzzzzz[k] * ab_z + g_y_0_y_0_yz_xzzzzzz[k];

                g_y_0_y_0_yzz_yyyyyy[k] = -g_y_0_y_0_yz_yyyyyy[k] * ab_z + g_y_0_y_0_yz_yyyyyyz[k];

                g_y_0_y_0_yzz_yyyyyz[k] = -g_y_0_y_0_yz_yyyyyz[k] * ab_z + g_y_0_y_0_yz_yyyyyzz[k];

                g_y_0_y_0_yzz_yyyyzz[k] = -g_y_0_y_0_yz_yyyyzz[k] * ab_z + g_y_0_y_0_yz_yyyyzzz[k];

                g_y_0_y_0_yzz_yyyzzz[k] = -g_y_0_y_0_yz_yyyzzz[k] * ab_z + g_y_0_y_0_yz_yyyzzzz[k];

                g_y_0_y_0_yzz_yyzzzz[k] = -g_y_0_y_0_yz_yyzzzz[k] * ab_z + g_y_0_y_0_yz_yyzzzzz[k];

                g_y_0_y_0_yzz_yzzzzz[k] = -g_y_0_y_0_yz_yzzzzz[k] * ab_z + g_y_0_y_0_yz_yzzzzzz[k];

                g_y_0_y_0_yzz_zzzzzz[k] = -g_y_0_y_0_yz_zzzzzz[k] * ab_z + g_y_0_y_0_yz_zzzzzzz[k];
            }

            /// Set up 1372-1400 components of targeted buffer : cbuffer.data(

            auto g_y_0_y_0_zzz_xxxxxx = cbuffer.data(fi_geom_1010_off + 1372 * ccomps * dcomps);

            auto g_y_0_y_0_zzz_xxxxxy = cbuffer.data(fi_geom_1010_off + 1373 * ccomps * dcomps);

            auto g_y_0_y_0_zzz_xxxxxz = cbuffer.data(fi_geom_1010_off + 1374 * ccomps * dcomps);

            auto g_y_0_y_0_zzz_xxxxyy = cbuffer.data(fi_geom_1010_off + 1375 * ccomps * dcomps);

            auto g_y_0_y_0_zzz_xxxxyz = cbuffer.data(fi_geom_1010_off + 1376 * ccomps * dcomps);

            auto g_y_0_y_0_zzz_xxxxzz = cbuffer.data(fi_geom_1010_off + 1377 * ccomps * dcomps);

            auto g_y_0_y_0_zzz_xxxyyy = cbuffer.data(fi_geom_1010_off + 1378 * ccomps * dcomps);

            auto g_y_0_y_0_zzz_xxxyyz = cbuffer.data(fi_geom_1010_off + 1379 * ccomps * dcomps);

            auto g_y_0_y_0_zzz_xxxyzz = cbuffer.data(fi_geom_1010_off + 1380 * ccomps * dcomps);

            auto g_y_0_y_0_zzz_xxxzzz = cbuffer.data(fi_geom_1010_off + 1381 * ccomps * dcomps);

            auto g_y_0_y_0_zzz_xxyyyy = cbuffer.data(fi_geom_1010_off + 1382 * ccomps * dcomps);

            auto g_y_0_y_0_zzz_xxyyyz = cbuffer.data(fi_geom_1010_off + 1383 * ccomps * dcomps);

            auto g_y_0_y_0_zzz_xxyyzz = cbuffer.data(fi_geom_1010_off + 1384 * ccomps * dcomps);

            auto g_y_0_y_0_zzz_xxyzzz = cbuffer.data(fi_geom_1010_off + 1385 * ccomps * dcomps);

            auto g_y_0_y_0_zzz_xxzzzz = cbuffer.data(fi_geom_1010_off + 1386 * ccomps * dcomps);

            auto g_y_0_y_0_zzz_xyyyyy = cbuffer.data(fi_geom_1010_off + 1387 * ccomps * dcomps);

            auto g_y_0_y_0_zzz_xyyyyz = cbuffer.data(fi_geom_1010_off + 1388 * ccomps * dcomps);

            auto g_y_0_y_0_zzz_xyyyzz = cbuffer.data(fi_geom_1010_off + 1389 * ccomps * dcomps);

            auto g_y_0_y_0_zzz_xyyzzz = cbuffer.data(fi_geom_1010_off + 1390 * ccomps * dcomps);

            auto g_y_0_y_0_zzz_xyzzzz = cbuffer.data(fi_geom_1010_off + 1391 * ccomps * dcomps);

            auto g_y_0_y_0_zzz_xzzzzz = cbuffer.data(fi_geom_1010_off + 1392 * ccomps * dcomps);

            auto g_y_0_y_0_zzz_yyyyyy = cbuffer.data(fi_geom_1010_off + 1393 * ccomps * dcomps);

            auto g_y_0_y_0_zzz_yyyyyz = cbuffer.data(fi_geom_1010_off + 1394 * ccomps * dcomps);

            auto g_y_0_y_0_zzz_yyyyzz = cbuffer.data(fi_geom_1010_off + 1395 * ccomps * dcomps);

            auto g_y_0_y_0_zzz_yyyzzz = cbuffer.data(fi_geom_1010_off + 1396 * ccomps * dcomps);

            auto g_y_0_y_0_zzz_yyzzzz = cbuffer.data(fi_geom_1010_off + 1397 * ccomps * dcomps);

            auto g_y_0_y_0_zzz_yzzzzz = cbuffer.data(fi_geom_1010_off + 1398 * ccomps * dcomps);

            auto g_y_0_y_0_zzz_zzzzzz = cbuffer.data(fi_geom_1010_off + 1399 * ccomps * dcomps);

            #pragma omp simd aligned(g_y_0_y_0_zz_xxxxxx, g_y_0_y_0_zz_xxxxxxz, g_y_0_y_0_zz_xxxxxy, g_y_0_y_0_zz_xxxxxyz, g_y_0_y_0_zz_xxxxxz, g_y_0_y_0_zz_xxxxxzz, g_y_0_y_0_zz_xxxxyy, g_y_0_y_0_zz_xxxxyyz, g_y_0_y_0_zz_xxxxyz, g_y_0_y_0_zz_xxxxyzz, g_y_0_y_0_zz_xxxxzz, g_y_0_y_0_zz_xxxxzzz, g_y_0_y_0_zz_xxxyyy, g_y_0_y_0_zz_xxxyyyz, g_y_0_y_0_zz_xxxyyz, g_y_0_y_0_zz_xxxyyzz, g_y_0_y_0_zz_xxxyzz, g_y_0_y_0_zz_xxxyzzz, g_y_0_y_0_zz_xxxzzz, g_y_0_y_0_zz_xxxzzzz, g_y_0_y_0_zz_xxyyyy, g_y_0_y_0_zz_xxyyyyz, g_y_0_y_0_zz_xxyyyz, g_y_0_y_0_zz_xxyyyzz, g_y_0_y_0_zz_xxyyzz, g_y_0_y_0_zz_xxyyzzz, g_y_0_y_0_zz_xxyzzz, g_y_0_y_0_zz_xxyzzzz, g_y_0_y_0_zz_xxzzzz, g_y_0_y_0_zz_xxzzzzz, g_y_0_y_0_zz_xyyyyy, g_y_0_y_0_zz_xyyyyyz, g_y_0_y_0_zz_xyyyyz, g_y_0_y_0_zz_xyyyyzz, g_y_0_y_0_zz_xyyyzz, g_y_0_y_0_zz_xyyyzzz, g_y_0_y_0_zz_xyyzzz, g_y_0_y_0_zz_xyyzzzz, g_y_0_y_0_zz_xyzzzz, g_y_0_y_0_zz_xyzzzzz, g_y_0_y_0_zz_xzzzzz, g_y_0_y_0_zz_xzzzzzz, g_y_0_y_0_zz_yyyyyy, g_y_0_y_0_zz_yyyyyyz, g_y_0_y_0_zz_yyyyyz, g_y_0_y_0_zz_yyyyyzz, g_y_0_y_0_zz_yyyyzz, g_y_0_y_0_zz_yyyyzzz, g_y_0_y_0_zz_yyyzzz, g_y_0_y_0_zz_yyyzzzz, g_y_0_y_0_zz_yyzzzz, g_y_0_y_0_zz_yyzzzzz, g_y_0_y_0_zz_yzzzzz, g_y_0_y_0_zz_yzzzzzz, g_y_0_y_0_zz_zzzzzz, g_y_0_y_0_zz_zzzzzzz, g_y_0_y_0_zzz_xxxxxx, g_y_0_y_0_zzz_xxxxxy, g_y_0_y_0_zzz_xxxxxz, g_y_0_y_0_zzz_xxxxyy, g_y_0_y_0_zzz_xxxxyz, g_y_0_y_0_zzz_xxxxzz, g_y_0_y_0_zzz_xxxyyy, g_y_0_y_0_zzz_xxxyyz, g_y_0_y_0_zzz_xxxyzz, g_y_0_y_0_zzz_xxxzzz, g_y_0_y_0_zzz_xxyyyy, g_y_0_y_0_zzz_xxyyyz, g_y_0_y_0_zzz_xxyyzz, g_y_0_y_0_zzz_xxyzzz, g_y_0_y_0_zzz_xxzzzz, g_y_0_y_0_zzz_xyyyyy, g_y_0_y_0_zzz_xyyyyz, g_y_0_y_0_zzz_xyyyzz, g_y_0_y_0_zzz_xyyzzz, g_y_0_y_0_zzz_xyzzzz, g_y_0_y_0_zzz_xzzzzz, g_y_0_y_0_zzz_yyyyyy, g_y_0_y_0_zzz_yyyyyz, g_y_0_y_0_zzz_yyyyzz, g_y_0_y_0_zzz_yyyzzz, g_y_0_y_0_zzz_yyzzzz, g_y_0_y_0_zzz_yzzzzz, g_y_0_y_0_zzz_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_y_0_y_0_zzz_xxxxxx[k] = -g_y_0_y_0_zz_xxxxxx[k] * ab_z + g_y_0_y_0_zz_xxxxxxz[k];

                g_y_0_y_0_zzz_xxxxxy[k] = -g_y_0_y_0_zz_xxxxxy[k] * ab_z + g_y_0_y_0_zz_xxxxxyz[k];

                g_y_0_y_0_zzz_xxxxxz[k] = -g_y_0_y_0_zz_xxxxxz[k] * ab_z + g_y_0_y_0_zz_xxxxxzz[k];

                g_y_0_y_0_zzz_xxxxyy[k] = -g_y_0_y_0_zz_xxxxyy[k] * ab_z + g_y_0_y_0_zz_xxxxyyz[k];

                g_y_0_y_0_zzz_xxxxyz[k] = -g_y_0_y_0_zz_xxxxyz[k] * ab_z + g_y_0_y_0_zz_xxxxyzz[k];

                g_y_0_y_0_zzz_xxxxzz[k] = -g_y_0_y_0_zz_xxxxzz[k] * ab_z + g_y_0_y_0_zz_xxxxzzz[k];

                g_y_0_y_0_zzz_xxxyyy[k] = -g_y_0_y_0_zz_xxxyyy[k] * ab_z + g_y_0_y_0_zz_xxxyyyz[k];

                g_y_0_y_0_zzz_xxxyyz[k] = -g_y_0_y_0_zz_xxxyyz[k] * ab_z + g_y_0_y_0_zz_xxxyyzz[k];

                g_y_0_y_0_zzz_xxxyzz[k] = -g_y_0_y_0_zz_xxxyzz[k] * ab_z + g_y_0_y_0_zz_xxxyzzz[k];

                g_y_0_y_0_zzz_xxxzzz[k] = -g_y_0_y_0_zz_xxxzzz[k] * ab_z + g_y_0_y_0_zz_xxxzzzz[k];

                g_y_0_y_0_zzz_xxyyyy[k] = -g_y_0_y_0_zz_xxyyyy[k] * ab_z + g_y_0_y_0_zz_xxyyyyz[k];

                g_y_0_y_0_zzz_xxyyyz[k] = -g_y_0_y_0_zz_xxyyyz[k] * ab_z + g_y_0_y_0_zz_xxyyyzz[k];

                g_y_0_y_0_zzz_xxyyzz[k] = -g_y_0_y_0_zz_xxyyzz[k] * ab_z + g_y_0_y_0_zz_xxyyzzz[k];

                g_y_0_y_0_zzz_xxyzzz[k] = -g_y_0_y_0_zz_xxyzzz[k] * ab_z + g_y_0_y_0_zz_xxyzzzz[k];

                g_y_0_y_0_zzz_xxzzzz[k] = -g_y_0_y_0_zz_xxzzzz[k] * ab_z + g_y_0_y_0_zz_xxzzzzz[k];

                g_y_0_y_0_zzz_xyyyyy[k] = -g_y_0_y_0_zz_xyyyyy[k] * ab_z + g_y_0_y_0_zz_xyyyyyz[k];

                g_y_0_y_0_zzz_xyyyyz[k] = -g_y_0_y_0_zz_xyyyyz[k] * ab_z + g_y_0_y_0_zz_xyyyyzz[k];

                g_y_0_y_0_zzz_xyyyzz[k] = -g_y_0_y_0_zz_xyyyzz[k] * ab_z + g_y_0_y_0_zz_xyyyzzz[k];

                g_y_0_y_0_zzz_xyyzzz[k] = -g_y_0_y_0_zz_xyyzzz[k] * ab_z + g_y_0_y_0_zz_xyyzzzz[k];

                g_y_0_y_0_zzz_xyzzzz[k] = -g_y_0_y_0_zz_xyzzzz[k] * ab_z + g_y_0_y_0_zz_xyzzzzz[k];

                g_y_0_y_0_zzz_xzzzzz[k] = -g_y_0_y_0_zz_xzzzzz[k] * ab_z + g_y_0_y_0_zz_xzzzzzz[k];

                g_y_0_y_0_zzz_yyyyyy[k] = -g_y_0_y_0_zz_yyyyyy[k] * ab_z + g_y_0_y_0_zz_yyyyyyz[k];

                g_y_0_y_0_zzz_yyyyyz[k] = -g_y_0_y_0_zz_yyyyyz[k] * ab_z + g_y_0_y_0_zz_yyyyyzz[k];

                g_y_0_y_0_zzz_yyyyzz[k] = -g_y_0_y_0_zz_yyyyzz[k] * ab_z + g_y_0_y_0_zz_yyyyzzz[k];

                g_y_0_y_0_zzz_yyyzzz[k] = -g_y_0_y_0_zz_yyyzzz[k] * ab_z + g_y_0_y_0_zz_yyyzzzz[k];

                g_y_0_y_0_zzz_yyzzzz[k] = -g_y_0_y_0_zz_yyzzzz[k] * ab_z + g_y_0_y_0_zz_yyzzzzz[k];

                g_y_0_y_0_zzz_yzzzzz[k] = -g_y_0_y_0_zz_yzzzzz[k] * ab_z + g_y_0_y_0_zz_yzzzzzz[k];

                g_y_0_y_0_zzz_zzzzzz[k] = -g_y_0_y_0_zz_zzzzzz[k] * ab_z + g_y_0_y_0_zz_zzzzzzz[k];
            }

            /// Set up 1400-1428 components of targeted buffer : cbuffer.data(

            auto g_y_0_z_0_xxx_xxxxxx = cbuffer.data(fi_geom_1010_off + 1400 * ccomps * dcomps);

            auto g_y_0_z_0_xxx_xxxxxy = cbuffer.data(fi_geom_1010_off + 1401 * ccomps * dcomps);

            auto g_y_0_z_0_xxx_xxxxxz = cbuffer.data(fi_geom_1010_off + 1402 * ccomps * dcomps);

            auto g_y_0_z_0_xxx_xxxxyy = cbuffer.data(fi_geom_1010_off + 1403 * ccomps * dcomps);

            auto g_y_0_z_0_xxx_xxxxyz = cbuffer.data(fi_geom_1010_off + 1404 * ccomps * dcomps);

            auto g_y_0_z_0_xxx_xxxxzz = cbuffer.data(fi_geom_1010_off + 1405 * ccomps * dcomps);

            auto g_y_0_z_0_xxx_xxxyyy = cbuffer.data(fi_geom_1010_off + 1406 * ccomps * dcomps);

            auto g_y_0_z_0_xxx_xxxyyz = cbuffer.data(fi_geom_1010_off + 1407 * ccomps * dcomps);

            auto g_y_0_z_0_xxx_xxxyzz = cbuffer.data(fi_geom_1010_off + 1408 * ccomps * dcomps);

            auto g_y_0_z_0_xxx_xxxzzz = cbuffer.data(fi_geom_1010_off + 1409 * ccomps * dcomps);

            auto g_y_0_z_0_xxx_xxyyyy = cbuffer.data(fi_geom_1010_off + 1410 * ccomps * dcomps);

            auto g_y_0_z_0_xxx_xxyyyz = cbuffer.data(fi_geom_1010_off + 1411 * ccomps * dcomps);

            auto g_y_0_z_0_xxx_xxyyzz = cbuffer.data(fi_geom_1010_off + 1412 * ccomps * dcomps);

            auto g_y_0_z_0_xxx_xxyzzz = cbuffer.data(fi_geom_1010_off + 1413 * ccomps * dcomps);

            auto g_y_0_z_0_xxx_xxzzzz = cbuffer.data(fi_geom_1010_off + 1414 * ccomps * dcomps);

            auto g_y_0_z_0_xxx_xyyyyy = cbuffer.data(fi_geom_1010_off + 1415 * ccomps * dcomps);

            auto g_y_0_z_0_xxx_xyyyyz = cbuffer.data(fi_geom_1010_off + 1416 * ccomps * dcomps);

            auto g_y_0_z_0_xxx_xyyyzz = cbuffer.data(fi_geom_1010_off + 1417 * ccomps * dcomps);

            auto g_y_0_z_0_xxx_xyyzzz = cbuffer.data(fi_geom_1010_off + 1418 * ccomps * dcomps);

            auto g_y_0_z_0_xxx_xyzzzz = cbuffer.data(fi_geom_1010_off + 1419 * ccomps * dcomps);

            auto g_y_0_z_0_xxx_xzzzzz = cbuffer.data(fi_geom_1010_off + 1420 * ccomps * dcomps);

            auto g_y_0_z_0_xxx_yyyyyy = cbuffer.data(fi_geom_1010_off + 1421 * ccomps * dcomps);

            auto g_y_0_z_0_xxx_yyyyyz = cbuffer.data(fi_geom_1010_off + 1422 * ccomps * dcomps);

            auto g_y_0_z_0_xxx_yyyyzz = cbuffer.data(fi_geom_1010_off + 1423 * ccomps * dcomps);

            auto g_y_0_z_0_xxx_yyyzzz = cbuffer.data(fi_geom_1010_off + 1424 * ccomps * dcomps);

            auto g_y_0_z_0_xxx_yyzzzz = cbuffer.data(fi_geom_1010_off + 1425 * ccomps * dcomps);

            auto g_y_0_z_0_xxx_yzzzzz = cbuffer.data(fi_geom_1010_off + 1426 * ccomps * dcomps);

            auto g_y_0_z_0_xxx_zzzzzz = cbuffer.data(fi_geom_1010_off + 1427 * ccomps * dcomps);

            #pragma omp simd aligned(g_y_0_z_0_xx_xxxxxx, g_y_0_z_0_xx_xxxxxxx, g_y_0_z_0_xx_xxxxxxy, g_y_0_z_0_xx_xxxxxxz, g_y_0_z_0_xx_xxxxxy, g_y_0_z_0_xx_xxxxxyy, g_y_0_z_0_xx_xxxxxyz, g_y_0_z_0_xx_xxxxxz, g_y_0_z_0_xx_xxxxxzz, g_y_0_z_0_xx_xxxxyy, g_y_0_z_0_xx_xxxxyyy, g_y_0_z_0_xx_xxxxyyz, g_y_0_z_0_xx_xxxxyz, g_y_0_z_0_xx_xxxxyzz, g_y_0_z_0_xx_xxxxzz, g_y_0_z_0_xx_xxxxzzz, g_y_0_z_0_xx_xxxyyy, g_y_0_z_0_xx_xxxyyyy, g_y_0_z_0_xx_xxxyyyz, g_y_0_z_0_xx_xxxyyz, g_y_0_z_0_xx_xxxyyzz, g_y_0_z_0_xx_xxxyzz, g_y_0_z_0_xx_xxxyzzz, g_y_0_z_0_xx_xxxzzz, g_y_0_z_0_xx_xxxzzzz, g_y_0_z_0_xx_xxyyyy, g_y_0_z_0_xx_xxyyyyy, g_y_0_z_0_xx_xxyyyyz, g_y_0_z_0_xx_xxyyyz, g_y_0_z_0_xx_xxyyyzz, g_y_0_z_0_xx_xxyyzz, g_y_0_z_0_xx_xxyyzzz, g_y_0_z_0_xx_xxyzzz, g_y_0_z_0_xx_xxyzzzz, g_y_0_z_0_xx_xxzzzz, g_y_0_z_0_xx_xxzzzzz, g_y_0_z_0_xx_xyyyyy, g_y_0_z_0_xx_xyyyyyy, g_y_0_z_0_xx_xyyyyyz, g_y_0_z_0_xx_xyyyyz, g_y_0_z_0_xx_xyyyyzz, g_y_0_z_0_xx_xyyyzz, g_y_0_z_0_xx_xyyyzzz, g_y_0_z_0_xx_xyyzzz, g_y_0_z_0_xx_xyyzzzz, g_y_0_z_0_xx_xyzzzz, g_y_0_z_0_xx_xyzzzzz, g_y_0_z_0_xx_xzzzzz, g_y_0_z_0_xx_xzzzzzz, g_y_0_z_0_xx_yyyyyy, g_y_0_z_0_xx_yyyyyz, g_y_0_z_0_xx_yyyyzz, g_y_0_z_0_xx_yyyzzz, g_y_0_z_0_xx_yyzzzz, g_y_0_z_0_xx_yzzzzz, g_y_0_z_0_xx_zzzzzz, g_y_0_z_0_xxx_xxxxxx, g_y_0_z_0_xxx_xxxxxy, g_y_0_z_0_xxx_xxxxxz, g_y_0_z_0_xxx_xxxxyy, g_y_0_z_0_xxx_xxxxyz, g_y_0_z_0_xxx_xxxxzz, g_y_0_z_0_xxx_xxxyyy, g_y_0_z_0_xxx_xxxyyz, g_y_0_z_0_xxx_xxxyzz, g_y_0_z_0_xxx_xxxzzz, g_y_0_z_0_xxx_xxyyyy, g_y_0_z_0_xxx_xxyyyz, g_y_0_z_0_xxx_xxyyzz, g_y_0_z_0_xxx_xxyzzz, g_y_0_z_0_xxx_xxzzzz, g_y_0_z_0_xxx_xyyyyy, g_y_0_z_0_xxx_xyyyyz, g_y_0_z_0_xxx_xyyyzz, g_y_0_z_0_xxx_xyyzzz, g_y_0_z_0_xxx_xyzzzz, g_y_0_z_0_xxx_xzzzzz, g_y_0_z_0_xxx_yyyyyy, g_y_0_z_0_xxx_yyyyyz, g_y_0_z_0_xxx_yyyyzz, g_y_0_z_0_xxx_yyyzzz, g_y_0_z_0_xxx_yyzzzz, g_y_0_z_0_xxx_yzzzzz, g_y_0_z_0_xxx_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_y_0_z_0_xxx_xxxxxx[k] = -g_y_0_z_0_xx_xxxxxx[k] * ab_x + g_y_0_z_0_xx_xxxxxxx[k];

                g_y_0_z_0_xxx_xxxxxy[k] = -g_y_0_z_0_xx_xxxxxy[k] * ab_x + g_y_0_z_0_xx_xxxxxxy[k];

                g_y_0_z_0_xxx_xxxxxz[k] = -g_y_0_z_0_xx_xxxxxz[k] * ab_x + g_y_0_z_0_xx_xxxxxxz[k];

                g_y_0_z_0_xxx_xxxxyy[k] = -g_y_0_z_0_xx_xxxxyy[k] * ab_x + g_y_0_z_0_xx_xxxxxyy[k];

                g_y_0_z_0_xxx_xxxxyz[k] = -g_y_0_z_0_xx_xxxxyz[k] * ab_x + g_y_0_z_0_xx_xxxxxyz[k];

                g_y_0_z_0_xxx_xxxxzz[k] = -g_y_0_z_0_xx_xxxxzz[k] * ab_x + g_y_0_z_0_xx_xxxxxzz[k];

                g_y_0_z_0_xxx_xxxyyy[k] = -g_y_0_z_0_xx_xxxyyy[k] * ab_x + g_y_0_z_0_xx_xxxxyyy[k];

                g_y_0_z_0_xxx_xxxyyz[k] = -g_y_0_z_0_xx_xxxyyz[k] * ab_x + g_y_0_z_0_xx_xxxxyyz[k];

                g_y_0_z_0_xxx_xxxyzz[k] = -g_y_0_z_0_xx_xxxyzz[k] * ab_x + g_y_0_z_0_xx_xxxxyzz[k];

                g_y_0_z_0_xxx_xxxzzz[k] = -g_y_0_z_0_xx_xxxzzz[k] * ab_x + g_y_0_z_0_xx_xxxxzzz[k];

                g_y_0_z_0_xxx_xxyyyy[k] = -g_y_0_z_0_xx_xxyyyy[k] * ab_x + g_y_0_z_0_xx_xxxyyyy[k];

                g_y_0_z_0_xxx_xxyyyz[k] = -g_y_0_z_0_xx_xxyyyz[k] * ab_x + g_y_0_z_0_xx_xxxyyyz[k];

                g_y_0_z_0_xxx_xxyyzz[k] = -g_y_0_z_0_xx_xxyyzz[k] * ab_x + g_y_0_z_0_xx_xxxyyzz[k];

                g_y_0_z_0_xxx_xxyzzz[k] = -g_y_0_z_0_xx_xxyzzz[k] * ab_x + g_y_0_z_0_xx_xxxyzzz[k];

                g_y_0_z_0_xxx_xxzzzz[k] = -g_y_0_z_0_xx_xxzzzz[k] * ab_x + g_y_0_z_0_xx_xxxzzzz[k];

                g_y_0_z_0_xxx_xyyyyy[k] = -g_y_0_z_0_xx_xyyyyy[k] * ab_x + g_y_0_z_0_xx_xxyyyyy[k];

                g_y_0_z_0_xxx_xyyyyz[k] = -g_y_0_z_0_xx_xyyyyz[k] * ab_x + g_y_0_z_0_xx_xxyyyyz[k];

                g_y_0_z_0_xxx_xyyyzz[k] = -g_y_0_z_0_xx_xyyyzz[k] * ab_x + g_y_0_z_0_xx_xxyyyzz[k];

                g_y_0_z_0_xxx_xyyzzz[k] = -g_y_0_z_0_xx_xyyzzz[k] * ab_x + g_y_0_z_0_xx_xxyyzzz[k];

                g_y_0_z_0_xxx_xyzzzz[k] = -g_y_0_z_0_xx_xyzzzz[k] * ab_x + g_y_0_z_0_xx_xxyzzzz[k];

                g_y_0_z_0_xxx_xzzzzz[k] = -g_y_0_z_0_xx_xzzzzz[k] * ab_x + g_y_0_z_0_xx_xxzzzzz[k];

                g_y_0_z_0_xxx_yyyyyy[k] = -g_y_0_z_0_xx_yyyyyy[k] * ab_x + g_y_0_z_0_xx_xyyyyyy[k];

                g_y_0_z_0_xxx_yyyyyz[k] = -g_y_0_z_0_xx_yyyyyz[k] * ab_x + g_y_0_z_0_xx_xyyyyyz[k];

                g_y_0_z_0_xxx_yyyyzz[k] = -g_y_0_z_0_xx_yyyyzz[k] * ab_x + g_y_0_z_0_xx_xyyyyzz[k];

                g_y_0_z_0_xxx_yyyzzz[k] = -g_y_0_z_0_xx_yyyzzz[k] * ab_x + g_y_0_z_0_xx_xyyyzzz[k];

                g_y_0_z_0_xxx_yyzzzz[k] = -g_y_0_z_0_xx_yyzzzz[k] * ab_x + g_y_0_z_0_xx_xyyzzzz[k];

                g_y_0_z_0_xxx_yzzzzz[k] = -g_y_0_z_0_xx_yzzzzz[k] * ab_x + g_y_0_z_0_xx_xyzzzzz[k];

                g_y_0_z_0_xxx_zzzzzz[k] = -g_y_0_z_0_xx_zzzzzz[k] * ab_x + g_y_0_z_0_xx_xzzzzzz[k];
            }

            /// Set up 1428-1456 components of targeted buffer : cbuffer.data(

            auto g_y_0_z_0_xxy_xxxxxx = cbuffer.data(fi_geom_1010_off + 1428 * ccomps * dcomps);

            auto g_y_0_z_0_xxy_xxxxxy = cbuffer.data(fi_geom_1010_off + 1429 * ccomps * dcomps);

            auto g_y_0_z_0_xxy_xxxxxz = cbuffer.data(fi_geom_1010_off + 1430 * ccomps * dcomps);

            auto g_y_0_z_0_xxy_xxxxyy = cbuffer.data(fi_geom_1010_off + 1431 * ccomps * dcomps);

            auto g_y_0_z_0_xxy_xxxxyz = cbuffer.data(fi_geom_1010_off + 1432 * ccomps * dcomps);

            auto g_y_0_z_0_xxy_xxxxzz = cbuffer.data(fi_geom_1010_off + 1433 * ccomps * dcomps);

            auto g_y_0_z_0_xxy_xxxyyy = cbuffer.data(fi_geom_1010_off + 1434 * ccomps * dcomps);

            auto g_y_0_z_0_xxy_xxxyyz = cbuffer.data(fi_geom_1010_off + 1435 * ccomps * dcomps);

            auto g_y_0_z_0_xxy_xxxyzz = cbuffer.data(fi_geom_1010_off + 1436 * ccomps * dcomps);

            auto g_y_0_z_0_xxy_xxxzzz = cbuffer.data(fi_geom_1010_off + 1437 * ccomps * dcomps);

            auto g_y_0_z_0_xxy_xxyyyy = cbuffer.data(fi_geom_1010_off + 1438 * ccomps * dcomps);

            auto g_y_0_z_0_xxy_xxyyyz = cbuffer.data(fi_geom_1010_off + 1439 * ccomps * dcomps);

            auto g_y_0_z_0_xxy_xxyyzz = cbuffer.data(fi_geom_1010_off + 1440 * ccomps * dcomps);

            auto g_y_0_z_0_xxy_xxyzzz = cbuffer.data(fi_geom_1010_off + 1441 * ccomps * dcomps);

            auto g_y_0_z_0_xxy_xxzzzz = cbuffer.data(fi_geom_1010_off + 1442 * ccomps * dcomps);

            auto g_y_0_z_0_xxy_xyyyyy = cbuffer.data(fi_geom_1010_off + 1443 * ccomps * dcomps);

            auto g_y_0_z_0_xxy_xyyyyz = cbuffer.data(fi_geom_1010_off + 1444 * ccomps * dcomps);

            auto g_y_0_z_0_xxy_xyyyzz = cbuffer.data(fi_geom_1010_off + 1445 * ccomps * dcomps);

            auto g_y_0_z_0_xxy_xyyzzz = cbuffer.data(fi_geom_1010_off + 1446 * ccomps * dcomps);

            auto g_y_0_z_0_xxy_xyzzzz = cbuffer.data(fi_geom_1010_off + 1447 * ccomps * dcomps);

            auto g_y_0_z_0_xxy_xzzzzz = cbuffer.data(fi_geom_1010_off + 1448 * ccomps * dcomps);

            auto g_y_0_z_0_xxy_yyyyyy = cbuffer.data(fi_geom_1010_off + 1449 * ccomps * dcomps);

            auto g_y_0_z_0_xxy_yyyyyz = cbuffer.data(fi_geom_1010_off + 1450 * ccomps * dcomps);

            auto g_y_0_z_0_xxy_yyyyzz = cbuffer.data(fi_geom_1010_off + 1451 * ccomps * dcomps);

            auto g_y_0_z_0_xxy_yyyzzz = cbuffer.data(fi_geom_1010_off + 1452 * ccomps * dcomps);

            auto g_y_0_z_0_xxy_yyzzzz = cbuffer.data(fi_geom_1010_off + 1453 * ccomps * dcomps);

            auto g_y_0_z_0_xxy_yzzzzz = cbuffer.data(fi_geom_1010_off + 1454 * ccomps * dcomps);

            auto g_y_0_z_0_xxy_zzzzzz = cbuffer.data(fi_geom_1010_off + 1455 * ccomps * dcomps);

            #pragma omp simd aligned(g_y_0_z_0_xxy_xxxxxx, g_y_0_z_0_xxy_xxxxxy, g_y_0_z_0_xxy_xxxxxz, g_y_0_z_0_xxy_xxxxyy, g_y_0_z_0_xxy_xxxxyz, g_y_0_z_0_xxy_xxxxzz, g_y_0_z_0_xxy_xxxyyy, g_y_0_z_0_xxy_xxxyyz, g_y_0_z_0_xxy_xxxyzz, g_y_0_z_0_xxy_xxxzzz, g_y_0_z_0_xxy_xxyyyy, g_y_0_z_0_xxy_xxyyyz, g_y_0_z_0_xxy_xxyyzz, g_y_0_z_0_xxy_xxyzzz, g_y_0_z_0_xxy_xxzzzz, g_y_0_z_0_xxy_xyyyyy, g_y_0_z_0_xxy_xyyyyz, g_y_0_z_0_xxy_xyyyzz, g_y_0_z_0_xxy_xyyzzz, g_y_0_z_0_xxy_xyzzzz, g_y_0_z_0_xxy_xzzzzz, g_y_0_z_0_xxy_yyyyyy, g_y_0_z_0_xxy_yyyyyz, g_y_0_z_0_xxy_yyyyzz, g_y_0_z_0_xxy_yyyzzz, g_y_0_z_0_xxy_yyzzzz, g_y_0_z_0_xxy_yzzzzz, g_y_0_z_0_xxy_zzzzzz, g_y_0_z_0_xy_xxxxxx, g_y_0_z_0_xy_xxxxxxx, g_y_0_z_0_xy_xxxxxxy, g_y_0_z_0_xy_xxxxxxz, g_y_0_z_0_xy_xxxxxy, g_y_0_z_0_xy_xxxxxyy, g_y_0_z_0_xy_xxxxxyz, g_y_0_z_0_xy_xxxxxz, g_y_0_z_0_xy_xxxxxzz, g_y_0_z_0_xy_xxxxyy, g_y_0_z_0_xy_xxxxyyy, g_y_0_z_0_xy_xxxxyyz, g_y_0_z_0_xy_xxxxyz, g_y_0_z_0_xy_xxxxyzz, g_y_0_z_0_xy_xxxxzz, g_y_0_z_0_xy_xxxxzzz, g_y_0_z_0_xy_xxxyyy, g_y_0_z_0_xy_xxxyyyy, g_y_0_z_0_xy_xxxyyyz, g_y_0_z_0_xy_xxxyyz, g_y_0_z_0_xy_xxxyyzz, g_y_0_z_0_xy_xxxyzz, g_y_0_z_0_xy_xxxyzzz, g_y_0_z_0_xy_xxxzzz, g_y_0_z_0_xy_xxxzzzz, g_y_0_z_0_xy_xxyyyy, g_y_0_z_0_xy_xxyyyyy, g_y_0_z_0_xy_xxyyyyz, g_y_0_z_0_xy_xxyyyz, g_y_0_z_0_xy_xxyyyzz, g_y_0_z_0_xy_xxyyzz, g_y_0_z_0_xy_xxyyzzz, g_y_0_z_0_xy_xxyzzz, g_y_0_z_0_xy_xxyzzzz, g_y_0_z_0_xy_xxzzzz, g_y_0_z_0_xy_xxzzzzz, g_y_0_z_0_xy_xyyyyy, g_y_0_z_0_xy_xyyyyyy, g_y_0_z_0_xy_xyyyyyz, g_y_0_z_0_xy_xyyyyz, g_y_0_z_0_xy_xyyyyzz, g_y_0_z_0_xy_xyyyzz, g_y_0_z_0_xy_xyyyzzz, g_y_0_z_0_xy_xyyzzz, g_y_0_z_0_xy_xyyzzzz, g_y_0_z_0_xy_xyzzzz, g_y_0_z_0_xy_xyzzzzz, g_y_0_z_0_xy_xzzzzz, g_y_0_z_0_xy_xzzzzzz, g_y_0_z_0_xy_yyyyyy, g_y_0_z_0_xy_yyyyyz, g_y_0_z_0_xy_yyyyzz, g_y_0_z_0_xy_yyyzzz, g_y_0_z_0_xy_yyzzzz, g_y_0_z_0_xy_yzzzzz, g_y_0_z_0_xy_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_y_0_z_0_xxy_xxxxxx[k] = -g_y_0_z_0_xy_xxxxxx[k] * ab_x + g_y_0_z_0_xy_xxxxxxx[k];

                g_y_0_z_0_xxy_xxxxxy[k] = -g_y_0_z_0_xy_xxxxxy[k] * ab_x + g_y_0_z_0_xy_xxxxxxy[k];

                g_y_0_z_0_xxy_xxxxxz[k] = -g_y_0_z_0_xy_xxxxxz[k] * ab_x + g_y_0_z_0_xy_xxxxxxz[k];

                g_y_0_z_0_xxy_xxxxyy[k] = -g_y_0_z_0_xy_xxxxyy[k] * ab_x + g_y_0_z_0_xy_xxxxxyy[k];

                g_y_0_z_0_xxy_xxxxyz[k] = -g_y_0_z_0_xy_xxxxyz[k] * ab_x + g_y_0_z_0_xy_xxxxxyz[k];

                g_y_0_z_0_xxy_xxxxzz[k] = -g_y_0_z_0_xy_xxxxzz[k] * ab_x + g_y_0_z_0_xy_xxxxxzz[k];

                g_y_0_z_0_xxy_xxxyyy[k] = -g_y_0_z_0_xy_xxxyyy[k] * ab_x + g_y_0_z_0_xy_xxxxyyy[k];

                g_y_0_z_0_xxy_xxxyyz[k] = -g_y_0_z_0_xy_xxxyyz[k] * ab_x + g_y_0_z_0_xy_xxxxyyz[k];

                g_y_0_z_0_xxy_xxxyzz[k] = -g_y_0_z_0_xy_xxxyzz[k] * ab_x + g_y_0_z_0_xy_xxxxyzz[k];

                g_y_0_z_0_xxy_xxxzzz[k] = -g_y_0_z_0_xy_xxxzzz[k] * ab_x + g_y_0_z_0_xy_xxxxzzz[k];

                g_y_0_z_0_xxy_xxyyyy[k] = -g_y_0_z_0_xy_xxyyyy[k] * ab_x + g_y_0_z_0_xy_xxxyyyy[k];

                g_y_0_z_0_xxy_xxyyyz[k] = -g_y_0_z_0_xy_xxyyyz[k] * ab_x + g_y_0_z_0_xy_xxxyyyz[k];

                g_y_0_z_0_xxy_xxyyzz[k] = -g_y_0_z_0_xy_xxyyzz[k] * ab_x + g_y_0_z_0_xy_xxxyyzz[k];

                g_y_0_z_0_xxy_xxyzzz[k] = -g_y_0_z_0_xy_xxyzzz[k] * ab_x + g_y_0_z_0_xy_xxxyzzz[k];

                g_y_0_z_0_xxy_xxzzzz[k] = -g_y_0_z_0_xy_xxzzzz[k] * ab_x + g_y_0_z_0_xy_xxxzzzz[k];

                g_y_0_z_0_xxy_xyyyyy[k] = -g_y_0_z_0_xy_xyyyyy[k] * ab_x + g_y_0_z_0_xy_xxyyyyy[k];

                g_y_0_z_0_xxy_xyyyyz[k] = -g_y_0_z_0_xy_xyyyyz[k] * ab_x + g_y_0_z_0_xy_xxyyyyz[k];

                g_y_0_z_0_xxy_xyyyzz[k] = -g_y_0_z_0_xy_xyyyzz[k] * ab_x + g_y_0_z_0_xy_xxyyyzz[k];

                g_y_0_z_0_xxy_xyyzzz[k] = -g_y_0_z_0_xy_xyyzzz[k] * ab_x + g_y_0_z_0_xy_xxyyzzz[k];

                g_y_0_z_0_xxy_xyzzzz[k] = -g_y_0_z_0_xy_xyzzzz[k] * ab_x + g_y_0_z_0_xy_xxyzzzz[k];

                g_y_0_z_0_xxy_xzzzzz[k] = -g_y_0_z_0_xy_xzzzzz[k] * ab_x + g_y_0_z_0_xy_xxzzzzz[k];

                g_y_0_z_0_xxy_yyyyyy[k] = -g_y_0_z_0_xy_yyyyyy[k] * ab_x + g_y_0_z_0_xy_xyyyyyy[k];

                g_y_0_z_0_xxy_yyyyyz[k] = -g_y_0_z_0_xy_yyyyyz[k] * ab_x + g_y_0_z_0_xy_xyyyyyz[k];

                g_y_0_z_0_xxy_yyyyzz[k] = -g_y_0_z_0_xy_yyyyzz[k] * ab_x + g_y_0_z_0_xy_xyyyyzz[k];

                g_y_0_z_0_xxy_yyyzzz[k] = -g_y_0_z_0_xy_yyyzzz[k] * ab_x + g_y_0_z_0_xy_xyyyzzz[k];

                g_y_0_z_0_xxy_yyzzzz[k] = -g_y_0_z_0_xy_yyzzzz[k] * ab_x + g_y_0_z_0_xy_xyyzzzz[k];

                g_y_0_z_0_xxy_yzzzzz[k] = -g_y_0_z_0_xy_yzzzzz[k] * ab_x + g_y_0_z_0_xy_xyzzzzz[k];

                g_y_0_z_0_xxy_zzzzzz[k] = -g_y_0_z_0_xy_zzzzzz[k] * ab_x + g_y_0_z_0_xy_xzzzzzz[k];
            }

            /// Set up 1456-1484 components of targeted buffer : cbuffer.data(

            auto g_y_0_z_0_xxz_xxxxxx = cbuffer.data(fi_geom_1010_off + 1456 * ccomps * dcomps);

            auto g_y_0_z_0_xxz_xxxxxy = cbuffer.data(fi_geom_1010_off + 1457 * ccomps * dcomps);

            auto g_y_0_z_0_xxz_xxxxxz = cbuffer.data(fi_geom_1010_off + 1458 * ccomps * dcomps);

            auto g_y_0_z_0_xxz_xxxxyy = cbuffer.data(fi_geom_1010_off + 1459 * ccomps * dcomps);

            auto g_y_0_z_0_xxz_xxxxyz = cbuffer.data(fi_geom_1010_off + 1460 * ccomps * dcomps);

            auto g_y_0_z_0_xxz_xxxxzz = cbuffer.data(fi_geom_1010_off + 1461 * ccomps * dcomps);

            auto g_y_0_z_0_xxz_xxxyyy = cbuffer.data(fi_geom_1010_off + 1462 * ccomps * dcomps);

            auto g_y_0_z_0_xxz_xxxyyz = cbuffer.data(fi_geom_1010_off + 1463 * ccomps * dcomps);

            auto g_y_0_z_0_xxz_xxxyzz = cbuffer.data(fi_geom_1010_off + 1464 * ccomps * dcomps);

            auto g_y_0_z_0_xxz_xxxzzz = cbuffer.data(fi_geom_1010_off + 1465 * ccomps * dcomps);

            auto g_y_0_z_0_xxz_xxyyyy = cbuffer.data(fi_geom_1010_off + 1466 * ccomps * dcomps);

            auto g_y_0_z_0_xxz_xxyyyz = cbuffer.data(fi_geom_1010_off + 1467 * ccomps * dcomps);

            auto g_y_0_z_0_xxz_xxyyzz = cbuffer.data(fi_geom_1010_off + 1468 * ccomps * dcomps);

            auto g_y_0_z_0_xxz_xxyzzz = cbuffer.data(fi_geom_1010_off + 1469 * ccomps * dcomps);

            auto g_y_0_z_0_xxz_xxzzzz = cbuffer.data(fi_geom_1010_off + 1470 * ccomps * dcomps);

            auto g_y_0_z_0_xxz_xyyyyy = cbuffer.data(fi_geom_1010_off + 1471 * ccomps * dcomps);

            auto g_y_0_z_0_xxz_xyyyyz = cbuffer.data(fi_geom_1010_off + 1472 * ccomps * dcomps);

            auto g_y_0_z_0_xxz_xyyyzz = cbuffer.data(fi_geom_1010_off + 1473 * ccomps * dcomps);

            auto g_y_0_z_0_xxz_xyyzzz = cbuffer.data(fi_geom_1010_off + 1474 * ccomps * dcomps);

            auto g_y_0_z_0_xxz_xyzzzz = cbuffer.data(fi_geom_1010_off + 1475 * ccomps * dcomps);

            auto g_y_0_z_0_xxz_xzzzzz = cbuffer.data(fi_geom_1010_off + 1476 * ccomps * dcomps);

            auto g_y_0_z_0_xxz_yyyyyy = cbuffer.data(fi_geom_1010_off + 1477 * ccomps * dcomps);

            auto g_y_0_z_0_xxz_yyyyyz = cbuffer.data(fi_geom_1010_off + 1478 * ccomps * dcomps);

            auto g_y_0_z_0_xxz_yyyyzz = cbuffer.data(fi_geom_1010_off + 1479 * ccomps * dcomps);

            auto g_y_0_z_0_xxz_yyyzzz = cbuffer.data(fi_geom_1010_off + 1480 * ccomps * dcomps);

            auto g_y_0_z_0_xxz_yyzzzz = cbuffer.data(fi_geom_1010_off + 1481 * ccomps * dcomps);

            auto g_y_0_z_0_xxz_yzzzzz = cbuffer.data(fi_geom_1010_off + 1482 * ccomps * dcomps);

            auto g_y_0_z_0_xxz_zzzzzz = cbuffer.data(fi_geom_1010_off + 1483 * ccomps * dcomps);

            #pragma omp simd aligned(g_y_0_z_0_xxz_xxxxxx, g_y_0_z_0_xxz_xxxxxy, g_y_0_z_0_xxz_xxxxxz, g_y_0_z_0_xxz_xxxxyy, g_y_0_z_0_xxz_xxxxyz, g_y_0_z_0_xxz_xxxxzz, g_y_0_z_0_xxz_xxxyyy, g_y_0_z_0_xxz_xxxyyz, g_y_0_z_0_xxz_xxxyzz, g_y_0_z_0_xxz_xxxzzz, g_y_0_z_0_xxz_xxyyyy, g_y_0_z_0_xxz_xxyyyz, g_y_0_z_0_xxz_xxyyzz, g_y_0_z_0_xxz_xxyzzz, g_y_0_z_0_xxz_xxzzzz, g_y_0_z_0_xxz_xyyyyy, g_y_0_z_0_xxz_xyyyyz, g_y_0_z_0_xxz_xyyyzz, g_y_0_z_0_xxz_xyyzzz, g_y_0_z_0_xxz_xyzzzz, g_y_0_z_0_xxz_xzzzzz, g_y_0_z_0_xxz_yyyyyy, g_y_0_z_0_xxz_yyyyyz, g_y_0_z_0_xxz_yyyyzz, g_y_0_z_0_xxz_yyyzzz, g_y_0_z_0_xxz_yyzzzz, g_y_0_z_0_xxz_yzzzzz, g_y_0_z_0_xxz_zzzzzz, g_y_0_z_0_xz_xxxxxx, g_y_0_z_0_xz_xxxxxxx, g_y_0_z_0_xz_xxxxxxy, g_y_0_z_0_xz_xxxxxxz, g_y_0_z_0_xz_xxxxxy, g_y_0_z_0_xz_xxxxxyy, g_y_0_z_0_xz_xxxxxyz, g_y_0_z_0_xz_xxxxxz, g_y_0_z_0_xz_xxxxxzz, g_y_0_z_0_xz_xxxxyy, g_y_0_z_0_xz_xxxxyyy, g_y_0_z_0_xz_xxxxyyz, g_y_0_z_0_xz_xxxxyz, g_y_0_z_0_xz_xxxxyzz, g_y_0_z_0_xz_xxxxzz, g_y_0_z_0_xz_xxxxzzz, g_y_0_z_0_xz_xxxyyy, g_y_0_z_0_xz_xxxyyyy, g_y_0_z_0_xz_xxxyyyz, g_y_0_z_0_xz_xxxyyz, g_y_0_z_0_xz_xxxyyzz, g_y_0_z_0_xz_xxxyzz, g_y_0_z_0_xz_xxxyzzz, g_y_0_z_0_xz_xxxzzz, g_y_0_z_0_xz_xxxzzzz, g_y_0_z_0_xz_xxyyyy, g_y_0_z_0_xz_xxyyyyy, g_y_0_z_0_xz_xxyyyyz, g_y_0_z_0_xz_xxyyyz, g_y_0_z_0_xz_xxyyyzz, g_y_0_z_0_xz_xxyyzz, g_y_0_z_0_xz_xxyyzzz, g_y_0_z_0_xz_xxyzzz, g_y_0_z_0_xz_xxyzzzz, g_y_0_z_0_xz_xxzzzz, g_y_0_z_0_xz_xxzzzzz, g_y_0_z_0_xz_xyyyyy, g_y_0_z_0_xz_xyyyyyy, g_y_0_z_0_xz_xyyyyyz, g_y_0_z_0_xz_xyyyyz, g_y_0_z_0_xz_xyyyyzz, g_y_0_z_0_xz_xyyyzz, g_y_0_z_0_xz_xyyyzzz, g_y_0_z_0_xz_xyyzzz, g_y_0_z_0_xz_xyyzzzz, g_y_0_z_0_xz_xyzzzz, g_y_0_z_0_xz_xyzzzzz, g_y_0_z_0_xz_xzzzzz, g_y_0_z_0_xz_xzzzzzz, g_y_0_z_0_xz_yyyyyy, g_y_0_z_0_xz_yyyyyz, g_y_0_z_0_xz_yyyyzz, g_y_0_z_0_xz_yyyzzz, g_y_0_z_0_xz_yyzzzz, g_y_0_z_0_xz_yzzzzz, g_y_0_z_0_xz_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_y_0_z_0_xxz_xxxxxx[k] = -g_y_0_z_0_xz_xxxxxx[k] * ab_x + g_y_0_z_0_xz_xxxxxxx[k];

                g_y_0_z_0_xxz_xxxxxy[k] = -g_y_0_z_0_xz_xxxxxy[k] * ab_x + g_y_0_z_0_xz_xxxxxxy[k];

                g_y_0_z_0_xxz_xxxxxz[k] = -g_y_0_z_0_xz_xxxxxz[k] * ab_x + g_y_0_z_0_xz_xxxxxxz[k];

                g_y_0_z_0_xxz_xxxxyy[k] = -g_y_0_z_0_xz_xxxxyy[k] * ab_x + g_y_0_z_0_xz_xxxxxyy[k];

                g_y_0_z_0_xxz_xxxxyz[k] = -g_y_0_z_0_xz_xxxxyz[k] * ab_x + g_y_0_z_0_xz_xxxxxyz[k];

                g_y_0_z_0_xxz_xxxxzz[k] = -g_y_0_z_0_xz_xxxxzz[k] * ab_x + g_y_0_z_0_xz_xxxxxzz[k];

                g_y_0_z_0_xxz_xxxyyy[k] = -g_y_0_z_0_xz_xxxyyy[k] * ab_x + g_y_0_z_0_xz_xxxxyyy[k];

                g_y_0_z_0_xxz_xxxyyz[k] = -g_y_0_z_0_xz_xxxyyz[k] * ab_x + g_y_0_z_0_xz_xxxxyyz[k];

                g_y_0_z_0_xxz_xxxyzz[k] = -g_y_0_z_0_xz_xxxyzz[k] * ab_x + g_y_0_z_0_xz_xxxxyzz[k];

                g_y_0_z_0_xxz_xxxzzz[k] = -g_y_0_z_0_xz_xxxzzz[k] * ab_x + g_y_0_z_0_xz_xxxxzzz[k];

                g_y_0_z_0_xxz_xxyyyy[k] = -g_y_0_z_0_xz_xxyyyy[k] * ab_x + g_y_0_z_0_xz_xxxyyyy[k];

                g_y_0_z_0_xxz_xxyyyz[k] = -g_y_0_z_0_xz_xxyyyz[k] * ab_x + g_y_0_z_0_xz_xxxyyyz[k];

                g_y_0_z_0_xxz_xxyyzz[k] = -g_y_0_z_0_xz_xxyyzz[k] * ab_x + g_y_0_z_0_xz_xxxyyzz[k];

                g_y_0_z_0_xxz_xxyzzz[k] = -g_y_0_z_0_xz_xxyzzz[k] * ab_x + g_y_0_z_0_xz_xxxyzzz[k];

                g_y_0_z_0_xxz_xxzzzz[k] = -g_y_0_z_0_xz_xxzzzz[k] * ab_x + g_y_0_z_0_xz_xxxzzzz[k];

                g_y_0_z_0_xxz_xyyyyy[k] = -g_y_0_z_0_xz_xyyyyy[k] * ab_x + g_y_0_z_0_xz_xxyyyyy[k];

                g_y_0_z_0_xxz_xyyyyz[k] = -g_y_0_z_0_xz_xyyyyz[k] * ab_x + g_y_0_z_0_xz_xxyyyyz[k];

                g_y_0_z_0_xxz_xyyyzz[k] = -g_y_0_z_0_xz_xyyyzz[k] * ab_x + g_y_0_z_0_xz_xxyyyzz[k];

                g_y_0_z_0_xxz_xyyzzz[k] = -g_y_0_z_0_xz_xyyzzz[k] * ab_x + g_y_0_z_0_xz_xxyyzzz[k];

                g_y_0_z_0_xxz_xyzzzz[k] = -g_y_0_z_0_xz_xyzzzz[k] * ab_x + g_y_0_z_0_xz_xxyzzzz[k];

                g_y_0_z_0_xxz_xzzzzz[k] = -g_y_0_z_0_xz_xzzzzz[k] * ab_x + g_y_0_z_0_xz_xxzzzzz[k];

                g_y_0_z_0_xxz_yyyyyy[k] = -g_y_0_z_0_xz_yyyyyy[k] * ab_x + g_y_0_z_0_xz_xyyyyyy[k];

                g_y_0_z_0_xxz_yyyyyz[k] = -g_y_0_z_0_xz_yyyyyz[k] * ab_x + g_y_0_z_0_xz_xyyyyyz[k];

                g_y_0_z_0_xxz_yyyyzz[k] = -g_y_0_z_0_xz_yyyyzz[k] * ab_x + g_y_0_z_0_xz_xyyyyzz[k];

                g_y_0_z_0_xxz_yyyzzz[k] = -g_y_0_z_0_xz_yyyzzz[k] * ab_x + g_y_0_z_0_xz_xyyyzzz[k];

                g_y_0_z_0_xxz_yyzzzz[k] = -g_y_0_z_0_xz_yyzzzz[k] * ab_x + g_y_0_z_0_xz_xyyzzzz[k];

                g_y_0_z_0_xxz_yzzzzz[k] = -g_y_0_z_0_xz_yzzzzz[k] * ab_x + g_y_0_z_0_xz_xyzzzzz[k];

                g_y_0_z_0_xxz_zzzzzz[k] = -g_y_0_z_0_xz_zzzzzz[k] * ab_x + g_y_0_z_0_xz_xzzzzzz[k];
            }

            /// Set up 1484-1512 components of targeted buffer : cbuffer.data(

            auto g_y_0_z_0_xyy_xxxxxx = cbuffer.data(fi_geom_1010_off + 1484 * ccomps * dcomps);

            auto g_y_0_z_0_xyy_xxxxxy = cbuffer.data(fi_geom_1010_off + 1485 * ccomps * dcomps);

            auto g_y_0_z_0_xyy_xxxxxz = cbuffer.data(fi_geom_1010_off + 1486 * ccomps * dcomps);

            auto g_y_0_z_0_xyy_xxxxyy = cbuffer.data(fi_geom_1010_off + 1487 * ccomps * dcomps);

            auto g_y_0_z_0_xyy_xxxxyz = cbuffer.data(fi_geom_1010_off + 1488 * ccomps * dcomps);

            auto g_y_0_z_0_xyy_xxxxzz = cbuffer.data(fi_geom_1010_off + 1489 * ccomps * dcomps);

            auto g_y_0_z_0_xyy_xxxyyy = cbuffer.data(fi_geom_1010_off + 1490 * ccomps * dcomps);

            auto g_y_0_z_0_xyy_xxxyyz = cbuffer.data(fi_geom_1010_off + 1491 * ccomps * dcomps);

            auto g_y_0_z_0_xyy_xxxyzz = cbuffer.data(fi_geom_1010_off + 1492 * ccomps * dcomps);

            auto g_y_0_z_0_xyy_xxxzzz = cbuffer.data(fi_geom_1010_off + 1493 * ccomps * dcomps);

            auto g_y_0_z_0_xyy_xxyyyy = cbuffer.data(fi_geom_1010_off + 1494 * ccomps * dcomps);

            auto g_y_0_z_0_xyy_xxyyyz = cbuffer.data(fi_geom_1010_off + 1495 * ccomps * dcomps);

            auto g_y_0_z_0_xyy_xxyyzz = cbuffer.data(fi_geom_1010_off + 1496 * ccomps * dcomps);

            auto g_y_0_z_0_xyy_xxyzzz = cbuffer.data(fi_geom_1010_off + 1497 * ccomps * dcomps);

            auto g_y_0_z_0_xyy_xxzzzz = cbuffer.data(fi_geom_1010_off + 1498 * ccomps * dcomps);

            auto g_y_0_z_0_xyy_xyyyyy = cbuffer.data(fi_geom_1010_off + 1499 * ccomps * dcomps);

            auto g_y_0_z_0_xyy_xyyyyz = cbuffer.data(fi_geom_1010_off + 1500 * ccomps * dcomps);

            auto g_y_0_z_0_xyy_xyyyzz = cbuffer.data(fi_geom_1010_off + 1501 * ccomps * dcomps);

            auto g_y_0_z_0_xyy_xyyzzz = cbuffer.data(fi_geom_1010_off + 1502 * ccomps * dcomps);

            auto g_y_0_z_0_xyy_xyzzzz = cbuffer.data(fi_geom_1010_off + 1503 * ccomps * dcomps);

            auto g_y_0_z_0_xyy_xzzzzz = cbuffer.data(fi_geom_1010_off + 1504 * ccomps * dcomps);

            auto g_y_0_z_0_xyy_yyyyyy = cbuffer.data(fi_geom_1010_off + 1505 * ccomps * dcomps);

            auto g_y_0_z_0_xyy_yyyyyz = cbuffer.data(fi_geom_1010_off + 1506 * ccomps * dcomps);

            auto g_y_0_z_0_xyy_yyyyzz = cbuffer.data(fi_geom_1010_off + 1507 * ccomps * dcomps);

            auto g_y_0_z_0_xyy_yyyzzz = cbuffer.data(fi_geom_1010_off + 1508 * ccomps * dcomps);

            auto g_y_0_z_0_xyy_yyzzzz = cbuffer.data(fi_geom_1010_off + 1509 * ccomps * dcomps);

            auto g_y_0_z_0_xyy_yzzzzz = cbuffer.data(fi_geom_1010_off + 1510 * ccomps * dcomps);

            auto g_y_0_z_0_xyy_zzzzzz = cbuffer.data(fi_geom_1010_off + 1511 * ccomps * dcomps);

            #pragma omp simd aligned(g_y_0_z_0_xyy_xxxxxx, g_y_0_z_0_xyy_xxxxxy, g_y_0_z_0_xyy_xxxxxz, g_y_0_z_0_xyy_xxxxyy, g_y_0_z_0_xyy_xxxxyz, g_y_0_z_0_xyy_xxxxzz, g_y_0_z_0_xyy_xxxyyy, g_y_0_z_0_xyy_xxxyyz, g_y_0_z_0_xyy_xxxyzz, g_y_0_z_0_xyy_xxxzzz, g_y_0_z_0_xyy_xxyyyy, g_y_0_z_0_xyy_xxyyyz, g_y_0_z_0_xyy_xxyyzz, g_y_0_z_0_xyy_xxyzzz, g_y_0_z_0_xyy_xxzzzz, g_y_0_z_0_xyy_xyyyyy, g_y_0_z_0_xyy_xyyyyz, g_y_0_z_0_xyy_xyyyzz, g_y_0_z_0_xyy_xyyzzz, g_y_0_z_0_xyy_xyzzzz, g_y_0_z_0_xyy_xzzzzz, g_y_0_z_0_xyy_yyyyyy, g_y_0_z_0_xyy_yyyyyz, g_y_0_z_0_xyy_yyyyzz, g_y_0_z_0_xyy_yyyzzz, g_y_0_z_0_xyy_yyzzzz, g_y_0_z_0_xyy_yzzzzz, g_y_0_z_0_xyy_zzzzzz, g_y_0_z_0_yy_xxxxxx, g_y_0_z_0_yy_xxxxxxx, g_y_0_z_0_yy_xxxxxxy, g_y_0_z_0_yy_xxxxxxz, g_y_0_z_0_yy_xxxxxy, g_y_0_z_0_yy_xxxxxyy, g_y_0_z_0_yy_xxxxxyz, g_y_0_z_0_yy_xxxxxz, g_y_0_z_0_yy_xxxxxzz, g_y_0_z_0_yy_xxxxyy, g_y_0_z_0_yy_xxxxyyy, g_y_0_z_0_yy_xxxxyyz, g_y_0_z_0_yy_xxxxyz, g_y_0_z_0_yy_xxxxyzz, g_y_0_z_0_yy_xxxxzz, g_y_0_z_0_yy_xxxxzzz, g_y_0_z_0_yy_xxxyyy, g_y_0_z_0_yy_xxxyyyy, g_y_0_z_0_yy_xxxyyyz, g_y_0_z_0_yy_xxxyyz, g_y_0_z_0_yy_xxxyyzz, g_y_0_z_0_yy_xxxyzz, g_y_0_z_0_yy_xxxyzzz, g_y_0_z_0_yy_xxxzzz, g_y_0_z_0_yy_xxxzzzz, g_y_0_z_0_yy_xxyyyy, g_y_0_z_0_yy_xxyyyyy, g_y_0_z_0_yy_xxyyyyz, g_y_0_z_0_yy_xxyyyz, g_y_0_z_0_yy_xxyyyzz, g_y_0_z_0_yy_xxyyzz, g_y_0_z_0_yy_xxyyzzz, g_y_0_z_0_yy_xxyzzz, g_y_0_z_0_yy_xxyzzzz, g_y_0_z_0_yy_xxzzzz, g_y_0_z_0_yy_xxzzzzz, g_y_0_z_0_yy_xyyyyy, g_y_0_z_0_yy_xyyyyyy, g_y_0_z_0_yy_xyyyyyz, g_y_0_z_0_yy_xyyyyz, g_y_0_z_0_yy_xyyyyzz, g_y_0_z_0_yy_xyyyzz, g_y_0_z_0_yy_xyyyzzz, g_y_0_z_0_yy_xyyzzz, g_y_0_z_0_yy_xyyzzzz, g_y_0_z_0_yy_xyzzzz, g_y_0_z_0_yy_xyzzzzz, g_y_0_z_0_yy_xzzzzz, g_y_0_z_0_yy_xzzzzzz, g_y_0_z_0_yy_yyyyyy, g_y_0_z_0_yy_yyyyyz, g_y_0_z_0_yy_yyyyzz, g_y_0_z_0_yy_yyyzzz, g_y_0_z_0_yy_yyzzzz, g_y_0_z_0_yy_yzzzzz, g_y_0_z_0_yy_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_y_0_z_0_xyy_xxxxxx[k] = -g_y_0_z_0_yy_xxxxxx[k] * ab_x + g_y_0_z_0_yy_xxxxxxx[k];

                g_y_0_z_0_xyy_xxxxxy[k] = -g_y_0_z_0_yy_xxxxxy[k] * ab_x + g_y_0_z_0_yy_xxxxxxy[k];

                g_y_0_z_0_xyy_xxxxxz[k] = -g_y_0_z_0_yy_xxxxxz[k] * ab_x + g_y_0_z_0_yy_xxxxxxz[k];

                g_y_0_z_0_xyy_xxxxyy[k] = -g_y_0_z_0_yy_xxxxyy[k] * ab_x + g_y_0_z_0_yy_xxxxxyy[k];

                g_y_0_z_0_xyy_xxxxyz[k] = -g_y_0_z_0_yy_xxxxyz[k] * ab_x + g_y_0_z_0_yy_xxxxxyz[k];

                g_y_0_z_0_xyy_xxxxzz[k] = -g_y_0_z_0_yy_xxxxzz[k] * ab_x + g_y_0_z_0_yy_xxxxxzz[k];

                g_y_0_z_0_xyy_xxxyyy[k] = -g_y_0_z_0_yy_xxxyyy[k] * ab_x + g_y_0_z_0_yy_xxxxyyy[k];

                g_y_0_z_0_xyy_xxxyyz[k] = -g_y_0_z_0_yy_xxxyyz[k] * ab_x + g_y_0_z_0_yy_xxxxyyz[k];

                g_y_0_z_0_xyy_xxxyzz[k] = -g_y_0_z_0_yy_xxxyzz[k] * ab_x + g_y_0_z_0_yy_xxxxyzz[k];

                g_y_0_z_0_xyy_xxxzzz[k] = -g_y_0_z_0_yy_xxxzzz[k] * ab_x + g_y_0_z_0_yy_xxxxzzz[k];

                g_y_0_z_0_xyy_xxyyyy[k] = -g_y_0_z_0_yy_xxyyyy[k] * ab_x + g_y_0_z_0_yy_xxxyyyy[k];

                g_y_0_z_0_xyy_xxyyyz[k] = -g_y_0_z_0_yy_xxyyyz[k] * ab_x + g_y_0_z_0_yy_xxxyyyz[k];

                g_y_0_z_0_xyy_xxyyzz[k] = -g_y_0_z_0_yy_xxyyzz[k] * ab_x + g_y_0_z_0_yy_xxxyyzz[k];

                g_y_0_z_0_xyy_xxyzzz[k] = -g_y_0_z_0_yy_xxyzzz[k] * ab_x + g_y_0_z_0_yy_xxxyzzz[k];

                g_y_0_z_0_xyy_xxzzzz[k] = -g_y_0_z_0_yy_xxzzzz[k] * ab_x + g_y_0_z_0_yy_xxxzzzz[k];

                g_y_0_z_0_xyy_xyyyyy[k] = -g_y_0_z_0_yy_xyyyyy[k] * ab_x + g_y_0_z_0_yy_xxyyyyy[k];

                g_y_0_z_0_xyy_xyyyyz[k] = -g_y_0_z_0_yy_xyyyyz[k] * ab_x + g_y_0_z_0_yy_xxyyyyz[k];

                g_y_0_z_0_xyy_xyyyzz[k] = -g_y_0_z_0_yy_xyyyzz[k] * ab_x + g_y_0_z_0_yy_xxyyyzz[k];

                g_y_0_z_0_xyy_xyyzzz[k] = -g_y_0_z_0_yy_xyyzzz[k] * ab_x + g_y_0_z_0_yy_xxyyzzz[k];

                g_y_0_z_0_xyy_xyzzzz[k] = -g_y_0_z_0_yy_xyzzzz[k] * ab_x + g_y_0_z_0_yy_xxyzzzz[k];

                g_y_0_z_0_xyy_xzzzzz[k] = -g_y_0_z_0_yy_xzzzzz[k] * ab_x + g_y_0_z_0_yy_xxzzzzz[k];

                g_y_0_z_0_xyy_yyyyyy[k] = -g_y_0_z_0_yy_yyyyyy[k] * ab_x + g_y_0_z_0_yy_xyyyyyy[k];

                g_y_0_z_0_xyy_yyyyyz[k] = -g_y_0_z_0_yy_yyyyyz[k] * ab_x + g_y_0_z_0_yy_xyyyyyz[k];

                g_y_0_z_0_xyy_yyyyzz[k] = -g_y_0_z_0_yy_yyyyzz[k] * ab_x + g_y_0_z_0_yy_xyyyyzz[k];

                g_y_0_z_0_xyy_yyyzzz[k] = -g_y_0_z_0_yy_yyyzzz[k] * ab_x + g_y_0_z_0_yy_xyyyzzz[k];

                g_y_0_z_0_xyy_yyzzzz[k] = -g_y_0_z_0_yy_yyzzzz[k] * ab_x + g_y_0_z_0_yy_xyyzzzz[k];

                g_y_0_z_0_xyy_yzzzzz[k] = -g_y_0_z_0_yy_yzzzzz[k] * ab_x + g_y_0_z_0_yy_xyzzzzz[k];

                g_y_0_z_0_xyy_zzzzzz[k] = -g_y_0_z_0_yy_zzzzzz[k] * ab_x + g_y_0_z_0_yy_xzzzzzz[k];
            }

            /// Set up 1512-1540 components of targeted buffer : cbuffer.data(

            auto g_y_0_z_0_xyz_xxxxxx = cbuffer.data(fi_geom_1010_off + 1512 * ccomps * dcomps);

            auto g_y_0_z_0_xyz_xxxxxy = cbuffer.data(fi_geom_1010_off + 1513 * ccomps * dcomps);

            auto g_y_0_z_0_xyz_xxxxxz = cbuffer.data(fi_geom_1010_off + 1514 * ccomps * dcomps);

            auto g_y_0_z_0_xyz_xxxxyy = cbuffer.data(fi_geom_1010_off + 1515 * ccomps * dcomps);

            auto g_y_0_z_0_xyz_xxxxyz = cbuffer.data(fi_geom_1010_off + 1516 * ccomps * dcomps);

            auto g_y_0_z_0_xyz_xxxxzz = cbuffer.data(fi_geom_1010_off + 1517 * ccomps * dcomps);

            auto g_y_0_z_0_xyz_xxxyyy = cbuffer.data(fi_geom_1010_off + 1518 * ccomps * dcomps);

            auto g_y_0_z_0_xyz_xxxyyz = cbuffer.data(fi_geom_1010_off + 1519 * ccomps * dcomps);

            auto g_y_0_z_0_xyz_xxxyzz = cbuffer.data(fi_geom_1010_off + 1520 * ccomps * dcomps);

            auto g_y_0_z_0_xyz_xxxzzz = cbuffer.data(fi_geom_1010_off + 1521 * ccomps * dcomps);

            auto g_y_0_z_0_xyz_xxyyyy = cbuffer.data(fi_geom_1010_off + 1522 * ccomps * dcomps);

            auto g_y_0_z_0_xyz_xxyyyz = cbuffer.data(fi_geom_1010_off + 1523 * ccomps * dcomps);

            auto g_y_0_z_0_xyz_xxyyzz = cbuffer.data(fi_geom_1010_off + 1524 * ccomps * dcomps);

            auto g_y_0_z_0_xyz_xxyzzz = cbuffer.data(fi_geom_1010_off + 1525 * ccomps * dcomps);

            auto g_y_0_z_0_xyz_xxzzzz = cbuffer.data(fi_geom_1010_off + 1526 * ccomps * dcomps);

            auto g_y_0_z_0_xyz_xyyyyy = cbuffer.data(fi_geom_1010_off + 1527 * ccomps * dcomps);

            auto g_y_0_z_0_xyz_xyyyyz = cbuffer.data(fi_geom_1010_off + 1528 * ccomps * dcomps);

            auto g_y_0_z_0_xyz_xyyyzz = cbuffer.data(fi_geom_1010_off + 1529 * ccomps * dcomps);

            auto g_y_0_z_0_xyz_xyyzzz = cbuffer.data(fi_geom_1010_off + 1530 * ccomps * dcomps);

            auto g_y_0_z_0_xyz_xyzzzz = cbuffer.data(fi_geom_1010_off + 1531 * ccomps * dcomps);

            auto g_y_0_z_0_xyz_xzzzzz = cbuffer.data(fi_geom_1010_off + 1532 * ccomps * dcomps);

            auto g_y_0_z_0_xyz_yyyyyy = cbuffer.data(fi_geom_1010_off + 1533 * ccomps * dcomps);

            auto g_y_0_z_0_xyz_yyyyyz = cbuffer.data(fi_geom_1010_off + 1534 * ccomps * dcomps);

            auto g_y_0_z_0_xyz_yyyyzz = cbuffer.data(fi_geom_1010_off + 1535 * ccomps * dcomps);

            auto g_y_0_z_0_xyz_yyyzzz = cbuffer.data(fi_geom_1010_off + 1536 * ccomps * dcomps);

            auto g_y_0_z_0_xyz_yyzzzz = cbuffer.data(fi_geom_1010_off + 1537 * ccomps * dcomps);

            auto g_y_0_z_0_xyz_yzzzzz = cbuffer.data(fi_geom_1010_off + 1538 * ccomps * dcomps);

            auto g_y_0_z_0_xyz_zzzzzz = cbuffer.data(fi_geom_1010_off + 1539 * ccomps * dcomps);

            #pragma omp simd aligned(g_y_0_z_0_xyz_xxxxxx, g_y_0_z_0_xyz_xxxxxy, g_y_0_z_0_xyz_xxxxxz, g_y_0_z_0_xyz_xxxxyy, g_y_0_z_0_xyz_xxxxyz, g_y_0_z_0_xyz_xxxxzz, g_y_0_z_0_xyz_xxxyyy, g_y_0_z_0_xyz_xxxyyz, g_y_0_z_0_xyz_xxxyzz, g_y_0_z_0_xyz_xxxzzz, g_y_0_z_0_xyz_xxyyyy, g_y_0_z_0_xyz_xxyyyz, g_y_0_z_0_xyz_xxyyzz, g_y_0_z_0_xyz_xxyzzz, g_y_0_z_0_xyz_xxzzzz, g_y_0_z_0_xyz_xyyyyy, g_y_0_z_0_xyz_xyyyyz, g_y_0_z_0_xyz_xyyyzz, g_y_0_z_0_xyz_xyyzzz, g_y_0_z_0_xyz_xyzzzz, g_y_0_z_0_xyz_xzzzzz, g_y_0_z_0_xyz_yyyyyy, g_y_0_z_0_xyz_yyyyyz, g_y_0_z_0_xyz_yyyyzz, g_y_0_z_0_xyz_yyyzzz, g_y_0_z_0_xyz_yyzzzz, g_y_0_z_0_xyz_yzzzzz, g_y_0_z_0_xyz_zzzzzz, g_y_0_z_0_yz_xxxxxx, g_y_0_z_0_yz_xxxxxxx, g_y_0_z_0_yz_xxxxxxy, g_y_0_z_0_yz_xxxxxxz, g_y_0_z_0_yz_xxxxxy, g_y_0_z_0_yz_xxxxxyy, g_y_0_z_0_yz_xxxxxyz, g_y_0_z_0_yz_xxxxxz, g_y_0_z_0_yz_xxxxxzz, g_y_0_z_0_yz_xxxxyy, g_y_0_z_0_yz_xxxxyyy, g_y_0_z_0_yz_xxxxyyz, g_y_0_z_0_yz_xxxxyz, g_y_0_z_0_yz_xxxxyzz, g_y_0_z_0_yz_xxxxzz, g_y_0_z_0_yz_xxxxzzz, g_y_0_z_0_yz_xxxyyy, g_y_0_z_0_yz_xxxyyyy, g_y_0_z_0_yz_xxxyyyz, g_y_0_z_0_yz_xxxyyz, g_y_0_z_0_yz_xxxyyzz, g_y_0_z_0_yz_xxxyzz, g_y_0_z_0_yz_xxxyzzz, g_y_0_z_0_yz_xxxzzz, g_y_0_z_0_yz_xxxzzzz, g_y_0_z_0_yz_xxyyyy, g_y_0_z_0_yz_xxyyyyy, g_y_0_z_0_yz_xxyyyyz, g_y_0_z_0_yz_xxyyyz, g_y_0_z_0_yz_xxyyyzz, g_y_0_z_0_yz_xxyyzz, g_y_0_z_0_yz_xxyyzzz, g_y_0_z_0_yz_xxyzzz, g_y_0_z_0_yz_xxyzzzz, g_y_0_z_0_yz_xxzzzz, g_y_0_z_0_yz_xxzzzzz, g_y_0_z_0_yz_xyyyyy, g_y_0_z_0_yz_xyyyyyy, g_y_0_z_0_yz_xyyyyyz, g_y_0_z_0_yz_xyyyyz, g_y_0_z_0_yz_xyyyyzz, g_y_0_z_0_yz_xyyyzz, g_y_0_z_0_yz_xyyyzzz, g_y_0_z_0_yz_xyyzzz, g_y_0_z_0_yz_xyyzzzz, g_y_0_z_0_yz_xyzzzz, g_y_0_z_0_yz_xyzzzzz, g_y_0_z_0_yz_xzzzzz, g_y_0_z_0_yz_xzzzzzz, g_y_0_z_0_yz_yyyyyy, g_y_0_z_0_yz_yyyyyz, g_y_0_z_0_yz_yyyyzz, g_y_0_z_0_yz_yyyzzz, g_y_0_z_0_yz_yyzzzz, g_y_0_z_0_yz_yzzzzz, g_y_0_z_0_yz_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_y_0_z_0_xyz_xxxxxx[k] = -g_y_0_z_0_yz_xxxxxx[k] * ab_x + g_y_0_z_0_yz_xxxxxxx[k];

                g_y_0_z_0_xyz_xxxxxy[k] = -g_y_0_z_0_yz_xxxxxy[k] * ab_x + g_y_0_z_0_yz_xxxxxxy[k];

                g_y_0_z_0_xyz_xxxxxz[k] = -g_y_0_z_0_yz_xxxxxz[k] * ab_x + g_y_0_z_0_yz_xxxxxxz[k];

                g_y_0_z_0_xyz_xxxxyy[k] = -g_y_0_z_0_yz_xxxxyy[k] * ab_x + g_y_0_z_0_yz_xxxxxyy[k];

                g_y_0_z_0_xyz_xxxxyz[k] = -g_y_0_z_0_yz_xxxxyz[k] * ab_x + g_y_0_z_0_yz_xxxxxyz[k];

                g_y_0_z_0_xyz_xxxxzz[k] = -g_y_0_z_0_yz_xxxxzz[k] * ab_x + g_y_0_z_0_yz_xxxxxzz[k];

                g_y_0_z_0_xyz_xxxyyy[k] = -g_y_0_z_0_yz_xxxyyy[k] * ab_x + g_y_0_z_0_yz_xxxxyyy[k];

                g_y_0_z_0_xyz_xxxyyz[k] = -g_y_0_z_0_yz_xxxyyz[k] * ab_x + g_y_0_z_0_yz_xxxxyyz[k];

                g_y_0_z_0_xyz_xxxyzz[k] = -g_y_0_z_0_yz_xxxyzz[k] * ab_x + g_y_0_z_0_yz_xxxxyzz[k];

                g_y_0_z_0_xyz_xxxzzz[k] = -g_y_0_z_0_yz_xxxzzz[k] * ab_x + g_y_0_z_0_yz_xxxxzzz[k];

                g_y_0_z_0_xyz_xxyyyy[k] = -g_y_0_z_0_yz_xxyyyy[k] * ab_x + g_y_0_z_0_yz_xxxyyyy[k];

                g_y_0_z_0_xyz_xxyyyz[k] = -g_y_0_z_0_yz_xxyyyz[k] * ab_x + g_y_0_z_0_yz_xxxyyyz[k];

                g_y_0_z_0_xyz_xxyyzz[k] = -g_y_0_z_0_yz_xxyyzz[k] * ab_x + g_y_0_z_0_yz_xxxyyzz[k];

                g_y_0_z_0_xyz_xxyzzz[k] = -g_y_0_z_0_yz_xxyzzz[k] * ab_x + g_y_0_z_0_yz_xxxyzzz[k];

                g_y_0_z_0_xyz_xxzzzz[k] = -g_y_0_z_0_yz_xxzzzz[k] * ab_x + g_y_0_z_0_yz_xxxzzzz[k];

                g_y_0_z_0_xyz_xyyyyy[k] = -g_y_0_z_0_yz_xyyyyy[k] * ab_x + g_y_0_z_0_yz_xxyyyyy[k];

                g_y_0_z_0_xyz_xyyyyz[k] = -g_y_0_z_0_yz_xyyyyz[k] * ab_x + g_y_0_z_0_yz_xxyyyyz[k];

                g_y_0_z_0_xyz_xyyyzz[k] = -g_y_0_z_0_yz_xyyyzz[k] * ab_x + g_y_0_z_0_yz_xxyyyzz[k];

                g_y_0_z_0_xyz_xyyzzz[k] = -g_y_0_z_0_yz_xyyzzz[k] * ab_x + g_y_0_z_0_yz_xxyyzzz[k];

                g_y_0_z_0_xyz_xyzzzz[k] = -g_y_0_z_0_yz_xyzzzz[k] * ab_x + g_y_0_z_0_yz_xxyzzzz[k];

                g_y_0_z_0_xyz_xzzzzz[k] = -g_y_0_z_0_yz_xzzzzz[k] * ab_x + g_y_0_z_0_yz_xxzzzzz[k];

                g_y_0_z_0_xyz_yyyyyy[k] = -g_y_0_z_0_yz_yyyyyy[k] * ab_x + g_y_0_z_0_yz_xyyyyyy[k];

                g_y_0_z_0_xyz_yyyyyz[k] = -g_y_0_z_0_yz_yyyyyz[k] * ab_x + g_y_0_z_0_yz_xyyyyyz[k];

                g_y_0_z_0_xyz_yyyyzz[k] = -g_y_0_z_0_yz_yyyyzz[k] * ab_x + g_y_0_z_0_yz_xyyyyzz[k];

                g_y_0_z_0_xyz_yyyzzz[k] = -g_y_0_z_0_yz_yyyzzz[k] * ab_x + g_y_0_z_0_yz_xyyyzzz[k];

                g_y_0_z_0_xyz_yyzzzz[k] = -g_y_0_z_0_yz_yyzzzz[k] * ab_x + g_y_0_z_0_yz_xyyzzzz[k];

                g_y_0_z_0_xyz_yzzzzz[k] = -g_y_0_z_0_yz_yzzzzz[k] * ab_x + g_y_0_z_0_yz_xyzzzzz[k];

                g_y_0_z_0_xyz_zzzzzz[k] = -g_y_0_z_0_yz_zzzzzz[k] * ab_x + g_y_0_z_0_yz_xzzzzzz[k];
            }

            /// Set up 1540-1568 components of targeted buffer : cbuffer.data(

            auto g_y_0_z_0_xzz_xxxxxx = cbuffer.data(fi_geom_1010_off + 1540 * ccomps * dcomps);

            auto g_y_0_z_0_xzz_xxxxxy = cbuffer.data(fi_geom_1010_off + 1541 * ccomps * dcomps);

            auto g_y_0_z_0_xzz_xxxxxz = cbuffer.data(fi_geom_1010_off + 1542 * ccomps * dcomps);

            auto g_y_0_z_0_xzz_xxxxyy = cbuffer.data(fi_geom_1010_off + 1543 * ccomps * dcomps);

            auto g_y_0_z_0_xzz_xxxxyz = cbuffer.data(fi_geom_1010_off + 1544 * ccomps * dcomps);

            auto g_y_0_z_0_xzz_xxxxzz = cbuffer.data(fi_geom_1010_off + 1545 * ccomps * dcomps);

            auto g_y_0_z_0_xzz_xxxyyy = cbuffer.data(fi_geom_1010_off + 1546 * ccomps * dcomps);

            auto g_y_0_z_0_xzz_xxxyyz = cbuffer.data(fi_geom_1010_off + 1547 * ccomps * dcomps);

            auto g_y_0_z_0_xzz_xxxyzz = cbuffer.data(fi_geom_1010_off + 1548 * ccomps * dcomps);

            auto g_y_0_z_0_xzz_xxxzzz = cbuffer.data(fi_geom_1010_off + 1549 * ccomps * dcomps);

            auto g_y_0_z_0_xzz_xxyyyy = cbuffer.data(fi_geom_1010_off + 1550 * ccomps * dcomps);

            auto g_y_0_z_0_xzz_xxyyyz = cbuffer.data(fi_geom_1010_off + 1551 * ccomps * dcomps);

            auto g_y_0_z_0_xzz_xxyyzz = cbuffer.data(fi_geom_1010_off + 1552 * ccomps * dcomps);

            auto g_y_0_z_0_xzz_xxyzzz = cbuffer.data(fi_geom_1010_off + 1553 * ccomps * dcomps);

            auto g_y_0_z_0_xzz_xxzzzz = cbuffer.data(fi_geom_1010_off + 1554 * ccomps * dcomps);

            auto g_y_0_z_0_xzz_xyyyyy = cbuffer.data(fi_geom_1010_off + 1555 * ccomps * dcomps);

            auto g_y_0_z_0_xzz_xyyyyz = cbuffer.data(fi_geom_1010_off + 1556 * ccomps * dcomps);

            auto g_y_0_z_0_xzz_xyyyzz = cbuffer.data(fi_geom_1010_off + 1557 * ccomps * dcomps);

            auto g_y_0_z_0_xzz_xyyzzz = cbuffer.data(fi_geom_1010_off + 1558 * ccomps * dcomps);

            auto g_y_0_z_0_xzz_xyzzzz = cbuffer.data(fi_geom_1010_off + 1559 * ccomps * dcomps);

            auto g_y_0_z_0_xzz_xzzzzz = cbuffer.data(fi_geom_1010_off + 1560 * ccomps * dcomps);

            auto g_y_0_z_0_xzz_yyyyyy = cbuffer.data(fi_geom_1010_off + 1561 * ccomps * dcomps);

            auto g_y_0_z_0_xzz_yyyyyz = cbuffer.data(fi_geom_1010_off + 1562 * ccomps * dcomps);

            auto g_y_0_z_0_xzz_yyyyzz = cbuffer.data(fi_geom_1010_off + 1563 * ccomps * dcomps);

            auto g_y_0_z_0_xzz_yyyzzz = cbuffer.data(fi_geom_1010_off + 1564 * ccomps * dcomps);

            auto g_y_0_z_0_xzz_yyzzzz = cbuffer.data(fi_geom_1010_off + 1565 * ccomps * dcomps);

            auto g_y_0_z_0_xzz_yzzzzz = cbuffer.data(fi_geom_1010_off + 1566 * ccomps * dcomps);

            auto g_y_0_z_0_xzz_zzzzzz = cbuffer.data(fi_geom_1010_off + 1567 * ccomps * dcomps);

            #pragma omp simd aligned(g_y_0_z_0_xzz_xxxxxx, g_y_0_z_0_xzz_xxxxxy, g_y_0_z_0_xzz_xxxxxz, g_y_0_z_0_xzz_xxxxyy, g_y_0_z_0_xzz_xxxxyz, g_y_0_z_0_xzz_xxxxzz, g_y_0_z_0_xzz_xxxyyy, g_y_0_z_0_xzz_xxxyyz, g_y_0_z_0_xzz_xxxyzz, g_y_0_z_0_xzz_xxxzzz, g_y_0_z_0_xzz_xxyyyy, g_y_0_z_0_xzz_xxyyyz, g_y_0_z_0_xzz_xxyyzz, g_y_0_z_0_xzz_xxyzzz, g_y_0_z_0_xzz_xxzzzz, g_y_0_z_0_xzz_xyyyyy, g_y_0_z_0_xzz_xyyyyz, g_y_0_z_0_xzz_xyyyzz, g_y_0_z_0_xzz_xyyzzz, g_y_0_z_0_xzz_xyzzzz, g_y_0_z_0_xzz_xzzzzz, g_y_0_z_0_xzz_yyyyyy, g_y_0_z_0_xzz_yyyyyz, g_y_0_z_0_xzz_yyyyzz, g_y_0_z_0_xzz_yyyzzz, g_y_0_z_0_xzz_yyzzzz, g_y_0_z_0_xzz_yzzzzz, g_y_0_z_0_xzz_zzzzzz, g_y_0_z_0_zz_xxxxxx, g_y_0_z_0_zz_xxxxxxx, g_y_0_z_0_zz_xxxxxxy, g_y_0_z_0_zz_xxxxxxz, g_y_0_z_0_zz_xxxxxy, g_y_0_z_0_zz_xxxxxyy, g_y_0_z_0_zz_xxxxxyz, g_y_0_z_0_zz_xxxxxz, g_y_0_z_0_zz_xxxxxzz, g_y_0_z_0_zz_xxxxyy, g_y_0_z_0_zz_xxxxyyy, g_y_0_z_0_zz_xxxxyyz, g_y_0_z_0_zz_xxxxyz, g_y_0_z_0_zz_xxxxyzz, g_y_0_z_0_zz_xxxxzz, g_y_0_z_0_zz_xxxxzzz, g_y_0_z_0_zz_xxxyyy, g_y_0_z_0_zz_xxxyyyy, g_y_0_z_0_zz_xxxyyyz, g_y_0_z_0_zz_xxxyyz, g_y_0_z_0_zz_xxxyyzz, g_y_0_z_0_zz_xxxyzz, g_y_0_z_0_zz_xxxyzzz, g_y_0_z_0_zz_xxxzzz, g_y_0_z_0_zz_xxxzzzz, g_y_0_z_0_zz_xxyyyy, g_y_0_z_0_zz_xxyyyyy, g_y_0_z_0_zz_xxyyyyz, g_y_0_z_0_zz_xxyyyz, g_y_0_z_0_zz_xxyyyzz, g_y_0_z_0_zz_xxyyzz, g_y_0_z_0_zz_xxyyzzz, g_y_0_z_0_zz_xxyzzz, g_y_0_z_0_zz_xxyzzzz, g_y_0_z_0_zz_xxzzzz, g_y_0_z_0_zz_xxzzzzz, g_y_0_z_0_zz_xyyyyy, g_y_0_z_0_zz_xyyyyyy, g_y_0_z_0_zz_xyyyyyz, g_y_0_z_0_zz_xyyyyz, g_y_0_z_0_zz_xyyyyzz, g_y_0_z_0_zz_xyyyzz, g_y_0_z_0_zz_xyyyzzz, g_y_0_z_0_zz_xyyzzz, g_y_0_z_0_zz_xyyzzzz, g_y_0_z_0_zz_xyzzzz, g_y_0_z_0_zz_xyzzzzz, g_y_0_z_0_zz_xzzzzz, g_y_0_z_0_zz_xzzzzzz, g_y_0_z_0_zz_yyyyyy, g_y_0_z_0_zz_yyyyyz, g_y_0_z_0_zz_yyyyzz, g_y_0_z_0_zz_yyyzzz, g_y_0_z_0_zz_yyzzzz, g_y_0_z_0_zz_yzzzzz, g_y_0_z_0_zz_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_y_0_z_0_xzz_xxxxxx[k] = -g_y_0_z_0_zz_xxxxxx[k] * ab_x + g_y_0_z_0_zz_xxxxxxx[k];

                g_y_0_z_0_xzz_xxxxxy[k] = -g_y_0_z_0_zz_xxxxxy[k] * ab_x + g_y_0_z_0_zz_xxxxxxy[k];

                g_y_0_z_0_xzz_xxxxxz[k] = -g_y_0_z_0_zz_xxxxxz[k] * ab_x + g_y_0_z_0_zz_xxxxxxz[k];

                g_y_0_z_0_xzz_xxxxyy[k] = -g_y_0_z_0_zz_xxxxyy[k] * ab_x + g_y_0_z_0_zz_xxxxxyy[k];

                g_y_0_z_0_xzz_xxxxyz[k] = -g_y_0_z_0_zz_xxxxyz[k] * ab_x + g_y_0_z_0_zz_xxxxxyz[k];

                g_y_0_z_0_xzz_xxxxzz[k] = -g_y_0_z_0_zz_xxxxzz[k] * ab_x + g_y_0_z_0_zz_xxxxxzz[k];

                g_y_0_z_0_xzz_xxxyyy[k] = -g_y_0_z_0_zz_xxxyyy[k] * ab_x + g_y_0_z_0_zz_xxxxyyy[k];

                g_y_0_z_0_xzz_xxxyyz[k] = -g_y_0_z_0_zz_xxxyyz[k] * ab_x + g_y_0_z_0_zz_xxxxyyz[k];

                g_y_0_z_0_xzz_xxxyzz[k] = -g_y_0_z_0_zz_xxxyzz[k] * ab_x + g_y_0_z_0_zz_xxxxyzz[k];

                g_y_0_z_0_xzz_xxxzzz[k] = -g_y_0_z_0_zz_xxxzzz[k] * ab_x + g_y_0_z_0_zz_xxxxzzz[k];

                g_y_0_z_0_xzz_xxyyyy[k] = -g_y_0_z_0_zz_xxyyyy[k] * ab_x + g_y_0_z_0_zz_xxxyyyy[k];

                g_y_0_z_0_xzz_xxyyyz[k] = -g_y_0_z_0_zz_xxyyyz[k] * ab_x + g_y_0_z_0_zz_xxxyyyz[k];

                g_y_0_z_0_xzz_xxyyzz[k] = -g_y_0_z_0_zz_xxyyzz[k] * ab_x + g_y_0_z_0_zz_xxxyyzz[k];

                g_y_0_z_0_xzz_xxyzzz[k] = -g_y_0_z_0_zz_xxyzzz[k] * ab_x + g_y_0_z_0_zz_xxxyzzz[k];

                g_y_0_z_0_xzz_xxzzzz[k] = -g_y_0_z_0_zz_xxzzzz[k] * ab_x + g_y_0_z_0_zz_xxxzzzz[k];

                g_y_0_z_0_xzz_xyyyyy[k] = -g_y_0_z_0_zz_xyyyyy[k] * ab_x + g_y_0_z_0_zz_xxyyyyy[k];

                g_y_0_z_0_xzz_xyyyyz[k] = -g_y_0_z_0_zz_xyyyyz[k] * ab_x + g_y_0_z_0_zz_xxyyyyz[k];

                g_y_0_z_0_xzz_xyyyzz[k] = -g_y_0_z_0_zz_xyyyzz[k] * ab_x + g_y_0_z_0_zz_xxyyyzz[k];

                g_y_0_z_0_xzz_xyyzzz[k] = -g_y_0_z_0_zz_xyyzzz[k] * ab_x + g_y_0_z_0_zz_xxyyzzz[k];

                g_y_0_z_0_xzz_xyzzzz[k] = -g_y_0_z_0_zz_xyzzzz[k] * ab_x + g_y_0_z_0_zz_xxyzzzz[k];

                g_y_0_z_0_xzz_xzzzzz[k] = -g_y_0_z_0_zz_xzzzzz[k] * ab_x + g_y_0_z_0_zz_xxzzzzz[k];

                g_y_0_z_0_xzz_yyyyyy[k] = -g_y_0_z_0_zz_yyyyyy[k] * ab_x + g_y_0_z_0_zz_xyyyyyy[k];

                g_y_0_z_0_xzz_yyyyyz[k] = -g_y_0_z_0_zz_yyyyyz[k] * ab_x + g_y_0_z_0_zz_xyyyyyz[k];

                g_y_0_z_0_xzz_yyyyzz[k] = -g_y_0_z_0_zz_yyyyzz[k] * ab_x + g_y_0_z_0_zz_xyyyyzz[k];

                g_y_0_z_0_xzz_yyyzzz[k] = -g_y_0_z_0_zz_yyyzzz[k] * ab_x + g_y_0_z_0_zz_xyyyzzz[k];

                g_y_0_z_0_xzz_yyzzzz[k] = -g_y_0_z_0_zz_yyzzzz[k] * ab_x + g_y_0_z_0_zz_xyyzzzz[k];

                g_y_0_z_0_xzz_yzzzzz[k] = -g_y_0_z_0_zz_yzzzzz[k] * ab_x + g_y_0_z_0_zz_xyzzzzz[k];

                g_y_0_z_0_xzz_zzzzzz[k] = -g_y_0_z_0_zz_zzzzzz[k] * ab_x + g_y_0_z_0_zz_xzzzzzz[k];
            }

            /// Set up 1568-1596 components of targeted buffer : cbuffer.data(

            auto g_y_0_z_0_yyy_xxxxxx = cbuffer.data(fi_geom_1010_off + 1568 * ccomps * dcomps);

            auto g_y_0_z_0_yyy_xxxxxy = cbuffer.data(fi_geom_1010_off + 1569 * ccomps * dcomps);

            auto g_y_0_z_0_yyy_xxxxxz = cbuffer.data(fi_geom_1010_off + 1570 * ccomps * dcomps);

            auto g_y_0_z_0_yyy_xxxxyy = cbuffer.data(fi_geom_1010_off + 1571 * ccomps * dcomps);

            auto g_y_0_z_0_yyy_xxxxyz = cbuffer.data(fi_geom_1010_off + 1572 * ccomps * dcomps);

            auto g_y_0_z_0_yyy_xxxxzz = cbuffer.data(fi_geom_1010_off + 1573 * ccomps * dcomps);

            auto g_y_0_z_0_yyy_xxxyyy = cbuffer.data(fi_geom_1010_off + 1574 * ccomps * dcomps);

            auto g_y_0_z_0_yyy_xxxyyz = cbuffer.data(fi_geom_1010_off + 1575 * ccomps * dcomps);

            auto g_y_0_z_0_yyy_xxxyzz = cbuffer.data(fi_geom_1010_off + 1576 * ccomps * dcomps);

            auto g_y_0_z_0_yyy_xxxzzz = cbuffer.data(fi_geom_1010_off + 1577 * ccomps * dcomps);

            auto g_y_0_z_0_yyy_xxyyyy = cbuffer.data(fi_geom_1010_off + 1578 * ccomps * dcomps);

            auto g_y_0_z_0_yyy_xxyyyz = cbuffer.data(fi_geom_1010_off + 1579 * ccomps * dcomps);

            auto g_y_0_z_0_yyy_xxyyzz = cbuffer.data(fi_geom_1010_off + 1580 * ccomps * dcomps);

            auto g_y_0_z_0_yyy_xxyzzz = cbuffer.data(fi_geom_1010_off + 1581 * ccomps * dcomps);

            auto g_y_0_z_0_yyy_xxzzzz = cbuffer.data(fi_geom_1010_off + 1582 * ccomps * dcomps);

            auto g_y_0_z_0_yyy_xyyyyy = cbuffer.data(fi_geom_1010_off + 1583 * ccomps * dcomps);

            auto g_y_0_z_0_yyy_xyyyyz = cbuffer.data(fi_geom_1010_off + 1584 * ccomps * dcomps);

            auto g_y_0_z_0_yyy_xyyyzz = cbuffer.data(fi_geom_1010_off + 1585 * ccomps * dcomps);

            auto g_y_0_z_0_yyy_xyyzzz = cbuffer.data(fi_geom_1010_off + 1586 * ccomps * dcomps);

            auto g_y_0_z_0_yyy_xyzzzz = cbuffer.data(fi_geom_1010_off + 1587 * ccomps * dcomps);

            auto g_y_0_z_0_yyy_xzzzzz = cbuffer.data(fi_geom_1010_off + 1588 * ccomps * dcomps);

            auto g_y_0_z_0_yyy_yyyyyy = cbuffer.data(fi_geom_1010_off + 1589 * ccomps * dcomps);

            auto g_y_0_z_0_yyy_yyyyyz = cbuffer.data(fi_geom_1010_off + 1590 * ccomps * dcomps);

            auto g_y_0_z_0_yyy_yyyyzz = cbuffer.data(fi_geom_1010_off + 1591 * ccomps * dcomps);

            auto g_y_0_z_0_yyy_yyyzzz = cbuffer.data(fi_geom_1010_off + 1592 * ccomps * dcomps);

            auto g_y_0_z_0_yyy_yyzzzz = cbuffer.data(fi_geom_1010_off + 1593 * ccomps * dcomps);

            auto g_y_0_z_0_yyy_yzzzzz = cbuffer.data(fi_geom_1010_off + 1594 * ccomps * dcomps);

            auto g_y_0_z_0_yyy_zzzzzz = cbuffer.data(fi_geom_1010_off + 1595 * ccomps * dcomps);

            #pragma omp simd aligned(g_0_0_z_0_yy_xxxxxx, g_0_0_z_0_yy_xxxxxy, g_0_0_z_0_yy_xxxxxz, g_0_0_z_0_yy_xxxxyy, g_0_0_z_0_yy_xxxxyz, g_0_0_z_0_yy_xxxxzz, g_0_0_z_0_yy_xxxyyy, g_0_0_z_0_yy_xxxyyz, g_0_0_z_0_yy_xxxyzz, g_0_0_z_0_yy_xxxzzz, g_0_0_z_0_yy_xxyyyy, g_0_0_z_0_yy_xxyyyz, g_0_0_z_0_yy_xxyyzz, g_0_0_z_0_yy_xxyzzz, g_0_0_z_0_yy_xxzzzz, g_0_0_z_0_yy_xyyyyy, g_0_0_z_0_yy_xyyyyz, g_0_0_z_0_yy_xyyyzz, g_0_0_z_0_yy_xyyzzz, g_0_0_z_0_yy_xyzzzz, g_0_0_z_0_yy_xzzzzz, g_0_0_z_0_yy_yyyyyy, g_0_0_z_0_yy_yyyyyz, g_0_0_z_0_yy_yyyyzz, g_0_0_z_0_yy_yyyzzz, g_0_0_z_0_yy_yyzzzz, g_0_0_z_0_yy_yzzzzz, g_0_0_z_0_yy_zzzzzz, g_y_0_z_0_yy_xxxxxx, g_y_0_z_0_yy_xxxxxxy, g_y_0_z_0_yy_xxxxxy, g_y_0_z_0_yy_xxxxxyy, g_y_0_z_0_yy_xxxxxyz, g_y_0_z_0_yy_xxxxxz, g_y_0_z_0_yy_xxxxyy, g_y_0_z_0_yy_xxxxyyy, g_y_0_z_0_yy_xxxxyyz, g_y_0_z_0_yy_xxxxyz, g_y_0_z_0_yy_xxxxyzz, g_y_0_z_0_yy_xxxxzz, g_y_0_z_0_yy_xxxyyy, g_y_0_z_0_yy_xxxyyyy, g_y_0_z_0_yy_xxxyyyz, g_y_0_z_0_yy_xxxyyz, g_y_0_z_0_yy_xxxyyzz, g_y_0_z_0_yy_xxxyzz, g_y_0_z_0_yy_xxxyzzz, g_y_0_z_0_yy_xxxzzz, g_y_0_z_0_yy_xxyyyy, g_y_0_z_0_yy_xxyyyyy, g_y_0_z_0_yy_xxyyyyz, g_y_0_z_0_yy_xxyyyz, g_y_0_z_0_yy_xxyyyzz, g_y_0_z_0_yy_xxyyzz, g_y_0_z_0_yy_xxyyzzz, g_y_0_z_0_yy_xxyzzz, g_y_0_z_0_yy_xxyzzzz, g_y_0_z_0_yy_xxzzzz, g_y_0_z_0_yy_xyyyyy, g_y_0_z_0_yy_xyyyyyy, g_y_0_z_0_yy_xyyyyyz, g_y_0_z_0_yy_xyyyyz, g_y_0_z_0_yy_xyyyyzz, g_y_0_z_0_yy_xyyyzz, g_y_0_z_0_yy_xyyyzzz, g_y_0_z_0_yy_xyyzzz, g_y_0_z_0_yy_xyyzzzz, g_y_0_z_0_yy_xyzzzz, g_y_0_z_0_yy_xyzzzzz, g_y_0_z_0_yy_xzzzzz, g_y_0_z_0_yy_yyyyyy, g_y_0_z_0_yy_yyyyyyy, g_y_0_z_0_yy_yyyyyyz, g_y_0_z_0_yy_yyyyyz, g_y_0_z_0_yy_yyyyyzz, g_y_0_z_0_yy_yyyyzz, g_y_0_z_0_yy_yyyyzzz, g_y_0_z_0_yy_yyyzzz, g_y_0_z_0_yy_yyyzzzz, g_y_0_z_0_yy_yyzzzz, g_y_0_z_0_yy_yyzzzzz, g_y_0_z_0_yy_yzzzzz, g_y_0_z_0_yy_yzzzzzz, g_y_0_z_0_yy_zzzzzz, g_y_0_z_0_yyy_xxxxxx, g_y_0_z_0_yyy_xxxxxy, g_y_0_z_0_yyy_xxxxxz, g_y_0_z_0_yyy_xxxxyy, g_y_0_z_0_yyy_xxxxyz, g_y_0_z_0_yyy_xxxxzz, g_y_0_z_0_yyy_xxxyyy, g_y_0_z_0_yyy_xxxyyz, g_y_0_z_0_yyy_xxxyzz, g_y_0_z_0_yyy_xxxzzz, g_y_0_z_0_yyy_xxyyyy, g_y_0_z_0_yyy_xxyyyz, g_y_0_z_0_yyy_xxyyzz, g_y_0_z_0_yyy_xxyzzz, g_y_0_z_0_yyy_xxzzzz, g_y_0_z_0_yyy_xyyyyy, g_y_0_z_0_yyy_xyyyyz, g_y_0_z_0_yyy_xyyyzz, g_y_0_z_0_yyy_xyyzzz, g_y_0_z_0_yyy_xyzzzz, g_y_0_z_0_yyy_xzzzzz, g_y_0_z_0_yyy_yyyyyy, g_y_0_z_0_yyy_yyyyyz, g_y_0_z_0_yyy_yyyyzz, g_y_0_z_0_yyy_yyyzzz, g_y_0_z_0_yyy_yyzzzz, g_y_0_z_0_yyy_yzzzzz, g_y_0_z_0_yyy_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_y_0_z_0_yyy_xxxxxx[k] = -g_0_0_z_0_yy_xxxxxx[k] - g_y_0_z_0_yy_xxxxxx[k] * ab_y + g_y_0_z_0_yy_xxxxxxy[k];

                g_y_0_z_0_yyy_xxxxxy[k] = -g_0_0_z_0_yy_xxxxxy[k] - g_y_0_z_0_yy_xxxxxy[k] * ab_y + g_y_0_z_0_yy_xxxxxyy[k];

                g_y_0_z_0_yyy_xxxxxz[k] = -g_0_0_z_0_yy_xxxxxz[k] - g_y_0_z_0_yy_xxxxxz[k] * ab_y + g_y_0_z_0_yy_xxxxxyz[k];

                g_y_0_z_0_yyy_xxxxyy[k] = -g_0_0_z_0_yy_xxxxyy[k] - g_y_0_z_0_yy_xxxxyy[k] * ab_y + g_y_0_z_0_yy_xxxxyyy[k];

                g_y_0_z_0_yyy_xxxxyz[k] = -g_0_0_z_0_yy_xxxxyz[k] - g_y_0_z_0_yy_xxxxyz[k] * ab_y + g_y_0_z_0_yy_xxxxyyz[k];

                g_y_0_z_0_yyy_xxxxzz[k] = -g_0_0_z_0_yy_xxxxzz[k] - g_y_0_z_0_yy_xxxxzz[k] * ab_y + g_y_0_z_0_yy_xxxxyzz[k];

                g_y_0_z_0_yyy_xxxyyy[k] = -g_0_0_z_0_yy_xxxyyy[k] - g_y_0_z_0_yy_xxxyyy[k] * ab_y + g_y_0_z_0_yy_xxxyyyy[k];

                g_y_0_z_0_yyy_xxxyyz[k] = -g_0_0_z_0_yy_xxxyyz[k] - g_y_0_z_0_yy_xxxyyz[k] * ab_y + g_y_0_z_0_yy_xxxyyyz[k];

                g_y_0_z_0_yyy_xxxyzz[k] = -g_0_0_z_0_yy_xxxyzz[k] - g_y_0_z_0_yy_xxxyzz[k] * ab_y + g_y_0_z_0_yy_xxxyyzz[k];

                g_y_0_z_0_yyy_xxxzzz[k] = -g_0_0_z_0_yy_xxxzzz[k] - g_y_0_z_0_yy_xxxzzz[k] * ab_y + g_y_0_z_0_yy_xxxyzzz[k];

                g_y_0_z_0_yyy_xxyyyy[k] = -g_0_0_z_0_yy_xxyyyy[k] - g_y_0_z_0_yy_xxyyyy[k] * ab_y + g_y_0_z_0_yy_xxyyyyy[k];

                g_y_0_z_0_yyy_xxyyyz[k] = -g_0_0_z_0_yy_xxyyyz[k] - g_y_0_z_0_yy_xxyyyz[k] * ab_y + g_y_0_z_0_yy_xxyyyyz[k];

                g_y_0_z_0_yyy_xxyyzz[k] = -g_0_0_z_0_yy_xxyyzz[k] - g_y_0_z_0_yy_xxyyzz[k] * ab_y + g_y_0_z_0_yy_xxyyyzz[k];

                g_y_0_z_0_yyy_xxyzzz[k] = -g_0_0_z_0_yy_xxyzzz[k] - g_y_0_z_0_yy_xxyzzz[k] * ab_y + g_y_0_z_0_yy_xxyyzzz[k];

                g_y_0_z_0_yyy_xxzzzz[k] = -g_0_0_z_0_yy_xxzzzz[k] - g_y_0_z_0_yy_xxzzzz[k] * ab_y + g_y_0_z_0_yy_xxyzzzz[k];

                g_y_0_z_0_yyy_xyyyyy[k] = -g_0_0_z_0_yy_xyyyyy[k] - g_y_0_z_0_yy_xyyyyy[k] * ab_y + g_y_0_z_0_yy_xyyyyyy[k];

                g_y_0_z_0_yyy_xyyyyz[k] = -g_0_0_z_0_yy_xyyyyz[k] - g_y_0_z_0_yy_xyyyyz[k] * ab_y + g_y_0_z_0_yy_xyyyyyz[k];

                g_y_0_z_0_yyy_xyyyzz[k] = -g_0_0_z_0_yy_xyyyzz[k] - g_y_0_z_0_yy_xyyyzz[k] * ab_y + g_y_0_z_0_yy_xyyyyzz[k];

                g_y_0_z_0_yyy_xyyzzz[k] = -g_0_0_z_0_yy_xyyzzz[k] - g_y_0_z_0_yy_xyyzzz[k] * ab_y + g_y_0_z_0_yy_xyyyzzz[k];

                g_y_0_z_0_yyy_xyzzzz[k] = -g_0_0_z_0_yy_xyzzzz[k] - g_y_0_z_0_yy_xyzzzz[k] * ab_y + g_y_0_z_0_yy_xyyzzzz[k];

                g_y_0_z_0_yyy_xzzzzz[k] = -g_0_0_z_0_yy_xzzzzz[k] - g_y_0_z_0_yy_xzzzzz[k] * ab_y + g_y_0_z_0_yy_xyzzzzz[k];

                g_y_0_z_0_yyy_yyyyyy[k] = -g_0_0_z_0_yy_yyyyyy[k] - g_y_0_z_0_yy_yyyyyy[k] * ab_y + g_y_0_z_0_yy_yyyyyyy[k];

                g_y_0_z_0_yyy_yyyyyz[k] = -g_0_0_z_0_yy_yyyyyz[k] - g_y_0_z_0_yy_yyyyyz[k] * ab_y + g_y_0_z_0_yy_yyyyyyz[k];

                g_y_0_z_0_yyy_yyyyzz[k] = -g_0_0_z_0_yy_yyyyzz[k] - g_y_0_z_0_yy_yyyyzz[k] * ab_y + g_y_0_z_0_yy_yyyyyzz[k];

                g_y_0_z_0_yyy_yyyzzz[k] = -g_0_0_z_0_yy_yyyzzz[k] - g_y_0_z_0_yy_yyyzzz[k] * ab_y + g_y_0_z_0_yy_yyyyzzz[k];

                g_y_0_z_0_yyy_yyzzzz[k] = -g_0_0_z_0_yy_yyzzzz[k] - g_y_0_z_0_yy_yyzzzz[k] * ab_y + g_y_0_z_0_yy_yyyzzzz[k];

                g_y_0_z_0_yyy_yzzzzz[k] = -g_0_0_z_0_yy_yzzzzz[k] - g_y_0_z_0_yy_yzzzzz[k] * ab_y + g_y_0_z_0_yy_yyzzzzz[k];

                g_y_0_z_0_yyy_zzzzzz[k] = -g_0_0_z_0_yy_zzzzzz[k] - g_y_0_z_0_yy_zzzzzz[k] * ab_y + g_y_0_z_0_yy_yzzzzzz[k];
            }

            /// Set up 1596-1624 components of targeted buffer : cbuffer.data(

            auto g_y_0_z_0_yyz_xxxxxx = cbuffer.data(fi_geom_1010_off + 1596 * ccomps * dcomps);

            auto g_y_0_z_0_yyz_xxxxxy = cbuffer.data(fi_geom_1010_off + 1597 * ccomps * dcomps);

            auto g_y_0_z_0_yyz_xxxxxz = cbuffer.data(fi_geom_1010_off + 1598 * ccomps * dcomps);

            auto g_y_0_z_0_yyz_xxxxyy = cbuffer.data(fi_geom_1010_off + 1599 * ccomps * dcomps);

            auto g_y_0_z_0_yyz_xxxxyz = cbuffer.data(fi_geom_1010_off + 1600 * ccomps * dcomps);

            auto g_y_0_z_0_yyz_xxxxzz = cbuffer.data(fi_geom_1010_off + 1601 * ccomps * dcomps);

            auto g_y_0_z_0_yyz_xxxyyy = cbuffer.data(fi_geom_1010_off + 1602 * ccomps * dcomps);

            auto g_y_0_z_0_yyz_xxxyyz = cbuffer.data(fi_geom_1010_off + 1603 * ccomps * dcomps);

            auto g_y_0_z_0_yyz_xxxyzz = cbuffer.data(fi_geom_1010_off + 1604 * ccomps * dcomps);

            auto g_y_0_z_0_yyz_xxxzzz = cbuffer.data(fi_geom_1010_off + 1605 * ccomps * dcomps);

            auto g_y_0_z_0_yyz_xxyyyy = cbuffer.data(fi_geom_1010_off + 1606 * ccomps * dcomps);

            auto g_y_0_z_0_yyz_xxyyyz = cbuffer.data(fi_geom_1010_off + 1607 * ccomps * dcomps);

            auto g_y_0_z_0_yyz_xxyyzz = cbuffer.data(fi_geom_1010_off + 1608 * ccomps * dcomps);

            auto g_y_0_z_0_yyz_xxyzzz = cbuffer.data(fi_geom_1010_off + 1609 * ccomps * dcomps);

            auto g_y_0_z_0_yyz_xxzzzz = cbuffer.data(fi_geom_1010_off + 1610 * ccomps * dcomps);

            auto g_y_0_z_0_yyz_xyyyyy = cbuffer.data(fi_geom_1010_off + 1611 * ccomps * dcomps);

            auto g_y_0_z_0_yyz_xyyyyz = cbuffer.data(fi_geom_1010_off + 1612 * ccomps * dcomps);

            auto g_y_0_z_0_yyz_xyyyzz = cbuffer.data(fi_geom_1010_off + 1613 * ccomps * dcomps);

            auto g_y_0_z_0_yyz_xyyzzz = cbuffer.data(fi_geom_1010_off + 1614 * ccomps * dcomps);

            auto g_y_0_z_0_yyz_xyzzzz = cbuffer.data(fi_geom_1010_off + 1615 * ccomps * dcomps);

            auto g_y_0_z_0_yyz_xzzzzz = cbuffer.data(fi_geom_1010_off + 1616 * ccomps * dcomps);

            auto g_y_0_z_0_yyz_yyyyyy = cbuffer.data(fi_geom_1010_off + 1617 * ccomps * dcomps);

            auto g_y_0_z_0_yyz_yyyyyz = cbuffer.data(fi_geom_1010_off + 1618 * ccomps * dcomps);

            auto g_y_0_z_0_yyz_yyyyzz = cbuffer.data(fi_geom_1010_off + 1619 * ccomps * dcomps);

            auto g_y_0_z_0_yyz_yyyzzz = cbuffer.data(fi_geom_1010_off + 1620 * ccomps * dcomps);

            auto g_y_0_z_0_yyz_yyzzzz = cbuffer.data(fi_geom_1010_off + 1621 * ccomps * dcomps);

            auto g_y_0_z_0_yyz_yzzzzz = cbuffer.data(fi_geom_1010_off + 1622 * ccomps * dcomps);

            auto g_y_0_z_0_yyz_zzzzzz = cbuffer.data(fi_geom_1010_off + 1623 * ccomps * dcomps);

            #pragma omp simd aligned(g_y_0_z_0_yy_xxxxxx, g_y_0_z_0_yy_xxxxxxz, g_y_0_z_0_yy_xxxxxy, g_y_0_z_0_yy_xxxxxyz, g_y_0_z_0_yy_xxxxxz, g_y_0_z_0_yy_xxxxxzz, g_y_0_z_0_yy_xxxxyy, g_y_0_z_0_yy_xxxxyyz, g_y_0_z_0_yy_xxxxyz, g_y_0_z_0_yy_xxxxyzz, g_y_0_z_0_yy_xxxxzz, g_y_0_z_0_yy_xxxxzzz, g_y_0_z_0_yy_xxxyyy, g_y_0_z_0_yy_xxxyyyz, g_y_0_z_0_yy_xxxyyz, g_y_0_z_0_yy_xxxyyzz, g_y_0_z_0_yy_xxxyzz, g_y_0_z_0_yy_xxxyzzz, g_y_0_z_0_yy_xxxzzz, g_y_0_z_0_yy_xxxzzzz, g_y_0_z_0_yy_xxyyyy, g_y_0_z_0_yy_xxyyyyz, g_y_0_z_0_yy_xxyyyz, g_y_0_z_0_yy_xxyyyzz, g_y_0_z_0_yy_xxyyzz, g_y_0_z_0_yy_xxyyzzz, g_y_0_z_0_yy_xxyzzz, g_y_0_z_0_yy_xxyzzzz, g_y_0_z_0_yy_xxzzzz, g_y_0_z_0_yy_xxzzzzz, g_y_0_z_0_yy_xyyyyy, g_y_0_z_0_yy_xyyyyyz, g_y_0_z_0_yy_xyyyyz, g_y_0_z_0_yy_xyyyyzz, g_y_0_z_0_yy_xyyyzz, g_y_0_z_0_yy_xyyyzzz, g_y_0_z_0_yy_xyyzzz, g_y_0_z_0_yy_xyyzzzz, g_y_0_z_0_yy_xyzzzz, g_y_0_z_0_yy_xyzzzzz, g_y_0_z_0_yy_xzzzzz, g_y_0_z_0_yy_xzzzzzz, g_y_0_z_0_yy_yyyyyy, g_y_0_z_0_yy_yyyyyyz, g_y_0_z_0_yy_yyyyyz, g_y_0_z_0_yy_yyyyyzz, g_y_0_z_0_yy_yyyyzz, g_y_0_z_0_yy_yyyyzzz, g_y_0_z_0_yy_yyyzzz, g_y_0_z_0_yy_yyyzzzz, g_y_0_z_0_yy_yyzzzz, g_y_0_z_0_yy_yyzzzzz, g_y_0_z_0_yy_yzzzzz, g_y_0_z_0_yy_yzzzzzz, g_y_0_z_0_yy_zzzzzz, g_y_0_z_0_yy_zzzzzzz, g_y_0_z_0_yyz_xxxxxx, g_y_0_z_0_yyz_xxxxxy, g_y_0_z_0_yyz_xxxxxz, g_y_0_z_0_yyz_xxxxyy, g_y_0_z_0_yyz_xxxxyz, g_y_0_z_0_yyz_xxxxzz, g_y_0_z_0_yyz_xxxyyy, g_y_0_z_0_yyz_xxxyyz, g_y_0_z_0_yyz_xxxyzz, g_y_0_z_0_yyz_xxxzzz, g_y_0_z_0_yyz_xxyyyy, g_y_0_z_0_yyz_xxyyyz, g_y_0_z_0_yyz_xxyyzz, g_y_0_z_0_yyz_xxyzzz, g_y_0_z_0_yyz_xxzzzz, g_y_0_z_0_yyz_xyyyyy, g_y_0_z_0_yyz_xyyyyz, g_y_0_z_0_yyz_xyyyzz, g_y_0_z_0_yyz_xyyzzz, g_y_0_z_0_yyz_xyzzzz, g_y_0_z_0_yyz_xzzzzz, g_y_0_z_0_yyz_yyyyyy, g_y_0_z_0_yyz_yyyyyz, g_y_0_z_0_yyz_yyyyzz, g_y_0_z_0_yyz_yyyzzz, g_y_0_z_0_yyz_yyzzzz, g_y_0_z_0_yyz_yzzzzz, g_y_0_z_0_yyz_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_y_0_z_0_yyz_xxxxxx[k] = -g_y_0_z_0_yy_xxxxxx[k] * ab_z + g_y_0_z_0_yy_xxxxxxz[k];

                g_y_0_z_0_yyz_xxxxxy[k] = -g_y_0_z_0_yy_xxxxxy[k] * ab_z + g_y_0_z_0_yy_xxxxxyz[k];

                g_y_0_z_0_yyz_xxxxxz[k] = -g_y_0_z_0_yy_xxxxxz[k] * ab_z + g_y_0_z_0_yy_xxxxxzz[k];

                g_y_0_z_0_yyz_xxxxyy[k] = -g_y_0_z_0_yy_xxxxyy[k] * ab_z + g_y_0_z_0_yy_xxxxyyz[k];

                g_y_0_z_0_yyz_xxxxyz[k] = -g_y_0_z_0_yy_xxxxyz[k] * ab_z + g_y_0_z_0_yy_xxxxyzz[k];

                g_y_0_z_0_yyz_xxxxzz[k] = -g_y_0_z_0_yy_xxxxzz[k] * ab_z + g_y_0_z_0_yy_xxxxzzz[k];

                g_y_0_z_0_yyz_xxxyyy[k] = -g_y_0_z_0_yy_xxxyyy[k] * ab_z + g_y_0_z_0_yy_xxxyyyz[k];

                g_y_0_z_0_yyz_xxxyyz[k] = -g_y_0_z_0_yy_xxxyyz[k] * ab_z + g_y_0_z_0_yy_xxxyyzz[k];

                g_y_0_z_0_yyz_xxxyzz[k] = -g_y_0_z_0_yy_xxxyzz[k] * ab_z + g_y_0_z_0_yy_xxxyzzz[k];

                g_y_0_z_0_yyz_xxxzzz[k] = -g_y_0_z_0_yy_xxxzzz[k] * ab_z + g_y_0_z_0_yy_xxxzzzz[k];

                g_y_0_z_0_yyz_xxyyyy[k] = -g_y_0_z_0_yy_xxyyyy[k] * ab_z + g_y_0_z_0_yy_xxyyyyz[k];

                g_y_0_z_0_yyz_xxyyyz[k] = -g_y_0_z_0_yy_xxyyyz[k] * ab_z + g_y_0_z_0_yy_xxyyyzz[k];

                g_y_0_z_0_yyz_xxyyzz[k] = -g_y_0_z_0_yy_xxyyzz[k] * ab_z + g_y_0_z_0_yy_xxyyzzz[k];

                g_y_0_z_0_yyz_xxyzzz[k] = -g_y_0_z_0_yy_xxyzzz[k] * ab_z + g_y_0_z_0_yy_xxyzzzz[k];

                g_y_0_z_0_yyz_xxzzzz[k] = -g_y_0_z_0_yy_xxzzzz[k] * ab_z + g_y_0_z_0_yy_xxzzzzz[k];

                g_y_0_z_0_yyz_xyyyyy[k] = -g_y_0_z_0_yy_xyyyyy[k] * ab_z + g_y_0_z_0_yy_xyyyyyz[k];

                g_y_0_z_0_yyz_xyyyyz[k] = -g_y_0_z_0_yy_xyyyyz[k] * ab_z + g_y_0_z_0_yy_xyyyyzz[k];

                g_y_0_z_0_yyz_xyyyzz[k] = -g_y_0_z_0_yy_xyyyzz[k] * ab_z + g_y_0_z_0_yy_xyyyzzz[k];

                g_y_0_z_0_yyz_xyyzzz[k] = -g_y_0_z_0_yy_xyyzzz[k] * ab_z + g_y_0_z_0_yy_xyyzzzz[k];

                g_y_0_z_0_yyz_xyzzzz[k] = -g_y_0_z_0_yy_xyzzzz[k] * ab_z + g_y_0_z_0_yy_xyzzzzz[k];

                g_y_0_z_0_yyz_xzzzzz[k] = -g_y_0_z_0_yy_xzzzzz[k] * ab_z + g_y_0_z_0_yy_xzzzzzz[k];

                g_y_0_z_0_yyz_yyyyyy[k] = -g_y_0_z_0_yy_yyyyyy[k] * ab_z + g_y_0_z_0_yy_yyyyyyz[k];

                g_y_0_z_0_yyz_yyyyyz[k] = -g_y_0_z_0_yy_yyyyyz[k] * ab_z + g_y_0_z_0_yy_yyyyyzz[k];

                g_y_0_z_0_yyz_yyyyzz[k] = -g_y_0_z_0_yy_yyyyzz[k] * ab_z + g_y_0_z_0_yy_yyyyzzz[k];

                g_y_0_z_0_yyz_yyyzzz[k] = -g_y_0_z_0_yy_yyyzzz[k] * ab_z + g_y_0_z_0_yy_yyyzzzz[k];

                g_y_0_z_0_yyz_yyzzzz[k] = -g_y_0_z_0_yy_yyzzzz[k] * ab_z + g_y_0_z_0_yy_yyzzzzz[k];

                g_y_0_z_0_yyz_yzzzzz[k] = -g_y_0_z_0_yy_yzzzzz[k] * ab_z + g_y_0_z_0_yy_yzzzzzz[k];

                g_y_0_z_0_yyz_zzzzzz[k] = -g_y_0_z_0_yy_zzzzzz[k] * ab_z + g_y_0_z_0_yy_zzzzzzz[k];
            }

            /// Set up 1624-1652 components of targeted buffer : cbuffer.data(

            auto g_y_0_z_0_yzz_xxxxxx = cbuffer.data(fi_geom_1010_off + 1624 * ccomps * dcomps);

            auto g_y_0_z_0_yzz_xxxxxy = cbuffer.data(fi_geom_1010_off + 1625 * ccomps * dcomps);

            auto g_y_0_z_0_yzz_xxxxxz = cbuffer.data(fi_geom_1010_off + 1626 * ccomps * dcomps);

            auto g_y_0_z_0_yzz_xxxxyy = cbuffer.data(fi_geom_1010_off + 1627 * ccomps * dcomps);

            auto g_y_0_z_0_yzz_xxxxyz = cbuffer.data(fi_geom_1010_off + 1628 * ccomps * dcomps);

            auto g_y_0_z_0_yzz_xxxxzz = cbuffer.data(fi_geom_1010_off + 1629 * ccomps * dcomps);

            auto g_y_0_z_0_yzz_xxxyyy = cbuffer.data(fi_geom_1010_off + 1630 * ccomps * dcomps);

            auto g_y_0_z_0_yzz_xxxyyz = cbuffer.data(fi_geom_1010_off + 1631 * ccomps * dcomps);

            auto g_y_0_z_0_yzz_xxxyzz = cbuffer.data(fi_geom_1010_off + 1632 * ccomps * dcomps);

            auto g_y_0_z_0_yzz_xxxzzz = cbuffer.data(fi_geom_1010_off + 1633 * ccomps * dcomps);

            auto g_y_0_z_0_yzz_xxyyyy = cbuffer.data(fi_geom_1010_off + 1634 * ccomps * dcomps);

            auto g_y_0_z_0_yzz_xxyyyz = cbuffer.data(fi_geom_1010_off + 1635 * ccomps * dcomps);

            auto g_y_0_z_0_yzz_xxyyzz = cbuffer.data(fi_geom_1010_off + 1636 * ccomps * dcomps);

            auto g_y_0_z_0_yzz_xxyzzz = cbuffer.data(fi_geom_1010_off + 1637 * ccomps * dcomps);

            auto g_y_0_z_0_yzz_xxzzzz = cbuffer.data(fi_geom_1010_off + 1638 * ccomps * dcomps);

            auto g_y_0_z_0_yzz_xyyyyy = cbuffer.data(fi_geom_1010_off + 1639 * ccomps * dcomps);

            auto g_y_0_z_0_yzz_xyyyyz = cbuffer.data(fi_geom_1010_off + 1640 * ccomps * dcomps);

            auto g_y_0_z_0_yzz_xyyyzz = cbuffer.data(fi_geom_1010_off + 1641 * ccomps * dcomps);

            auto g_y_0_z_0_yzz_xyyzzz = cbuffer.data(fi_geom_1010_off + 1642 * ccomps * dcomps);

            auto g_y_0_z_0_yzz_xyzzzz = cbuffer.data(fi_geom_1010_off + 1643 * ccomps * dcomps);

            auto g_y_0_z_0_yzz_xzzzzz = cbuffer.data(fi_geom_1010_off + 1644 * ccomps * dcomps);

            auto g_y_0_z_0_yzz_yyyyyy = cbuffer.data(fi_geom_1010_off + 1645 * ccomps * dcomps);

            auto g_y_0_z_0_yzz_yyyyyz = cbuffer.data(fi_geom_1010_off + 1646 * ccomps * dcomps);

            auto g_y_0_z_0_yzz_yyyyzz = cbuffer.data(fi_geom_1010_off + 1647 * ccomps * dcomps);

            auto g_y_0_z_0_yzz_yyyzzz = cbuffer.data(fi_geom_1010_off + 1648 * ccomps * dcomps);

            auto g_y_0_z_0_yzz_yyzzzz = cbuffer.data(fi_geom_1010_off + 1649 * ccomps * dcomps);

            auto g_y_0_z_0_yzz_yzzzzz = cbuffer.data(fi_geom_1010_off + 1650 * ccomps * dcomps);

            auto g_y_0_z_0_yzz_zzzzzz = cbuffer.data(fi_geom_1010_off + 1651 * ccomps * dcomps);

            #pragma omp simd aligned(g_y_0_z_0_yz_xxxxxx, g_y_0_z_0_yz_xxxxxxz, g_y_0_z_0_yz_xxxxxy, g_y_0_z_0_yz_xxxxxyz, g_y_0_z_0_yz_xxxxxz, g_y_0_z_0_yz_xxxxxzz, g_y_0_z_0_yz_xxxxyy, g_y_0_z_0_yz_xxxxyyz, g_y_0_z_0_yz_xxxxyz, g_y_0_z_0_yz_xxxxyzz, g_y_0_z_0_yz_xxxxzz, g_y_0_z_0_yz_xxxxzzz, g_y_0_z_0_yz_xxxyyy, g_y_0_z_0_yz_xxxyyyz, g_y_0_z_0_yz_xxxyyz, g_y_0_z_0_yz_xxxyyzz, g_y_0_z_0_yz_xxxyzz, g_y_0_z_0_yz_xxxyzzz, g_y_0_z_0_yz_xxxzzz, g_y_0_z_0_yz_xxxzzzz, g_y_0_z_0_yz_xxyyyy, g_y_0_z_0_yz_xxyyyyz, g_y_0_z_0_yz_xxyyyz, g_y_0_z_0_yz_xxyyyzz, g_y_0_z_0_yz_xxyyzz, g_y_0_z_0_yz_xxyyzzz, g_y_0_z_0_yz_xxyzzz, g_y_0_z_0_yz_xxyzzzz, g_y_0_z_0_yz_xxzzzz, g_y_0_z_0_yz_xxzzzzz, g_y_0_z_0_yz_xyyyyy, g_y_0_z_0_yz_xyyyyyz, g_y_0_z_0_yz_xyyyyz, g_y_0_z_0_yz_xyyyyzz, g_y_0_z_0_yz_xyyyzz, g_y_0_z_0_yz_xyyyzzz, g_y_0_z_0_yz_xyyzzz, g_y_0_z_0_yz_xyyzzzz, g_y_0_z_0_yz_xyzzzz, g_y_0_z_0_yz_xyzzzzz, g_y_0_z_0_yz_xzzzzz, g_y_0_z_0_yz_xzzzzzz, g_y_0_z_0_yz_yyyyyy, g_y_0_z_0_yz_yyyyyyz, g_y_0_z_0_yz_yyyyyz, g_y_0_z_0_yz_yyyyyzz, g_y_0_z_0_yz_yyyyzz, g_y_0_z_0_yz_yyyyzzz, g_y_0_z_0_yz_yyyzzz, g_y_0_z_0_yz_yyyzzzz, g_y_0_z_0_yz_yyzzzz, g_y_0_z_0_yz_yyzzzzz, g_y_0_z_0_yz_yzzzzz, g_y_0_z_0_yz_yzzzzzz, g_y_0_z_0_yz_zzzzzz, g_y_0_z_0_yz_zzzzzzz, g_y_0_z_0_yzz_xxxxxx, g_y_0_z_0_yzz_xxxxxy, g_y_0_z_0_yzz_xxxxxz, g_y_0_z_0_yzz_xxxxyy, g_y_0_z_0_yzz_xxxxyz, g_y_0_z_0_yzz_xxxxzz, g_y_0_z_0_yzz_xxxyyy, g_y_0_z_0_yzz_xxxyyz, g_y_0_z_0_yzz_xxxyzz, g_y_0_z_0_yzz_xxxzzz, g_y_0_z_0_yzz_xxyyyy, g_y_0_z_0_yzz_xxyyyz, g_y_0_z_0_yzz_xxyyzz, g_y_0_z_0_yzz_xxyzzz, g_y_0_z_0_yzz_xxzzzz, g_y_0_z_0_yzz_xyyyyy, g_y_0_z_0_yzz_xyyyyz, g_y_0_z_0_yzz_xyyyzz, g_y_0_z_0_yzz_xyyzzz, g_y_0_z_0_yzz_xyzzzz, g_y_0_z_0_yzz_xzzzzz, g_y_0_z_0_yzz_yyyyyy, g_y_0_z_0_yzz_yyyyyz, g_y_0_z_0_yzz_yyyyzz, g_y_0_z_0_yzz_yyyzzz, g_y_0_z_0_yzz_yyzzzz, g_y_0_z_0_yzz_yzzzzz, g_y_0_z_0_yzz_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_y_0_z_0_yzz_xxxxxx[k] = -g_y_0_z_0_yz_xxxxxx[k] * ab_z + g_y_0_z_0_yz_xxxxxxz[k];

                g_y_0_z_0_yzz_xxxxxy[k] = -g_y_0_z_0_yz_xxxxxy[k] * ab_z + g_y_0_z_0_yz_xxxxxyz[k];

                g_y_0_z_0_yzz_xxxxxz[k] = -g_y_0_z_0_yz_xxxxxz[k] * ab_z + g_y_0_z_0_yz_xxxxxzz[k];

                g_y_0_z_0_yzz_xxxxyy[k] = -g_y_0_z_0_yz_xxxxyy[k] * ab_z + g_y_0_z_0_yz_xxxxyyz[k];

                g_y_0_z_0_yzz_xxxxyz[k] = -g_y_0_z_0_yz_xxxxyz[k] * ab_z + g_y_0_z_0_yz_xxxxyzz[k];

                g_y_0_z_0_yzz_xxxxzz[k] = -g_y_0_z_0_yz_xxxxzz[k] * ab_z + g_y_0_z_0_yz_xxxxzzz[k];

                g_y_0_z_0_yzz_xxxyyy[k] = -g_y_0_z_0_yz_xxxyyy[k] * ab_z + g_y_0_z_0_yz_xxxyyyz[k];

                g_y_0_z_0_yzz_xxxyyz[k] = -g_y_0_z_0_yz_xxxyyz[k] * ab_z + g_y_0_z_0_yz_xxxyyzz[k];

                g_y_0_z_0_yzz_xxxyzz[k] = -g_y_0_z_0_yz_xxxyzz[k] * ab_z + g_y_0_z_0_yz_xxxyzzz[k];

                g_y_0_z_0_yzz_xxxzzz[k] = -g_y_0_z_0_yz_xxxzzz[k] * ab_z + g_y_0_z_0_yz_xxxzzzz[k];

                g_y_0_z_0_yzz_xxyyyy[k] = -g_y_0_z_0_yz_xxyyyy[k] * ab_z + g_y_0_z_0_yz_xxyyyyz[k];

                g_y_0_z_0_yzz_xxyyyz[k] = -g_y_0_z_0_yz_xxyyyz[k] * ab_z + g_y_0_z_0_yz_xxyyyzz[k];

                g_y_0_z_0_yzz_xxyyzz[k] = -g_y_0_z_0_yz_xxyyzz[k] * ab_z + g_y_0_z_0_yz_xxyyzzz[k];

                g_y_0_z_0_yzz_xxyzzz[k] = -g_y_0_z_0_yz_xxyzzz[k] * ab_z + g_y_0_z_0_yz_xxyzzzz[k];

                g_y_0_z_0_yzz_xxzzzz[k] = -g_y_0_z_0_yz_xxzzzz[k] * ab_z + g_y_0_z_0_yz_xxzzzzz[k];

                g_y_0_z_0_yzz_xyyyyy[k] = -g_y_0_z_0_yz_xyyyyy[k] * ab_z + g_y_0_z_0_yz_xyyyyyz[k];

                g_y_0_z_0_yzz_xyyyyz[k] = -g_y_0_z_0_yz_xyyyyz[k] * ab_z + g_y_0_z_0_yz_xyyyyzz[k];

                g_y_0_z_0_yzz_xyyyzz[k] = -g_y_0_z_0_yz_xyyyzz[k] * ab_z + g_y_0_z_0_yz_xyyyzzz[k];

                g_y_0_z_0_yzz_xyyzzz[k] = -g_y_0_z_0_yz_xyyzzz[k] * ab_z + g_y_0_z_0_yz_xyyzzzz[k];

                g_y_0_z_0_yzz_xyzzzz[k] = -g_y_0_z_0_yz_xyzzzz[k] * ab_z + g_y_0_z_0_yz_xyzzzzz[k];

                g_y_0_z_0_yzz_xzzzzz[k] = -g_y_0_z_0_yz_xzzzzz[k] * ab_z + g_y_0_z_0_yz_xzzzzzz[k];

                g_y_0_z_0_yzz_yyyyyy[k] = -g_y_0_z_0_yz_yyyyyy[k] * ab_z + g_y_0_z_0_yz_yyyyyyz[k];

                g_y_0_z_0_yzz_yyyyyz[k] = -g_y_0_z_0_yz_yyyyyz[k] * ab_z + g_y_0_z_0_yz_yyyyyzz[k];

                g_y_0_z_0_yzz_yyyyzz[k] = -g_y_0_z_0_yz_yyyyzz[k] * ab_z + g_y_0_z_0_yz_yyyyzzz[k];

                g_y_0_z_0_yzz_yyyzzz[k] = -g_y_0_z_0_yz_yyyzzz[k] * ab_z + g_y_0_z_0_yz_yyyzzzz[k];

                g_y_0_z_0_yzz_yyzzzz[k] = -g_y_0_z_0_yz_yyzzzz[k] * ab_z + g_y_0_z_0_yz_yyzzzzz[k];

                g_y_0_z_0_yzz_yzzzzz[k] = -g_y_0_z_0_yz_yzzzzz[k] * ab_z + g_y_0_z_0_yz_yzzzzzz[k];

                g_y_0_z_0_yzz_zzzzzz[k] = -g_y_0_z_0_yz_zzzzzz[k] * ab_z + g_y_0_z_0_yz_zzzzzzz[k];
            }

            /// Set up 1652-1680 components of targeted buffer : cbuffer.data(

            auto g_y_0_z_0_zzz_xxxxxx = cbuffer.data(fi_geom_1010_off + 1652 * ccomps * dcomps);

            auto g_y_0_z_0_zzz_xxxxxy = cbuffer.data(fi_geom_1010_off + 1653 * ccomps * dcomps);

            auto g_y_0_z_0_zzz_xxxxxz = cbuffer.data(fi_geom_1010_off + 1654 * ccomps * dcomps);

            auto g_y_0_z_0_zzz_xxxxyy = cbuffer.data(fi_geom_1010_off + 1655 * ccomps * dcomps);

            auto g_y_0_z_0_zzz_xxxxyz = cbuffer.data(fi_geom_1010_off + 1656 * ccomps * dcomps);

            auto g_y_0_z_0_zzz_xxxxzz = cbuffer.data(fi_geom_1010_off + 1657 * ccomps * dcomps);

            auto g_y_0_z_0_zzz_xxxyyy = cbuffer.data(fi_geom_1010_off + 1658 * ccomps * dcomps);

            auto g_y_0_z_0_zzz_xxxyyz = cbuffer.data(fi_geom_1010_off + 1659 * ccomps * dcomps);

            auto g_y_0_z_0_zzz_xxxyzz = cbuffer.data(fi_geom_1010_off + 1660 * ccomps * dcomps);

            auto g_y_0_z_0_zzz_xxxzzz = cbuffer.data(fi_geom_1010_off + 1661 * ccomps * dcomps);

            auto g_y_0_z_0_zzz_xxyyyy = cbuffer.data(fi_geom_1010_off + 1662 * ccomps * dcomps);

            auto g_y_0_z_0_zzz_xxyyyz = cbuffer.data(fi_geom_1010_off + 1663 * ccomps * dcomps);

            auto g_y_0_z_0_zzz_xxyyzz = cbuffer.data(fi_geom_1010_off + 1664 * ccomps * dcomps);

            auto g_y_0_z_0_zzz_xxyzzz = cbuffer.data(fi_geom_1010_off + 1665 * ccomps * dcomps);

            auto g_y_0_z_0_zzz_xxzzzz = cbuffer.data(fi_geom_1010_off + 1666 * ccomps * dcomps);

            auto g_y_0_z_0_zzz_xyyyyy = cbuffer.data(fi_geom_1010_off + 1667 * ccomps * dcomps);

            auto g_y_0_z_0_zzz_xyyyyz = cbuffer.data(fi_geom_1010_off + 1668 * ccomps * dcomps);

            auto g_y_0_z_0_zzz_xyyyzz = cbuffer.data(fi_geom_1010_off + 1669 * ccomps * dcomps);

            auto g_y_0_z_0_zzz_xyyzzz = cbuffer.data(fi_geom_1010_off + 1670 * ccomps * dcomps);

            auto g_y_0_z_0_zzz_xyzzzz = cbuffer.data(fi_geom_1010_off + 1671 * ccomps * dcomps);

            auto g_y_0_z_0_zzz_xzzzzz = cbuffer.data(fi_geom_1010_off + 1672 * ccomps * dcomps);

            auto g_y_0_z_0_zzz_yyyyyy = cbuffer.data(fi_geom_1010_off + 1673 * ccomps * dcomps);

            auto g_y_0_z_0_zzz_yyyyyz = cbuffer.data(fi_geom_1010_off + 1674 * ccomps * dcomps);

            auto g_y_0_z_0_zzz_yyyyzz = cbuffer.data(fi_geom_1010_off + 1675 * ccomps * dcomps);

            auto g_y_0_z_0_zzz_yyyzzz = cbuffer.data(fi_geom_1010_off + 1676 * ccomps * dcomps);

            auto g_y_0_z_0_zzz_yyzzzz = cbuffer.data(fi_geom_1010_off + 1677 * ccomps * dcomps);

            auto g_y_0_z_0_zzz_yzzzzz = cbuffer.data(fi_geom_1010_off + 1678 * ccomps * dcomps);

            auto g_y_0_z_0_zzz_zzzzzz = cbuffer.data(fi_geom_1010_off + 1679 * ccomps * dcomps);

            #pragma omp simd aligned(g_y_0_z_0_zz_xxxxxx, g_y_0_z_0_zz_xxxxxxz, g_y_0_z_0_zz_xxxxxy, g_y_0_z_0_zz_xxxxxyz, g_y_0_z_0_zz_xxxxxz, g_y_0_z_0_zz_xxxxxzz, g_y_0_z_0_zz_xxxxyy, g_y_0_z_0_zz_xxxxyyz, g_y_0_z_0_zz_xxxxyz, g_y_0_z_0_zz_xxxxyzz, g_y_0_z_0_zz_xxxxzz, g_y_0_z_0_zz_xxxxzzz, g_y_0_z_0_zz_xxxyyy, g_y_0_z_0_zz_xxxyyyz, g_y_0_z_0_zz_xxxyyz, g_y_0_z_0_zz_xxxyyzz, g_y_0_z_0_zz_xxxyzz, g_y_0_z_0_zz_xxxyzzz, g_y_0_z_0_zz_xxxzzz, g_y_0_z_0_zz_xxxzzzz, g_y_0_z_0_zz_xxyyyy, g_y_0_z_0_zz_xxyyyyz, g_y_0_z_0_zz_xxyyyz, g_y_0_z_0_zz_xxyyyzz, g_y_0_z_0_zz_xxyyzz, g_y_0_z_0_zz_xxyyzzz, g_y_0_z_0_zz_xxyzzz, g_y_0_z_0_zz_xxyzzzz, g_y_0_z_0_zz_xxzzzz, g_y_0_z_0_zz_xxzzzzz, g_y_0_z_0_zz_xyyyyy, g_y_0_z_0_zz_xyyyyyz, g_y_0_z_0_zz_xyyyyz, g_y_0_z_0_zz_xyyyyzz, g_y_0_z_0_zz_xyyyzz, g_y_0_z_0_zz_xyyyzzz, g_y_0_z_0_zz_xyyzzz, g_y_0_z_0_zz_xyyzzzz, g_y_0_z_0_zz_xyzzzz, g_y_0_z_0_zz_xyzzzzz, g_y_0_z_0_zz_xzzzzz, g_y_0_z_0_zz_xzzzzzz, g_y_0_z_0_zz_yyyyyy, g_y_0_z_0_zz_yyyyyyz, g_y_0_z_0_zz_yyyyyz, g_y_0_z_0_zz_yyyyyzz, g_y_0_z_0_zz_yyyyzz, g_y_0_z_0_zz_yyyyzzz, g_y_0_z_0_zz_yyyzzz, g_y_0_z_0_zz_yyyzzzz, g_y_0_z_0_zz_yyzzzz, g_y_0_z_0_zz_yyzzzzz, g_y_0_z_0_zz_yzzzzz, g_y_0_z_0_zz_yzzzzzz, g_y_0_z_0_zz_zzzzzz, g_y_0_z_0_zz_zzzzzzz, g_y_0_z_0_zzz_xxxxxx, g_y_0_z_0_zzz_xxxxxy, g_y_0_z_0_zzz_xxxxxz, g_y_0_z_0_zzz_xxxxyy, g_y_0_z_0_zzz_xxxxyz, g_y_0_z_0_zzz_xxxxzz, g_y_0_z_0_zzz_xxxyyy, g_y_0_z_0_zzz_xxxyyz, g_y_0_z_0_zzz_xxxyzz, g_y_0_z_0_zzz_xxxzzz, g_y_0_z_0_zzz_xxyyyy, g_y_0_z_0_zzz_xxyyyz, g_y_0_z_0_zzz_xxyyzz, g_y_0_z_0_zzz_xxyzzz, g_y_0_z_0_zzz_xxzzzz, g_y_0_z_0_zzz_xyyyyy, g_y_0_z_0_zzz_xyyyyz, g_y_0_z_0_zzz_xyyyzz, g_y_0_z_0_zzz_xyyzzz, g_y_0_z_0_zzz_xyzzzz, g_y_0_z_0_zzz_xzzzzz, g_y_0_z_0_zzz_yyyyyy, g_y_0_z_0_zzz_yyyyyz, g_y_0_z_0_zzz_yyyyzz, g_y_0_z_0_zzz_yyyzzz, g_y_0_z_0_zzz_yyzzzz, g_y_0_z_0_zzz_yzzzzz, g_y_0_z_0_zzz_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_y_0_z_0_zzz_xxxxxx[k] = -g_y_0_z_0_zz_xxxxxx[k] * ab_z + g_y_0_z_0_zz_xxxxxxz[k];

                g_y_0_z_0_zzz_xxxxxy[k] = -g_y_0_z_0_zz_xxxxxy[k] * ab_z + g_y_0_z_0_zz_xxxxxyz[k];

                g_y_0_z_0_zzz_xxxxxz[k] = -g_y_0_z_0_zz_xxxxxz[k] * ab_z + g_y_0_z_0_zz_xxxxxzz[k];

                g_y_0_z_0_zzz_xxxxyy[k] = -g_y_0_z_0_zz_xxxxyy[k] * ab_z + g_y_0_z_0_zz_xxxxyyz[k];

                g_y_0_z_0_zzz_xxxxyz[k] = -g_y_0_z_0_zz_xxxxyz[k] * ab_z + g_y_0_z_0_zz_xxxxyzz[k];

                g_y_0_z_0_zzz_xxxxzz[k] = -g_y_0_z_0_zz_xxxxzz[k] * ab_z + g_y_0_z_0_zz_xxxxzzz[k];

                g_y_0_z_0_zzz_xxxyyy[k] = -g_y_0_z_0_zz_xxxyyy[k] * ab_z + g_y_0_z_0_zz_xxxyyyz[k];

                g_y_0_z_0_zzz_xxxyyz[k] = -g_y_0_z_0_zz_xxxyyz[k] * ab_z + g_y_0_z_0_zz_xxxyyzz[k];

                g_y_0_z_0_zzz_xxxyzz[k] = -g_y_0_z_0_zz_xxxyzz[k] * ab_z + g_y_0_z_0_zz_xxxyzzz[k];

                g_y_0_z_0_zzz_xxxzzz[k] = -g_y_0_z_0_zz_xxxzzz[k] * ab_z + g_y_0_z_0_zz_xxxzzzz[k];

                g_y_0_z_0_zzz_xxyyyy[k] = -g_y_0_z_0_zz_xxyyyy[k] * ab_z + g_y_0_z_0_zz_xxyyyyz[k];

                g_y_0_z_0_zzz_xxyyyz[k] = -g_y_0_z_0_zz_xxyyyz[k] * ab_z + g_y_0_z_0_zz_xxyyyzz[k];

                g_y_0_z_0_zzz_xxyyzz[k] = -g_y_0_z_0_zz_xxyyzz[k] * ab_z + g_y_0_z_0_zz_xxyyzzz[k];

                g_y_0_z_0_zzz_xxyzzz[k] = -g_y_0_z_0_zz_xxyzzz[k] * ab_z + g_y_0_z_0_zz_xxyzzzz[k];

                g_y_0_z_0_zzz_xxzzzz[k] = -g_y_0_z_0_zz_xxzzzz[k] * ab_z + g_y_0_z_0_zz_xxzzzzz[k];

                g_y_0_z_0_zzz_xyyyyy[k] = -g_y_0_z_0_zz_xyyyyy[k] * ab_z + g_y_0_z_0_zz_xyyyyyz[k];

                g_y_0_z_0_zzz_xyyyyz[k] = -g_y_0_z_0_zz_xyyyyz[k] * ab_z + g_y_0_z_0_zz_xyyyyzz[k];

                g_y_0_z_0_zzz_xyyyzz[k] = -g_y_0_z_0_zz_xyyyzz[k] * ab_z + g_y_0_z_0_zz_xyyyzzz[k];

                g_y_0_z_0_zzz_xyyzzz[k] = -g_y_0_z_0_zz_xyyzzz[k] * ab_z + g_y_0_z_0_zz_xyyzzzz[k];

                g_y_0_z_0_zzz_xyzzzz[k] = -g_y_0_z_0_zz_xyzzzz[k] * ab_z + g_y_0_z_0_zz_xyzzzzz[k];

                g_y_0_z_0_zzz_xzzzzz[k] = -g_y_0_z_0_zz_xzzzzz[k] * ab_z + g_y_0_z_0_zz_xzzzzzz[k];

                g_y_0_z_0_zzz_yyyyyy[k] = -g_y_0_z_0_zz_yyyyyy[k] * ab_z + g_y_0_z_0_zz_yyyyyyz[k];

                g_y_0_z_0_zzz_yyyyyz[k] = -g_y_0_z_0_zz_yyyyyz[k] * ab_z + g_y_0_z_0_zz_yyyyyzz[k];

                g_y_0_z_0_zzz_yyyyzz[k] = -g_y_0_z_0_zz_yyyyzz[k] * ab_z + g_y_0_z_0_zz_yyyyzzz[k];

                g_y_0_z_0_zzz_yyyzzz[k] = -g_y_0_z_0_zz_yyyzzz[k] * ab_z + g_y_0_z_0_zz_yyyzzzz[k];

                g_y_0_z_0_zzz_yyzzzz[k] = -g_y_0_z_0_zz_yyzzzz[k] * ab_z + g_y_0_z_0_zz_yyzzzzz[k];

                g_y_0_z_0_zzz_yzzzzz[k] = -g_y_0_z_0_zz_yzzzzz[k] * ab_z + g_y_0_z_0_zz_yzzzzzz[k];

                g_y_0_z_0_zzz_zzzzzz[k] = -g_y_0_z_0_zz_zzzzzz[k] * ab_z + g_y_0_z_0_zz_zzzzzzz[k];
            }

            /// Set up 1680-1708 components of targeted buffer : cbuffer.data(

            auto g_z_0_x_0_xxx_xxxxxx = cbuffer.data(fi_geom_1010_off + 1680 * ccomps * dcomps);

            auto g_z_0_x_0_xxx_xxxxxy = cbuffer.data(fi_geom_1010_off + 1681 * ccomps * dcomps);

            auto g_z_0_x_0_xxx_xxxxxz = cbuffer.data(fi_geom_1010_off + 1682 * ccomps * dcomps);

            auto g_z_0_x_0_xxx_xxxxyy = cbuffer.data(fi_geom_1010_off + 1683 * ccomps * dcomps);

            auto g_z_0_x_0_xxx_xxxxyz = cbuffer.data(fi_geom_1010_off + 1684 * ccomps * dcomps);

            auto g_z_0_x_0_xxx_xxxxzz = cbuffer.data(fi_geom_1010_off + 1685 * ccomps * dcomps);

            auto g_z_0_x_0_xxx_xxxyyy = cbuffer.data(fi_geom_1010_off + 1686 * ccomps * dcomps);

            auto g_z_0_x_0_xxx_xxxyyz = cbuffer.data(fi_geom_1010_off + 1687 * ccomps * dcomps);

            auto g_z_0_x_0_xxx_xxxyzz = cbuffer.data(fi_geom_1010_off + 1688 * ccomps * dcomps);

            auto g_z_0_x_0_xxx_xxxzzz = cbuffer.data(fi_geom_1010_off + 1689 * ccomps * dcomps);

            auto g_z_0_x_0_xxx_xxyyyy = cbuffer.data(fi_geom_1010_off + 1690 * ccomps * dcomps);

            auto g_z_0_x_0_xxx_xxyyyz = cbuffer.data(fi_geom_1010_off + 1691 * ccomps * dcomps);

            auto g_z_0_x_0_xxx_xxyyzz = cbuffer.data(fi_geom_1010_off + 1692 * ccomps * dcomps);

            auto g_z_0_x_0_xxx_xxyzzz = cbuffer.data(fi_geom_1010_off + 1693 * ccomps * dcomps);

            auto g_z_0_x_0_xxx_xxzzzz = cbuffer.data(fi_geom_1010_off + 1694 * ccomps * dcomps);

            auto g_z_0_x_0_xxx_xyyyyy = cbuffer.data(fi_geom_1010_off + 1695 * ccomps * dcomps);

            auto g_z_0_x_0_xxx_xyyyyz = cbuffer.data(fi_geom_1010_off + 1696 * ccomps * dcomps);

            auto g_z_0_x_0_xxx_xyyyzz = cbuffer.data(fi_geom_1010_off + 1697 * ccomps * dcomps);

            auto g_z_0_x_0_xxx_xyyzzz = cbuffer.data(fi_geom_1010_off + 1698 * ccomps * dcomps);

            auto g_z_0_x_0_xxx_xyzzzz = cbuffer.data(fi_geom_1010_off + 1699 * ccomps * dcomps);

            auto g_z_0_x_0_xxx_xzzzzz = cbuffer.data(fi_geom_1010_off + 1700 * ccomps * dcomps);

            auto g_z_0_x_0_xxx_yyyyyy = cbuffer.data(fi_geom_1010_off + 1701 * ccomps * dcomps);

            auto g_z_0_x_0_xxx_yyyyyz = cbuffer.data(fi_geom_1010_off + 1702 * ccomps * dcomps);

            auto g_z_0_x_0_xxx_yyyyzz = cbuffer.data(fi_geom_1010_off + 1703 * ccomps * dcomps);

            auto g_z_0_x_0_xxx_yyyzzz = cbuffer.data(fi_geom_1010_off + 1704 * ccomps * dcomps);

            auto g_z_0_x_0_xxx_yyzzzz = cbuffer.data(fi_geom_1010_off + 1705 * ccomps * dcomps);

            auto g_z_0_x_0_xxx_yzzzzz = cbuffer.data(fi_geom_1010_off + 1706 * ccomps * dcomps);

            auto g_z_0_x_0_xxx_zzzzzz = cbuffer.data(fi_geom_1010_off + 1707 * ccomps * dcomps);

            #pragma omp simd aligned(g_z_0_x_0_xx_xxxxxx, g_z_0_x_0_xx_xxxxxxx, g_z_0_x_0_xx_xxxxxxy, g_z_0_x_0_xx_xxxxxxz, g_z_0_x_0_xx_xxxxxy, g_z_0_x_0_xx_xxxxxyy, g_z_0_x_0_xx_xxxxxyz, g_z_0_x_0_xx_xxxxxz, g_z_0_x_0_xx_xxxxxzz, g_z_0_x_0_xx_xxxxyy, g_z_0_x_0_xx_xxxxyyy, g_z_0_x_0_xx_xxxxyyz, g_z_0_x_0_xx_xxxxyz, g_z_0_x_0_xx_xxxxyzz, g_z_0_x_0_xx_xxxxzz, g_z_0_x_0_xx_xxxxzzz, g_z_0_x_0_xx_xxxyyy, g_z_0_x_0_xx_xxxyyyy, g_z_0_x_0_xx_xxxyyyz, g_z_0_x_0_xx_xxxyyz, g_z_0_x_0_xx_xxxyyzz, g_z_0_x_0_xx_xxxyzz, g_z_0_x_0_xx_xxxyzzz, g_z_0_x_0_xx_xxxzzz, g_z_0_x_0_xx_xxxzzzz, g_z_0_x_0_xx_xxyyyy, g_z_0_x_0_xx_xxyyyyy, g_z_0_x_0_xx_xxyyyyz, g_z_0_x_0_xx_xxyyyz, g_z_0_x_0_xx_xxyyyzz, g_z_0_x_0_xx_xxyyzz, g_z_0_x_0_xx_xxyyzzz, g_z_0_x_0_xx_xxyzzz, g_z_0_x_0_xx_xxyzzzz, g_z_0_x_0_xx_xxzzzz, g_z_0_x_0_xx_xxzzzzz, g_z_0_x_0_xx_xyyyyy, g_z_0_x_0_xx_xyyyyyy, g_z_0_x_0_xx_xyyyyyz, g_z_0_x_0_xx_xyyyyz, g_z_0_x_0_xx_xyyyyzz, g_z_0_x_0_xx_xyyyzz, g_z_0_x_0_xx_xyyyzzz, g_z_0_x_0_xx_xyyzzz, g_z_0_x_0_xx_xyyzzzz, g_z_0_x_0_xx_xyzzzz, g_z_0_x_0_xx_xyzzzzz, g_z_0_x_0_xx_xzzzzz, g_z_0_x_0_xx_xzzzzzz, g_z_0_x_0_xx_yyyyyy, g_z_0_x_0_xx_yyyyyz, g_z_0_x_0_xx_yyyyzz, g_z_0_x_0_xx_yyyzzz, g_z_0_x_0_xx_yyzzzz, g_z_0_x_0_xx_yzzzzz, g_z_0_x_0_xx_zzzzzz, g_z_0_x_0_xxx_xxxxxx, g_z_0_x_0_xxx_xxxxxy, g_z_0_x_0_xxx_xxxxxz, g_z_0_x_0_xxx_xxxxyy, g_z_0_x_0_xxx_xxxxyz, g_z_0_x_0_xxx_xxxxzz, g_z_0_x_0_xxx_xxxyyy, g_z_0_x_0_xxx_xxxyyz, g_z_0_x_0_xxx_xxxyzz, g_z_0_x_0_xxx_xxxzzz, g_z_0_x_0_xxx_xxyyyy, g_z_0_x_0_xxx_xxyyyz, g_z_0_x_0_xxx_xxyyzz, g_z_0_x_0_xxx_xxyzzz, g_z_0_x_0_xxx_xxzzzz, g_z_0_x_0_xxx_xyyyyy, g_z_0_x_0_xxx_xyyyyz, g_z_0_x_0_xxx_xyyyzz, g_z_0_x_0_xxx_xyyzzz, g_z_0_x_0_xxx_xyzzzz, g_z_0_x_0_xxx_xzzzzz, g_z_0_x_0_xxx_yyyyyy, g_z_0_x_0_xxx_yyyyyz, g_z_0_x_0_xxx_yyyyzz, g_z_0_x_0_xxx_yyyzzz, g_z_0_x_0_xxx_yyzzzz, g_z_0_x_0_xxx_yzzzzz, g_z_0_x_0_xxx_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_z_0_x_0_xxx_xxxxxx[k] = -g_z_0_x_0_xx_xxxxxx[k] * ab_x + g_z_0_x_0_xx_xxxxxxx[k];

                g_z_0_x_0_xxx_xxxxxy[k] = -g_z_0_x_0_xx_xxxxxy[k] * ab_x + g_z_0_x_0_xx_xxxxxxy[k];

                g_z_0_x_0_xxx_xxxxxz[k] = -g_z_0_x_0_xx_xxxxxz[k] * ab_x + g_z_0_x_0_xx_xxxxxxz[k];

                g_z_0_x_0_xxx_xxxxyy[k] = -g_z_0_x_0_xx_xxxxyy[k] * ab_x + g_z_0_x_0_xx_xxxxxyy[k];

                g_z_0_x_0_xxx_xxxxyz[k] = -g_z_0_x_0_xx_xxxxyz[k] * ab_x + g_z_0_x_0_xx_xxxxxyz[k];

                g_z_0_x_0_xxx_xxxxzz[k] = -g_z_0_x_0_xx_xxxxzz[k] * ab_x + g_z_0_x_0_xx_xxxxxzz[k];

                g_z_0_x_0_xxx_xxxyyy[k] = -g_z_0_x_0_xx_xxxyyy[k] * ab_x + g_z_0_x_0_xx_xxxxyyy[k];

                g_z_0_x_0_xxx_xxxyyz[k] = -g_z_0_x_0_xx_xxxyyz[k] * ab_x + g_z_0_x_0_xx_xxxxyyz[k];

                g_z_0_x_0_xxx_xxxyzz[k] = -g_z_0_x_0_xx_xxxyzz[k] * ab_x + g_z_0_x_0_xx_xxxxyzz[k];

                g_z_0_x_0_xxx_xxxzzz[k] = -g_z_0_x_0_xx_xxxzzz[k] * ab_x + g_z_0_x_0_xx_xxxxzzz[k];

                g_z_0_x_0_xxx_xxyyyy[k] = -g_z_0_x_0_xx_xxyyyy[k] * ab_x + g_z_0_x_0_xx_xxxyyyy[k];

                g_z_0_x_0_xxx_xxyyyz[k] = -g_z_0_x_0_xx_xxyyyz[k] * ab_x + g_z_0_x_0_xx_xxxyyyz[k];

                g_z_0_x_0_xxx_xxyyzz[k] = -g_z_0_x_0_xx_xxyyzz[k] * ab_x + g_z_0_x_0_xx_xxxyyzz[k];

                g_z_0_x_0_xxx_xxyzzz[k] = -g_z_0_x_0_xx_xxyzzz[k] * ab_x + g_z_0_x_0_xx_xxxyzzz[k];

                g_z_0_x_0_xxx_xxzzzz[k] = -g_z_0_x_0_xx_xxzzzz[k] * ab_x + g_z_0_x_0_xx_xxxzzzz[k];

                g_z_0_x_0_xxx_xyyyyy[k] = -g_z_0_x_0_xx_xyyyyy[k] * ab_x + g_z_0_x_0_xx_xxyyyyy[k];

                g_z_0_x_0_xxx_xyyyyz[k] = -g_z_0_x_0_xx_xyyyyz[k] * ab_x + g_z_0_x_0_xx_xxyyyyz[k];

                g_z_0_x_0_xxx_xyyyzz[k] = -g_z_0_x_0_xx_xyyyzz[k] * ab_x + g_z_0_x_0_xx_xxyyyzz[k];

                g_z_0_x_0_xxx_xyyzzz[k] = -g_z_0_x_0_xx_xyyzzz[k] * ab_x + g_z_0_x_0_xx_xxyyzzz[k];

                g_z_0_x_0_xxx_xyzzzz[k] = -g_z_0_x_0_xx_xyzzzz[k] * ab_x + g_z_0_x_0_xx_xxyzzzz[k];

                g_z_0_x_0_xxx_xzzzzz[k] = -g_z_0_x_0_xx_xzzzzz[k] * ab_x + g_z_0_x_0_xx_xxzzzzz[k];

                g_z_0_x_0_xxx_yyyyyy[k] = -g_z_0_x_0_xx_yyyyyy[k] * ab_x + g_z_0_x_0_xx_xyyyyyy[k];

                g_z_0_x_0_xxx_yyyyyz[k] = -g_z_0_x_0_xx_yyyyyz[k] * ab_x + g_z_0_x_0_xx_xyyyyyz[k];

                g_z_0_x_0_xxx_yyyyzz[k] = -g_z_0_x_0_xx_yyyyzz[k] * ab_x + g_z_0_x_0_xx_xyyyyzz[k];

                g_z_0_x_0_xxx_yyyzzz[k] = -g_z_0_x_0_xx_yyyzzz[k] * ab_x + g_z_0_x_0_xx_xyyyzzz[k];

                g_z_0_x_0_xxx_yyzzzz[k] = -g_z_0_x_0_xx_yyzzzz[k] * ab_x + g_z_0_x_0_xx_xyyzzzz[k];

                g_z_0_x_0_xxx_yzzzzz[k] = -g_z_0_x_0_xx_yzzzzz[k] * ab_x + g_z_0_x_0_xx_xyzzzzz[k];

                g_z_0_x_0_xxx_zzzzzz[k] = -g_z_0_x_0_xx_zzzzzz[k] * ab_x + g_z_0_x_0_xx_xzzzzzz[k];
            }

            /// Set up 1708-1736 components of targeted buffer : cbuffer.data(

            auto g_z_0_x_0_xxy_xxxxxx = cbuffer.data(fi_geom_1010_off + 1708 * ccomps * dcomps);

            auto g_z_0_x_0_xxy_xxxxxy = cbuffer.data(fi_geom_1010_off + 1709 * ccomps * dcomps);

            auto g_z_0_x_0_xxy_xxxxxz = cbuffer.data(fi_geom_1010_off + 1710 * ccomps * dcomps);

            auto g_z_0_x_0_xxy_xxxxyy = cbuffer.data(fi_geom_1010_off + 1711 * ccomps * dcomps);

            auto g_z_0_x_0_xxy_xxxxyz = cbuffer.data(fi_geom_1010_off + 1712 * ccomps * dcomps);

            auto g_z_0_x_0_xxy_xxxxzz = cbuffer.data(fi_geom_1010_off + 1713 * ccomps * dcomps);

            auto g_z_0_x_0_xxy_xxxyyy = cbuffer.data(fi_geom_1010_off + 1714 * ccomps * dcomps);

            auto g_z_0_x_0_xxy_xxxyyz = cbuffer.data(fi_geom_1010_off + 1715 * ccomps * dcomps);

            auto g_z_0_x_0_xxy_xxxyzz = cbuffer.data(fi_geom_1010_off + 1716 * ccomps * dcomps);

            auto g_z_0_x_0_xxy_xxxzzz = cbuffer.data(fi_geom_1010_off + 1717 * ccomps * dcomps);

            auto g_z_0_x_0_xxy_xxyyyy = cbuffer.data(fi_geom_1010_off + 1718 * ccomps * dcomps);

            auto g_z_0_x_0_xxy_xxyyyz = cbuffer.data(fi_geom_1010_off + 1719 * ccomps * dcomps);

            auto g_z_0_x_0_xxy_xxyyzz = cbuffer.data(fi_geom_1010_off + 1720 * ccomps * dcomps);

            auto g_z_0_x_0_xxy_xxyzzz = cbuffer.data(fi_geom_1010_off + 1721 * ccomps * dcomps);

            auto g_z_0_x_0_xxy_xxzzzz = cbuffer.data(fi_geom_1010_off + 1722 * ccomps * dcomps);

            auto g_z_0_x_0_xxy_xyyyyy = cbuffer.data(fi_geom_1010_off + 1723 * ccomps * dcomps);

            auto g_z_0_x_0_xxy_xyyyyz = cbuffer.data(fi_geom_1010_off + 1724 * ccomps * dcomps);

            auto g_z_0_x_0_xxy_xyyyzz = cbuffer.data(fi_geom_1010_off + 1725 * ccomps * dcomps);

            auto g_z_0_x_0_xxy_xyyzzz = cbuffer.data(fi_geom_1010_off + 1726 * ccomps * dcomps);

            auto g_z_0_x_0_xxy_xyzzzz = cbuffer.data(fi_geom_1010_off + 1727 * ccomps * dcomps);

            auto g_z_0_x_0_xxy_xzzzzz = cbuffer.data(fi_geom_1010_off + 1728 * ccomps * dcomps);

            auto g_z_0_x_0_xxy_yyyyyy = cbuffer.data(fi_geom_1010_off + 1729 * ccomps * dcomps);

            auto g_z_0_x_0_xxy_yyyyyz = cbuffer.data(fi_geom_1010_off + 1730 * ccomps * dcomps);

            auto g_z_0_x_0_xxy_yyyyzz = cbuffer.data(fi_geom_1010_off + 1731 * ccomps * dcomps);

            auto g_z_0_x_0_xxy_yyyzzz = cbuffer.data(fi_geom_1010_off + 1732 * ccomps * dcomps);

            auto g_z_0_x_0_xxy_yyzzzz = cbuffer.data(fi_geom_1010_off + 1733 * ccomps * dcomps);

            auto g_z_0_x_0_xxy_yzzzzz = cbuffer.data(fi_geom_1010_off + 1734 * ccomps * dcomps);

            auto g_z_0_x_0_xxy_zzzzzz = cbuffer.data(fi_geom_1010_off + 1735 * ccomps * dcomps);

            #pragma omp simd aligned(g_z_0_x_0_xxy_xxxxxx, g_z_0_x_0_xxy_xxxxxy, g_z_0_x_0_xxy_xxxxxz, g_z_0_x_0_xxy_xxxxyy, g_z_0_x_0_xxy_xxxxyz, g_z_0_x_0_xxy_xxxxzz, g_z_0_x_0_xxy_xxxyyy, g_z_0_x_0_xxy_xxxyyz, g_z_0_x_0_xxy_xxxyzz, g_z_0_x_0_xxy_xxxzzz, g_z_0_x_0_xxy_xxyyyy, g_z_0_x_0_xxy_xxyyyz, g_z_0_x_0_xxy_xxyyzz, g_z_0_x_0_xxy_xxyzzz, g_z_0_x_0_xxy_xxzzzz, g_z_0_x_0_xxy_xyyyyy, g_z_0_x_0_xxy_xyyyyz, g_z_0_x_0_xxy_xyyyzz, g_z_0_x_0_xxy_xyyzzz, g_z_0_x_0_xxy_xyzzzz, g_z_0_x_0_xxy_xzzzzz, g_z_0_x_0_xxy_yyyyyy, g_z_0_x_0_xxy_yyyyyz, g_z_0_x_0_xxy_yyyyzz, g_z_0_x_0_xxy_yyyzzz, g_z_0_x_0_xxy_yyzzzz, g_z_0_x_0_xxy_yzzzzz, g_z_0_x_0_xxy_zzzzzz, g_z_0_x_0_xy_xxxxxx, g_z_0_x_0_xy_xxxxxxx, g_z_0_x_0_xy_xxxxxxy, g_z_0_x_0_xy_xxxxxxz, g_z_0_x_0_xy_xxxxxy, g_z_0_x_0_xy_xxxxxyy, g_z_0_x_0_xy_xxxxxyz, g_z_0_x_0_xy_xxxxxz, g_z_0_x_0_xy_xxxxxzz, g_z_0_x_0_xy_xxxxyy, g_z_0_x_0_xy_xxxxyyy, g_z_0_x_0_xy_xxxxyyz, g_z_0_x_0_xy_xxxxyz, g_z_0_x_0_xy_xxxxyzz, g_z_0_x_0_xy_xxxxzz, g_z_0_x_0_xy_xxxxzzz, g_z_0_x_0_xy_xxxyyy, g_z_0_x_0_xy_xxxyyyy, g_z_0_x_0_xy_xxxyyyz, g_z_0_x_0_xy_xxxyyz, g_z_0_x_0_xy_xxxyyzz, g_z_0_x_0_xy_xxxyzz, g_z_0_x_0_xy_xxxyzzz, g_z_0_x_0_xy_xxxzzz, g_z_0_x_0_xy_xxxzzzz, g_z_0_x_0_xy_xxyyyy, g_z_0_x_0_xy_xxyyyyy, g_z_0_x_0_xy_xxyyyyz, g_z_0_x_0_xy_xxyyyz, g_z_0_x_0_xy_xxyyyzz, g_z_0_x_0_xy_xxyyzz, g_z_0_x_0_xy_xxyyzzz, g_z_0_x_0_xy_xxyzzz, g_z_0_x_0_xy_xxyzzzz, g_z_0_x_0_xy_xxzzzz, g_z_0_x_0_xy_xxzzzzz, g_z_0_x_0_xy_xyyyyy, g_z_0_x_0_xy_xyyyyyy, g_z_0_x_0_xy_xyyyyyz, g_z_0_x_0_xy_xyyyyz, g_z_0_x_0_xy_xyyyyzz, g_z_0_x_0_xy_xyyyzz, g_z_0_x_0_xy_xyyyzzz, g_z_0_x_0_xy_xyyzzz, g_z_0_x_0_xy_xyyzzzz, g_z_0_x_0_xy_xyzzzz, g_z_0_x_0_xy_xyzzzzz, g_z_0_x_0_xy_xzzzzz, g_z_0_x_0_xy_xzzzzzz, g_z_0_x_0_xy_yyyyyy, g_z_0_x_0_xy_yyyyyz, g_z_0_x_0_xy_yyyyzz, g_z_0_x_0_xy_yyyzzz, g_z_0_x_0_xy_yyzzzz, g_z_0_x_0_xy_yzzzzz, g_z_0_x_0_xy_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_z_0_x_0_xxy_xxxxxx[k] = -g_z_0_x_0_xy_xxxxxx[k] * ab_x + g_z_0_x_0_xy_xxxxxxx[k];

                g_z_0_x_0_xxy_xxxxxy[k] = -g_z_0_x_0_xy_xxxxxy[k] * ab_x + g_z_0_x_0_xy_xxxxxxy[k];

                g_z_0_x_0_xxy_xxxxxz[k] = -g_z_0_x_0_xy_xxxxxz[k] * ab_x + g_z_0_x_0_xy_xxxxxxz[k];

                g_z_0_x_0_xxy_xxxxyy[k] = -g_z_0_x_0_xy_xxxxyy[k] * ab_x + g_z_0_x_0_xy_xxxxxyy[k];

                g_z_0_x_0_xxy_xxxxyz[k] = -g_z_0_x_0_xy_xxxxyz[k] * ab_x + g_z_0_x_0_xy_xxxxxyz[k];

                g_z_0_x_0_xxy_xxxxzz[k] = -g_z_0_x_0_xy_xxxxzz[k] * ab_x + g_z_0_x_0_xy_xxxxxzz[k];

                g_z_0_x_0_xxy_xxxyyy[k] = -g_z_0_x_0_xy_xxxyyy[k] * ab_x + g_z_0_x_0_xy_xxxxyyy[k];

                g_z_0_x_0_xxy_xxxyyz[k] = -g_z_0_x_0_xy_xxxyyz[k] * ab_x + g_z_0_x_0_xy_xxxxyyz[k];

                g_z_0_x_0_xxy_xxxyzz[k] = -g_z_0_x_0_xy_xxxyzz[k] * ab_x + g_z_0_x_0_xy_xxxxyzz[k];

                g_z_0_x_0_xxy_xxxzzz[k] = -g_z_0_x_0_xy_xxxzzz[k] * ab_x + g_z_0_x_0_xy_xxxxzzz[k];

                g_z_0_x_0_xxy_xxyyyy[k] = -g_z_0_x_0_xy_xxyyyy[k] * ab_x + g_z_0_x_0_xy_xxxyyyy[k];

                g_z_0_x_0_xxy_xxyyyz[k] = -g_z_0_x_0_xy_xxyyyz[k] * ab_x + g_z_0_x_0_xy_xxxyyyz[k];

                g_z_0_x_0_xxy_xxyyzz[k] = -g_z_0_x_0_xy_xxyyzz[k] * ab_x + g_z_0_x_0_xy_xxxyyzz[k];

                g_z_0_x_0_xxy_xxyzzz[k] = -g_z_0_x_0_xy_xxyzzz[k] * ab_x + g_z_0_x_0_xy_xxxyzzz[k];

                g_z_0_x_0_xxy_xxzzzz[k] = -g_z_0_x_0_xy_xxzzzz[k] * ab_x + g_z_0_x_0_xy_xxxzzzz[k];

                g_z_0_x_0_xxy_xyyyyy[k] = -g_z_0_x_0_xy_xyyyyy[k] * ab_x + g_z_0_x_0_xy_xxyyyyy[k];

                g_z_0_x_0_xxy_xyyyyz[k] = -g_z_0_x_0_xy_xyyyyz[k] * ab_x + g_z_0_x_0_xy_xxyyyyz[k];

                g_z_0_x_0_xxy_xyyyzz[k] = -g_z_0_x_0_xy_xyyyzz[k] * ab_x + g_z_0_x_0_xy_xxyyyzz[k];

                g_z_0_x_0_xxy_xyyzzz[k] = -g_z_0_x_0_xy_xyyzzz[k] * ab_x + g_z_0_x_0_xy_xxyyzzz[k];

                g_z_0_x_0_xxy_xyzzzz[k] = -g_z_0_x_0_xy_xyzzzz[k] * ab_x + g_z_0_x_0_xy_xxyzzzz[k];

                g_z_0_x_0_xxy_xzzzzz[k] = -g_z_0_x_0_xy_xzzzzz[k] * ab_x + g_z_0_x_0_xy_xxzzzzz[k];

                g_z_0_x_0_xxy_yyyyyy[k] = -g_z_0_x_0_xy_yyyyyy[k] * ab_x + g_z_0_x_0_xy_xyyyyyy[k];

                g_z_0_x_0_xxy_yyyyyz[k] = -g_z_0_x_0_xy_yyyyyz[k] * ab_x + g_z_0_x_0_xy_xyyyyyz[k];

                g_z_0_x_0_xxy_yyyyzz[k] = -g_z_0_x_0_xy_yyyyzz[k] * ab_x + g_z_0_x_0_xy_xyyyyzz[k];

                g_z_0_x_0_xxy_yyyzzz[k] = -g_z_0_x_0_xy_yyyzzz[k] * ab_x + g_z_0_x_0_xy_xyyyzzz[k];

                g_z_0_x_0_xxy_yyzzzz[k] = -g_z_0_x_0_xy_yyzzzz[k] * ab_x + g_z_0_x_0_xy_xyyzzzz[k];

                g_z_0_x_0_xxy_yzzzzz[k] = -g_z_0_x_0_xy_yzzzzz[k] * ab_x + g_z_0_x_0_xy_xyzzzzz[k];

                g_z_0_x_0_xxy_zzzzzz[k] = -g_z_0_x_0_xy_zzzzzz[k] * ab_x + g_z_0_x_0_xy_xzzzzzz[k];
            }

            /// Set up 1736-1764 components of targeted buffer : cbuffer.data(

            auto g_z_0_x_0_xxz_xxxxxx = cbuffer.data(fi_geom_1010_off + 1736 * ccomps * dcomps);

            auto g_z_0_x_0_xxz_xxxxxy = cbuffer.data(fi_geom_1010_off + 1737 * ccomps * dcomps);

            auto g_z_0_x_0_xxz_xxxxxz = cbuffer.data(fi_geom_1010_off + 1738 * ccomps * dcomps);

            auto g_z_0_x_0_xxz_xxxxyy = cbuffer.data(fi_geom_1010_off + 1739 * ccomps * dcomps);

            auto g_z_0_x_0_xxz_xxxxyz = cbuffer.data(fi_geom_1010_off + 1740 * ccomps * dcomps);

            auto g_z_0_x_0_xxz_xxxxzz = cbuffer.data(fi_geom_1010_off + 1741 * ccomps * dcomps);

            auto g_z_0_x_0_xxz_xxxyyy = cbuffer.data(fi_geom_1010_off + 1742 * ccomps * dcomps);

            auto g_z_0_x_0_xxz_xxxyyz = cbuffer.data(fi_geom_1010_off + 1743 * ccomps * dcomps);

            auto g_z_0_x_0_xxz_xxxyzz = cbuffer.data(fi_geom_1010_off + 1744 * ccomps * dcomps);

            auto g_z_0_x_0_xxz_xxxzzz = cbuffer.data(fi_geom_1010_off + 1745 * ccomps * dcomps);

            auto g_z_0_x_0_xxz_xxyyyy = cbuffer.data(fi_geom_1010_off + 1746 * ccomps * dcomps);

            auto g_z_0_x_0_xxz_xxyyyz = cbuffer.data(fi_geom_1010_off + 1747 * ccomps * dcomps);

            auto g_z_0_x_0_xxz_xxyyzz = cbuffer.data(fi_geom_1010_off + 1748 * ccomps * dcomps);

            auto g_z_0_x_0_xxz_xxyzzz = cbuffer.data(fi_geom_1010_off + 1749 * ccomps * dcomps);

            auto g_z_0_x_0_xxz_xxzzzz = cbuffer.data(fi_geom_1010_off + 1750 * ccomps * dcomps);

            auto g_z_0_x_0_xxz_xyyyyy = cbuffer.data(fi_geom_1010_off + 1751 * ccomps * dcomps);

            auto g_z_0_x_0_xxz_xyyyyz = cbuffer.data(fi_geom_1010_off + 1752 * ccomps * dcomps);

            auto g_z_0_x_0_xxz_xyyyzz = cbuffer.data(fi_geom_1010_off + 1753 * ccomps * dcomps);

            auto g_z_0_x_0_xxz_xyyzzz = cbuffer.data(fi_geom_1010_off + 1754 * ccomps * dcomps);

            auto g_z_0_x_0_xxz_xyzzzz = cbuffer.data(fi_geom_1010_off + 1755 * ccomps * dcomps);

            auto g_z_0_x_0_xxz_xzzzzz = cbuffer.data(fi_geom_1010_off + 1756 * ccomps * dcomps);

            auto g_z_0_x_0_xxz_yyyyyy = cbuffer.data(fi_geom_1010_off + 1757 * ccomps * dcomps);

            auto g_z_0_x_0_xxz_yyyyyz = cbuffer.data(fi_geom_1010_off + 1758 * ccomps * dcomps);

            auto g_z_0_x_0_xxz_yyyyzz = cbuffer.data(fi_geom_1010_off + 1759 * ccomps * dcomps);

            auto g_z_0_x_0_xxz_yyyzzz = cbuffer.data(fi_geom_1010_off + 1760 * ccomps * dcomps);

            auto g_z_0_x_0_xxz_yyzzzz = cbuffer.data(fi_geom_1010_off + 1761 * ccomps * dcomps);

            auto g_z_0_x_0_xxz_yzzzzz = cbuffer.data(fi_geom_1010_off + 1762 * ccomps * dcomps);

            auto g_z_0_x_0_xxz_zzzzzz = cbuffer.data(fi_geom_1010_off + 1763 * ccomps * dcomps);

            #pragma omp simd aligned(g_z_0_x_0_xxz_xxxxxx, g_z_0_x_0_xxz_xxxxxy, g_z_0_x_0_xxz_xxxxxz, g_z_0_x_0_xxz_xxxxyy, g_z_0_x_0_xxz_xxxxyz, g_z_0_x_0_xxz_xxxxzz, g_z_0_x_0_xxz_xxxyyy, g_z_0_x_0_xxz_xxxyyz, g_z_0_x_0_xxz_xxxyzz, g_z_0_x_0_xxz_xxxzzz, g_z_0_x_0_xxz_xxyyyy, g_z_0_x_0_xxz_xxyyyz, g_z_0_x_0_xxz_xxyyzz, g_z_0_x_0_xxz_xxyzzz, g_z_0_x_0_xxz_xxzzzz, g_z_0_x_0_xxz_xyyyyy, g_z_0_x_0_xxz_xyyyyz, g_z_0_x_0_xxz_xyyyzz, g_z_0_x_0_xxz_xyyzzz, g_z_0_x_0_xxz_xyzzzz, g_z_0_x_0_xxz_xzzzzz, g_z_0_x_0_xxz_yyyyyy, g_z_0_x_0_xxz_yyyyyz, g_z_0_x_0_xxz_yyyyzz, g_z_0_x_0_xxz_yyyzzz, g_z_0_x_0_xxz_yyzzzz, g_z_0_x_0_xxz_yzzzzz, g_z_0_x_0_xxz_zzzzzz, g_z_0_x_0_xz_xxxxxx, g_z_0_x_0_xz_xxxxxxx, g_z_0_x_0_xz_xxxxxxy, g_z_0_x_0_xz_xxxxxxz, g_z_0_x_0_xz_xxxxxy, g_z_0_x_0_xz_xxxxxyy, g_z_0_x_0_xz_xxxxxyz, g_z_0_x_0_xz_xxxxxz, g_z_0_x_0_xz_xxxxxzz, g_z_0_x_0_xz_xxxxyy, g_z_0_x_0_xz_xxxxyyy, g_z_0_x_0_xz_xxxxyyz, g_z_0_x_0_xz_xxxxyz, g_z_0_x_0_xz_xxxxyzz, g_z_0_x_0_xz_xxxxzz, g_z_0_x_0_xz_xxxxzzz, g_z_0_x_0_xz_xxxyyy, g_z_0_x_0_xz_xxxyyyy, g_z_0_x_0_xz_xxxyyyz, g_z_0_x_0_xz_xxxyyz, g_z_0_x_0_xz_xxxyyzz, g_z_0_x_0_xz_xxxyzz, g_z_0_x_0_xz_xxxyzzz, g_z_0_x_0_xz_xxxzzz, g_z_0_x_0_xz_xxxzzzz, g_z_0_x_0_xz_xxyyyy, g_z_0_x_0_xz_xxyyyyy, g_z_0_x_0_xz_xxyyyyz, g_z_0_x_0_xz_xxyyyz, g_z_0_x_0_xz_xxyyyzz, g_z_0_x_0_xz_xxyyzz, g_z_0_x_0_xz_xxyyzzz, g_z_0_x_0_xz_xxyzzz, g_z_0_x_0_xz_xxyzzzz, g_z_0_x_0_xz_xxzzzz, g_z_0_x_0_xz_xxzzzzz, g_z_0_x_0_xz_xyyyyy, g_z_0_x_0_xz_xyyyyyy, g_z_0_x_0_xz_xyyyyyz, g_z_0_x_0_xz_xyyyyz, g_z_0_x_0_xz_xyyyyzz, g_z_0_x_0_xz_xyyyzz, g_z_0_x_0_xz_xyyyzzz, g_z_0_x_0_xz_xyyzzz, g_z_0_x_0_xz_xyyzzzz, g_z_0_x_0_xz_xyzzzz, g_z_0_x_0_xz_xyzzzzz, g_z_0_x_0_xz_xzzzzz, g_z_0_x_0_xz_xzzzzzz, g_z_0_x_0_xz_yyyyyy, g_z_0_x_0_xz_yyyyyz, g_z_0_x_0_xz_yyyyzz, g_z_0_x_0_xz_yyyzzz, g_z_0_x_0_xz_yyzzzz, g_z_0_x_0_xz_yzzzzz, g_z_0_x_0_xz_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_z_0_x_0_xxz_xxxxxx[k] = -g_z_0_x_0_xz_xxxxxx[k] * ab_x + g_z_0_x_0_xz_xxxxxxx[k];

                g_z_0_x_0_xxz_xxxxxy[k] = -g_z_0_x_0_xz_xxxxxy[k] * ab_x + g_z_0_x_0_xz_xxxxxxy[k];

                g_z_0_x_0_xxz_xxxxxz[k] = -g_z_0_x_0_xz_xxxxxz[k] * ab_x + g_z_0_x_0_xz_xxxxxxz[k];

                g_z_0_x_0_xxz_xxxxyy[k] = -g_z_0_x_0_xz_xxxxyy[k] * ab_x + g_z_0_x_0_xz_xxxxxyy[k];

                g_z_0_x_0_xxz_xxxxyz[k] = -g_z_0_x_0_xz_xxxxyz[k] * ab_x + g_z_0_x_0_xz_xxxxxyz[k];

                g_z_0_x_0_xxz_xxxxzz[k] = -g_z_0_x_0_xz_xxxxzz[k] * ab_x + g_z_0_x_0_xz_xxxxxzz[k];

                g_z_0_x_0_xxz_xxxyyy[k] = -g_z_0_x_0_xz_xxxyyy[k] * ab_x + g_z_0_x_0_xz_xxxxyyy[k];

                g_z_0_x_0_xxz_xxxyyz[k] = -g_z_0_x_0_xz_xxxyyz[k] * ab_x + g_z_0_x_0_xz_xxxxyyz[k];

                g_z_0_x_0_xxz_xxxyzz[k] = -g_z_0_x_0_xz_xxxyzz[k] * ab_x + g_z_0_x_0_xz_xxxxyzz[k];

                g_z_0_x_0_xxz_xxxzzz[k] = -g_z_0_x_0_xz_xxxzzz[k] * ab_x + g_z_0_x_0_xz_xxxxzzz[k];

                g_z_0_x_0_xxz_xxyyyy[k] = -g_z_0_x_0_xz_xxyyyy[k] * ab_x + g_z_0_x_0_xz_xxxyyyy[k];

                g_z_0_x_0_xxz_xxyyyz[k] = -g_z_0_x_0_xz_xxyyyz[k] * ab_x + g_z_0_x_0_xz_xxxyyyz[k];

                g_z_0_x_0_xxz_xxyyzz[k] = -g_z_0_x_0_xz_xxyyzz[k] * ab_x + g_z_0_x_0_xz_xxxyyzz[k];

                g_z_0_x_0_xxz_xxyzzz[k] = -g_z_0_x_0_xz_xxyzzz[k] * ab_x + g_z_0_x_0_xz_xxxyzzz[k];

                g_z_0_x_0_xxz_xxzzzz[k] = -g_z_0_x_0_xz_xxzzzz[k] * ab_x + g_z_0_x_0_xz_xxxzzzz[k];

                g_z_0_x_0_xxz_xyyyyy[k] = -g_z_0_x_0_xz_xyyyyy[k] * ab_x + g_z_0_x_0_xz_xxyyyyy[k];

                g_z_0_x_0_xxz_xyyyyz[k] = -g_z_0_x_0_xz_xyyyyz[k] * ab_x + g_z_0_x_0_xz_xxyyyyz[k];

                g_z_0_x_0_xxz_xyyyzz[k] = -g_z_0_x_0_xz_xyyyzz[k] * ab_x + g_z_0_x_0_xz_xxyyyzz[k];

                g_z_0_x_0_xxz_xyyzzz[k] = -g_z_0_x_0_xz_xyyzzz[k] * ab_x + g_z_0_x_0_xz_xxyyzzz[k];

                g_z_0_x_0_xxz_xyzzzz[k] = -g_z_0_x_0_xz_xyzzzz[k] * ab_x + g_z_0_x_0_xz_xxyzzzz[k];

                g_z_0_x_0_xxz_xzzzzz[k] = -g_z_0_x_0_xz_xzzzzz[k] * ab_x + g_z_0_x_0_xz_xxzzzzz[k];

                g_z_0_x_0_xxz_yyyyyy[k] = -g_z_0_x_0_xz_yyyyyy[k] * ab_x + g_z_0_x_0_xz_xyyyyyy[k];

                g_z_0_x_0_xxz_yyyyyz[k] = -g_z_0_x_0_xz_yyyyyz[k] * ab_x + g_z_0_x_0_xz_xyyyyyz[k];

                g_z_0_x_0_xxz_yyyyzz[k] = -g_z_0_x_0_xz_yyyyzz[k] * ab_x + g_z_0_x_0_xz_xyyyyzz[k];

                g_z_0_x_0_xxz_yyyzzz[k] = -g_z_0_x_0_xz_yyyzzz[k] * ab_x + g_z_0_x_0_xz_xyyyzzz[k];

                g_z_0_x_0_xxz_yyzzzz[k] = -g_z_0_x_0_xz_yyzzzz[k] * ab_x + g_z_0_x_0_xz_xyyzzzz[k];

                g_z_0_x_0_xxz_yzzzzz[k] = -g_z_0_x_0_xz_yzzzzz[k] * ab_x + g_z_0_x_0_xz_xyzzzzz[k];

                g_z_0_x_0_xxz_zzzzzz[k] = -g_z_0_x_0_xz_zzzzzz[k] * ab_x + g_z_0_x_0_xz_xzzzzzz[k];
            }

            /// Set up 1764-1792 components of targeted buffer : cbuffer.data(

            auto g_z_0_x_0_xyy_xxxxxx = cbuffer.data(fi_geom_1010_off + 1764 * ccomps * dcomps);

            auto g_z_0_x_0_xyy_xxxxxy = cbuffer.data(fi_geom_1010_off + 1765 * ccomps * dcomps);

            auto g_z_0_x_0_xyy_xxxxxz = cbuffer.data(fi_geom_1010_off + 1766 * ccomps * dcomps);

            auto g_z_0_x_0_xyy_xxxxyy = cbuffer.data(fi_geom_1010_off + 1767 * ccomps * dcomps);

            auto g_z_0_x_0_xyy_xxxxyz = cbuffer.data(fi_geom_1010_off + 1768 * ccomps * dcomps);

            auto g_z_0_x_0_xyy_xxxxzz = cbuffer.data(fi_geom_1010_off + 1769 * ccomps * dcomps);

            auto g_z_0_x_0_xyy_xxxyyy = cbuffer.data(fi_geom_1010_off + 1770 * ccomps * dcomps);

            auto g_z_0_x_0_xyy_xxxyyz = cbuffer.data(fi_geom_1010_off + 1771 * ccomps * dcomps);

            auto g_z_0_x_0_xyy_xxxyzz = cbuffer.data(fi_geom_1010_off + 1772 * ccomps * dcomps);

            auto g_z_0_x_0_xyy_xxxzzz = cbuffer.data(fi_geom_1010_off + 1773 * ccomps * dcomps);

            auto g_z_0_x_0_xyy_xxyyyy = cbuffer.data(fi_geom_1010_off + 1774 * ccomps * dcomps);

            auto g_z_0_x_0_xyy_xxyyyz = cbuffer.data(fi_geom_1010_off + 1775 * ccomps * dcomps);

            auto g_z_0_x_0_xyy_xxyyzz = cbuffer.data(fi_geom_1010_off + 1776 * ccomps * dcomps);

            auto g_z_0_x_0_xyy_xxyzzz = cbuffer.data(fi_geom_1010_off + 1777 * ccomps * dcomps);

            auto g_z_0_x_0_xyy_xxzzzz = cbuffer.data(fi_geom_1010_off + 1778 * ccomps * dcomps);

            auto g_z_0_x_0_xyy_xyyyyy = cbuffer.data(fi_geom_1010_off + 1779 * ccomps * dcomps);

            auto g_z_0_x_0_xyy_xyyyyz = cbuffer.data(fi_geom_1010_off + 1780 * ccomps * dcomps);

            auto g_z_0_x_0_xyy_xyyyzz = cbuffer.data(fi_geom_1010_off + 1781 * ccomps * dcomps);

            auto g_z_0_x_0_xyy_xyyzzz = cbuffer.data(fi_geom_1010_off + 1782 * ccomps * dcomps);

            auto g_z_0_x_0_xyy_xyzzzz = cbuffer.data(fi_geom_1010_off + 1783 * ccomps * dcomps);

            auto g_z_0_x_0_xyy_xzzzzz = cbuffer.data(fi_geom_1010_off + 1784 * ccomps * dcomps);

            auto g_z_0_x_0_xyy_yyyyyy = cbuffer.data(fi_geom_1010_off + 1785 * ccomps * dcomps);

            auto g_z_0_x_0_xyy_yyyyyz = cbuffer.data(fi_geom_1010_off + 1786 * ccomps * dcomps);

            auto g_z_0_x_0_xyy_yyyyzz = cbuffer.data(fi_geom_1010_off + 1787 * ccomps * dcomps);

            auto g_z_0_x_0_xyy_yyyzzz = cbuffer.data(fi_geom_1010_off + 1788 * ccomps * dcomps);

            auto g_z_0_x_0_xyy_yyzzzz = cbuffer.data(fi_geom_1010_off + 1789 * ccomps * dcomps);

            auto g_z_0_x_0_xyy_yzzzzz = cbuffer.data(fi_geom_1010_off + 1790 * ccomps * dcomps);

            auto g_z_0_x_0_xyy_zzzzzz = cbuffer.data(fi_geom_1010_off + 1791 * ccomps * dcomps);

            #pragma omp simd aligned(g_z_0_x_0_xyy_xxxxxx, g_z_0_x_0_xyy_xxxxxy, g_z_0_x_0_xyy_xxxxxz, g_z_0_x_0_xyy_xxxxyy, g_z_0_x_0_xyy_xxxxyz, g_z_0_x_0_xyy_xxxxzz, g_z_0_x_0_xyy_xxxyyy, g_z_0_x_0_xyy_xxxyyz, g_z_0_x_0_xyy_xxxyzz, g_z_0_x_0_xyy_xxxzzz, g_z_0_x_0_xyy_xxyyyy, g_z_0_x_0_xyy_xxyyyz, g_z_0_x_0_xyy_xxyyzz, g_z_0_x_0_xyy_xxyzzz, g_z_0_x_0_xyy_xxzzzz, g_z_0_x_0_xyy_xyyyyy, g_z_0_x_0_xyy_xyyyyz, g_z_0_x_0_xyy_xyyyzz, g_z_0_x_0_xyy_xyyzzz, g_z_0_x_0_xyy_xyzzzz, g_z_0_x_0_xyy_xzzzzz, g_z_0_x_0_xyy_yyyyyy, g_z_0_x_0_xyy_yyyyyz, g_z_0_x_0_xyy_yyyyzz, g_z_0_x_0_xyy_yyyzzz, g_z_0_x_0_xyy_yyzzzz, g_z_0_x_0_xyy_yzzzzz, g_z_0_x_0_xyy_zzzzzz, g_z_0_x_0_yy_xxxxxx, g_z_0_x_0_yy_xxxxxxx, g_z_0_x_0_yy_xxxxxxy, g_z_0_x_0_yy_xxxxxxz, g_z_0_x_0_yy_xxxxxy, g_z_0_x_0_yy_xxxxxyy, g_z_0_x_0_yy_xxxxxyz, g_z_0_x_0_yy_xxxxxz, g_z_0_x_0_yy_xxxxxzz, g_z_0_x_0_yy_xxxxyy, g_z_0_x_0_yy_xxxxyyy, g_z_0_x_0_yy_xxxxyyz, g_z_0_x_0_yy_xxxxyz, g_z_0_x_0_yy_xxxxyzz, g_z_0_x_0_yy_xxxxzz, g_z_0_x_0_yy_xxxxzzz, g_z_0_x_0_yy_xxxyyy, g_z_0_x_0_yy_xxxyyyy, g_z_0_x_0_yy_xxxyyyz, g_z_0_x_0_yy_xxxyyz, g_z_0_x_0_yy_xxxyyzz, g_z_0_x_0_yy_xxxyzz, g_z_0_x_0_yy_xxxyzzz, g_z_0_x_0_yy_xxxzzz, g_z_0_x_0_yy_xxxzzzz, g_z_0_x_0_yy_xxyyyy, g_z_0_x_0_yy_xxyyyyy, g_z_0_x_0_yy_xxyyyyz, g_z_0_x_0_yy_xxyyyz, g_z_0_x_0_yy_xxyyyzz, g_z_0_x_0_yy_xxyyzz, g_z_0_x_0_yy_xxyyzzz, g_z_0_x_0_yy_xxyzzz, g_z_0_x_0_yy_xxyzzzz, g_z_0_x_0_yy_xxzzzz, g_z_0_x_0_yy_xxzzzzz, g_z_0_x_0_yy_xyyyyy, g_z_0_x_0_yy_xyyyyyy, g_z_0_x_0_yy_xyyyyyz, g_z_0_x_0_yy_xyyyyz, g_z_0_x_0_yy_xyyyyzz, g_z_0_x_0_yy_xyyyzz, g_z_0_x_0_yy_xyyyzzz, g_z_0_x_0_yy_xyyzzz, g_z_0_x_0_yy_xyyzzzz, g_z_0_x_0_yy_xyzzzz, g_z_0_x_0_yy_xyzzzzz, g_z_0_x_0_yy_xzzzzz, g_z_0_x_0_yy_xzzzzzz, g_z_0_x_0_yy_yyyyyy, g_z_0_x_0_yy_yyyyyz, g_z_0_x_0_yy_yyyyzz, g_z_0_x_0_yy_yyyzzz, g_z_0_x_0_yy_yyzzzz, g_z_0_x_0_yy_yzzzzz, g_z_0_x_0_yy_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_z_0_x_0_xyy_xxxxxx[k] = -g_z_0_x_0_yy_xxxxxx[k] * ab_x + g_z_0_x_0_yy_xxxxxxx[k];

                g_z_0_x_0_xyy_xxxxxy[k] = -g_z_0_x_0_yy_xxxxxy[k] * ab_x + g_z_0_x_0_yy_xxxxxxy[k];

                g_z_0_x_0_xyy_xxxxxz[k] = -g_z_0_x_0_yy_xxxxxz[k] * ab_x + g_z_0_x_0_yy_xxxxxxz[k];

                g_z_0_x_0_xyy_xxxxyy[k] = -g_z_0_x_0_yy_xxxxyy[k] * ab_x + g_z_0_x_0_yy_xxxxxyy[k];

                g_z_0_x_0_xyy_xxxxyz[k] = -g_z_0_x_0_yy_xxxxyz[k] * ab_x + g_z_0_x_0_yy_xxxxxyz[k];

                g_z_0_x_0_xyy_xxxxzz[k] = -g_z_0_x_0_yy_xxxxzz[k] * ab_x + g_z_0_x_0_yy_xxxxxzz[k];

                g_z_0_x_0_xyy_xxxyyy[k] = -g_z_0_x_0_yy_xxxyyy[k] * ab_x + g_z_0_x_0_yy_xxxxyyy[k];

                g_z_0_x_0_xyy_xxxyyz[k] = -g_z_0_x_0_yy_xxxyyz[k] * ab_x + g_z_0_x_0_yy_xxxxyyz[k];

                g_z_0_x_0_xyy_xxxyzz[k] = -g_z_0_x_0_yy_xxxyzz[k] * ab_x + g_z_0_x_0_yy_xxxxyzz[k];

                g_z_0_x_0_xyy_xxxzzz[k] = -g_z_0_x_0_yy_xxxzzz[k] * ab_x + g_z_0_x_0_yy_xxxxzzz[k];

                g_z_0_x_0_xyy_xxyyyy[k] = -g_z_0_x_0_yy_xxyyyy[k] * ab_x + g_z_0_x_0_yy_xxxyyyy[k];

                g_z_0_x_0_xyy_xxyyyz[k] = -g_z_0_x_0_yy_xxyyyz[k] * ab_x + g_z_0_x_0_yy_xxxyyyz[k];

                g_z_0_x_0_xyy_xxyyzz[k] = -g_z_0_x_0_yy_xxyyzz[k] * ab_x + g_z_0_x_0_yy_xxxyyzz[k];

                g_z_0_x_0_xyy_xxyzzz[k] = -g_z_0_x_0_yy_xxyzzz[k] * ab_x + g_z_0_x_0_yy_xxxyzzz[k];

                g_z_0_x_0_xyy_xxzzzz[k] = -g_z_0_x_0_yy_xxzzzz[k] * ab_x + g_z_0_x_0_yy_xxxzzzz[k];

                g_z_0_x_0_xyy_xyyyyy[k] = -g_z_0_x_0_yy_xyyyyy[k] * ab_x + g_z_0_x_0_yy_xxyyyyy[k];

                g_z_0_x_0_xyy_xyyyyz[k] = -g_z_0_x_0_yy_xyyyyz[k] * ab_x + g_z_0_x_0_yy_xxyyyyz[k];

                g_z_0_x_0_xyy_xyyyzz[k] = -g_z_0_x_0_yy_xyyyzz[k] * ab_x + g_z_0_x_0_yy_xxyyyzz[k];

                g_z_0_x_0_xyy_xyyzzz[k] = -g_z_0_x_0_yy_xyyzzz[k] * ab_x + g_z_0_x_0_yy_xxyyzzz[k];

                g_z_0_x_0_xyy_xyzzzz[k] = -g_z_0_x_0_yy_xyzzzz[k] * ab_x + g_z_0_x_0_yy_xxyzzzz[k];

                g_z_0_x_0_xyy_xzzzzz[k] = -g_z_0_x_0_yy_xzzzzz[k] * ab_x + g_z_0_x_0_yy_xxzzzzz[k];

                g_z_0_x_0_xyy_yyyyyy[k] = -g_z_0_x_0_yy_yyyyyy[k] * ab_x + g_z_0_x_0_yy_xyyyyyy[k];

                g_z_0_x_0_xyy_yyyyyz[k] = -g_z_0_x_0_yy_yyyyyz[k] * ab_x + g_z_0_x_0_yy_xyyyyyz[k];

                g_z_0_x_0_xyy_yyyyzz[k] = -g_z_0_x_0_yy_yyyyzz[k] * ab_x + g_z_0_x_0_yy_xyyyyzz[k];

                g_z_0_x_0_xyy_yyyzzz[k] = -g_z_0_x_0_yy_yyyzzz[k] * ab_x + g_z_0_x_0_yy_xyyyzzz[k];

                g_z_0_x_0_xyy_yyzzzz[k] = -g_z_0_x_0_yy_yyzzzz[k] * ab_x + g_z_0_x_0_yy_xyyzzzz[k];

                g_z_0_x_0_xyy_yzzzzz[k] = -g_z_0_x_0_yy_yzzzzz[k] * ab_x + g_z_0_x_0_yy_xyzzzzz[k];

                g_z_0_x_0_xyy_zzzzzz[k] = -g_z_0_x_0_yy_zzzzzz[k] * ab_x + g_z_0_x_0_yy_xzzzzzz[k];
            }

            /// Set up 1792-1820 components of targeted buffer : cbuffer.data(

            auto g_z_0_x_0_xyz_xxxxxx = cbuffer.data(fi_geom_1010_off + 1792 * ccomps * dcomps);

            auto g_z_0_x_0_xyz_xxxxxy = cbuffer.data(fi_geom_1010_off + 1793 * ccomps * dcomps);

            auto g_z_0_x_0_xyz_xxxxxz = cbuffer.data(fi_geom_1010_off + 1794 * ccomps * dcomps);

            auto g_z_0_x_0_xyz_xxxxyy = cbuffer.data(fi_geom_1010_off + 1795 * ccomps * dcomps);

            auto g_z_0_x_0_xyz_xxxxyz = cbuffer.data(fi_geom_1010_off + 1796 * ccomps * dcomps);

            auto g_z_0_x_0_xyz_xxxxzz = cbuffer.data(fi_geom_1010_off + 1797 * ccomps * dcomps);

            auto g_z_0_x_0_xyz_xxxyyy = cbuffer.data(fi_geom_1010_off + 1798 * ccomps * dcomps);

            auto g_z_0_x_0_xyz_xxxyyz = cbuffer.data(fi_geom_1010_off + 1799 * ccomps * dcomps);

            auto g_z_0_x_0_xyz_xxxyzz = cbuffer.data(fi_geom_1010_off + 1800 * ccomps * dcomps);

            auto g_z_0_x_0_xyz_xxxzzz = cbuffer.data(fi_geom_1010_off + 1801 * ccomps * dcomps);

            auto g_z_0_x_0_xyz_xxyyyy = cbuffer.data(fi_geom_1010_off + 1802 * ccomps * dcomps);

            auto g_z_0_x_0_xyz_xxyyyz = cbuffer.data(fi_geom_1010_off + 1803 * ccomps * dcomps);

            auto g_z_0_x_0_xyz_xxyyzz = cbuffer.data(fi_geom_1010_off + 1804 * ccomps * dcomps);

            auto g_z_0_x_0_xyz_xxyzzz = cbuffer.data(fi_geom_1010_off + 1805 * ccomps * dcomps);

            auto g_z_0_x_0_xyz_xxzzzz = cbuffer.data(fi_geom_1010_off + 1806 * ccomps * dcomps);

            auto g_z_0_x_0_xyz_xyyyyy = cbuffer.data(fi_geom_1010_off + 1807 * ccomps * dcomps);

            auto g_z_0_x_0_xyz_xyyyyz = cbuffer.data(fi_geom_1010_off + 1808 * ccomps * dcomps);

            auto g_z_0_x_0_xyz_xyyyzz = cbuffer.data(fi_geom_1010_off + 1809 * ccomps * dcomps);

            auto g_z_0_x_0_xyz_xyyzzz = cbuffer.data(fi_geom_1010_off + 1810 * ccomps * dcomps);

            auto g_z_0_x_0_xyz_xyzzzz = cbuffer.data(fi_geom_1010_off + 1811 * ccomps * dcomps);

            auto g_z_0_x_0_xyz_xzzzzz = cbuffer.data(fi_geom_1010_off + 1812 * ccomps * dcomps);

            auto g_z_0_x_0_xyz_yyyyyy = cbuffer.data(fi_geom_1010_off + 1813 * ccomps * dcomps);

            auto g_z_0_x_0_xyz_yyyyyz = cbuffer.data(fi_geom_1010_off + 1814 * ccomps * dcomps);

            auto g_z_0_x_0_xyz_yyyyzz = cbuffer.data(fi_geom_1010_off + 1815 * ccomps * dcomps);

            auto g_z_0_x_0_xyz_yyyzzz = cbuffer.data(fi_geom_1010_off + 1816 * ccomps * dcomps);

            auto g_z_0_x_0_xyz_yyzzzz = cbuffer.data(fi_geom_1010_off + 1817 * ccomps * dcomps);

            auto g_z_0_x_0_xyz_yzzzzz = cbuffer.data(fi_geom_1010_off + 1818 * ccomps * dcomps);

            auto g_z_0_x_0_xyz_zzzzzz = cbuffer.data(fi_geom_1010_off + 1819 * ccomps * dcomps);

            #pragma omp simd aligned(g_z_0_x_0_xyz_xxxxxx, g_z_0_x_0_xyz_xxxxxy, g_z_0_x_0_xyz_xxxxxz, g_z_0_x_0_xyz_xxxxyy, g_z_0_x_0_xyz_xxxxyz, g_z_0_x_0_xyz_xxxxzz, g_z_0_x_0_xyz_xxxyyy, g_z_0_x_0_xyz_xxxyyz, g_z_0_x_0_xyz_xxxyzz, g_z_0_x_0_xyz_xxxzzz, g_z_0_x_0_xyz_xxyyyy, g_z_0_x_0_xyz_xxyyyz, g_z_0_x_0_xyz_xxyyzz, g_z_0_x_0_xyz_xxyzzz, g_z_0_x_0_xyz_xxzzzz, g_z_0_x_0_xyz_xyyyyy, g_z_0_x_0_xyz_xyyyyz, g_z_0_x_0_xyz_xyyyzz, g_z_0_x_0_xyz_xyyzzz, g_z_0_x_0_xyz_xyzzzz, g_z_0_x_0_xyz_xzzzzz, g_z_0_x_0_xyz_yyyyyy, g_z_0_x_0_xyz_yyyyyz, g_z_0_x_0_xyz_yyyyzz, g_z_0_x_0_xyz_yyyzzz, g_z_0_x_0_xyz_yyzzzz, g_z_0_x_0_xyz_yzzzzz, g_z_0_x_0_xyz_zzzzzz, g_z_0_x_0_yz_xxxxxx, g_z_0_x_0_yz_xxxxxxx, g_z_0_x_0_yz_xxxxxxy, g_z_0_x_0_yz_xxxxxxz, g_z_0_x_0_yz_xxxxxy, g_z_0_x_0_yz_xxxxxyy, g_z_0_x_0_yz_xxxxxyz, g_z_0_x_0_yz_xxxxxz, g_z_0_x_0_yz_xxxxxzz, g_z_0_x_0_yz_xxxxyy, g_z_0_x_0_yz_xxxxyyy, g_z_0_x_0_yz_xxxxyyz, g_z_0_x_0_yz_xxxxyz, g_z_0_x_0_yz_xxxxyzz, g_z_0_x_0_yz_xxxxzz, g_z_0_x_0_yz_xxxxzzz, g_z_0_x_0_yz_xxxyyy, g_z_0_x_0_yz_xxxyyyy, g_z_0_x_0_yz_xxxyyyz, g_z_0_x_0_yz_xxxyyz, g_z_0_x_0_yz_xxxyyzz, g_z_0_x_0_yz_xxxyzz, g_z_0_x_0_yz_xxxyzzz, g_z_0_x_0_yz_xxxzzz, g_z_0_x_0_yz_xxxzzzz, g_z_0_x_0_yz_xxyyyy, g_z_0_x_0_yz_xxyyyyy, g_z_0_x_0_yz_xxyyyyz, g_z_0_x_0_yz_xxyyyz, g_z_0_x_0_yz_xxyyyzz, g_z_0_x_0_yz_xxyyzz, g_z_0_x_0_yz_xxyyzzz, g_z_0_x_0_yz_xxyzzz, g_z_0_x_0_yz_xxyzzzz, g_z_0_x_0_yz_xxzzzz, g_z_0_x_0_yz_xxzzzzz, g_z_0_x_0_yz_xyyyyy, g_z_0_x_0_yz_xyyyyyy, g_z_0_x_0_yz_xyyyyyz, g_z_0_x_0_yz_xyyyyz, g_z_0_x_0_yz_xyyyyzz, g_z_0_x_0_yz_xyyyzz, g_z_0_x_0_yz_xyyyzzz, g_z_0_x_0_yz_xyyzzz, g_z_0_x_0_yz_xyyzzzz, g_z_0_x_0_yz_xyzzzz, g_z_0_x_0_yz_xyzzzzz, g_z_0_x_0_yz_xzzzzz, g_z_0_x_0_yz_xzzzzzz, g_z_0_x_0_yz_yyyyyy, g_z_0_x_0_yz_yyyyyz, g_z_0_x_0_yz_yyyyzz, g_z_0_x_0_yz_yyyzzz, g_z_0_x_0_yz_yyzzzz, g_z_0_x_0_yz_yzzzzz, g_z_0_x_0_yz_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_z_0_x_0_xyz_xxxxxx[k] = -g_z_0_x_0_yz_xxxxxx[k] * ab_x + g_z_0_x_0_yz_xxxxxxx[k];

                g_z_0_x_0_xyz_xxxxxy[k] = -g_z_0_x_0_yz_xxxxxy[k] * ab_x + g_z_0_x_0_yz_xxxxxxy[k];

                g_z_0_x_0_xyz_xxxxxz[k] = -g_z_0_x_0_yz_xxxxxz[k] * ab_x + g_z_0_x_0_yz_xxxxxxz[k];

                g_z_0_x_0_xyz_xxxxyy[k] = -g_z_0_x_0_yz_xxxxyy[k] * ab_x + g_z_0_x_0_yz_xxxxxyy[k];

                g_z_0_x_0_xyz_xxxxyz[k] = -g_z_0_x_0_yz_xxxxyz[k] * ab_x + g_z_0_x_0_yz_xxxxxyz[k];

                g_z_0_x_0_xyz_xxxxzz[k] = -g_z_0_x_0_yz_xxxxzz[k] * ab_x + g_z_0_x_0_yz_xxxxxzz[k];

                g_z_0_x_0_xyz_xxxyyy[k] = -g_z_0_x_0_yz_xxxyyy[k] * ab_x + g_z_0_x_0_yz_xxxxyyy[k];

                g_z_0_x_0_xyz_xxxyyz[k] = -g_z_0_x_0_yz_xxxyyz[k] * ab_x + g_z_0_x_0_yz_xxxxyyz[k];

                g_z_0_x_0_xyz_xxxyzz[k] = -g_z_0_x_0_yz_xxxyzz[k] * ab_x + g_z_0_x_0_yz_xxxxyzz[k];

                g_z_0_x_0_xyz_xxxzzz[k] = -g_z_0_x_0_yz_xxxzzz[k] * ab_x + g_z_0_x_0_yz_xxxxzzz[k];

                g_z_0_x_0_xyz_xxyyyy[k] = -g_z_0_x_0_yz_xxyyyy[k] * ab_x + g_z_0_x_0_yz_xxxyyyy[k];

                g_z_0_x_0_xyz_xxyyyz[k] = -g_z_0_x_0_yz_xxyyyz[k] * ab_x + g_z_0_x_0_yz_xxxyyyz[k];

                g_z_0_x_0_xyz_xxyyzz[k] = -g_z_0_x_0_yz_xxyyzz[k] * ab_x + g_z_0_x_0_yz_xxxyyzz[k];

                g_z_0_x_0_xyz_xxyzzz[k] = -g_z_0_x_0_yz_xxyzzz[k] * ab_x + g_z_0_x_0_yz_xxxyzzz[k];

                g_z_0_x_0_xyz_xxzzzz[k] = -g_z_0_x_0_yz_xxzzzz[k] * ab_x + g_z_0_x_0_yz_xxxzzzz[k];

                g_z_0_x_0_xyz_xyyyyy[k] = -g_z_0_x_0_yz_xyyyyy[k] * ab_x + g_z_0_x_0_yz_xxyyyyy[k];

                g_z_0_x_0_xyz_xyyyyz[k] = -g_z_0_x_0_yz_xyyyyz[k] * ab_x + g_z_0_x_0_yz_xxyyyyz[k];

                g_z_0_x_0_xyz_xyyyzz[k] = -g_z_0_x_0_yz_xyyyzz[k] * ab_x + g_z_0_x_0_yz_xxyyyzz[k];

                g_z_0_x_0_xyz_xyyzzz[k] = -g_z_0_x_0_yz_xyyzzz[k] * ab_x + g_z_0_x_0_yz_xxyyzzz[k];

                g_z_0_x_0_xyz_xyzzzz[k] = -g_z_0_x_0_yz_xyzzzz[k] * ab_x + g_z_0_x_0_yz_xxyzzzz[k];

                g_z_0_x_0_xyz_xzzzzz[k] = -g_z_0_x_0_yz_xzzzzz[k] * ab_x + g_z_0_x_0_yz_xxzzzzz[k];

                g_z_0_x_0_xyz_yyyyyy[k] = -g_z_0_x_0_yz_yyyyyy[k] * ab_x + g_z_0_x_0_yz_xyyyyyy[k];

                g_z_0_x_0_xyz_yyyyyz[k] = -g_z_0_x_0_yz_yyyyyz[k] * ab_x + g_z_0_x_0_yz_xyyyyyz[k];

                g_z_0_x_0_xyz_yyyyzz[k] = -g_z_0_x_0_yz_yyyyzz[k] * ab_x + g_z_0_x_0_yz_xyyyyzz[k];

                g_z_0_x_0_xyz_yyyzzz[k] = -g_z_0_x_0_yz_yyyzzz[k] * ab_x + g_z_0_x_0_yz_xyyyzzz[k];

                g_z_0_x_0_xyz_yyzzzz[k] = -g_z_0_x_0_yz_yyzzzz[k] * ab_x + g_z_0_x_0_yz_xyyzzzz[k];

                g_z_0_x_0_xyz_yzzzzz[k] = -g_z_0_x_0_yz_yzzzzz[k] * ab_x + g_z_0_x_0_yz_xyzzzzz[k];

                g_z_0_x_0_xyz_zzzzzz[k] = -g_z_0_x_0_yz_zzzzzz[k] * ab_x + g_z_0_x_0_yz_xzzzzzz[k];
            }

            /// Set up 1820-1848 components of targeted buffer : cbuffer.data(

            auto g_z_0_x_0_xzz_xxxxxx = cbuffer.data(fi_geom_1010_off + 1820 * ccomps * dcomps);

            auto g_z_0_x_0_xzz_xxxxxy = cbuffer.data(fi_geom_1010_off + 1821 * ccomps * dcomps);

            auto g_z_0_x_0_xzz_xxxxxz = cbuffer.data(fi_geom_1010_off + 1822 * ccomps * dcomps);

            auto g_z_0_x_0_xzz_xxxxyy = cbuffer.data(fi_geom_1010_off + 1823 * ccomps * dcomps);

            auto g_z_0_x_0_xzz_xxxxyz = cbuffer.data(fi_geom_1010_off + 1824 * ccomps * dcomps);

            auto g_z_0_x_0_xzz_xxxxzz = cbuffer.data(fi_geom_1010_off + 1825 * ccomps * dcomps);

            auto g_z_0_x_0_xzz_xxxyyy = cbuffer.data(fi_geom_1010_off + 1826 * ccomps * dcomps);

            auto g_z_0_x_0_xzz_xxxyyz = cbuffer.data(fi_geom_1010_off + 1827 * ccomps * dcomps);

            auto g_z_0_x_0_xzz_xxxyzz = cbuffer.data(fi_geom_1010_off + 1828 * ccomps * dcomps);

            auto g_z_0_x_0_xzz_xxxzzz = cbuffer.data(fi_geom_1010_off + 1829 * ccomps * dcomps);

            auto g_z_0_x_0_xzz_xxyyyy = cbuffer.data(fi_geom_1010_off + 1830 * ccomps * dcomps);

            auto g_z_0_x_0_xzz_xxyyyz = cbuffer.data(fi_geom_1010_off + 1831 * ccomps * dcomps);

            auto g_z_0_x_0_xzz_xxyyzz = cbuffer.data(fi_geom_1010_off + 1832 * ccomps * dcomps);

            auto g_z_0_x_0_xzz_xxyzzz = cbuffer.data(fi_geom_1010_off + 1833 * ccomps * dcomps);

            auto g_z_0_x_0_xzz_xxzzzz = cbuffer.data(fi_geom_1010_off + 1834 * ccomps * dcomps);

            auto g_z_0_x_0_xzz_xyyyyy = cbuffer.data(fi_geom_1010_off + 1835 * ccomps * dcomps);

            auto g_z_0_x_0_xzz_xyyyyz = cbuffer.data(fi_geom_1010_off + 1836 * ccomps * dcomps);

            auto g_z_0_x_0_xzz_xyyyzz = cbuffer.data(fi_geom_1010_off + 1837 * ccomps * dcomps);

            auto g_z_0_x_0_xzz_xyyzzz = cbuffer.data(fi_geom_1010_off + 1838 * ccomps * dcomps);

            auto g_z_0_x_0_xzz_xyzzzz = cbuffer.data(fi_geom_1010_off + 1839 * ccomps * dcomps);

            auto g_z_0_x_0_xzz_xzzzzz = cbuffer.data(fi_geom_1010_off + 1840 * ccomps * dcomps);

            auto g_z_0_x_0_xzz_yyyyyy = cbuffer.data(fi_geom_1010_off + 1841 * ccomps * dcomps);

            auto g_z_0_x_0_xzz_yyyyyz = cbuffer.data(fi_geom_1010_off + 1842 * ccomps * dcomps);

            auto g_z_0_x_0_xzz_yyyyzz = cbuffer.data(fi_geom_1010_off + 1843 * ccomps * dcomps);

            auto g_z_0_x_0_xzz_yyyzzz = cbuffer.data(fi_geom_1010_off + 1844 * ccomps * dcomps);

            auto g_z_0_x_0_xzz_yyzzzz = cbuffer.data(fi_geom_1010_off + 1845 * ccomps * dcomps);

            auto g_z_0_x_0_xzz_yzzzzz = cbuffer.data(fi_geom_1010_off + 1846 * ccomps * dcomps);

            auto g_z_0_x_0_xzz_zzzzzz = cbuffer.data(fi_geom_1010_off + 1847 * ccomps * dcomps);

            #pragma omp simd aligned(g_z_0_x_0_xzz_xxxxxx, g_z_0_x_0_xzz_xxxxxy, g_z_0_x_0_xzz_xxxxxz, g_z_0_x_0_xzz_xxxxyy, g_z_0_x_0_xzz_xxxxyz, g_z_0_x_0_xzz_xxxxzz, g_z_0_x_0_xzz_xxxyyy, g_z_0_x_0_xzz_xxxyyz, g_z_0_x_0_xzz_xxxyzz, g_z_0_x_0_xzz_xxxzzz, g_z_0_x_0_xzz_xxyyyy, g_z_0_x_0_xzz_xxyyyz, g_z_0_x_0_xzz_xxyyzz, g_z_0_x_0_xzz_xxyzzz, g_z_0_x_0_xzz_xxzzzz, g_z_0_x_0_xzz_xyyyyy, g_z_0_x_0_xzz_xyyyyz, g_z_0_x_0_xzz_xyyyzz, g_z_0_x_0_xzz_xyyzzz, g_z_0_x_0_xzz_xyzzzz, g_z_0_x_0_xzz_xzzzzz, g_z_0_x_0_xzz_yyyyyy, g_z_0_x_0_xzz_yyyyyz, g_z_0_x_0_xzz_yyyyzz, g_z_0_x_0_xzz_yyyzzz, g_z_0_x_0_xzz_yyzzzz, g_z_0_x_0_xzz_yzzzzz, g_z_0_x_0_xzz_zzzzzz, g_z_0_x_0_zz_xxxxxx, g_z_0_x_0_zz_xxxxxxx, g_z_0_x_0_zz_xxxxxxy, g_z_0_x_0_zz_xxxxxxz, g_z_0_x_0_zz_xxxxxy, g_z_0_x_0_zz_xxxxxyy, g_z_0_x_0_zz_xxxxxyz, g_z_0_x_0_zz_xxxxxz, g_z_0_x_0_zz_xxxxxzz, g_z_0_x_0_zz_xxxxyy, g_z_0_x_0_zz_xxxxyyy, g_z_0_x_0_zz_xxxxyyz, g_z_0_x_0_zz_xxxxyz, g_z_0_x_0_zz_xxxxyzz, g_z_0_x_0_zz_xxxxzz, g_z_0_x_0_zz_xxxxzzz, g_z_0_x_0_zz_xxxyyy, g_z_0_x_0_zz_xxxyyyy, g_z_0_x_0_zz_xxxyyyz, g_z_0_x_0_zz_xxxyyz, g_z_0_x_0_zz_xxxyyzz, g_z_0_x_0_zz_xxxyzz, g_z_0_x_0_zz_xxxyzzz, g_z_0_x_0_zz_xxxzzz, g_z_0_x_0_zz_xxxzzzz, g_z_0_x_0_zz_xxyyyy, g_z_0_x_0_zz_xxyyyyy, g_z_0_x_0_zz_xxyyyyz, g_z_0_x_0_zz_xxyyyz, g_z_0_x_0_zz_xxyyyzz, g_z_0_x_0_zz_xxyyzz, g_z_0_x_0_zz_xxyyzzz, g_z_0_x_0_zz_xxyzzz, g_z_0_x_0_zz_xxyzzzz, g_z_0_x_0_zz_xxzzzz, g_z_0_x_0_zz_xxzzzzz, g_z_0_x_0_zz_xyyyyy, g_z_0_x_0_zz_xyyyyyy, g_z_0_x_0_zz_xyyyyyz, g_z_0_x_0_zz_xyyyyz, g_z_0_x_0_zz_xyyyyzz, g_z_0_x_0_zz_xyyyzz, g_z_0_x_0_zz_xyyyzzz, g_z_0_x_0_zz_xyyzzz, g_z_0_x_0_zz_xyyzzzz, g_z_0_x_0_zz_xyzzzz, g_z_0_x_0_zz_xyzzzzz, g_z_0_x_0_zz_xzzzzz, g_z_0_x_0_zz_xzzzzzz, g_z_0_x_0_zz_yyyyyy, g_z_0_x_0_zz_yyyyyz, g_z_0_x_0_zz_yyyyzz, g_z_0_x_0_zz_yyyzzz, g_z_0_x_0_zz_yyzzzz, g_z_0_x_0_zz_yzzzzz, g_z_0_x_0_zz_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_z_0_x_0_xzz_xxxxxx[k] = -g_z_0_x_0_zz_xxxxxx[k] * ab_x + g_z_0_x_0_zz_xxxxxxx[k];

                g_z_0_x_0_xzz_xxxxxy[k] = -g_z_0_x_0_zz_xxxxxy[k] * ab_x + g_z_0_x_0_zz_xxxxxxy[k];

                g_z_0_x_0_xzz_xxxxxz[k] = -g_z_0_x_0_zz_xxxxxz[k] * ab_x + g_z_0_x_0_zz_xxxxxxz[k];

                g_z_0_x_0_xzz_xxxxyy[k] = -g_z_0_x_0_zz_xxxxyy[k] * ab_x + g_z_0_x_0_zz_xxxxxyy[k];

                g_z_0_x_0_xzz_xxxxyz[k] = -g_z_0_x_0_zz_xxxxyz[k] * ab_x + g_z_0_x_0_zz_xxxxxyz[k];

                g_z_0_x_0_xzz_xxxxzz[k] = -g_z_0_x_0_zz_xxxxzz[k] * ab_x + g_z_0_x_0_zz_xxxxxzz[k];

                g_z_0_x_0_xzz_xxxyyy[k] = -g_z_0_x_0_zz_xxxyyy[k] * ab_x + g_z_0_x_0_zz_xxxxyyy[k];

                g_z_0_x_0_xzz_xxxyyz[k] = -g_z_0_x_0_zz_xxxyyz[k] * ab_x + g_z_0_x_0_zz_xxxxyyz[k];

                g_z_0_x_0_xzz_xxxyzz[k] = -g_z_0_x_0_zz_xxxyzz[k] * ab_x + g_z_0_x_0_zz_xxxxyzz[k];

                g_z_0_x_0_xzz_xxxzzz[k] = -g_z_0_x_0_zz_xxxzzz[k] * ab_x + g_z_0_x_0_zz_xxxxzzz[k];

                g_z_0_x_0_xzz_xxyyyy[k] = -g_z_0_x_0_zz_xxyyyy[k] * ab_x + g_z_0_x_0_zz_xxxyyyy[k];

                g_z_0_x_0_xzz_xxyyyz[k] = -g_z_0_x_0_zz_xxyyyz[k] * ab_x + g_z_0_x_0_zz_xxxyyyz[k];

                g_z_0_x_0_xzz_xxyyzz[k] = -g_z_0_x_0_zz_xxyyzz[k] * ab_x + g_z_0_x_0_zz_xxxyyzz[k];

                g_z_0_x_0_xzz_xxyzzz[k] = -g_z_0_x_0_zz_xxyzzz[k] * ab_x + g_z_0_x_0_zz_xxxyzzz[k];

                g_z_0_x_0_xzz_xxzzzz[k] = -g_z_0_x_0_zz_xxzzzz[k] * ab_x + g_z_0_x_0_zz_xxxzzzz[k];

                g_z_0_x_0_xzz_xyyyyy[k] = -g_z_0_x_0_zz_xyyyyy[k] * ab_x + g_z_0_x_0_zz_xxyyyyy[k];

                g_z_0_x_0_xzz_xyyyyz[k] = -g_z_0_x_0_zz_xyyyyz[k] * ab_x + g_z_0_x_0_zz_xxyyyyz[k];

                g_z_0_x_0_xzz_xyyyzz[k] = -g_z_0_x_0_zz_xyyyzz[k] * ab_x + g_z_0_x_0_zz_xxyyyzz[k];

                g_z_0_x_0_xzz_xyyzzz[k] = -g_z_0_x_0_zz_xyyzzz[k] * ab_x + g_z_0_x_0_zz_xxyyzzz[k];

                g_z_0_x_0_xzz_xyzzzz[k] = -g_z_0_x_0_zz_xyzzzz[k] * ab_x + g_z_0_x_0_zz_xxyzzzz[k];

                g_z_0_x_0_xzz_xzzzzz[k] = -g_z_0_x_0_zz_xzzzzz[k] * ab_x + g_z_0_x_0_zz_xxzzzzz[k];

                g_z_0_x_0_xzz_yyyyyy[k] = -g_z_0_x_0_zz_yyyyyy[k] * ab_x + g_z_0_x_0_zz_xyyyyyy[k];

                g_z_0_x_0_xzz_yyyyyz[k] = -g_z_0_x_0_zz_yyyyyz[k] * ab_x + g_z_0_x_0_zz_xyyyyyz[k];

                g_z_0_x_0_xzz_yyyyzz[k] = -g_z_0_x_0_zz_yyyyzz[k] * ab_x + g_z_0_x_0_zz_xyyyyzz[k];

                g_z_0_x_0_xzz_yyyzzz[k] = -g_z_0_x_0_zz_yyyzzz[k] * ab_x + g_z_0_x_0_zz_xyyyzzz[k];

                g_z_0_x_0_xzz_yyzzzz[k] = -g_z_0_x_0_zz_yyzzzz[k] * ab_x + g_z_0_x_0_zz_xyyzzzz[k];

                g_z_0_x_0_xzz_yzzzzz[k] = -g_z_0_x_0_zz_yzzzzz[k] * ab_x + g_z_0_x_0_zz_xyzzzzz[k];

                g_z_0_x_0_xzz_zzzzzz[k] = -g_z_0_x_0_zz_zzzzzz[k] * ab_x + g_z_0_x_0_zz_xzzzzzz[k];
            }

            /// Set up 1848-1876 components of targeted buffer : cbuffer.data(

            auto g_z_0_x_0_yyy_xxxxxx = cbuffer.data(fi_geom_1010_off + 1848 * ccomps * dcomps);

            auto g_z_0_x_0_yyy_xxxxxy = cbuffer.data(fi_geom_1010_off + 1849 * ccomps * dcomps);

            auto g_z_0_x_0_yyy_xxxxxz = cbuffer.data(fi_geom_1010_off + 1850 * ccomps * dcomps);

            auto g_z_0_x_0_yyy_xxxxyy = cbuffer.data(fi_geom_1010_off + 1851 * ccomps * dcomps);

            auto g_z_0_x_0_yyy_xxxxyz = cbuffer.data(fi_geom_1010_off + 1852 * ccomps * dcomps);

            auto g_z_0_x_0_yyy_xxxxzz = cbuffer.data(fi_geom_1010_off + 1853 * ccomps * dcomps);

            auto g_z_0_x_0_yyy_xxxyyy = cbuffer.data(fi_geom_1010_off + 1854 * ccomps * dcomps);

            auto g_z_0_x_0_yyy_xxxyyz = cbuffer.data(fi_geom_1010_off + 1855 * ccomps * dcomps);

            auto g_z_0_x_0_yyy_xxxyzz = cbuffer.data(fi_geom_1010_off + 1856 * ccomps * dcomps);

            auto g_z_0_x_0_yyy_xxxzzz = cbuffer.data(fi_geom_1010_off + 1857 * ccomps * dcomps);

            auto g_z_0_x_0_yyy_xxyyyy = cbuffer.data(fi_geom_1010_off + 1858 * ccomps * dcomps);

            auto g_z_0_x_0_yyy_xxyyyz = cbuffer.data(fi_geom_1010_off + 1859 * ccomps * dcomps);

            auto g_z_0_x_0_yyy_xxyyzz = cbuffer.data(fi_geom_1010_off + 1860 * ccomps * dcomps);

            auto g_z_0_x_0_yyy_xxyzzz = cbuffer.data(fi_geom_1010_off + 1861 * ccomps * dcomps);

            auto g_z_0_x_0_yyy_xxzzzz = cbuffer.data(fi_geom_1010_off + 1862 * ccomps * dcomps);

            auto g_z_0_x_0_yyy_xyyyyy = cbuffer.data(fi_geom_1010_off + 1863 * ccomps * dcomps);

            auto g_z_0_x_0_yyy_xyyyyz = cbuffer.data(fi_geom_1010_off + 1864 * ccomps * dcomps);

            auto g_z_0_x_0_yyy_xyyyzz = cbuffer.data(fi_geom_1010_off + 1865 * ccomps * dcomps);

            auto g_z_0_x_0_yyy_xyyzzz = cbuffer.data(fi_geom_1010_off + 1866 * ccomps * dcomps);

            auto g_z_0_x_0_yyy_xyzzzz = cbuffer.data(fi_geom_1010_off + 1867 * ccomps * dcomps);

            auto g_z_0_x_0_yyy_xzzzzz = cbuffer.data(fi_geom_1010_off + 1868 * ccomps * dcomps);

            auto g_z_0_x_0_yyy_yyyyyy = cbuffer.data(fi_geom_1010_off + 1869 * ccomps * dcomps);

            auto g_z_0_x_0_yyy_yyyyyz = cbuffer.data(fi_geom_1010_off + 1870 * ccomps * dcomps);

            auto g_z_0_x_0_yyy_yyyyzz = cbuffer.data(fi_geom_1010_off + 1871 * ccomps * dcomps);

            auto g_z_0_x_0_yyy_yyyzzz = cbuffer.data(fi_geom_1010_off + 1872 * ccomps * dcomps);

            auto g_z_0_x_0_yyy_yyzzzz = cbuffer.data(fi_geom_1010_off + 1873 * ccomps * dcomps);

            auto g_z_0_x_0_yyy_yzzzzz = cbuffer.data(fi_geom_1010_off + 1874 * ccomps * dcomps);

            auto g_z_0_x_0_yyy_zzzzzz = cbuffer.data(fi_geom_1010_off + 1875 * ccomps * dcomps);

            #pragma omp simd aligned(g_z_0_x_0_yy_xxxxxx, g_z_0_x_0_yy_xxxxxxy, g_z_0_x_0_yy_xxxxxy, g_z_0_x_0_yy_xxxxxyy, g_z_0_x_0_yy_xxxxxyz, g_z_0_x_0_yy_xxxxxz, g_z_0_x_0_yy_xxxxyy, g_z_0_x_0_yy_xxxxyyy, g_z_0_x_0_yy_xxxxyyz, g_z_0_x_0_yy_xxxxyz, g_z_0_x_0_yy_xxxxyzz, g_z_0_x_0_yy_xxxxzz, g_z_0_x_0_yy_xxxyyy, g_z_0_x_0_yy_xxxyyyy, g_z_0_x_0_yy_xxxyyyz, g_z_0_x_0_yy_xxxyyz, g_z_0_x_0_yy_xxxyyzz, g_z_0_x_0_yy_xxxyzz, g_z_0_x_0_yy_xxxyzzz, g_z_0_x_0_yy_xxxzzz, g_z_0_x_0_yy_xxyyyy, g_z_0_x_0_yy_xxyyyyy, g_z_0_x_0_yy_xxyyyyz, g_z_0_x_0_yy_xxyyyz, g_z_0_x_0_yy_xxyyyzz, g_z_0_x_0_yy_xxyyzz, g_z_0_x_0_yy_xxyyzzz, g_z_0_x_0_yy_xxyzzz, g_z_0_x_0_yy_xxyzzzz, g_z_0_x_0_yy_xxzzzz, g_z_0_x_0_yy_xyyyyy, g_z_0_x_0_yy_xyyyyyy, g_z_0_x_0_yy_xyyyyyz, g_z_0_x_0_yy_xyyyyz, g_z_0_x_0_yy_xyyyyzz, g_z_0_x_0_yy_xyyyzz, g_z_0_x_0_yy_xyyyzzz, g_z_0_x_0_yy_xyyzzz, g_z_0_x_0_yy_xyyzzzz, g_z_0_x_0_yy_xyzzzz, g_z_0_x_0_yy_xyzzzzz, g_z_0_x_0_yy_xzzzzz, g_z_0_x_0_yy_yyyyyy, g_z_0_x_0_yy_yyyyyyy, g_z_0_x_0_yy_yyyyyyz, g_z_0_x_0_yy_yyyyyz, g_z_0_x_0_yy_yyyyyzz, g_z_0_x_0_yy_yyyyzz, g_z_0_x_0_yy_yyyyzzz, g_z_0_x_0_yy_yyyzzz, g_z_0_x_0_yy_yyyzzzz, g_z_0_x_0_yy_yyzzzz, g_z_0_x_0_yy_yyzzzzz, g_z_0_x_0_yy_yzzzzz, g_z_0_x_0_yy_yzzzzzz, g_z_0_x_0_yy_zzzzzz, g_z_0_x_0_yyy_xxxxxx, g_z_0_x_0_yyy_xxxxxy, g_z_0_x_0_yyy_xxxxxz, g_z_0_x_0_yyy_xxxxyy, g_z_0_x_0_yyy_xxxxyz, g_z_0_x_0_yyy_xxxxzz, g_z_0_x_0_yyy_xxxyyy, g_z_0_x_0_yyy_xxxyyz, g_z_0_x_0_yyy_xxxyzz, g_z_0_x_0_yyy_xxxzzz, g_z_0_x_0_yyy_xxyyyy, g_z_0_x_0_yyy_xxyyyz, g_z_0_x_0_yyy_xxyyzz, g_z_0_x_0_yyy_xxyzzz, g_z_0_x_0_yyy_xxzzzz, g_z_0_x_0_yyy_xyyyyy, g_z_0_x_0_yyy_xyyyyz, g_z_0_x_0_yyy_xyyyzz, g_z_0_x_0_yyy_xyyzzz, g_z_0_x_0_yyy_xyzzzz, g_z_0_x_0_yyy_xzzzzz, g_z_0_x_0_yyy_yyyyyy, g_z_0_x_0_yyy_yyyyyz, g_z_0_x_0_yyy_yyyyzz, g_z_0_x_0_yyy_yyyzzz, g_z_0_x_0_yyy_yyzzzz, g_z_0_x_0_yyy_yzzzzz, g_z_0_x_0_yyy_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_z_0_x_0_yyy_xxxxxx[k] = -g_z_0_x_0_yy_xxxxxx[k] * ab_y + g_z_0_x_0_yy_xxxxxxy[k];

                g_z_0_x_0_yyy_xxxxxy[k] = -g_z_0_x_0_yy_xxxxxy[k] * ab_y + g_z_0_x_0_yy_xxxxxyy[k];

                g_z_0_x_0_yyy_xxxxxz[k] = -g_z_0_x_0_yy_xxxxxz[k] * ab_y + g_z_0_x_0_yy_xxxxxyz[k];

                g_z_0_x_0_yyy_xxxxyy[k] = -g_z_0_x_0_yy_xxxxyy[k] * ab_y + g_z_0_x_0_yy_xxxxyyy[k];

                g_z_0_x_0_yyy_xxxxyz[k] = -g_z_0_x_0_yy_xxxxyz[k] * ab_y + g_z_0_x_0_yy_xxxxyyz[k];

                g_z_0_x_0_yyy_xxxxzz[k] = -g_z_0_x_0_yy_xxxxzz[k] * ab_y + g_z_0_x_0_yy_xxxxyzz[k];

                g_z_0_x_0_yyy_xxxyyy[k] = -g_z_0_x_0_yy_xxxyyy[k] * ab_y + g_z_0_x_0_yy_xxxyyyy[k];

                g_z_0_x_0_yyy_xxxyyz[k] = -g_z_0_x_0_yy_xxxyyz[k] * ab_y + g_z_0_x_0_yy_xxxyyyz[k];

                g_z_0_x_0_yyy_xxxyzz[k] = -g_z_0_x_0_yy_xxxyzz[k] * ab_y + g_z_0_x_0_yy_xxxyyzz[k];

                g_z_0_x_0_yyy_xxxzzz[k] = -g_z_0_x_0_yy_xxxzzz[k] * ab_y + g_z_0_x_0_yy_xxxyzzz[k];

                g_z_0_x_0_yyy_xxyyyy[k] = -g_z_0_x_0_yy_xxyyyy[k] * ab_y + g_z_0_x_0_yy_xxyyyyy[k];

                g_z_0_x_0_yyy_xxyyyz[k] = -g_z_0_x_0_yy_xxyyyz[k] * ab_y + g_z_0_x_0_yy_xxyyyyz[k];

                g_z_0_x_0_yyy_xxyyzz[k] = -g_z_0_x_0_yy_xxyyzz[k] * ab_y + g_z_0_x_0_yy_xxyyyzz[k];

                g_z_0_x_0_yyy_xxyzzz[k] = -g_z_0_x_0_yy_xxyzzz[k] * ab_y + g_z_0_x_0_yy_xxyyzzz[k];

                g_z_0_x_0_yyy_xxzzzz[k] = -g_z_0_x_0_yy_xxzzzz[k] * ab_y + g_z_0_x_0_yy_xxyzzzz[k];

                g_z_0_x_0_yyy_xyyyyy[k] = -g_z_0_x_0_yy_xyyyyy[k] * ab_y + g_z_0_x_0_yy_xyyyyyy[k];

                g_z_0_x_0_yyy_xyyyyz[k] = -g_z_0_x_0_yy_xyyyyz[k] * ab_y + g_z_0_x_0_yy_xyyyyyz[k];

                g_z_0_x_0_yyy_xyyyzz[k] = -g_z_0_x_0_yy_xyyyzz[k] * ab_y + g_z_0_x_0_yy_xyyyyzz[k];

                g_z_0_x_0_yyy_xyyzzz[k] = -g_z_0_x_0_yy_xyyzzz[k] * ab_y + g_z_0_x_0_yy_xyyyzzz[k];

                g_z_0_x_0_yyy_xyzzzz[k] = -g_z_0_x_0_yy_xyzzzz[k] * ab_y + g_z_0_x_0_yy_xyyzzzz[k];

                g_z_0_x_0_yyy_xzzzzz[k] = -g_z_0_x_0_yy_xzzzzz[k] * ab_y + g_z_0_x_0_yy_xyzzzzz[k];

                g_z_0_x_0_yyy_yyyyyy[k] = -g_z_0_x_0_yy_yyyyyy[k] * ab_y + g_z_0_x_0_yy_yyyyyyy[k];

                g_z_0_x_0_yyy_yyyyyz[k] = -g_z_0_x_0_yy_yyyyyz[k] * ab_y + g_z_0_x_0_yy_yyyyyyz[k];

                g_z_0_x_0_yyy_yyyyzz[k] = -g_z_0_x_0_yy_yyyyzz[k] * ab_y + g_z_0_x_0_yy_yyyyyzz[k];

                g_z_0_x_0_yyy_yyyzzz[k] = -g_z_0_x_0_yy_yyyzzz[k] * ab_y + g_z_0_x_0_yy_yyyyzzz[k];

                g_z_0_x_0_yyy_yyzzzz[k] = -g_z_0_x_0_yy_yyzzzz[k] * ab_y + g_z_0_x_0_yy_yyyzzzz[k];

                g_z_0_x_0_yyy_yzzzzz[k] = -g_z_0_x_0_yy_yzzzzz[k] * ab_y + g_z_0_x_0_yy_yyzzzzz[k];

                g_z_0_x_0_yyy_zzzzzz[k] = -g_z_0_x_0_yy_zzzzzz[k] * ab_y + g_z_0_x_0_yy_yzzzzzz[k];
            }

            /// Set up 1876-1904 components of targeted buffer : cbuffer.data(

            auto g_z_0_x_0_yyz_xxxxxx = cbuffer.data(fi_geom_1010_off + 1876 * ccomps * dcomps);

            auto g_z_0_x_0_yyz_xxxxxy = cbuffer.data(fi_geom_1010_off + 1877 * ccomps * dcomps);

            auto g_z_0_x_0_yyz_xxxxxz = cbuffer.data(fi_geom_1010_off + 1878 * ccomps * dcomps);

            auto g_z_0_x_0_yyz_xxxxyy = cbuffer.data(fi_geom_1010_off + 1879 * ccomps * dcomps);

            auto g_z_0_x_0_yyz_xxxxyz = cbuffer.data(fi_geom_1010_off + 1880 * ccomps * dcomps);

            auto g_z_0_x_0_yyz_xxxxzz = cbuffer.data(fi_geom_1010_off + 1881 * ccomps * dcomps);

            auto g_z_0_x_0_yyz_xxxyyy = cbuffer.data(fi_geom_1010_off + 1882 * ccomps * dcomps);

            auto g_z_0_x_0_yyz_xxxyyz = cbuffer.data(fi_geom_1010_off + 1883 * ccomps * dcomps);

            auto g_z_0_x_0_yyz_xxxyzz = cbuffer.data(fi_geom_1010_off + 1884 * ccomps * dcomps);

            auto g_z_0_x_0_yyz_xxxzzz = cbuffer.data(fi_geom_1010_off + 1885 * ccomps * dcomps);

            auto g_z_0_x_0_yyz_xxyyyy = cbuffer.data(fi_geom_1010_off + 1886 * ccomps * dcomps);

            auto g_z_0_x_0_yyz_xxyyyz = cbuffer.data(fi_geom_1010_off + 1887 * ccomps * dcomps);

            auto g_z_0_x_0_yyz_xxyyzz = cbuffer.data(fi_geom_1010_off + 1888 * ccomps * dcomps);

            auto g_z_0_x_0_yyz_xxyzzz = cbuffer.data(fi_geom_1010_off + 1889 * ccomps * dcomps);

            auto g_z_0_x_0_yyz_xxzzzz = cbuffer.data(fi_geom_1010_off + 1890 * ccomps * dcomps);

            auto g_z_0_x_0_yyz_xyyyyy = cbuffer.data(fi_geom_1010_off + 1891 * ccomps * dcomps);

            auto g_z_0_x_0_yyz_xyyyyz = cbuffer.data(fi_geom_1010_off + 1892 * ccomps * dcomps);

            auto g_z_0_x_0_yyz_xyyyzz = cbuffer.data(fi_geom_1010_off + 1893 * ccomps * dcomps);

            auto g_z_0_x_0_yyz_xyyzzz = cbuffer.data(fi_geom_1010_off + 1894 * ccomps * dcomps);

            auto g_z_0_x_0_yyz_xyzzzz = cbuffer.data(fi_geom_1010_off + 1895 * ccomps * dcomps);

            auto g_z_0_x_0_yyz_xzzzzz = cbuffer.data(fi_geom_1010_off + 1896 * ccomps * dcomps);

            auto g_z_0_x_0_yyz_yyyyyy = cbuffer.data(fi_geom_1010_off + 1897 * ccomps * dcomps);

            auto g_z_0_x_0_yyz_yyyyyz = cbuffer.data(fi_geom_1010_off + 1898 * ccomps * dcomps);

            auto g_z_0_x_0_yyz_yyyyzz = cbuffer.data(fi_geom_1010_off + 1899 * ccomps * dcomps);

            auto g_z_0_x_0_yyz_yyyzzz = cbuffer.data(fi_geom_1010_off + 1900 * ccomps * dcomps);

            auto g_z_0_x_0_yyz_yyzzzz = cbuffer.data(fi_geom_1010_off + 1901 * ccomps * dcomps);

            auto g_z_0_x_0_yyz_yzzzzz = cbuffer.data(fi_geom_1010_off + 1902 * ccomps * dcomps);

            auto g_z_0_x_0_yyz_zzzzzz = cbuffer.data(fi_geom_1010_off + 1903 * ccomps * dcomps);

            #pragma omp simd aligned(g_z_0_x_0_yyz_xxxxxx, g_z_0_x_0_yyz_xxxxxy, g_z_0_x_0_yyz_xxxxxz, g_z_0_x_0_yyz_xxxxyy, g_z_0_x_0_yyz_xxxxyz, g_z_0_x_0_yyz_xxxxzz, g_z_0_x_0_yyz_xxxyyy, g_z_0_x_0_yyz_xxxyyz, g_z_0_x_0_yyz_xxxyzz, g_z_0_x_0_yyz_xxxzzz, g_z_0_x_0_yyz_xxyyyy, g_z_0_x_0_yyz_xxyyyz, g_z_0_x_0_yyz_xxyyzz, g_z_0_x_0_yyz_xxyzzz, g_z_0_x_0_yyz_xxzzzz, g_z_0_x_0_yyz_xyyyyy, g_z_0_x_0_yyz_xyyyyz, g_z_0_x_0_yyz_xyyyzz, g_z_0_x_0_yyz_xyyzzz, g_z_0_x_0_yyz_xyzzzz, g_z_0_x_0_yyz_xzzzzz, g_z_0_x_0_yyz_yyyyyy, g_z_0_x_0_yyz_yyyyyz, g_z_0_x_0_yyz_yyyyzz, g_z_0_x_0_yyz_yyyzzz, g_z_0_x_0_yyz_yyzzzz, g_z_0_x_0_yyz_yzzzzz, g_z_0_x_0_yyz_zzzzzz, g_z_0_x_0_yz_xxxxxx, g_z_0_x_0_yz_xxxxxxy, g_z_0_x_0_yz_xxxxxy, g_z_0_x_0_yz_xxxxxyy, g_z_0_x_0_yz_xxxxxyz, g_z_0_x_0_yz_xxxxxz, g_z_0_x_0_yz_xxxxyy, g_z_0_x_0_yz_xxxxyyy, g_z_0_x_0_yz_xxxxyyz, g_z_0_x_0_yz_xxxxyz, g_z_0_x_0_yz_xxxxyzz, g_z_0_x_0_yz_xxxxzz, g_z_0_x_0_yz_xxxyyy, g_z_0_x_0_yz_xxxyyyy, g_z_0_x_0_yz_xxxyyyz, g_z_0_x_0_yz_xxxyyz, g_z_0_x_0_yz_xxxyyzz, g_z_0_x_0_yz_xxxyzz, g_z_0_x_0_yz_xxxyzzz, g_z_0_x_0_yz_xxxzzz, g_z_0_x_0_yz_xxyyyy, g_z_0_x_0_yz_xxyyyyy, g_z_0_x_0_yz_xxyyyyz, g_z_0_x_0_yz_xxyyyz, g_z_0_x_0_yz_xxyyyzz, g_z_0_x_0_yz_xxyyzz, g_z_0_x_0_yz_xxyyzzz, g_z_0_x_0_yz_xxyzzz, g_z_0_x_0_yz_xxyzzzz, g_z_0_x_0_yz_xxzzzz, g_z_0_x_0_yz_xyyyyy, g_z_0_x_0_yz_xyyyyyy, g_z_0_x_0_yz_xyyyyyz, g_z_0_x_0_yz_xyyyyz, g_z_0_x_0_yz_xyyyyzz, g_z_0_x_0_yz_xyyyzz, g_z_0_x_0_yz_xyyyzzz, g_z_0_x_0_yz_xyyzzz, g_z_0_x_0_yz_xyyzzzz, g_z_0_x_0_yz_xyzzzz, g_z_0_x_0_yz_xyzzzzz, g_z_0_x_0_yz_xzzzzz, g_z_0_x_0_yz_yyyyyy, g_z_0_x_0_yz_yyyyyyy, g_z_0_x_0_yz_yyyyyyz, g_z_0_x_0_yz_yyyyyz, g_z_0_x_0_yz_yyyyyzz, g_z_0_x_0_yz_yyyyzz, g_z_0_x_0_yz_yyyyzzz, g_z_0_x_0_yz_yyyzzz, g_z_0_x_0_yz_yyyzzzz, g_z_0_x_0_yz_yyzzzz, g_z_0_x_0_yz_yyzzzzz, g_z_0_x_0_yz_yzzzzz, g_z_0_x_0_yz_yzzzzzz, g_z_0_x_0_yz_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_z_0_x_0_yyz_xxxxxx[k] = -g_z_0_x_0_yz_xxxxxx[k] * ab_y + g_z_0_x_0_yz_xxxxxxy[k];

                g_z_0_x_0_yyz_xxxxxy[k] = -g_z_0_x_0_yz_xxxxxy[k] * ab_y + g_z_0_x_0_yz_xxxxxyy[k];

                g_z_0_x_0_yyz_xxxxxz[k] = -g_z_0_x_0_yz_xxxxxz[k] * ab_y + g_z_0_x_0_yz_xxxxxyz[k];

                g_z_0_x_0_yyz_xxxxyy[k] = -g_z_0_x_0_yz_xxxxyy[k] * ab_y + g_z_0_x_0_yz_xxxxyyy[k];

                g_z_0_x_0_yyz_xxxxyz[k] = -g_z_0_x_0_yz_xxxxyz[k] * ab_y + g_z_0_x_0_yz_xxxxyyz[k];

                g_z_0_x_0_yyz_xxxxzz[k] = -g_z_0_x_0_yz_xxxxzz[k] * ab_y + g_z_0_x_0_yz_xxxxyzz[k];

                g_z_0_x_0_yyz_xxxyyy[k] = -g_z_0_x_0_yz_xxxyyy[k] * ab_y + g_z_0_x_0_yz_xxxyyyy[k];

                g_z_0_x_0_yyz_xxxyyz[k] = -g_z_0_x_0_yz_xxxyyz[k] * ab_y + g_z_0_x_0_yz_xxxyyyz[k];

                g_z_0_x_0_yyz_xxxyzz[k] = -g_z_0_x_0_yz_xxxyzz[k] * ab_y + g_z_0_x_0_yz_xxxyyzz[k];

                g_z_0_x_0_yyz_xxxzzz[k] = -g_z_0_x_0_yz_xxxzzz[k] * ab_y + g_z_0_x_0_yz_xxxyzzz[k];

                g_z_0_x_0_yyz_xxyyyy[k] = -g_z_0_x_0_yz_xxyyyy[k] * ab_y + g_z_0_x_0_yz_xxyyyyy[k];

                g_z_0_x_0_yyz_xxyyyz[k] = -g_z_0_x_0_yz_xxyyyz[k] * ab_y + g_z_0_x_0_yz_xxyyyyz[k];

                g_z_0_x_0_yyz_xxyyzz[k] = -g_z_0_x_0_yz_xxyyzz[k] * ab_y + g_z_0_x_0_yz_xxyyyzz[k];

                g_z_0_x_0_yyz_xxyzzz[k] = -g_z_0_x_0_yz_xxyzzz[k] * ab_y + g_z_0_x_0_yz_xxyyzzz[k];

                g_z_0_x_0_yyz_xxzzzz[k] = -g_z_0_x_0_yz_xxzzzz[k] * ab_y + g_z_0_x_0_yz_xxyzzzz[k];

                g_z_0_x_0_yyz_xyyyyy[k] = -g_z_0_x_0_yz_xyyyyy[k] * ab_y + g_z_0_x_0_yz_xyyyyyy[k];

                g_z_0_x_0_yyz_xyyyyz[k] = -g_z_0_x_0_yz_xyyyyz[k] * ab_y + g_z_0_x_0_yz_xyyyyyz[k];

                g_z_0_x_0_yyz_xyyyzz[k] = -g_z_0_x_0_yz_xyyyzz[k] * ab_y + g_z_0_x_0_yz_xyyyyzz[k];

                g_z_0_x_0_yyz_xyyzzz[k] = -g_z_0_x_0_yz_xyyzzz[k] * ab_y + g_z_0_x_0_yz_xyyyzzz[k];

                g_z_0_x_0_yyz_xyzzzz[k] = -g_z_0_x_0_yz_xyzzzz[k] * ab_y + g_z_0_x_0_yz_xyyzzzz[k];

                g_z_0_x_0_yyz_xzzzzz[k] = -g_z_0_x_0_yz_xzzzzz[k] * ab_y + g_z_0_x_0_yz_xyzzzzz[k];

                g_z_0_x_0_yyz_yyyyyy[k] = -g_z_0_x_0_yz_yyyyyy[k] * ab_y + g_z_0_x_0_yz_yyyyyyy[k];

                g_z_0_x_0_yyz_yyyyyz[k] = -g_z_0_x_0_yz_yyyyyz[k] * ab_y + g_z_0_x_0_yz_yyyyyyz[k];

                g_z_0_x_0_yyz_yyyyzz[k] = -g_z_0_x_0_yz_yyyyzz[k] * ab_y + g_z_0_x_0_yz_yyyyyzz[k];

                g_z_0_x_0_yyz_yyyzzz[k] = -g_z_0_x_0_yz_yyyzzz[k] * ab_y + g_z_0_x_0_yz_yyyyzzz[k];

                g_z_0_x_0_yyz_yyzzzz[k] = -g_z_0_x_0_yz_yyzzzz[k] * ab_y + g_z_0_x_0_yz_yyyzzzz[k];

                g_z_0_x_0_yyz_yzzzzz[k] = -g_z_0_x_0_yz_yzzzzz[k] * ab_y + g_z_0_x_0_yz_yyzzzzz[k];

                g_z_0_x_0_yyz_zzzzzz[k] = -g_z_0_x_0_yz_zzzzzz[k] * ab_y + g_z_0_x_0_yz_yzzzzzz[k];
            }

            /// Set up 1904-1932 components of targeted buffer : cbuffer.data(

            auto g_z_0_x_0_yzz_xxxxxx = cbuffer.data(fi_geom_1010_off + 1904 * ccomps * dcomps);

            auto g_z_0_x_0_yzz_xxxxxy = cbuffer.data(fi_geom_1010_off + 1905 * ccomps * dcomps);

            auto g_z_0_x_0_yzz_xxxxxz = cbuffer.data(fi_geom_1010_off + 1906 * ccomps * dcomps);

            auto g_z_0_x_0_yzz_xxxxyy = cbuffer.data(fi_geom_1010_off + 1907 * ccomps * dcomps);

            auto g_z_0_x_0_yzz_xxxxyz = cbuffer.data(fi_geom_1010_off + 1908 * ccomps * dcomps);

            auto g_z_0_x_0_yzz_xxxxzz = cbuffer.data(fi_geom_1010_off + 1909 * ccomps * dcomps);

            auto g_z_0_x_0_yzz_xxxyyy = cbuffer.data(fi_geom_1010_off + 1910 * ccomps * dcomps);

            auto g_z_0_x_0_yzz_xxxyyz = cbuffer.data(fi_geom_1010_off + 1911 * ccomps * dcomps);

            auto g_z_0_x_0_yzz_xxxyzz = cbuffer.data(fi_geom_1010_off + 1912 * ccomps * dcomps);

            auto g_z_0_x_0_yzz_xxxzzz = cbuffer.data(fi_geom_1010_off + 1913 * ccomps * dcomps);

            auto g_z_0_x_0_yzz_xxyyyy = cbuffer.data(fi_geom_1010_off + 1914 * ccomps * dcomps);

            auto g_z_0_x_0_yzz_xxyyyz = cbuffer.data(fi_geom_1010_off + 1915 * ccomps * dcomps);

            auto g_z_0_x_0_yzz_xxyyzz = cbuffer.data(fi_geom_1010_off + 1916 * ccomps * dcomps);

            auto g_z_0_x_0_yzz_xxyzzz = cbuffer.data(fi_geom_1010_off + 1917 * ccomps * dcomps);

            auto g_z_0_x_0_yzz_xxzzzz = cbuffer.data(fi_geom_1010_off + 1918 * ccomps * dcomps);

            auto g_z_0_x_0_yzz_xyyyyy = cbuffer.data(fi_geom_1010_off + 1919 * ccomps * dcomps);

            auto g_z_0_x_0_yzz_xyyyyz = cbuffer.data(fi_geom_1010_off + 1920 * ccomps * dcomps);

            auto g_z_0_x_0_yzz_xyyyzz = cbuffer.data(fi_geom_1010_off + 1921 * ccomps * dcomps);

            auto g_z_0_x_0_yzz_xyyzzz = cbuffer.data(fi_geom_1010_off + 1922 * ccomps * dcomps);

            auto g_z_0_x_0_yzz_xyzzzz = cbuffer.data(fi_geom_1010_off + 1923 * ccomps * dcomps);

            auto g_z_0_x_0_yzz_xzzzzz = cbuffer.data(fi_geom_1010_off + 1924 * ccomps * dcomps);

            auto g_z_0_x_0_yzz_yyyyyy = cbuffer.data(fi_geom_1010_off + 1925 * ccomps * dcomps);

            auto g_z_0_x_0_yzz_yyyyyz = cbuffer.data(fi_geom_1010_off + 1926 * ccomps * dcomps);

            auto g_z_0_x_0_yzz_yyyyzz = cbuffer.data(fi_geom_1010_off + 1927 * ccomps * dcomps);

            auto g_z_0_x_0_yzz_yyyzzz = cbuffer.data(fi_geom_1010_off + 1928 * ccomps * dcomps);

            auto g_z_0_x_0_yzz_yyzzzz = cbuffer.data(fi_geom_1010_off + 1929 * ccomps * dcomps);

            auto g_z_0_x_0_yzz_yzzzzz = cbuffer.data(fi_geom_1010_off + 1930 * ccomps * dcomps);

            auto g_z_0_x_0_yzz_zzzzzz = cbuffer.data(fi_geom_1010_off + 1931 * ccomps * dcomps);

            #pragma omp simd aligned(g_z_0_x_0_yzz_xxxxxx, g_z_0_x_0_yzz_xxxxxy, g_z_0_x_0_yzz_xxxxxz, g_z_0_x_0_yzz_xxxxyy, g_z_0_x_0_yzz_xxxxyz, g_z_0_x_0_yzz_xxxxzz, g_z_0_x_0_yzz_xxxyyy, g_z_0_x_0_yzz_xxxyyz, g_z_0_x_0_yzz_xxxyzz, g_z_0_x_0_yzz_xxxzzz, g_z_0_x_0_yzz_xxyyyy, g_z_0_x_0_yzz_xxyyyz, g_z_0_x_0_yzz_xxyyzz, g_z_0_x_0_yzz_xxyzzz, g_z_0_x_0_yzz_xxzzzz, g_z_0_x_0_yzz_xyyyyy, g_z_0_x_0_yzz_xyyyyz, g_z_0_x_0_yzz_xyyyzz, g_z_0_x_0_yzz_xyyzzz, g_z_0_x_0_yzz_xyzzzz, g_z_0_x_0_yzz_xzzzzz, g_z_0_x_0_yzz_yyyyyy, g_z_0_x_0_yzz_yyyyyz, g_z_0_x_0_yzz_yyyyzz, g_z_0_x_0_yzz_yyyzzz, g_z_0_x_0_yzz_yyzzzz, g_z_0_x_0_yzz_yzzzzz, g_z_0_x_0_yzz_zzzzzz, g_z_0_x_0_zz_xxxxxx, g_z_0_x_0_zz_xxxxxxy, g_z_0_x_0_zz_xxxxxy, g_z_0_x_0_zz_xxxxxyy, g_z_0_x_0_zz_xxxxxyz, g_z_0_x_0_zz_xxxxxz, g_z_0_x_0_zz_xxxxyy, g_z_0_x_0_zz_xxxxyyy, g_z_0_x_0_zz_xxxxyyz, g_z_0_x_0_zz_xxxxyz, g_z_0_x_0_zz_xxxxyzz, g_z_0_x_0_zz_xxxxzz, g_z_0_x_0_zz_xxxyyy, g_z_0_x_0_zz_xxxyyyy, g_z_0_x_0_zz_xxxyyyz, g_z_0_x_0_zz_xxxyyz, g_z_0_x_0_zz_xxxyyzz, g_z_0_x_0_zz_xxxyzz, g_z_0_x_0_zz_xxxyzzz, g_z_0_x_0_zz_xxxzzz, g_z_0_x_0_zz_xxyyyy, g_z_0_x_0_zz_xxyyyyy, g_z_0_x_0_zz_xxyyyyz, g_z_0_x_0_zz_xxyyyz, g_z_0_x_0_zz_xxyyyzz, g_z_0_x_0_zz_xxyyzz, g_z_0_x_0_zz_xxyyzzz, g_z_0_x_0_zz_xxyzzz, g_z_0_x_0_zz_xxyzzzz, g_z_0_x_0_zz_xxzzzz, g_z_0_x_0_zz_xyyyyy, g_z_0_x_0_zz_xyyyyyy, g_z_0_x_0_zz_xyyyyyz, g_z_0_x_0_zz_xyyyyz, g_z_0_x_0_zz_xyyyyzz, g_z_0_x_0_zz_xyyyzz, g_z_0_x_0_zz_xyyyzzz, g_z_0_x_0_zz_xyyzzz, g_z_0_x_0_zz_xyyzzzz, g_z_0_x_0_zz_xyzzzz, g_z_0_x_0_zz_xyzzzzz, g_z_0_x_0_zz_xzzzzz, g_z_0_x_0_zz_yyyyyy, g_z_0_x_0_zz_yyyyyyy, g_z_0_x_0_zz_yyyyyyz, g_z_0_x_0_zz_yyyyyz, g_z_0_x_0_zz_yyyyyzz, g_z_0_x_0_zz_yyyyzz, g_z_0_x_0_zz_yyyyzzz, g_z_0_x_0_zz_yyyzzz, g_z_0_x_0_zz_yyyzzzz, g_z_0_x_0_zz_yyzzzz, g_z_0_x_0_zz_yyzzzzz, g_z_0_x_0_zz_yzzzzz, g_z_0_x_0_zz_yzzzzzz, g_z_0_x_0_zz_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_z_0_x_0_yzz_xxxxxx[k] = -g_z_0_x_0_zz_xxxxxx[k] * ab_y + g_z_0_x_0_zz_xxxxxxy[k];

                g_z_0_x_0_yzz_xxxxxy[k] = -g_z_0_x_0_zz_xxxxxy[k] * ab_y + g_z_0_x_0_zz_xxxxxyy[k];

                g_z_0_x_0_yzz_xxxxxz[k] = -g_z_0_x_0_zz_xxxxxz[k] * ab_y + g_z_0_x_0_zz_xxxxxyz[k];

                g_z_0_x_0_yzz_xxxxyy[k] = -g_z_0_x_0_zz_xxxxyy[k] * ab_y + g_z_0_x_0_zz_xxxxyyy[k];

                g_z_0_x_0_yzz_xxxxyz[k] = -g_z_0_x_0_zz_xxxxyz[k] * ab_y + g_z_0_x_0_zz_xxxxyyz[k];

                g_z_0_x_0_yzz_xxxxzz[k] = -g_z_0_x_0_zz_xxxxzz[k] * ab_y + g_z_0_x_0_zz_xxxxyzz[k];

                g_z_0_x_0_yzz_xxxyyy[k] = -g_z_0_x_0_zz_xxxyyy[k] * ab_y + g_z_0_x_0_zz_xxxyyyy[k];

                g_z_0_x_0_yzz_xxxyyz[k] = -g_z_0_x_0_zz_xxxyyz[k] * ab_y + g_z_0_x_0_zz_xxxyyyz[k];

                g_z_0_x_0_yzz_xxxyzz[k] = -g_z_0_x_0_zz_xxxyzz[k] * ab_y + g_z_0_x_0_zz_xxxyyzz[k];

                g_z_0_x_0_yzz_xxxzzz[k] = -g_z_0_x_0_zz_xxxzzz[k] * ab_y + g_z_0_x_0_zz_xxxyzzz[k];

                g_z_0_x_0_yzz_xxyyyy[k] = -g_z_0_x_0_zz_xxyyyy[k] * ab_y + g_z_0_x_0_zz_xxyyyyy[k];

                g_z_0_x_0_yzz_xxyyyz[k] = -g_z_0_x_0_zz_xxyyyz[k] * ab_y + g_z_0_x_0_zz_xxyyyyz[k];

                g_z_0_x_0_yzz_xxyyzz[k] = -g_z_0_x_0_zz_xxyyzz[k] * ab_y + g_z_0_x_0_zz_xxyyyzz[k];

                g_z_0_x_0_yzz_xxyzzz[k] = -g_z_0_x_0_zz_xxyzzz[k] * ab_y + g_z_0_x_0_zz_xxyyzzz[k];

                g_z_0_x_0_yzz_xxzzzz[k] = -g_z_0_x_0_zz_xxzzzz[k] * ab_y + g_z_0_x_0_zz_xxyzzzz[k];

                g_z_0_x_0_yzz_xyyyyy[k] = -g_z_0_x_0_zz_xyyyyy[k] * ab_y + g_z_0_x_0_zz_xyyyyyy[k];

                g_z_0_x_0_yzz_xyyyyz[k] = -g_z_0_x_0_zz_xyyyyz[k] * ab_y + g_z_0_x_0_zz_xyyyyyz[k];

                g_z_0_x_0_yzz_xyyyzz[k] = -g_z_0_x_0_zz_xyyyzz[k] * ab_y + g_z_0_x_0_zz_xyyyyzz[k];

                g_z_0_x_0_yzz_xyyzzz[k] = -g_z_0_x_0_zz_xyyzzz[k] * ab_y + g_z_0_x_0_zz_xyyyzzz[k];

                g_z_0_x_0_yzz_xyzzzz[k] = -g_z_0_x_0_zz_xyzzzz[k] * ab_y + g_z_0_x_0_zz_xyyzzzz[k];

                g_z_0_x_0_yzz_xzzzzz[k] = -g_z_0_x_0_zz_xzzzzz[k] * ab_y + g_z_0_x_0_zz_xyzzzzz[k];

                g_z_0_x_0_yzz_yyyyyy[k] = -g_z_0_x_0_zz_yyyyyy[k] * ab_y + g_z_0_x_0_zz_yyyyyyy[k];

                g_z_0_x_0_yzz_yyyyyz[k] = -g_z_0_x_0_zz_yyyyyz[k] * ab_y + g_z_0_x_0_zz_yyyyyyz[k];

                g_z_0_x_0_yzz_yyyyzz[k] = -g_z_0_x_0_zz_yyyyzz[k] * ab_y + g_z_0_x_0_zz_yyyyyzz[k];

                g_z_0_x_0_yzz_yyyzzz[k] = -g_z_0_x_0_zz_yyyzzz[k] * ab_y + g_z_0_x_0_zz_yyyyzzz[k];

                g_z_0_x_0_yzz_yyzzzz[k] = -g_z_0_x_0_zz_yyzzzz[k] * ab_y + g_z_0_x_0_zz_yyyzzzz[k];

                g_z_0_x_0_yzz_yzzzzz[k] = -g_z_0_x_0_zz_yzzzzz[k] * ab_y + g_z_0_x_0_zz_yyzzzzz[k];

                g_z_0_x_0_yzz_zzzzzz[k] = -g_z_0_x_0_zz_zzzzzz[k] * ab_y + g_z_0_x_0_zz_yzzzzzz[k];
            }

            /// Set up 1932-1960 components of targeted buffer : cbuffer.data(

            auto g_z_0_x_0_zzz_xxxxxx = cbuffer.data(fi_geom_1010_off + 1932 * ccomps * dcomps);

            auto g_z_0_x_0_zzz_xxxxxy = cbuffer.data(fi_geom_1010_off + 1933 * ccomps * dcomps);

            auto g_z_0_x_0_zzz_xxxxxz = cbuffer.data(fi_geom_1010_off + 1934 * ccomps * dcomps);

            auto g_z_0_x_0_zzz_xxxxyy = cbuffer.data(fi_geom_1010_off + 1935 * ccomps * dcomps);

            auto g_z_0_x_0_zzz_xxxxyz = cbuffer.data(fi_geom_1010_off + 1936 * ccomps * dcomps);

            auto g_z_0_x_0_zzz_xxxxzz = cbuffer.data(fi_geom_1010_off + 1937 * ccomps * dcomps);

            auto g_z_0_x_0_zzz_xxxyyy = cbuffer.data(fi_geom_1010_off + 1938 * ccomps * dcomps);

            auto g_z_0_x_0_zzz_xxxyyz = cbuffer.data(fi_geom_1010_off + 1939 * ccomps * dcomps);

            auto g_z_0_x_0_zzz_xxxyzz = cbuffer.data(fi_geom_1010_off + 1940 * ccomps * dcomps);

            auto g_z_0_x_0_zzz_xxxzzz = cbuffer.data(fi_geom_1010_off + 1941 * ccomps * dcomps);

            auto g_z_0_x_0_zzz_xxyyyy = cbuffer.data(fi_geom_1010_off + 1942 * ccomps * dcomps);

            auto g_z_0_x_0_zzz_xxyyyz = cbuffer.data(fi_geom_1010_off + 1943 * ccomps * dcomps);

            auto g_z_0_x_0_zzz_xxyyzz = cbuffer.data(fi_geom_1010_off + 1944 * ccomps * dcomps);

            auto g_z_0_x_0_zzz_xxyzzz = cbuffer.data(fi_geom_1010_off + 1945 * ccomps * dcomps);

            auto g_z_0_x_0_zzz_xxzzzz = cbuffer.data(fi_geom_1010_off + 1946 * ccomps * dcomps);

            auto g_z_0_x_0_zzz_xyyyyy = cbuffer.data(fi_geom_1010_off + 1947 * ccomps * dcomps);

            auto g_z_0_x_0_zzz_xyyyyz = cbuffer.data(fi_geom_1010_off + 1948 * ccomps * dcomps);

            auto g_z_0_x_0_zzz_xyyyzz = cbuffer.data(fi_geom_1010_off + 1949 * ccomps * dcomps);

            auto g_z_0_x_0_zzz_xyyzzz = cbuffer.data(fi_geom_1010_off + 1950 * ccomps * dcomps);

            auto g_z_0_x_0_zzz_xyzzzz = cbuffer.data(fi_geom_1010_off + 1951 * ccomps * dcomps);

            auto g_z_0_x_0_zzz_xzzzzz = cbuffer.data(fi_geom_1010_off + 1952 * ccomps * dcomps);

            auto g_z_0_x_0_zzz_yyyyyy = cbuffer.data(fi_geom_1010_off + 1953 * ccomps * dcomps);

            auto g_z_0_x_0_zzz_yyyyyz = cbuffer.data(fi_geom_1010_off + 1954 * ccomps * dcomps);

            auto g_z_0_x_0_zzz_yyyyzz = cbuffer.data(fi_geom_1010_off + 1955 * ccomps * dcomps);

            auto g_z_0_x_0_zzz_yyyzzz = cbuffer.data(fi_geom_1010_off + 1956 * ccomps * dcomps);

            auto g_z_0_x_0_zzz_yyzzzz = cbuffer.data(fi_geom_1010_off + 1957 * ccomps * dcomps);

            auto g_z_0_x_0_zzz_yzzzzz = cbuffer.data(fi_geom_1010_off + 1958 * ccomps * dcomps);

            auto g_z_0_x_0_zzz_zzzzzz = cbuffer.data(fi_geom_1010_off + 1959 * ccomps * dcomps);

            #pragma omp simd aligned(g_0_0_x_0_zz_xxxxxx, g_0_0_x_0_zz_xxxxxy, g_0_0_x_0_zz_xxxxxz, g_0_0_x_0_zz_xxxxyy, g_0_0_x_0_zz_xxxxyz, g_0_0_x_0_zz_xxxxzz, g_0_0_x_0_zz_xxxyyy, g_0_0_x_0_zz_xxxyyz, g_0_0_x_0_zz_xxxyzz, g_0_0_x_0_zz_xxxzzz, g_0_0_x_0_zz_xxyyyy, g_0_0_x_0_zz_xxyyyz, g_0_0_x_0_zz_xxyyzz, g_0_0_x_0_zz_xxyzzz, g_0_0_x_0_zz_xxzzzz, g_0_0_x_0_zz_xyyyyy, g_0_0_x_0_zz_xyyyyz, g_0_0_x_0_zz_xyyyzz, g_0_0_x_0_zz_xyyzzz, g_0_0_x_0_zz_xyzzzz, g_0_0_x_0_zz_xzzzzz, g_0_0_x_0_zz_yyyyyy, g_0_0_x_0_zz_yyyyyz, g_0_0_x_0_zz_yyyyzz, g_0_0_x_0_zz_yyyzzz, g_0_0_x_0_zz_yyzzzz, g_0_0_x_0_zz_yzzzzz, g_0_0_x_0_zz_zzzzzz, g_z_0_x_0_zz_xxxxxx, g_z_0_x_0_zz_xxxxxxz, g_z_0_x_0_zz_xxxxxy, g_z_0_x_0_zz_xxxxxyz, g_z_0_x_0_zz_xxxxxz, g_z_0_x_0_zz_xxxxxzz, g_z_0_x_0_zz_xxxxyy, g_z_0_x_0_zz_xxxxyyz, g_z_0_x_0_zz_xxxxyz, g_z_0_x_0_zz_xxxxyzz, g_z_0_x_0_zz_xxxxzz, g_z_0_x_0_zz_xxxxzzz, g_z_0_x_0_zz_xxxyyy, g_z_0_x_0_zz_xxxyyyz, g_z_0_x_0_zz_xxxyyz, g_z_0_x_0_zz_xxxyyzz, g_z_0_x_0_zz_xxxyzz, g_z_0_x_0_zz_xxxyzzz, g_z_0_x_0_zz_xxxzzz, g_z_0_x_0_zz_xxxzzzz, g_z_0_x_0_zz_xxyyyy, g_z_0_x_0_zz_xxyyyyz, g_z_0_x_0_zz_xxyyyz, g_z_0_x_0_zz_xxyyyzz, g_z_0_x_0_zz_xxyyzz, g_z_0_x_0_zz_xxyyzzz, g_z_0_x_0_zz_xxyzzz, g_z_0_x_0_zz_xxyzzzz, g_z_0_x_0_zz_xxzzzz, g_z_0_x_0_zz_xxzzzzz, g_z_0_x_0_zz_xyyyyy, g_z_0_x_0_zz_xyyyyyz, g_z_0_x_0_zz_xyyyyz, g_z_0_x_0_zz_xyyyyzz, g_z_0_x_0_zz_xyyyzz, g_z_0_x_0_zz_xyyyzzz, g_z_0_x_0_zz_xyyzzz, g_z_0_x_0_zz_xyyzzzz, g_z_0_x_0_zz_xyzzzz, g_z_0_x_0_zz_xyzzzzz, g_z_0_x_0_zz_xzzzzz, g_z_0_x_0_zz_xzzzzzz, g_z_0_x_0_zz_yyyyyy, g_z_0_x_0_zz_yyyyyyz, g_z_0_x_0_zz_yyyyyz, g_z_0_x_0_zz_yyyyyzz, g_z_0_x_0_zz_yyyyzz, g_z_0_x_0_zz_yyyyzzz, g_z_0_x_0_zz_yyyzzz, g_z_0_x_0_zz_yyyzzzz, g_z_0_x_0_zz_yyzzzz, g_z_0_x_0_zz_yyzzzzz, g_z_0_x_0_zz_yzzzzz, g_z_0_x_0_zz_yzzzzzz, g_z_0_x_0_zz_zzzzzz, g_z_0_x_0_zz_zzzzzzz, g_z_0_x_0_zzz_xxxxxx, g_z_0_x_0_zzz_xxxxxy, g_z_0_x_0_zzz_xxxxxz, g_z_0_x_0_zzz_xxxxyy, g_z_0_x_0_zzz_xxxxyz, g_z_0_x_0_zzz_xxxxzz, g_z_0_x_0_zzz_xxxyyy, g_z_0_x_0_zzz_xxxyyz, g_z_0_x_0_zzz_xxxyzz, g_z_0_x_0_zzz_xxxzzz, g_z_0_x_0_zzz_xxyyyy, g_z_0_x_0_zzz_xxyyyz, g_z_0_x_0_zzz_xxyyzz, g_z_0_x_0_zzz_xxyzzz, g_z_0_x_0_zzz_xxzzzz, g_z_0_x_0_zzz_xyyyyy, g_z_0_x_0_zzz_xyyyyz, g_z_0_x_0_zzz_xyyyzz, g_z_0_x_0_zzz_xyyzzz, g_z_0_x_0_zzz_xyzzzz, g_z_0_x_0_zzz_xzzzzz, g_z_0_x_0_zzz_yyyyyy, g_z_0_x_0_zzz_yyyyyz, g_z_0_x_0_zzz_yyyyzz, g_z_0_x_0_zzz_yyyzzz, g_z_0_x_0_zzz_yyzzzz, g_z_0_x_0_zzz_yzzzzz, g_z_0_x_0_zzz_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_z_0_x_0_zzz_xxxxxx[k] = -g_0_0_x_0_zz_xxxxxx[k] - g_z_0_x_0_zz_xxxxxx[k] * ab_z + g_z_0_x_0_zz_xxxxxxz[k];

                g_z_0_x_0_zzz_xxxxxy[k] = -g_0_0_x_0_zz_xxxxxy[k] - g_z_0_x_0_zz_xxxxxy[k] * ab_z + g_z_0_x_0_zz_xxxxxyz[k];

                g_z_0_x_0_zzz_xxxxxz[k] = -g_0_0_x_0_zz_xxxxxz[k] - g_z_0_x_0_zz_xxxxxz[k] * ab_z + g_z_0_x_0_zz_xxxxxzz[k];

                g_z_0_x_0_zzz_xxxxyy[k] = -g_0_0_x_0_zz_xxxxyy[k] - g_z_0_x_0_zz_xxxxyy[k] * ab_z + g_z_0_x_0_zz_xxxxyyz[k];

                g_z_0_x_0_zzz_xxxxyz[k] = -g_0_0_x_0_zz_xxxxyz[k] - g_z_0_x_0_zz_xxxxyz[k] * ab_z + g_z_0_x_0_zz_xxxxyzz[k];

                g_z_0_x_0_zzz_xxxxzz[k] = -g_0_0_x_0_zz_xxxxzz[k] - g_z_0_x_0_zz_xxxxzz[k] * ab_z + g_z_0_x_0_zz_xxxxzzz[k];

                g_z_0_x_0_zzz_xxxyyy[k] = -g_0_0_x_0_zz_xxxyyy[k] - g_z_0_x_0_zz_xxxyyy[k] * ab_z + g_z_0_x_0_zz_xxxyyyz[k];

                g_z_0_x_0_zzz_xxxyyz[k] = -g_0_0_x_0_zz_xxxyyz[k] - g_z_0_x_0_zz_xxxyyz[k] * ab_z + g_z_0_x_0_zz_xxxyyzz[k];

                g_z_0_x_0_zzz_xxxyzz[k] = -g_0_0_x_0_zz_xxxyzz[k] - g_z_0_x_0_zz_xxxyzz[k] * ab_z + g_z_0_x_0_zz_xxxyzzz[k];

                g_z_0_x_0_zzz_xxxzzz[k] = -g_0_0_x_0_zz_xxxzzz[k] - g_z_0_x_0_zz_xxxzzz[k] * ab_z + g_z_0_x_0_zz_xxxzzzz[k];

                g_z_0_x_0_zzz_xxyyyy[k] = -g_0_0_x_0_zz_xxyyyy[k] - g_z_0_x_0_zz_xxyyyy[k] * ab_z + g_z_0_x_0_zz_xxyyyyz[k];

                g_z_0_x_0_zzz_xxyyyz[k] = -g_0_0_x_0_zz_xxyyyz[k] - g_z_0_x_0_zz_xxyyyz[k] * ab_z + g_z_0_x_0_zz_xxyyyzz[k];

                g_z_0_x_0_zzz_xxyyzz[k] = -g_0_0_x_0_zz_xxyyzz[k] - g_z_0_x_0_zz_xxyyzz[k] * ab_z + g_z_0_x_0_zz_xxyyzzz[k];

                g_z_0_x_0_zzz_xxyzzz[k] = -g_0_0_x_0_zz_xxyzzz[k] - g_z_0_x_0_zz_xxyzzz[k] * ab_z + g_z_0_x_0_zz_xxyzzzz[k];

                g_z_0_x_0_zzz_xxzzzz[k] = -g_0_0_x_0_zz_xxzzzz[k] - g_z_0_x_0_zz_xxzzzz[k] * ab_z + g_z_0_x_0_zz_xxzzzzz[k];

                g_z_0_x_0_zzz_xyyyyy[k] = -g_0_0_x_0_zz_xyyyyy[k] - g_z_0_x_0_zz_xyyyyy[k] * ab_z + g_z_0_x_0_zz_xyyyyyz[k];

                g_z_0_x_0_zzz_xyyyyz[k] = -g_0_0_x_0_zz_xyyyyz[k] - g_z_0_x_0_zz_xyyyyz[k] * ab_z + g_z_0_x_0_zz_xyyyyzz[k];

                g_z_0_x_0_zzz_xyyyzz[k] = -g_0_0_x_0_zz_xyyyzz[k] - g_z_0_x_0_zz_xyyyzz[k] * ab_z + g_z_0_x_0_zz_xyyyzzz[k];

                g_z_0_x_0_zzz_xyyzzz[k] = -g_0_0_x_0_zz_xyyzzz[k] - g_z_0_x_0_zz_xyyzzz[k] * ab_z + g_z_0_x_0_zz_xyyzzzz[k];

                g_z_0_x_0_zzz_xyzzzz[k] = -g_0_0_x_0_zz_xyzzzz[k] - g_z_0_x_0_zz_xyzzzz[k] * ab_z + g_z_0_x_0_zz_xyzzzzz[k];

                g_z_0_x_0_zzz_xzzzzz[k] = -g_0_0_x_0_zz_xzzzzz[k] - g_z_0_x_0_zz_xzzzzz[k] * ab_z + g_z_0_x_0_zz_xzzzzzz[k];

                g_z_0_x_0_zzz_yyyyyy[k] = -g_0_0_x_0_zz_yyyyyy[k] - g_z_0_x_0_zz_yyyyyy[k] * ab_z + g_z_0_x_0_zz_yyyyyyz[k];

                g_z_0_x_0_zzz_yyyyyz[k] = -g_0_0_x_0_zz_yyyyyz[k] - g_z_0_x_0_zz_yyyyyz[k] * ab_z + g_z_0_x_0_zz_yyyyyzz[k];

                g_z_0_x_0_zzz_yyyyzz[k] = -g_0_0_x_0_zz_yyyyzz[k] - g_z_0_x_0_zz_yyyyzz[k] * ab_z + g_z_0_x_0_zz_yyyyzzz[k];

                g_z_0_x_0_zzz_yyyzzz[k] = -g_0_0_x_0_zz_yyyzzz[k] - g_z_0_x_0_zz_yyyzzz[k] * ab_z + g_z_0_x_0_zz_yyyzzzz[k];

                g_z_0_x_0_zzz_yyzzzz[k] = -g_0_0_x_0_zz_yyzzzz[k] - g_z_0_x_0_zz_yyzzzz[k] * ab_z + g_z_0_x_0_zz_yyzzzzz[k];

                g_z_0_x_0_zzz_yzzzzz[k] = -g_0_0_x_0_zz_yzzzzz[k] - g_z_0_x_0_zz_yzzzzz[k] * ab_z + g_z_0_x_0_zz_yzzzzzz[k];

                g_z_0_x_0_zzz_zzzzzz[k] = -g_0_0_x_0_zz_zzzzzz[k] - g_z_0_x_0_zz_zzzzzz[k] * ab_z + g_z_0_x_0_zz_zzzzzzz[k];
            }

            /// Set up 1960-1988 components of targeted buffer : cbuffer.data(

            auto g_z_0_y_0_xxx_xxxxxx = cbuffer.data(fi_geom_1010_off + 1960 * ccomps * dcomps);

            auto g_z_0_y_0_xxx_xxxxxy = cbuffer.data(fi_geom_1010_off + 1961 * ccomps * dcomps);

            auto g_z_0_y_0_xxx_xxxxxz = cbuffer.data(fi_geom_1010_off + 1962 * ccomps * dcomps);

            auto g_z_0_y_0_xxx_xxxxyy = cbuffer.data(fi_geom_1010_off + 1963 * ccomps * dcomps);

            auto g_z_0_y_0_xxx_xxxxyz = cbuffer.data(fi_geom_1010_off + 1964 * ccomps * dcomps);

            auto g_z_0_y_0_xxx_xxxxzz = cbuffer.data(fi_geom_1010_off + 1965 * ccomps * dcomps);

            auto g_z_0_y_0_xxx_xxxyyy = cbuffer.data(fi_geom_1010_off + 1966 * ccomps * dcomps);

            auto g_z_0_y_0_xxx_xxxyyz = cbuffer.data(fi_geom_1010_off + 1967 * ccomps * dcomps);

            auto g_z_0_y_0_xxx_xxxyzz = cbuffer.data(fi_geom_1010_off + 1968 * ccomps * dcomps);

            auto g_z_0_y_0_xxx_xxxzzz = cbuffer.data(fi_geom_1010_off + 1969 * ccomps * dcomps);

            auto g_z_0_y_0_xxx_xxyyyy = cbuffer.data(fi_geom_1010_off + 1970 * ccomps * dcomps);

            auto g_z_0_y_0_xxx_xxyyyz = cbuffer.data(fi_geom_1010_off + 1971 * ccomps * dcomps);

            auto g_z_0_y_0_xxx_xxyyzz = cbuffer.data(fi_geom_1010_off + 1972 * ccomps * dcomps);

            auto g_z_0_y_0_xxx_xxyzzz = cbuffer.data(fi_geom_1010_off + 1973 * ccomps * dcomps);

            auto g_z_0_y_0_xxx_xxzzzz = cbuffer.data(fi_geom_1010_off + 1974 * ccomps * dcomps);

            auto g_z_0_y_0_xxx_xyyyyy = cbuffer.data(fi_geom_1010_off + 1975 * ccomps * dcomps);

            auto g_z_0_y_0_xxx_xyyyyz = cbuffer.data(fi_geom_1010_off + 1976 * ccomps * dcomps);

            auto g_z_0_y_0_xxx_xyyyzz = cbuffer.data(fi_geom_1010_off + 1977 * ccomps * dcomps);

            auto g_z_0_y_0_xxx_xyyzzz = cbuffer.data(fi_geom_1010_off + 1978 * ccomps * dcomps);

            auto g_z_0_y_0_xxx_xyzzzz = cbuffer.data(fi_geom_1010_off + 1979 * ccomps * dcomps);

            auto g_z_0_y_0_xxx_xzzzzz = cbuffer.data(fi_geom_1010_off + 1980 * ccomps * dcomps);

            auto g_z_0_y_0_xxx_yyyyyy = cbuffer.data(fi_geom_1010_off + 1981 * ccomps * dcomps);

            auto g_z_0_y_0_xxx_yyyyyz = cbuffer.data(fi_geom_1010_off + 1982 * ccomps * dcomps);

            auto g_z_0_y_0_xxx_yyyyzz = cbuffer.data(fi_geom_1010_off + 1983 * ccomps * dcomps);

            auto g_z_0_y_0_xxx_yyyzzz = cbuffer.data(fi_geom_1010_off + 1984 * ccomps * dcomps);

            auto g_z_0_y_0_xxx_yyzzzz = cbuffer.data(fi_geom_1010_off + 1985 * ccomps * dcomps);

            auto g_z_0_y_0_xxx_yzzzzz = cbuffer.data(fi_geom_1010_off + 1986 * ccomps * dcomps);

            auto g_z_0_y_0_xxx_zzzzzz = cbuffer.data(fi_geom_1010_off + 1987 * ccomps * dcomps);

            #pragma omp simd aligned(g_z_0_y_0_xx_xxxxxx, g_z_0_y_0_xx_xxxxxxx, g_z_0_y_0_xx_xxxxxxy, g_z_0_y_0_xx_xxxxxxz, g_z_0_y_0_xx_xxxxxy, g_z_0_y_0_xx_xxxxxyy, g_z_0_y_0_xx_xxxxxyz, g_z_0_y_0_xx_xxxxxz, g_z_0_y_0_xx_xxxxxzz, g_z_0_y_0_xx_xxxxyy, g_z_0_y_0_xx_xxxxyyy, g_z_0_y_0_xx_xxxxyyz, g_z_0_y_0_xx_xxxxyz, g_z_0_y_0_xx_xxxxyzz, g_z_0_y_0_xx_xxxxzz, g_z_0_y_0_xx_xxxxzzz, g_z_0_y_0_xx_xxxyyy, g_z_0_y_0_xx_xxxyyyy, g_z_0_y_0_xx_xxxyyyz, g_z_0_y_0_xx_xxxyyz, g_z_0_y_0_xx_xxxyyzz, g_z_0_y_0_xx_xxxyzz, g_z_0_y_0_xx_xxxyzzz, g_z_0_y_0_xx_xxxzzz, g_z_0_y_0_xx_xxxzzzz, g_z_0_y_0_xx_xxyyyy, g_z_0_y_0_xx_xxyyyyy, g_z_0_y_0_xx_xxyyyyz, g_z_0_y_0_xx_xxyyyz, g_z_0_y_0_xx_xxyyyzz, g_z_0_y_0_xx_xxyyzz, g_z_0_y_0_xx_xxyyzzz, g_z_0_y_0_xx_xxyzzz, g_z_0_y_0_xx_xxyzzzz, g_z_0_y_0_xx_xxzzzz, g_z_0_y_0_xx_xxzzzzz, g_z_0_y_0_xx_xyyyyy, g_z_0_y_0_xx_xyyyyyy, g_z_0_y_0_xx_xyyyyyz, g_z_0_y_0_xx_xyyyyz, g_z_0_y_0_xx_xyyyyzz, g_z_0_y_0_xx_xyyyzz, g_z_0_y_0_xx_xyyyzzz, g_z_0_y_0_xx_xyyzzz, g_z_0_y_0_xx_xyyzzzz, g_z_0_y_0_xx_xyzzzz, g_z_0_y_0_xx_xyzzzzz, g_z_0_y_0_xx_xzzzzz, g_z_0_y_0_xx_xzzzzzz, g_z_0_y_0_xx_yyyyyy, g_z_0_y_0_xx_yyyyyz, g_z_0_y_0_xx_yyyyzz, g_z_0_y_0_xx_yyyzzz, g_z_0_y_0_xx_yyzzzz, g_z_0_y_0_xx_yzzzzz, g_z_0_y_0_xx_zzzzzz, g_z_0_y_0_xxx_xxxxxx, g_z_0_y_0_xxx_xxxxxy, g_z_0_y_0_xxx_xxxxxz, g_z_0_y_0_xxx_xxxxyy, g_z_0_y_0_xxx_xxxxyz, g_z_0_y_0_xxx_xxxxzz, g_z_0_y_0_xxx_xxxyyy, g_z_0_y_0_xxx_xxxyyz, g_z_0_y_0_xxx_xxxyzz, g_z_0_y_0_xxx_xxxzzz, g_z_0_y_0_xxx_xxyyyy, g_z_0_y_0_xxx_xxyyyz, g_z_0_y_0_xxx_xxyyzz, g_z_0_y_0_xxx_xxyzzz, g_z_0_y_0_xxx_xxzzzz, g_z_0_y_0_xxx_xyyyyy, g_z_0_y_0_xxx_xyyyyz, g_z_0_y_0_xxx_xyyyzz, g_z_0_y_0_xxx_xyyzzz, g_z_0_y_0_xxx_xyzzzz, g_z_0_y_0_xxx_xzzzzz, g_z_0_y_0_xxx_yyyyyy, g_z_0_y_0_xxx_yyyyyz, g_z_0_y_0_xxx_yyyyzz, g_z_0_y_0_xxx_yyyzzz, g_z_0_y_0_xxx_yyzzzz, g_z_0_y_0_xxx_yzzzzz, g_z_0_y_0_xxx_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_z_0_y_0_xxx_xxxxxx[k] = -g_z_0_y_0_xx_xxxxxx[k] * ab_x + g_z_0_y_0_xx_xxxxxxx[k];

                g_z_0_y_0_xxx_xxxxxy[k] = -g_z_0_y_0_xx_xxxxxy[k] * ab_x + g_z_0_y_0_xx_xxxxxxy[k];

                g_z_0_y_0_xxx_xxxxxz[k] = -g_z_0_y_0_xx_xxxxxz[k] * ab_x + g_z_0_y_0_xx_xxxxxxz[k];

                g_z_0_y_0_xxx_xxxxyy[k] = -g_z_0_y_0_xx_xxxxyy[k] * ab_x + g_z_0_y_0_xx_xxxxxyy[k];

                g_z_0_y_0_xxx_xxxxyz[k] = -g_z_0_y_0_xx_xxxxyz[k] * ab_x + g_z_0_y_0_xx_xxxxxyz[k];

                g_z_0_y_0_xxx_xxxxzz[k] = -g_z_0_y_0_xx_xxxxzz[k] * ab_x + g_z_0_y_0_xx_xxxxxzz[k];

                g_z_0_y_0_xxx_xxxyyy[k] = -g_z_0_y_0_xx_xxxyyy[k] * ab_x + g_z_0_y_0_xx_xxxxyyy[k];

                g_z_0_y_0_xxx_xxxyyz[k] = -g_z_0_y_0_xx_xxxyyz[k] * ab_x + g_z_0_y_0_xx_xxxxyyz[k];

                g_z_0_y_0_xxx_xxxyzz[k] = -g_z_0_y_0_xx_xxxyzz[k] * ab_x + g_z_0_y_0_xx_xxxxyzz[k];

                g_z_0_y_0_xxx_xxxzzz[k] = -g_z_0_y_0_xx_xxxzzz[k] * ab_x + g_z_0_y_0_xx_xxxxzzz[k];

                g_z_0_y_0_xxx_xxyyyy[k] = -g_z_0_y_0_xx_xxyyyy[k] * ab_x + g_z_0_y_0_xx_xxxyyyy[k];

                g_z_0_y_0_xxx_xxyyyz[k] = -g_z_0_y_0_xx_xxyyyz[k] * ab_x + g_z_0_y_0_xx_xxxyyyz[k];

                g_z_0_y_0_xxx_xxyyzz[k] = -g_z_0_y_0_xx_xxyyzz[k] * ab_x + g_z_0_y_0_xx_xxxyyzz[k];

                g_z_0_y_0_xxx_xxyzzz[k] = -g_z_0_y_0_xx_xxyzzz[k] * ab_x + g_z_0_y_0_xx_xxxyzzz[k];

                g_z_0_y_0_xxx_xxzzzz[k] = -g_z_0_y_0_xx_xxzzzz[k] * ab_x + g_z_0_y_0_xx_xxxzzzz[k];

                g_z_0_y_0_xxx_xyyyyy[k] = -g_z_0_y_0_xx_xyyyyy[k] * ab_x + g_z_0_y_0_xx_xxyyyyy[k];

                g_z_0_y_0_xxx_xyyyyz[k] = -g_z_0_y_0_xx_xyyyyz[k] * ab_x + g_z_0_y_0_xx_xxyyyyz[k];

                g_z_0_y_0_xxx_xyyyzz[k] = -g_z_0_y_0_xx_xyyyzz[k] * ab_x + g_z_0_y_0_xx_xxyyyzz[k];

                g_z_0_y_0_xxx_xyyzzz[k] = -g_z_0_y_0_xx_xyyzzz[k] * ab_x + g_z_0_y_0_xx_xxyyzzz[k];

                g_z_0_y_0_xxx_xyzzzz[k] = -g_z_0_y_0_xx_xyzzzz[k] * ab_x + g_z_0_y_0_xx_xxyzzzz[k];

                g_z_0_y_0_xxx_xzzzzz[k] = -g_z_0_y_0_xx_xzzzzz[k] * ab_x + g_z_0_y_0_xx_xxzzzzz[k];

                g_z_0_y_0_xxx_yyyyyy[k] = -g_z_0_y_0_xx_yyyyyy[k] * ab_x + g_z_0_y_0_xx_xyyyyyy[k];

                g_z_0_y_0_xxx_yyyyyz[k] = -g_z_0_y_0_xx_yyyyyz[k] * ab_x + g_z_0_y_0_xx_xyyyyyz[k];

                g_z_0_y_0_xxx_yyyyzz[k] = -g_z_0_y_0_xx_yyyyzz[k] * ab_x + g_z_0_y_0_xx_xyyyyzz[k];

                g_z_0_y_0_xxx_yyyzzz[k] = -g_z_0_y_0_xx_yyyzzz[k] * ab_x + g_z_0_y_0_xx_xyyyzzz[k];

                g_z_0_y_0_xxx_yyzzzz[k] = -g_z_0_y_0_xx_yyzzzz[k] * ab_x + g_z_0_y_0_xx_xyyzzzz[k];

                g_z_0_y_0_xxx_yzzzzz[k] = -g_z_0_y_0_xx_yzzzzz[k] * ab_x + g_z_0_y_0_xx_xyzzzzz[k];

                g_z_0_y_0_xxx_zzzzzz[k] = -g_z_0_y_0_xx_zzzzzz[k] * ab_x + g_z_0_y_0_xx_xzzzzzz[k];
            }

            /// Set up 1988-2016 components of targeted buffer : cbuffer.data(

            auto g_z_0_y_0_xxy_xxxxxx = cbuffer.data(fi_geom_1010_off + 1988 * ccomps * dcomps);

            auto g_z_0_y_0_xxy_xxxxxy = cbuffer.data(fi_geom_1010_off + 1989 * ccomps * dcomps);

            auto g_z_0_y_0_xxy_xxxxxz = cbuffer.data(fi_geom_1010_off + 1990 * ccomps * dcomps);

            auto g_z_0_y_0_xxy_xxxxyy = cbuffer.data(fi_geom_1010_off + 1991 * ccomps * dcomps);

            auto g_z_0_y_0_xxy_xxxxyz = cbuffer.data(fi_geom_1010_off + 1992 * ccomps * dcomps);

            auto g_z_0_y_0_xxy_xxxxzz = cbuffer.data(fi_geom_1010_off + 1993 * ccomps * dcomps);

            auto g_z_0_y_0_xxy_xxxyyy = cbuffer.data(fi_geom_1010_off + 1994 * ccomps * dcomps);

            auto g_z_0_y_0_xxy_xxxyyz = cbuffer.data(fi_geom_1010_off + 1995 * ccomps * dcomps);

            auto g_z_0_y_0_xxy_xxxyzz = cbuffer.data(fi_geom_1010_off + 1996 * ccomps * dcomps);

            auto g_z_0_y_0_xxy_xxxzzz = cbuffer.data(fi_geom_1010_off + 1997 * ccomps * dcomps);

            auto g_z_0_y_0_xxy_xxyyyy = cbuffer.data(fi_geom_1010_off + 1998 * ccomps * dcomps);

            auto g_z_0_y_0_xxy_xxyyyz = cbuffer.data(fi_geom_1010_off + 1999 * ccomps * dcomps);

            auto g_z_0_y_0_xxy_xxyyzz = cbuffer.data(fi_geom_1010_off + 2000 * ccomps * dcomps);

            auto g_z_0_y_0_xxy_xxyzzz = cbuffer.data(fi_geom_1010_off + 2001 * ccomps * dcomps);

            auto g_z_0_y_0_xxy_xxzzzz = cbuffer.data(fi_geom_1010_off + 2002 * ccomps * dcomps);

            auto g_z_0_y_0_xxy_xyyyyy = cbuffer.data(fi_geom_1010_off + 2003 * ccomps * dcomps);

            auto g_z_0_y_0_xxy_xyyyyz = cbuffer.data(fi_geom_1010_off + 2004 * ccomps * dcomps);

            auto g_z_0_y_0_xxy_xyyyzz = cbuffer.data(fi_geom_1010_off + 2005 * ccomps * dcomps);

            auto g_z_0_y_0_xxy_xyyzzz = cbuffer.data(fi_geom_1010_off + 2006 * ccomps * dcomps);

            auto g_z_0_y_0_xxy_xyzzzz = cbuffer.data(fi_geom_1010_off + 2007 * ccomps * dcomps);

            auto g_z_0_y_0_xxy_xzzzzz = cbuffer.data(fi_geom_1010_off + 2008 * ccomps * dcomps);

            auto g_z_0_y_0_xxy_yyyyyy = cbuffer.data(fi_geom_1010_off + 2009 * ccomps * dcomps);

            auto g_z_0_y_0_xxy_yyyyyz = cbuffer.data(fi_geom_1010_off + 2010 * ccomps * dcomps);

            auto g_z_0_y_0_xxy_yyyyzz = cbuffer.data(fi_geom_1010_off + 2011 * ccomps * dcomps);

            auto g_z_0_y_0_xxy_yyyzzz = cbuffer.data(fi_geom_1010_off + 2012 * ccomps * dcomps);

            auto g_z_0_y_0_xxy_yyzzzz = cbuffer.data(fi_geom_1010_off + 2013 * ccomps * dcomps);

            auto g_z_0_y_0_xxy_yzzzzz = cbuffer.data(fi_geom_1010_off + 2014 * ccomps * dcomps);

            auto g_z_0_y_0_xxy_zzzzzz = cbuffer.data(fi_geom_1010_off + 2015 * ccomps * dcomps);

            #pragma omp simd aligned(g_z_0_y_0_xxy_xxxxxx, g_z_0_y_0_xxy_xxxxxy, g_z_0_y_0_xxy_xxxxxz, g_z_0_y_0_xxy_xxxxyy, g_z_0_y_0_xxy_xxxxyz, g_z_0_y_0_xxy_xxxxzz, g_z_0_y_0_xxy_xxxyyy, g_z_0_y_0_xxy_xxxyyz, g_z_0_y_0_xxy_xxxyzz, g_z_0_y_0_xxy_xxxzzz, g_z_0_y_0_xxy_xxyyyy, g_z_0_y_0_xxy_xxyyyz, g_z_0_y_0_xxy_xxyyzz, g_z_0_y_0_xxy_xxyzzz, g_z_0_y_0_xxy_xxzzzz, g_z_0_y_0_xxy_xyyyyy, g_z_0_y_0_xxy_xyyyyz, g_z_0_y_0_xxy_xyyyzz, g_z_0_y_0_xxy_xyyzzz, g_z_0_y_0_xxy_xyzzzz, g_z_0_y_0_xxy_xzzzzz, g_z_0_y_0_xxy_yyyyyy, g_z_0_y_0_xxy_yyyyyz, g_z_0_y_0_xxy_yyyyzz, g_z_0_y_0_xxy_yyyzzz, g_z_0_y_0_xxy_yyzzzz, g_z_0_y_0_xxy_yzzzzz, g_z_0_y_0_xxy_zzzzzz, g_z_0_y_0_xy_xxxxxx, g_z_0_y_0_xy_xxxxxxx, g_z_0_y_0_xy_xxxxxxy, g_z_0_y_0_xy_xxxxxxz, g_z_0_y_0_xy_xxxxxy, g_z_0_y_0_xy_xxxxxyy, g_z_0_y_0_xy_xxxxxyz, g_z_0_y_0_xy_xxxxxz, g_z_0_y_0_xy_xxxxxzz, g_z_0_y_0_xy_xxxxyy, g_z_0_y_0_xy_xxxxyyy, g_z_0_y_0_xy_xxxxyyz, g_z_0_y_0_xy_xxxxyz, g_z_0_y_0_xy_xxxxyzz, g_z_0_y_0_xy_xxxxzz, g_z_0_y_0_xy_xxxxzzz, g_z_0_y_0_xy_xxxyyy, g_z_0_y_0_xy_xxxyyyy, g_z_0_y_0_xy_xxxyyyz, g_z_0_y_0_xy_xxxyyz, g_z_0_y_0_xy_xxxyyzz, g_z_0_y_0_xy_xxxyzz, g_z_0_y_0_xy_xxxyzzz, g_z_0_y_0_xy_xxxzzz, g_z_0_y_0_xy_xxxzzzz, g_z_0_y_0_xy_xxyyyy, g_z_0_y_0_xy_xxyyyyy, g_z_0_y_0_xy_xxyyyyz, g_z_0_y_0_xy_xxyyyz, g_z_0_y_0_xy_xxyyyzz, g_z_0_y_0_xy_xxyyzz, g_z_0_y_0_xy_xxyyzzz, g_z_0_y_0_xy_xxyzzz, g_z_0_y_0_xy_xxyzzzz, g_z_0_y_0_xy_xxzzzz, g_z_0_y_0_xy_xxzzzzz, g_z_0_y_0_xy_xyyyyy, g_z_0_y_0_xy_xyyyyyy, g_z_0_y_0_xy_xyyyyyz, g_z_0_y_0_xy_xyyyyz, g_z_0_y_0_xy_xyyyyzz, g_z_0_y_0_xy_xyyyzz, g_z_0_y_0_xy_xyyyzzz, g_z_0_y_0_xy_xyyzzz, g_z_0_y_0_xy_xyyzzzz, g_z_0_y_0_xy_xyzzzz, g_z_0_y_0_xy_xyzzzzz, g_z_0_y_0_xy_xzzzzz, g_z_0_y_0_xy_xzzzzzz, g_z_0_y_0_xy_yyyyyy, g_z_0_y_0_xy_yyyyyz, g_z_0_y_0_xy_yyyyzz, g_z_0_y_0_xy_yyyzzz, g_z_0_y_0_xy_yyzzzz, g_z_0_y_0_xy_yzzzzz, g_z_0_y_0_xy_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_z_0_y_0_xxy_xxxxxx[k] = -g_z_0_y_0_xy_xxxxxx[k] * ab_x + g_z_0_y_0_xy_xxxxxxx[k];

                g_z_0_y_0_xxy_xxxxxy[k] = -g_z_0_y_0_xy_xxxxxy[k] * ab_x + g_z_0_y_0_xy_xxxxxxy[k];

                g_z_0_y_0_xxy_xxxxxz[k] = -g_z_0_y_0_xy_xxxxxz[k] * ab_x + g_z_0_y_0_xy_xxxxxxz[k];

                g_z_0_y_0_xxy_xxxxyy[k] = -g_z_0_y_0_xy_xxxxyy[k] * ab_x + g_z_0_y_0_xy_xxxxxyy[k];

                g_z_0_y_0_xxy_xxxxyz[k] = -g_z_0_y_0_xy_xxxxyz[k] * ab_x + g_z_0_y_0_xy_xxxxxyz[k];

                g_z_0_y_0_xxy_xxxxzz[k] = -g_z_0_y_0_xy_xxxxzz[k] * ab_x + g_z_0_y_0_xy_xxxxxzz[k];

                g_z_0_y_0_xxy_xxxyyy[k] = -g_z_0_y_0_xy_xxxyyy[k] * ab_x + g_z_0_y_0_xy_xxxxyyy[k];

                g_z_0_y_0_xxy_xxxyyz[k] = -g_z_0_y_0_xy_xxxyyz[k] * ab_x + g_z_0_y_0_xy_xxxxyyz[k];

                g_z_0_y_0_xxy_xxxyzz[k] = -g_z_0_y_0_xy_xxxyzz[k] * ab_x + g_z_0_y_0_xy_xxxxyzz[k];

                g_z_0_y_0_xxy_xxxzzz[k] = -g_z_0_y_0_xy_xxxzzz[k] * ab_x + g_z_0_y_0_xy_xxxxzzz[k];

                g_z_0_y_0_xxy_xxyyyy[k] = -g_z_0_y_0_xy_xxyyyy[k] * ab_x + g_z_0_y_0_xy_xxxyyyy[k];

                g_z_0_y_0_xxy_xxyyyz[k] = -g_z_0_y_0_xy_xxyyyz[k] * ab_x + g_z_0_y_0_xy_xxxyyyz[k];

                g_z_0_y_0_xxy_xxyyzz[k] = -g_z_0_y_0_xy_xxyyzz[k] * ab_x + g_z_0_y_0_xy_xxxyyzz[k];

                g_z_0_y_0_xxy_xxyzzz[k] = -g_z_0_y_0_xy_xxyzzz[k] * ab_x + g_z_0_y_0_xy_xxxyzzz[k];

                g_z_0_y_0_xxy_xxzzzz[k] = -g_z_0_y_0_xy_xxzzzz[k] * ab_x + g_z_0_y_0_xy_xxxzzzz[k];

                g_z_0_y_0_xxy_xyyyyy[k] = -g_z_0_y_0_xy_xyyyyy[k] * ab_x + g_z_0_y_0_xy_xxyyyyy[k];

                g_z_0_y_0_xxy_xyyyyz[k] = -g_z_0_y_0_xy_xyyyyz[k] * ab_x + g_z_0_y_0_xy_xxyyyyz[k];

                g_z_0_y_0_xxy_xyyyzz[k] = -g_z_0_y_0_xy_xyyyzz[k] * ab_x + g_z_0_y_0_xy_xxyyyzz[k];

                g_z_0_y_0_xxy_xyyzzz[k] = -g_z_0_y_0_xy_xyyzzz[k] * ab_x + g_z_0_y_0_xy_xxyyzzz[k];

                g_z_0_y_0_xxy_xyzzzz[k] = -g_z_0_y_0_xy_xyzzzz[k] * ab_x + g_z_0_y_0_xy_xxyzzzz[k];

                g_z_0_y_0_xxy_xzzzzz[k] = -g_z_0_y_0_xy_xzzzzz[k] * ab_x + g_z_0_y_0_xy_xxzzzzz[k];

                g_z_0_y_0_xxy_yyyyyy[k] = -g_z_0_y_0_xy_yyyyyy[k] * ab_x + g_z_0_y_0_xy_xyyyyyy[k];

                g_z_0_y_0_xxy_yyyyyz[k] = -g_z_0_y_0_xy_yyyyyz[k] * ab_x + g_z_0_y_0_xy_xyyyyyz[k];

                g_z_0_y_0_xxy_yyyyzz[k] = -g_z_0_y_0_xy_yyyyzz[k] * ab_x + g_z_0_y_0_xy_xyyyyzz[k];

                g_z_0_y_0_xxy_yyyzzz[k] = -g_z_0_y_0_xy_yyyzzz[k] * ab_x + g_z_0_y_0_xy_xyyyzzz[k];

                g_z_0_y_0_xxy_yyzzzz[k] = -g_z_0_y_0_xy_yyzzzz[k] * ab_x + g_z_0_y_0_xy_xyyzzzz[k];

                g_z_0_y_0_xxy_yzzzzz[k] = -g_z_0_y_0_xy_yzzzzz[k] * ab_x + g_z_0_y_0_xy_xyzzzzz[k];

                g_z_0_y_0_xxy_zzzzzz[k] = -g_z_0_y_0_xy_zzzzzz[k] * ab_x + g_z_0_y_0_xy_xzzzzzz[k];
            }

            /// Set up 2016-2044 components of targeted buffer : cbuffer.data(

            auto g_z_0_y_0_xxz_xxxxxx = cbuffer.data(fi_geom_1010_off + 2016 * ccomps * dcomps);

            auto g_z_0_y_0_xxz_xxxxxy = cbuffer.data(fi_geom_1010_off + 2017 * ccomps * dcomps);

            auto g_z_0_y_0_xxz_xxxxxz = cbuffer.data(fi_geom_1010_off + 2018 * ccomps * dcomps);

            auto g_z_0_y_0_xxz_xxxxyy = cbuffer.data(fi_geom_1010_off + 2019 * ccomps * dcomps);

            auto g_z_0_y_0_xxz_xxxxyz = cbuffer.data(fi_geom_1010_off + 2020 * ccomps * dcomps);

            auto g_z_0_y_0_xxz_xxxxzz = cbuffer.data(fi_geom_1010_off + 2021 * ccomps * dcomps);

            auto g_z_0_y_0_xxz_xxxyyy = cbuffer.data(fi_geom_1010_off + 2022 * ccomps * dcomps);

            auto g_z_0_y_0_xxz_xxxyyz = cbuffer.data(fi_geom_1010_off + 2023 * ccomps * dcomps);

            auto g_z_0_y_0_xxz_xxxyzz = cbuffer.data(fi_geom_1010_off + 2024 * ccomps * dcomps);

            auto g_z_0_y_0_xxz_xxxzzz = cbuffer.data(fi_geom_1010_off + 2025 * ccomps * dcomps);

            auto g_z_0_y_0_xxz_xxyyyy = cbuffer.data(fi_geom_1010_off + 2026 * ccomps * dcomps);

            auto g_z_0_y_0_xxz_xxyyyz = cbuffer.data(fi_geom_1010_off + 2027 * ccomps * dcomps);

            auto g_z_0_y_0_xxz_xxyyzz = cbuffer.data(fi_geom_1010_off + 2028 * ccomps * dcomps);

            auto g_z_0_y_0_xxz_xxyzzz = cbuffer.data(fi_geom_1010_off + 2029 * ccomps * dcomps);

            auto g_z_0_y_0_xxz_xxzzzz = cbuffer.data(fi_geom_1010_off + 2030 * ccomps * dcomps);

            auto g_z_0_y_0_xxz_xyyyyy = cbuffer.data(fi_geom_1010_off + 2031 * ccomps * dcomps);

            auto g_z_0_y_0_xxz_xyyyyz = cbuffer.data(fi_geom_1010_off + 2032 * ccomps * dcomps);

            auto g_z_0_y_0_xxz_xyyyzz = cbuffer.data(fi_geom_1010_off + 2033 * ccomps * dcomps);

            auto g_z_0_y_0_xxz_xyyzzz = cbuffer.data(fi_geom_1010_off + 2034 * ccomps * dcomps);

            auto g_z_0_y_0_xxz_xyzzzz = cbuffer.data(fi_geom_1010_off + 2035 * ccomps * dcomps);

            auto g_z_0_y_0_xxz_xzzzzz = cbuffer.data(fi_geom_1010_off + 2036 * ccomps * dcomps);

            auto g_z_0_y_0_xxz_yyyyyy = cbuffer.data(fi_geom_1010_off + 2037 * ccomps * dcomps);

            auto g_z_0_y_0_xxz_yyyyyz = cbuffer.data(fi_geom_1010_off + 2038 * ccomps * dcomps);

            auto g_z_0_y_0_xxz_yyyyzz = cbuffer.data(fi_geom_1010_off + 2039 * ccomps * dcomps);

            auto g_z_0_y_0_xxz_yyyzzz = cbuffer.data(fi_geom_1010_off + 2040 * ccomps * dcomps);

            auto g_z_0_y_0_xxz_yyzzzz = cbuffer.data(fi_geom_1010_off + 2041 * ccomps * dcomps);

            auto g_z_0_y_0_xxz_yzzzzz = cbuffer.data(fi_geom_1010_off + 2042 * ccomps * dcomps);

            auto g_z_0_y_0_xxz_zzzzzz = cbuffer.data(fi_geom_1010_off + 2043 * ccomps * dcomps);

            #pragma omp simd aligned(g_z_0_y_0_xxz_xxxxxx, g_z_0_y_0_xxz_xxxxxy, g_z_0_y_0_xxz_xxxxxz, g_z_0_y_0_xxz_xxxxyy, g_z_0_y_0_xxz_xxxxyz, g_z_0_y_0_xxz_xxxxzz, g_z_0_y_0_xxz_xxxyyy, g_z_0_y_0_xxz_xxxyyz, g_z_0_y_0_xxz_xxxyzz, g_z_0_y_0_xxz_xxxzzz, g_z_0_y_0_xxz_xxyyyy, g_z_0_y_0_xxz_xxyyyz, g_z_0_y_0_xxz_xxyyzz, g_z_0_y_0_xxz_xxyzzz, g_z_0_y_0_xxz_xxzzzz, g_z_0_y_0_xxz_xyyyyy, g_z_0_y_0_xxz_xyyyyz, g_z_0_y_0_xxz_xyyyzz, g_z_0_y_0_xxz_xyyzzz, g_z_0_y_0_xxz_xyzzzz, g_z_0_y_0_xxz_xzzzzz, g_z_0_y_0_xxz_yyyyyy, g_z_0_y_0_xxz_yyyyyz, g_z_0_y_0_xxz_yyyyzz, g_z_0_y_0_xxz_yyyzzz, g_z_0_y_0_xxz_yyzzzz, g_z_0_y_0_xxz_yzzzzz, g_z_0_y_0_xxz_zzzzzz, g_z_0_y_0_xz_xxxxxx, g_z_0_y_0_xz_xxxxxxx, g_z_0_y_0_xz_xxxxxxy, g_z_0_y_0_xz_xxxxxxz, g_z_0_y_0_xz_xxxxxy, g_z_0_y_0_xz_xxxxxyy, g_z_0_y_0_xz_xxxxxyz, g_z_0_y_0_xz_xxxxxz, g_z_0_y_0_xz_xxxxxzz, g_z_0_y_0_xz_xxxxyy, g_z_0_y_0_xz_xxxxyyy, g_z_0_y_0_xz_xxxxyyz, g_z_0_y_0_xz_xxxxyz, g_z_0_y_0_xz_xxxxyzz, g_z_0_y_0_xz_xxxxzz, g_z_0_y_0_xz_xxxxzzz, g_z_0_y_0_xz_xxxyyy, g_z_0_y_0_xz_xxxyyyy, g_z_0_y_0_xz_xxxyyyz, g_z_0_y_0_xz_xxxyyz, g_z_0_y_0_xz_xxxyyzz, g_z_0_y_0_xz_xxxyzz, g_z_0_y_0_xz_xxxyzzz, g_z_0_y_0_xz_xxxzzz, g_z_0_y_0_xz_xxxzzzz, g_z_0_y_0_xz_xxyyyy, g_z_0_y_0_xz_xxyyyyy, g_z_0_y_0_xz_xxyyyyz, g_z_0_y_0_xz_xxyyyz, g_z_0_y_0_xz_xxyyyzz, g_z_0_y_0_xz_xxyyzz, g_z_0_y_0_xz_xxyyzzz, g_z_0_y_0_xz_xxyzzz, g_z_0_y_0_xz_xxyzzzz, g_z_0_y_0_xz_xxzzzz, g_z_0_y_0_xz_xxzzzzz, g_z_0_y_0_xz_xyyyyy, g_z_0_y_0_xz_xyyyyyy, g_z_0_y_0_xz_xyyyyyz, g_z_0_y_0_xz_xyyyyz, g_z_0_y_0_xz_xyyyyzz, g_z_0_y_0_xz_xyyyzz, g_z_0_y_0_xz_xyyyzzz, g_z_0_y_0_xz_xyyzzz, g_z_0_y_0_xz_xyyzzzz, g_z_0_y_0_xz_xyzzzz, g_z_0_y_0_xz_xyzzzzz, g_z_0_y_0_xz_xzzzzz, g_z_0_y_0_xz_xzzzzzz, g_z_0_y_0_xz_yyyyyy, g_z_0_y_0_xz_yyyyyz, g_z_0_y_0_xz_yyyyzz, g_z_0_y_0_xz_yyyzzz, g_z_0_y_0_xz_yyzzzz, g_z_0_y_0_xz_yzzzzz, g_z_0_y_0_xz_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_z_0_y_0_xxz_xxxxxx[k] = -g_z_0_y_0_xz_xxxxxx[k] * ab_x + g_z_0_y_0_xz_xxxxxxx[k];

                g_z_0_y_0_xxz_xxxxxy[k] = -g_z_0_y_0_xz_xxxxxy[k] * ab_x + g_z_0_y_0_xz_xxxxxxy[k];

                g_z_0_y_0_xxz_xxxxxz[k] = -g_z_0_y_0_xz_xxxxxz[k] * ab_x + g_z_0_y_0_xz_xxxxxxz[k];

                g_z_0_y_0_xxz_xxxxyy[k] = -g_z_0_y_0_xz_xxxxyy[k] * ab_x + g_z_0_y_0_xz_xxxxxyy[k];

                g_z_0_y_0_xxz_xxxxyz[k] = -g_z_0_y_0_xz_xxxxyz[k] * ab_x + g_z_0_y_0_xz_xxxxxyz[k];

                g_z_0_y_0_xxz_xxxxzz[k] = -g_z_0_y_0_xz_xxxxzz[k] * ab_x + g_z_0_y_0_xz_xxxxxzz[k];

                g_z_0_y_0_xxz_xxxyyy[k] = -g_z_0_y_0_xz_xxxyyy[k] * ab_x + g_z_0_y_0_xz_xxxxyyy[k];

                g_z_0_y_0_xxz_xxxyyz[k] = -g_z_0_y_0_xz_xxxyyz[k] * ab_x + g_z_0_y_0_xz_xxxxyyz[k];

                g_z_0_y_0_xxz_xxxyzz[k] = -g_z_0_y_0_xz_xxxyzz[k] * ab_x + g_z_0_y_0_xz_xxxxyzz[k];

                g_z_0_y_0_xxz_xxxzzz[k] = -g_z_0_y_0_xz_xxxzzz[k] * ab_x + g_z_0_y_0_xz_xxxxzzz[k];

                g_z_0_y_0_xxz_xxyyyy[k] = -g_z_0_y_0_xz_xxyyyy[k] * ab_x + g_z_0_y_0_xz_xxxyyyy[k];

                g_z_0_y_0_xxz_xxyyyz[k] = -g_z_0_y_0_xz_xxyyyz[k] * ab_x + g_z_0_y_0_xz_xxxyyyz[k];

                g_z_0_y_0_xxz_xxyyzz[k] = -g_z_0_y_0_xz_xxyyzz[k] * ab_x + g_z_0_y_0_xz_xxxyyzz[k];

                g_z_0_y_0_xxz_xxyzzz[k] = -g_z_0_y_0_xz_xxyzzz[k] * ab_x + g_z_0_y_0_xz_xxxyzzz[k];

                g_z_0_y_0_xxz_xxzzzz[k] = -g_z_0_y_0_xz_xxzzzz[k] * ab_x + g_z_0_y_0_xz_xxxzzzz[k];

                g_z_0_y_0_xxz_xyyyyy[k] = -g_z_0_y_0_xz_xyyyyy[k] * ab_x + g_z_0_y_0_xz_xxyyyyy[k];

                g_z_0_y_0_xxz_xyyyyz[k] = -g_z_0_y_0_xz_xyyyyz[k] * ab_x + g_z_0_y_0_xz_xxyyyyz[k];

                g_z_0_y_0_xxz_xyyyzz[k] = -g_z_0_y_0_xz_xyyyzz[k] * ab_x + g_z_0_y_0_xz_xxyyyzz[k];

                g_z_0_y_0_xxz_xyyzzz[k] = -g_z_0_y_0_xz_xyyzzz[k] * ab_x + g_z_0_y_0_xz_xxyyzzz[k];

                g_z_0_y_0_xxz_xyzzzz[k] = -g_z_0_y_0_xz_xyzzzz[k] * ab_x + g_z_0_y_0_xz_xxyzzzz[k];

                g_z_0_y_0_xxz_xzzzzz[k] = -g_z_0_y_0_xz_xzzzzz[k] * ab_x + g_z_0_y_0_xz_xxzzzzz[k];

                g_z_0_y_0_xxz_yyyyyy[k] = -g_z_0_y_0_xz_yyyyyy[k] * ab_x + g_z_0_y_0_xz_xyyyyyy[k];

                g_z_0_y_0_xxz_yyyyyz[k] = -g_z_0_y_0_xz_yyyyyz[k] * ab_x + g_z_0_y_0_xz_xyyyyyz[k];

                g_z_0_y_0_xxz_yyyyzz[k] = -g_z_0_y_0_xz_yyyyzz[k] * ab_x + g_z_0_y_0_xz_xyyyyzz[k];

                g_z_0_y_0_xxz_yyyzzz[k] = -g_z_0_y_0_xz_yyyzzz[k] * ab_x + g_z_0_y_0_xz_xyyyzzz[k];

                g_z_0_y_0_xxz_yyzzzz[k] = -g_z_0_y_0_xz_yyzzzz[k] * ab_x + g_z_0_y_0_xz_xyyzzzz[k];

                g_z_0_y_0_xxz_yzzzzz[k] = -g_z_0_y_0_xz_yzzzzz[k] * ab_x + g_z_0_y_0_xz_xyzzzzz[k];

                g_z_0_y_0_xxz_zzzzzz[k] = -g_z_0_y_0_xz_zzzzzz[k] * ab_x + g_z_0_y_0_xz_xzzzzzz[k];
            }

            /// Set up 2044-2072 components of targeted buffer : cbuffer.data(

            auto g_z_0_y_0_xyy_xxxxxx = cbuffer.data(fi_geom_1010_off + 2044 * ccomps * dcomps);

            auto g_z_0_y_0_xyy_xxxxxy = cbuffer.data(fi_geom_1010_off + 2045 * ccomps * dcomps);

            auto g_z_0_y_0_xyy_xxxxxz = cbuffer.data(fi_geom_1010_off + 2046 * ccomps * dcomps);

            auto g_z_0_y_0_xyy_xxxxyy = cbuffer.data(fi_geom_1010_off + 2047 * ccomps * dcomps);

            auto g_z_0_y_0_xyy_xxxxyz = cbuffer.data(fi_geom_1010_off + 2048 * ccomps * dcomps);

            auto g_z_0_y_0_xyy_xxxxzz = cbuffer.data(fi_geom_1010_off + 2049 * ccomps * dcomps);

            auto g_z_0_y_0_xyy_xxxyyy = cbuffer.data(fi_geom_1010_off + 2050 * ccomps * dcomps);

            auto g_z_0_y_0_xyy_xxxyyz = cbuffer.data(fi_geom_1010_off + 2051 * ccomps * dcomps);

            auto g_z_0_y_0_xyy_xxxyzz = cbuffer.data(fi_geom_1010_off + 2052 * ccomps * dcomps);

            auto g_z_0_y_0_xyy_xxxzzz = cbuffer.data(fi_geom_1010_off + 2053 * ccomps * dcomps);

            auto g_z_0_y_0_xyy_xxyyyy = cbuffer.data(fi_geom_1010_off + 2054 * ccomps * dcomps);

            auto g_z_0_y_0_xyy_xxyyyz = cbuffer.data(fi_geom_1010_off + 2055 * ccomps * dcomps);

            auto g_z_0_y_0_xyy_xxyyzz = cbuffer.data(fi_geom_1010_off + 2056 * ccomps * dcomps);

            auto g_z_0_y_0_xyy_xxyzzz = cbuffer.data(fi_geom_1010_off + 2057 * ccomps * dcomps);

            auto g_z_0_y_0_xyy_xxzzzz = cbuffer.data(fi_geom_1010_off + 2058 * ccomps * dcomps);

            auto g_z_0_y_0_xyy_xyyyyy = cbuffer.data(fi_geom_1010_off + 2059 * ccomps * dcomps);

            auto g_z_0_y_0_xyy_xyyyyz = cbuffer.data(fi_geom_1010_off + 2060 * ccomps * dcomps);

            auto g_z_0_y_0_xyy_xyyyzz = cbuffer.data(fi_geom_1010_off + 2061 * ccomps * dcomps);

            auto g_z_0_y_0_xyy_xyyzzz = cbuffer.data(fi_geom_1010_off + 2062 * ccomps * dcomps);

            auto g_z_0_y_0_xyy_xyzzzz = cbuffer.data(fi_geom_1010_off + 2063 * ccomps * dcomps);

            auto g_z_0_y_0_xyy_xzzzzz = cbuffer.data(fi_geom_1010_off + 2064 * ccomps * dcomps);

            auto g_z_0_y_0_xyy_yyyyyy = cbuffer.data(fi_geom_1010_off + 2065 * ccomps * dcomps);

            auto g_z_0_y_0_xyy_yyyyyz = cbuffer.data(fi_geom_1010_off + 2066 * ccomps * dcomps);

            auto g_z_0_y_0_xyy_yyyyzz = cbuffer.data(fi_geom_1010_off + 2067 * ccomps * dcomps);

            auto g_z_0_y_0_xyy_yyyzzz = cbuffer.data(fi_geom_1010_off + 2068 * ccomps * dcomps);

            auto g_z_0_y_0_xyy_yyzzzz = cbuffer.data(fi_geom_1010_off + 2069 * ccomps * dcomps);

            auto g_z_0_y_0_xyy_yzzzzz = cbuffer.data(fi_geom_1010_off + 2070 * ccomps * dcomps);

            auto g_z_0_y_0_xyy_zzzzzz = cbuffer.data(fi_geom_1010_off + 2071 * ccomps * dcomps);

            #pragma omp simd aligned(g_z_0_y_0_xyy_xxxxxx, g_z_0_y_0_xyy_xxxxxy, g_z_0_y_0_xyy_xxxxxz, g_z_0_y_0_xyy_xxxxyy, g_z_0_y_0_xyy_xxxxyz, g_z_0_y_0_xyy_xxxxzz, g_z_0_y_0_xyy_xxxyyy, g_z_0_y_0_xyy_xxxyyz, g_z_0_y_0_xyy_xxxyzz, g_z_0_y_0_xyy_xxxzzz, g_z_0_y_0_xyy_xxyyyy, g_z_0_y_0_xyy_xxyyyz, g_z_0_y_0_xyy_xxyyzz, g_z_0_y_0_xyy_xxyzzz, g_z_0_y_0_xyy_xxzzzz, g_z_0_y_0_xyy_xyyyyy, g_z_0_y_0_xyy_xyyyyz, g_z_0_y_0_xyy_xyyyzz, g_z_0_y_0_xyy_xyyzzz, g_z_0_y_0_xyy_xyzzzz, g_z_0_y_0_xyy_xzzzzz, g_z_0_y_0_xyy_yyyyyy, g_z_0_y_0_xyy_yyyyyz, g_z_0_y_0_xyy_yyyyzz, g_z_0_y_0_xyy_yyyzzz, g_z_0_y_0_xyy_yyzzzz, g_z_0_y_0_xyy_yzzzzz, g_z_0_y_0_xyy_zzzzzz, g_z_0_y_0_yy_xxxxxx, g_z_0_y_0_yy_xxxxxxx, g_z_0_y_0_yy_xxxxxxy, g_z_0_y_0_yy_xxxxxxz, g_z_0_y_0_yy_xxxxxy, g_z_0_y_0_yy_xxxxxyy, g_z_0_y_0_yy_xxxxxyz, g_z_0_y_0_yy_xxxxxz, g_z_0_y_0_yy_xxxxxzz, g_z_0_y_0_yy_xxxxyy, g_z_0_y_0_yy_xxxxyyy, g_z_0_y_0_yy_xxxxyyz, g_z_0_y_0_yy_xxxxyz, g_z_0_y_0_yy_xxxxyzz, g_z_0_y_0_yy_xxxxzz, g_z_0_y_0_yy_xxxxzzz, g_z_0_y_0_yy_xxxyyy, g_z_0_y_0_yy_xxxyyyy, g_z_0_y_0_yy_xxxyyyz, g_z_0_y_0_yy_xxxyyz, g_z_0_y_0_yy_xxxyyzz, g_z_0_y_0_yy_xxxyzz, g_z_0_y_0_yy_xxxyzzz, g_z_0_y_0_yy_xxxzzz, g_z_0_y_0_yy_xxxzzzz, g_z_0_y_0_yy_xxyyyy, g_z_0_y_0_yy_xxyyyyy, g_z_0_y_0_yy_xxyyyyz, g_z_0_y_0_yy_xxyyyz, g_z_0_y_0_yy_xxyyyzz, g_z_0_y_0_yy_xxyyzz, g_z_0_y_0_yy_xxyyzzz, g_z_0_y_0_yy_xxyzzz, g_z_0_y_0_yy_xxyzzzz, g_z_0_y_0_yy_xxzzzz, g_z_0_y_0_yy_xxzzzzz, g_z_0_y_0_yy_xyyyyy, g_z_0_y_0_yy_xyyyyyy, g_z_0_y_0_yy_xyyyyyz, g_z_0_y_0_yy_xyyyyz, g_z_0_y_0_yy_xyyyyzz, g_z_0_y_0_yy_xyyyzz, g_z_0_y_0_yy_xyyyzzz, g_z_0_y_0_yy_xyyzzz, g_z_0_y_0_yy_xyyzzzz, g_z_0_y_0_yy_xyzzzz, g_z_0_y_0_yy_xyzzzzz, g_z_0_y_0_yy_xzzzzz, g_z_0_y_0_yy_xzzzzzz, g_z_0_y_0_yy_yyyyyy, g_z_0_y_0_yy_yyyyyz, g_z_0_y_0_yy_yyyyzz, g_z_0_y_0_yy_yyyzzz, g_z_0_y_0_yy_yyzzzz, g_z_0_y_0_yy_yzzzzz, g_z_0_y_0_yy_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_z_0_y_0_xyy_xxxxxx[k] = -g_z_0_y_0_yy_xxxxxx[k] * ab_x + g_z_0_y_0_yy_xxxxxxx[k];

                g_z_0_y_0_xyy_xxxxxy[k] = -g_z_0_y_0_yy_xxxxxy[k] * ab_x + g_z_0_y_0_yy_xxxxxxy[k];

                g_z_0_y_0_xyy_xxxxxz[k] = -g_z_0_y_0_yy_xxxxxz[k] * ab_x + g_z_0_y_0_yy_xxxxxxz[k];

                g_z_0_y_0_xyy_xxxxyy[k] = -g_z_0_y_0_yy_xxxxyy[k] * ab_x + g_z_0_y_0_yy_xxxxxyy[k];

                g_z_0_y_0_xyy_xxxxyz[k] = -g_z_0_y_0_yy_xxxxyz[k] * ab_x + g_z_0_y_0_yy_xxxxxyz[k];

                g_z_0_y_0_xyy_xxxxzz[k] = -g_z_0_y_0_yy_xxxxzz[k] * ab_x + g_z_0_y_0_yy_xxxxxzz[k];

                g_z_0_y_0_xyy_xxxyyy[k] = -g_z_0_y_0_yy_xxxyyy[k] * ab_x + g_z_0_y_0_yy_xxxxyyy[k];

                g_z_0_y_0_xyy_xxxyyz[k] = -g_z_0_y_0_yy_xxxyyz[k] * ab_x + g_z_0_y_0_yy_xxxxyyz[k];

                g_z_0_y_0_xyy_xxxyzz[k] = -g_z_0_y_0_yy_xxxyzz[k] * ab_x + g_z_0_y_0_yy_xxxxyzz[k];

                g_z_0_y_0_xyy_xxxzzz[k] = -g_z_0_y_0_yy_xxxzzz[k] * ab_x + g_z_0_y_0_yy_xxxxzzz[k];

                g_z_0_y_0_xyy_xxyyyy[k] = -g_z_0_y_0_yy_xxyyyy[k] * ab_x + g_z_0_y_0_yy_xxxyyyy[k];

                g_z_0_y_0_xyy_xxyyyz[k] = -g_z_0_y_0_yy_xxyyyz[k] * ab_x + g_z_0_y_0_yy_xxxyyyz[k];

                g_z_0_y_0_xyy_xxyyzz[k] = -g_z_0_y_0_yy_xxyyzz[k] * ab_x + g_z_0_y_0_yy_xxxyyzz[k];

                g_z_0_y_0_xyy_xxyzzz[k] = -g_z_0_y_0_yy_xxyzzz[k] * ab_x + g_z_0_y_0_yy_xxxyzzz[k];

                g_z_0_y_0_xyy_xxzzzz[k] = -g_z_0_y_0_yy_xxzzzz[k] * ab_x + g_z_0_y_0_yy_xxxzzzz[k];

                g_z_0_y_0_xyy_xyyyyy[k] = -g_z_0_y_0_yy_xyyyyy[k] * ab_x + g_z_0_y_0_yy_xxyyyyy[k];

                g_z_0_y_0_xyy_xyyyyz[k] = -g_z_0_y_0_yy_xyyyyz[k] * ab_x + g_z_0_y_0_yy_xxyyyyz[k];

                g_z_0_y_0_xyy_xyyyzz[k] = -g_z_0_y_0_yy_xyyyzz[k] * ab_x + g_z_0_y_0_yy_xxyyyzz[k];

                g_z_0_y_0_xyy_xyyzzz[k] = -g_z_0_y_0_yy_xyyzzz[k] * ab_x + g_z_0_y_0_yy_xxyyzzz[k];

                g_z_0_y_0_xyy_xyzzzz[k] = -g_z_0_y_0_yy_xyzzzz[k] * ab_x + g_z_0_y_0_yy_xxyzzzz[k];

                g_z_0_y_0_xyy_xzzzzz[k] = -g_z_0_y_0_yy_xzzzzz[k] * ab_x + g_z_0_y_0_yy_xxzzzzz[k];

                g_z_0_y_0_xyy_yyyyyy[k] = -g_z_0_y_0_yy_yyyyyy[k] * ab_x + g_z_0_y_0_yy_xyyyyyy[k];

                g_z_0_y_0_xyy_yyyyyz[k] = -g_z_0_y_0_yy_yyyyyz[k] * ab_x + g_z_0_y_0_yy_xyyyyyz[k];

                g_z_0_y_0_xyy_yyyyzz[k] = -g_z_0_y_0_yy_yyyyzz[k] * ab_x + g_z_0_y_0_yy_xyyyyzz[k];

                g_z_0_y_0_xyy_yyyzzz[k] = -g_z_0_y_0_yy_yyyzzz[k] * ab_x + g_z_0_y_0_yy_xyyyzzz[k];

                g_z_0_y_0_xyy_yyzzzz[k] = -g_z_0_y_0_yy_yyzzzz[k] * ab_x + g_z_0_y_0_yy_xyyzzzz[k];

                g_z_0_y_0_xyy_yzzzzz[k] = -g_z_0_y_0_yy_yzzzzz[k] * ab_x + g_z_0_y_0_yy_xyzzzzz[k];

                g_z_0_y_0_xyy_zzzzzz[k] = -g_z_0_y_0_yy_zzzzzz[k] * ab_x + g_z_0_y_0_yy_xzzzzzz[k];
            }

            /// Set up 2072-2100 components of targeted buffer : cbuffer.data(

            auto g_z_0_y_0_xyz_xxxxxx = cbuffer.data(fi_geom_1010_off + 2072 * ccomps * dcomps);

            auto g_z_0_y_0_xyz_xxxxxy = cbuffer.data(fi_geom_1010_off + 2073 * ccomps * dcomps);

            auto g_z_0_y_0_xyz_xxxxxz = cbuffer.data(fi_geom_1010_off + 2074 * ccomps * dcomps);

            auto g_z_0_y_0_xyz_xxxxyy = cbuffer.data(fi_geom_1010_off + 2075 * ccomps * dcomps);

            auto g_z_0_y_0_xyz_xxxxyz = cbuffer.data(fi_geom_1010_off + 2076 * ccomps * dcomps);

            auto g_z_0_y_0_xyz_xxxxzz = cbuffer.data(fi_geom_1010_off + 2077 * ccomps * dcomps);

            auto g_z_0_y_0_xyz_xxxyyy = cbuffer.data(fi_geom_1010_off + 2078 * ccomps * dcomps);

            auto g_z_0_y_0_xyz_xxxyyz = cbuffer.data(fi_geom_1010_off + 2079 * ccomps * dcomps);

            auto g_z_0_y_0_xyz_xxxyzz = cbuffer.data(fi_geom_1010_off + 2080 * ccomps * dcomps);

            auto g_z_0_y_0_xyz_xxxzzz = cbuffer.data(fi_geom_1010_off + 2081 * ccomps * dcomps);

            auto g_z_0_y_0_xyz_xxyyyy = cbuffer.data(fi_geom_1010_off + 2082 * ccomps * dcomps);

            auto g_z_0_y_0_xyz_xxyyyz = cbuffer.data(fi_geom_1010_off + 2083 * ccomps * dcomps);

            auto g_z_0_y_0_xyz_xxyyzz = cbuffer.data(fi_geom_1010_off + 2084 * ccomps * dcomps);

            auto g_z_0_y_0_xyz_xxyzzz = cbuffer.data(fi_geom_1010_off + 2085 * ccomps * dcomps);

            auto g_z_0_y_0_xyz_xxzzzz = cbuffer.data(fi_geom_1010_off + 2086 * ccomps * dcomps);

            auto g_z_0_y_0_xyz_xyyyyy = cbuffer.data(fi_geom_1010_off + 2087 * ccomps * dcomps);

            auto g_z_0_y_0_xyz_xyyyyz = cbuffer.data(fi_geom_1010_off + 2088 * ccomps * dcomps);

            auto g_z_0_y_0_xyz_xyyyzz = cbuffer.data(fi_geom_1010_off + 2089 * ccomps * dcomps);

            auto g_z_0_y_0_xyz_xyyzzz = cbuffer.data(fi_geom_1010_off + 2090 * ccomps * dcomps);

            auto g_z_0_y_0_xyz_xyzzzz = cbuffer.data(fi_geom_1010_off + 2091 * ccomps * dcomps);

            auto g_z_0_y_0_xyz_xzzzzz = cbuffer.data(fi_geom_1010_off + 2092 * ccomps * dcomps);

            auto g_z_0_y_0_xyz_yyyyyy = cbuffer.data(fi_geom_1010_off + 2093 * ccomps * dcomps);

            auto g_z_0_y_0_xyz_yyyyyz = cbuffer.data(fi_geom_1010_off + 2094 * ccomps * dcomps);

            auto g_z_0_y_0_xyz_yyyyzz = cbuffer.data(fi_geom_1010_off + 2095 * ccomps * dcomps);

            auto g_z_0_y_0_xyz_yyyzzz = cbuffer.data(fi_geom_1010_off + 2096 * ccomps * dcomps);

            auto g_z_0_y_0_xyz_yyzzzz = cbuffer.data(fi_geom_1010_off + 2097 * ccomps * dcomps);

            auto g_z_0_y_0_xyz_yzzzzz = cbuffer.data(fi_geom_1010_off + 2098 * ccomps * dcomps);

            auto g_z_0_y_0_xyz_zzzzzz = cbuffer.data(fi_geom_1010_off + 2099 * ccomps * dcomps);

            #pragma omp simd aligned(g_z_0_y_0_xyz_xxxxxx, g_z_0_y_0_xyz_xxxxxy, g_z_0_y_0_xyz_xxxxxz, g_z_0_y_0_xyz_xxxxyy, g_z_0_y_0_xyz_xxxxyz, g_z_0_y_0_xyz_xxxxzz, g_z_0_y_0_xyz_xxxyyy, g_z_0_y_0_xyz_xxxyyz, g_z_0_y_0_xyz_xxxyzz, g_z_0_y_0_xyz_xxxzzz, g_z_0_y_0_xyz_xxyyyy, g_z_0_y_0_xyz_xxyyyz, g_z_0_y_0_xyz_xxyyzz, g_z_0_y_0_xyz_xxyzzz, g_z_0_y_0_xyz_xxzzzz, g_z_0_y_0_xyz_xyyyyy, g_z_0_y_0_xyz_xyyyyz, g_z_0_y_0_xyz_xyyyzz, g_z_0_y_0_xyz_xyyzzz, g_z_0_y_0_xyz_xyzzzz, g_z_0_y_0_xyz_xzzzzz, g_z_0_y_0_xyz_yyyyyy, g_z_0_y_0_xyz_yyyyyz, g_z_0_y_0_xyz_yyyyzz, g_z_0_y_0_xyz_yyyzzz, g_z_0_y_0_xyz_yyzzzz, g_z_0_y_0_xyz_yzzzzz, g_z_0_y_0_xyz_zzzzzz, g_z_0_y_0_yz_xxxxxx, g_z_0_y_0_yz_xxxxxxx, g_z_0_y_0_yz_xxxxxxy, g_z_0_y_0_yz_xxxxxxz, g_z_0_y_0_yz_xxxxxy, g_z_0_y_0_yz_xxxxxyy, g_z_0_y_0_yz_xxxxxyz, g_z_0_y_0_yz_xxxxxz, g_z_0_y_0_yz_xxxxxzz, g_z_0_y_0_yz_xxxxyy, g_z_0_y_0_yz_xxxxyyy, g_z_0_y_0_yz_xxxxyyz, g_z_0_y_0_yz_xxxxyz, g_z_0_y_0_yz_xxxxyzz, g_z_0_y_0_yz_xxxxzz, g_z_0_y_0_yz_xxxxzzz, g_z_0_y_0_yz_xxxyyy, g_z_0_y_0_yz_xxxyyyy, g_z_0_y_0_yz_xxxyyyz, g_z_0_y_0_yz_xxxyyz, g_z_0_y_0_yz_xxxyyzz, g_z_0_y_0_yz_xxxyzz, g_z_0_y_0_yz_xxxyzzz, g_z_0_y_0_yz_xxxzzz, g_z_0_y_0_yz_xxxzzzz, g_z_0_y_0_yz_xxyyyy, g_z_0_y_0_yz_xxyyyyy, g_z_0_y_0_yz_xxyyyyz, g_z_0_y_0_yz_xxyyyz, g_z_0_y_0_yz_xxyyyzz, g_z_0_y_0_yz_xxyyzz, g_z_0_y_0_yz_xxyyzzz, g_z_0_y_0_yz_xxyzzz, g_z_0_y_0_yz_xxyzzzz, g_z_0_y_0_yz_xxzzzz, g_z_0_y_0_yz_xxzzzzz, g_z_0_y_0_yz_xyyyyy, g_z_0_y_0_yz_xyyyyyy, g_z_0_y_0_yz_xyyyyyz, g_z_0_y_0_yz_xyyyyz, g_z_0_y_0_yz_xyyyyzz, g_z_0_y_0_yz_xyyyzz, g_z_0_y_0_yz_xyyyzzz, g_z_0_y_0_yz_xyyzzz, g_z_0_y_0_yz_xyyzzzz, g_z_0_y_0_yz_xyzzzz, g_z_0_y_0_yz_xyzzzzz, g_z_0_y_0_yz_xzzzzz, g_z_0_y_0_yz_xzzzzzz, g_z_0_y_0_yz_yyyyyy, g_z_0_y_0_yz_yyyyyz, g_z_0_y_0_yz_yyyyzz, g_z_0_y_0_yz_yyyzzz, g_z_0_y_0_yz_yyzzzz, g_z_0_y_0_yz_yzzzzz, g_z_0_y_0_yz_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_z_0_y_0_xyz_xxxxxx[k] = -g_z_0_y_0_yz_xxxxxx[k] * ab_x + g_z_0_y_0_yz_xxxxxxx[k];

                g_z_0_y_0_xyz_xxxxxy[k] = -g_z_0_y_0_yz_xxxxxy[k] * ab_x + g_z_0_y_0_yz_xxxxxxy[k];

                g_z_0_y_0_xyz_xxxxxz[k] = -g_z_0_y_0_yz_xxxxxz[k] * ab_x + g_z_0_y_0_yz_xxxxxxz[k];

                g_z_0_y_0_xyz_xxxxyy[k] = -g_z_0_y_0_yz_xxxxyy[k] * ab_x + g_z_0_y_0_yz_xxxxxyy[k];

                g_z_0_y_0_xyz_xxxxyz[k] = -g_z_0_y_0_yz_xxxxyz[k] * ab_x + g_z_0_y_0_yz_xxxxxyz[k];

                g_z_0_y_0_xyz_xxxxzz[k] = -g_z_0_y_0_yz_xxxxzz[k] * ab_x + g_z_0_y_0_yz_xxxxxzz[k];

                g_z_0_y_0_xyz_xxxyyy[k] = -g_z_0_y_0_yz_xxxyyy[k] * ab_x + g_z_0_y_0_yz_xxxxyyy[k];

                g_z_0_y_0_xyz_xxxyyz[k] = -g_z_0_y_0_yz_xxxyyz[k] * ab_x + g_z_0_y_0_yz_xxxxyyz[k];

                g_z_0_y_0_xyz_xxxyzz[k] = -g_z_0_y_0_yz_xxxyzz[k] * ab_x + g_z_0_y_0_yz_xxxxyzz[k];

                g_z_0_y_0_xyz_xxxzzz[k] = -g_z_0_y_0_yz_xxxzzz[k] * ab_x + g_z_0_y_0_yz_xxxxzzz[k];

                g_z_0_y_0_xyz_xxyyyy[k] = -g_z_0_y_0_yz_xxyyyy[k] * ab_x + g_z_0_y_0_yz_xxxyyyy[k];

                g_z_0_y_0_xyz_xxyyyz[k] = -g_z_0_y_0_yz_xxyyyz[k] * ab_x + g_z_0_y_0_yz_xxxyyyz[k];

                g_z_0_y_0_xyz_xxyyzz[k] = -g_z_0_y_0_yz_xxyyzz[k] * ab_x + g_z_0_y_0_yz_xxxyyzz[k];

                g_z_0_y_0_xyz_xxyzzz[k] = -g_z_0_y_0_yz_xxyzzz[k] * ab_x + g_z_0_y_0_yz_xxxyzzz[k];

                g_z_0_y_0_xyz_xxzzzz[k] = -g_z_0_y_0_yz_xxzzzz[k] * ab_x + g_z_0_y_0_yz_xxxzzzz[k];

                g_z_0_y_0_xyz_xyyyyy[k] = -g_z_0_y_0_yz_xyyyyy[k] * ab_x + g_z_0_y_0_yz_xxyyyyy[k];

                g_z_0_y_0_xyz_xyyyyz[k] = -g_z_0_y_0_yz_xyyyyz[k] * ab_x + g_z_0_y_0_yz_xxyyyyz[k];

                g_z_0_y_0_xyz_xyyyzz[k] = -g_z_0_y_0_yz_xyyyzz[k] * ab_x + g_z_0_y_0_yz_xxyyyzz[k];

                g_z_0_y_0_xyz_xyyzzz[k] = -g_z_0_y_0_yz_xyyzzz[k] * ab_x + g_z_0_y_0_yz_xxyyzzz[k];

                g_z_0_y_0_xyz_xyzzzz[k] = -g_z_0_y_0_yz_xyzzzz[k] * ab_x + g_z_0_y_0_yz_xxyzzzz[k];

                g_z_0_y_0_xyz_xzzzzz[k] = -g_z_0_y_0_yz_xzzzzz[k] * ab_x + g_z_0_y_0_yz_xxzzzzz[k];

                g_z_0_y_0_xyz_yyyyyy[k] = -g_z_0_y_0_yz_yyyyyy[k] * ab_x + g_z_0_y_0_yz_xyyyyyy[k];

                g_z_0_y_0_xyz_yyyyyz[k] = -g_z_0_y_0_yz_yyyyyz[k] * ab_x + g_z_0_y_0_yz_xyyyyyz[k];

                g_z_0_y_0_xyz_yyyyzz[k] = -g_z_0_y_0_yz_yyyyzz[k] * ab_x + g_z_0_y_0_yz_xyyyyzz[k];

                g_z_0_y_0_xyz_yyyzzz[k] = -g_z_0_y_0_yz_yyyzzz[k] * ab_x + g_z_0_y_0_yz_xyyyzzz[k];

                g_z_0_y_0_xyz_yyzzzz[k] = -g_z_0_y_0_yz_yyzzzz[k] * ab_x + g_z_0_y_0_yz_xyyzzzz[k];

                g_z_0_y_0_xyz_yzzzzz[k] = -g_z_0_y_0_yz_yzzzzz[k] * ab_x + g_z_0_y_0_yz_xyzzzzz[k];

                g_z_0_y_0_xyz_zzzzzz[k] = -g_z_0_y_0_yz_zzzzzz[k] * ab_x + g_z_0_y_0_yz_xzzzzzz[k];
            }

            /// Set up 2100-2128 components of targeted buffer : cbuffer.data(

            auto g_z_0_y_0_xzz_xxxxxx = cbuffer.data(fi_geom_1010_off + 2100 * ccomps * dcomps);

            auto g_z_0_y_0_xzz_xxxxxy = cbuffer.data(fi_geom_1010_off + 2101 * ccomps * dcomps);

            auto g_z_0_y_0_xzz_xxxxxz = cbuffer.data(fi_geom_1010_off + 2102 * ccomps * dcomps);

            auto g_z_0_y_0_xzz_xxxxyy = cbuffer.data(fi_geom_1010_off + 2103 * ccomps * dcomps);

            auto g_z_0_y_0_xzz_xxxxyz = cbuffer.data(fi_geom_1010_off + 2104 * ccomps * dcomps);

            auto g_z_0_y_0_xzz_xxxxzz = cbuffer.data(fi_geom_1010_off + 2105 * ccomps * dcomps);

            auto g_z_0_y_0_xzz_xxxyyy = cbuffer.data(fi_geom_1010_off + 2106 * ccomps * dcomps);

            auto g_z_0_y_0_xzz_xxxyyz = cbuffer.data(fi_geom_1010_off + 2107 * ccomps * dcomps);

            auto g_z_0_y_0_xzz_xxxyzz = cbuffer.data(fi_geom_1010_off + 2108 * ccomps * dcomps);

            auto g_z_0_y_0_xzz_xxxzzz = cbuffer.data(fi_geom_1010_off + 2109 * ccomps * dcomps);

            auto g_z_0_y_0_xzz_xxyyyy = cbuffer.data(fi_geom_1010_off + 2110 * ccomps * dcomps);

            auto g_z_0_y_0_xzz_xxyyyz = cbuffer.data(fi_geom_1010_off + 2111 * ccomps * dcomps);

            auto g_z_0_y_0_xzz_xxyyzz = cbuffer.data(fi_geom_1010_off + 2112 * ccomps * dcomps);

            auto g_z_0_y_0_xzz_xxyzzz = cbuffer.data(fi_geom_1010_off + 2113 * ccomps * dcomps);

            auto g_z_0_y_0_xzz_xxzzzz = cbuffer.data(fi_geom_1010_off + 2114 * ccomps * dcomps);

            auto g_z_0_y_0_xzz_xyyyyy = cbuffer.data(fi_geom_1010_off + 2115 * ccomps * dcomps);

            auto g_z_0_y_0_xzz_xyyyyz = cbuffer.data(fi_geom_1010_off + 2116 * ccomps * dcomps);

            auto g_z_0_y_0_xzz_xyyyzz = cbuffer.data(fi_geom_1010_off + 2117 * ccomps * dcomps);

            auto g_z_0_y_0_xzz_xyyzzz = cbuffer.data(fi_geom_1010_off + 2118 * ccomps * dcomps);

            auto g_z_0_y_0_xzz_xyzzzz = cbuffer.data(fi_geom_1010_off + 2119 * ccomps * dcomps);

            auto g_z_0_y_0_xzz_xzzzzz = cbuffer.data(fi_geom_1010_off + 2120 * ccomps * dcomps);

            auto g_z_0_y_0_xzz_yyyyyy = cbuffer.data(fi_geom_1010_off + 2121 * ccomps * dcomps);

            auto g_z_0_y_0_xzz_yyyyyz = cbuffer.data(fi_geom_1010_off + 2122 * ccomps * dcomps);

            auto g_z_0_y_0_xzz_yyyyzz = cbuffer.data(fi_geom_1010_off + 2123 * ccomps * dcomps);

            auto g_z_0_y_0_xzz_yyyzzz = cbuffer.data(fi_geom_1010_off + 2124 * ccomps * dcomps);

            auto g_z_0_y_0_xzz_yyzzzz = cbuffer.data(fi_geom_1010_off + 2125 * ccomps * dcomps);

            auto g_z_0_y_0_xzz_yzzzzz = cbuffer.data(fi_geom_1010_off + 2126 * ccomps * dcomps);

            auto g_z_0_y_0_xzz_zzzzzz = cbuffer.data(fi_geom_1010_off + 2127 * ccomps * dcomps);

            #pragma omp simd aligned(g_z_0_y_0_xzz_xxxxxx, g_z_0_y_0_xzz_xxxxxy, g_z_0_y_0_xzz_xxxxxz, g_z_0_y_0_xzz_xxxxyy, g_z_0_y_0_xzz_xxxxyz, g_z_0_y_0_xzz_xxxxzz, g_z_0_y_0_xzz_xxxyyy, g_z_0_y_0_xzz_xxxyyz, g_z_0_y_0_xzz_xxxyzz, g_z_0_y_0_xzz_xxxzzz, g_z_0_y_0_xzz_xxyyyy, g_z_0_y_0_xzz_xxyyyz, g_z_0_y_0_xzz_xxyyzz, g_z_0_y_0_xzz_xxyzzz, g_z_0_y_0_xzz_xxzzzz, g_z_0_y_0_xzz_xyyyyy, g_z_0_y_0_xzz_xyyyyz, g_z_0_y_0_xzz_xyyyzz, g_z_0_y_0_xzz_xyyzzz, g_z_0_y_0_xzz_xyzzzz, g_z_0_y_0_xzz_xzzzzz, g_z_0_y_0_xzz_yyyyyy, g_z_0_y_0_xzz_yyyyyz, g_z_0_y_0_xzz_yyyyzz, g_z_0_y_0_xzz_yyyzzz, g_z_0_y_0_xzz_yyzzzz, g_z_0_y_0_xzz_yzzzzz, g_z_0_y_0_xzz_zzzzzz, g_z_0_y_0_zz_xxxxxx, g_z_0_y_0_zz_xxxxxxx, g_z_0_y_0_zz_xxxxxxy, g_z_0_y_0_zz_xxxxxxz, g_z_0_y_0_zz_xxxxxy, g_z_0_y_0_zz_xxxxxyy, g_z_0_y_0_zz_xxxxxyz, g_z_0_y_0_zz_xxxxxz, g_z_0_y_0_zz_xxxxxzz, g_z_0_y_0_zz_xxxxyy, g_z_0_y_0_zz_xxxxyyy, g_z_0_y_0_zz_xxxxyyz, g_z_0_y_0_zz_xxxxyz, g_z_0_y_0_zz_xxxxyzz, g_z_0_y_0_zz_xxxxzz, g_z_0_y_0_zz_xxxxzzz, g_z_0_y_0_zz_xxxyyy, g_z_0_y_0_zz_xxxyyyy, g_z_0_y_0_zz_xxxyyyz, g_z_0_y_0_zz_xxxyyz, g_z_0_y_0_zz_xxxyyzz, g_z_0_y_0_zz_xxxyzz, g_z_0_y_0_zz_xxxyzzz, g_z_0_y_0_zz_xxxzzz, g_z_0_y_0_zz_xxxzzzz, g_z_0_y_0_zz_xxyyyy, g_z_0_y_0_zz_xxyyyyy, g_z_0_y_0_zz_xxyyyyz, g_z_0_y_0_zz_xxyyyz, g_z_0_y_0_zz_xxyyyzz, g_z_0_y_0_zz_xxyyzz, g_z_0_y_0_zz_xxyyzzz, g_z_0_y_0_zz_xxyzzz, g_z_0_y_0_zz_xxyzzzz, g_z_0_y_0_zz_xxzzzz, g_z_0_y_0_zz_xxzzzzz, g_z_0_y_0_zz_xyyyyy, g_z_0_y_0_zz_xyyyyyy, g_z_0_y_0_zz_xyyyyyz, g_z_0_y_0_zz_xyyyyz, g_z_0_y_0_zz_xyyyyzz, g_z_0_y_0_zz_xyyyzz, g_z_0_y_0_zz_xyyyzzz, g_z_0_y_0_zz_xyyzzz, g_z_0_y_0_zz_xyyzzzz, g_z_0_y_0_zz_xyzzzz, g_z_0_y_0_zz_xyzzzzz, g_z_0_y_0_zz_xzzzzz, g_z_0_y_0_zz_xzzzzzz, g_z_0_y_0_zz_yyyyyy, g_z_0_y_0_zz_yyyyyz, g_z_0_y_0_zz_yyyyzz, g_z_0_y_0_zz_yyyzzz, g_z_0_y_0_zz_yyzzzz, g_z_0_y_0_zz_yzzzzz, g_z_0_y_0_zz_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_z_0_y_0_xzz_xxxxxx[k] = -g_z_0_y_0_zz_xxxxxx[k] * ab_x + g_z_0_y_0_zz_xxxxxxx[k];

                g_z_0_y_0_xzz_xxxxxy[k] = -g_z_0_y_0_zz_xxxxxy[k] * ab_x + g_z_0_y_0_zz_xxxxxxy[k];

                g_z_0_y_0_xzz_xxxxxz[k] = -g_z_0_y_0_zz_xxxxxz[k] * ab_x + g_z_0_y_0_zz_xxxxxxz[k];

                g_z_0_y_0_xzz_xxxxyy[k] = -g_z_0_y_0_zz_xxxxyy[k] * ab_x + g_z_0_y_0_zz_xxxxxyy[k];

                g_z_0_y_0_xzz_xxxxyz[k] = -g_z_0_y_0_zz_xxxxyz[k] * ab_x + g_z_0_y_0_zz_xxxxxyz[k];

                g_z_0_y_0_xzz_xxxxzz[k] = -g_z_0_y_0_zz_xxxxzz[k] * ab_x + g_z_0_y_0_zz_xxxxxzz[k];

                g_z_0_y_0_xzz_xxxyyy[k] = -g_z_0_y_0_zz_xxxyyy[k] * ab_x + g_z_0_y_0_zz_xxxxyyy[k];

                g_z_0_y_0_xzz_xxxyyz[k] = -g_z_0_y_0_zz_xxxyyz[k] * ab_x + g_z_0_y_0_zz_xxxxyyz[k];

                g_z_0_y_0_xzz_xxxyzz[k] = -g_z_0_y_0_zz_xxxyzz[k] * ab_x + g_z_0_y_0_zz_xxxxyzz[k];

                g_z_0_y_0_xzz_xxxzzz[k] = -g_z_0_y_0_zz_xxxzzz[k] * ab_x + g_z_0_y_0_zz_xxxxzzz[k];

                g_z_0_y_0_xzz_xxyyyy[k] = -g_z_0_y_0_zz_xxyyyy[k] * ab_x + g_z_0_y_0_zz_xxxyyyy[k];

                g_z_0_y_0_xzz_xxyyyz[k] = -g_z_0_y_0_zz_xxyyyz[k] * ab_x + g_z_0_y_0_zz_xxxyyyz[k];

                g_z_0_y_0_xzz_xxyyzz[k] = -g_z_0_y_0_zz_xxyyzz[k] * ab_x + g_z_0_y_0_zz_xxxyyzz[k];

                g_z_0_y_0_xzz_xxyzzz[k] = -g_z_0_y_0_zz_xxyzzz[k] * ab_x + g_z_0_y_0_zz_xxxyzzz[k];

                g_z_0_y_0_xzz_xxzzzz[k] = -g_z_0_y_0_zz_xxzzzz[k] * ab_x + g_z_0_y_0_zz_xxxzzzz[k];

                g_z_0_y_0_xzz_xyyyyy[k] = -g_z_0_y_0_zz_xyyyyy[k] * ab_x + g_z_0_y_0_zz_xxyyyyy[k];

                g_z_0_y_0_xzz_xyyyyz[k] = -g_z_0_y_0_zz_xyyyyz[k] * ab_x + g_z_0_y_0_zz_xxyyyyz[k];

                g_z_0_y_0_xzz_xyyyzz[k] = -g_z_0_y_0_zz_xyyyzz[k] * ab_x + g_z_0_y_0_zz_xxyyyzz[k];

                g_z_0_y_0_xzz_xyyzzz[k] = -g_z_0_y_0_zz_xyyzzz[k] * ab_x + g_z_0_y_0_zz_xxyyzzz[k];

                g_z_0_y_0_xzz_xyzzzz[k] = -g_z_0_y_0_zz_xyzzzz[k] * ab_x + g_z_0_y_0_zz_xxyzzzz[k];

                g_z_0_y_0_xzz_xzzzzz[k] = -g_z_0_y_0_zz_xzzzzz[k] * ab_x + g_z_0_y_0_zz_xxzzzzz[k];

                g_z_0_y_0_xzz_yyyyyy[k] = -g_z_0_y_0_zz_yyyyyy[k] * ab_x + g_z_0_y_0_zz_xyyyyyy[k];

                g_z_0_y_0_xzz_yyyyyz[k] = -g_z_0_y_0_zz_yyyyyz[k] * ab_x + g_z_0_y_0_zz_xyyyyyz[k];

                g_z_0_y_0_xzz_yyyyzz[k] = -g_z_0_y_0_zz_yyyyzz[k] * ab_x + g_z_0_y_0_zz_xyyyyzz[k];

                g_z_0_y_0_xzz_yyyzzz[k] = -g_z_0_y_0_zz_yyyzzz[k] * ab_x + g_z_0_y_0_zz_xyyyzzz[k];

                g_z_0_y_0_xzz_yyzzzz[k] = -g_z_0_y_0_zz_yyzzzz[k] * ab_x + g_z_0_y_0_zz_xyyzzzz[k];

                g_z_0_y_0_xzz_yzzzzz[k] = -g_z_0_y_0_zz_yzzzzz[k] * ab_x + g_z_0_y_0_zz_xyzzzzz[k];

                g_z_0_y_0_xzz_zzzzzz[k] = -g_z_0_y_0_zz_zzzzzz[k] * ab_x + g_z_0_y_0_zz_xzzzzzz[k];
            }

            /// Set up 2128-2156 components of targeted buffer : cbuffer.data(

            auto g_z_0_y_0_yyy_xxxxxx = cbuffer.data(fi_geom_1010_off + 2128 * ccomps * dcomps);

            auto g_z_0_y_0_yyy_xxxxxy = cbuffer.data(fi_geom_1010_off + 2129 * ccomps * dcomps);

            auto g_z_0_y_0_yyy_xxxxxz = cbuffer.data(fi_geom_1010_off + 2130 * ccomps * dcomps);

            auto g_z_0_y_0_yyy_xxxxyy = cbuffer.data(fi_geom_1010_off + 2131 * ccomps * dcomps);

            auto g_z_0_y_0_yyy_xxxxyz = cbuffer.data(fi_geom_1010_off + 2132 * ccomps * dcomps);

            auto g_z_0_y_0_yyy_xxxxzz = cbuffer.data(fi_geom_1010_off + 2133 * ccomps * dcomps);

            auto g_z_0_y_0_yyy_xxxyyy = cbuffer.data(fi_geom_1010_off + 2134 * ccomps * dcomps);

            auto g_z_0_y_0_yyy_xxxyyz = cbuffer.data(fi_geom_1010_off + 2135 * ccomps * dcomps);

            auto g_z_0_y_0_yyy_xxxyzz = cbuffer.data(fi_geom_1010_off + 2136 * ccomps * dcomps);

            auto g_z_0_y_0_yyy_xxxzzz = cbuffer.data(fi_geom_1010_off + 2137 * ccomps * dcomps);

            auto g_z_0_y_0_yyy_xxyyyy = cbuffer.data(fi_geom_1010_off + 2138 * ccomps * dcomps);

            auto g_z_0_y_0_yyy_xxyyyz = cbuffer.data(fi_geom_1010_off + 2139 * ccomps * dcomps);

            auto g_z_0_y_0_yyy_xxyyzz = cbuffer.data(fi_geom_1010_off + 2140 * ccomps * dcomps);

            auto g_z_0_y_0_yyy_xxyzzz = cbuffer.data(fi_geom_1010_off + 2141 * ccomps * dcomps);

            auto g_z_0_y_0_yyy_xxzzzz = cbuffer.data(fi_geom_1010_off + 2142 * ccomps * dcomps);

            auto g_z_0_y_0_yyy_xyyyyy = cbuffer.data(fi_geom_1010_off + 2143 * ccomps * dcomps);

            auto g_z_0_y_0_yyy_xyyyyz = cbuffer.data(fi_geom_1010_off + 2144 * ccomps * dcomps);

            auto g_z_0_y_0_yyy_xyyyzz = cbuffer.data(fi_geom_1010_off + 2145 * ccomps * dcomps);

            auto g_z_0_y_0_yyy_xyyzzz = cbuffer.data(fi_geom_1010_off + 2146 * ccomps * dcomps);

            auto g_z_0_y_0_yyy_xyzzzz = cbuffer.data(fi_geom_1010_off + 2147 * ccomps * dcomps);

            auto g_z_0_y_0_yyy_xzzzzz = cbuffer.data(fi_geom_1010_off + 2148 * ccomps * dcomps);

            auto g_z_0_y_0_yyy_yyyyyy = cbuffer.data(fi_geom_1010_off + 2149 * ccomps * dcomps);

            auto g_z_0_y_0_yyy_yyyyyz = cbuffer.data(fi_geom_1010_off + 2150 * ccomps * dcomps);

            auto g_z_0_y_0_yyy_yyyyzz = cbuffer.data(fi_geom_1010_off + 2151 * ccomps * dcomps);

            auto g_z_0_y_0_yyy_yyyzzz = cbuffer.data(fi_geom_1010_off + 2152 * ccomps * dcomps);

            auto g_z_0_y_0_yyy_yyzzzz = cbuffer.data(fi_geom_1010_off + 2153 * ccomps * dcomps);

            auto g_z_0_y_0_yyy_yzzzzz = cbuffer.data(fi_geom_1010_off + 2154 * ccomps * dcomps);

            auto g_z_0_y_0_yyy_zzzzzz = cbuffer.data(fi_geom_1010_off + 2155 * ccomps * dcomps);

            #pragma omp simd aligned(g_z_0_y_0_yy_xxxxxx, g_z_0_y_0_yy_xxxxxxy, g_z_0_y_0_yy_xxxxxy, g_z_0_y_0_yy_xxxxxyy, g_z_0_y_0_yy_xxxxxyz, g_z_0_y_0_yy_xxxxxz, g_z_0_y_0_yy_xxxxyy, g_z_0_y_0_yy_xxxxyyy, g_z_0_y_0_yy_xxxxyyz, g_z_0_y_0_yy_xxxxyz, g_z_0_y_0_yy_xxxxyzz, g_z_0_y_0_yy_xxxxzz, g_z_0_y_0_yy_xxxyyy, g_z_0_y_0_yy_xxxyyyy, g_z_0_y_0_yy_xxxyyyz, g_z_0_y_0_yy_xxxyyz, g_z_0_y_0_yy_xxxyyzz, g_z_0_y_0_yy_xxxyzz, g_z_0_y_0_yy_xxxyzzz, g_z_0_y_0_yy_xxxzzz, g_z_0_y_0_yy_xxyyyy, g_z_0_y_0_yy_xxyyyyy, g_z_0_y_0_yy_xxyyyyz, g_z_0_y_0_yy_xxyyyz, g_z_0_y_0_yy_xxyyyzz, g_z_0_y_0_yy_xxyyzz, g_z_0_y_0_yy_xxyyzzz, g_z_0_y_0_yy_xxyzzz, g_z_0_y_0_yy_xxyzzzz, g_z_0_y_0_yy_xxzzzz, g_z_0_y_0_yy_xyyyyy, g_z_0_y_0_yy_xyyyyyy, g_z_0_y_0_yy_xyyyyyz, g_z_0_y_0_yy_xyyyyz, g_z_0_y_0_yy_xyyyyzz, g_z_0_y_0_yy_xyyyzz, g_z_0_y_0_yy_xyyyzzz, g_z_0_y_0_yy_xyyzzz, g_z_0_y_0_yy_xyyzzzz, g_z_0_y_0_yy_xyzzzz, g_z_0_y_0_yy_xyzzzzz, g_z_0_y_0_yy_xzzzzz, g_z_0_y_0_yy_yyyyyy, g_z_0_y_0_yy_yyyyyyy, g_z_0_y_0_yy_yyyyyyz, g_z_0_y_0_yy_yyyyyz, g_z_0_y_0_yy_yyyyyzz, g_z_0_y_0_yy_yyyyzz, g_z_0_y_0_yy_yyyyzzz, g_z_0_y_0_yy_yyyzzz, g_z_0_y_0_yy_yyyzzzz, g_z_0_y_0_yy_yyzzzz, g_z_0_y_0_yy_yyzzzzz, g_z_0_y_0_yy_yzzzzz, g_z_0_y_0_yy_yzzzzzz, g_z_0_y_0_yy_zzzzzz, g_z_0_y_0_yyy_xxxxxx, g_z_0_y_0_yyy_xxxxxy, g_z_0_y_0_yyy_xxxxxz, g_z_0_y_0_yyy_xxxxyy, g_z_0_y_0_yyy_xxxxyz, g_z_0_y_0_yyy_xxxxzz, g_z_0_y_0_yyy_xxxyyy, g_z_0_y_0_yyy_xxxyyz, g_z_0_y_0_yyy_xxxyzz, g_z_0_y_0_yyy_xxxzzz, g_z_0_y_0_yyy_xxyyyy, g_z_0_y_0_yyy_xxyyyz, g_z_0_y_0_yyy_xxyyzz, g_z_0_y_0_yyy_xxyzzz, g_z_0_y_0_yyy_xxzzzz, g_z_0_y_0_yyy_xyyyyy, g_z_0_y_0_yyy_xyyyyz, g_z_0_y_0_yyy_xyyyzz, g_z_0_y_0_yyy_xyyzzz, g_z_0_y_0_yyy_xyzzzz, g_z_0_y_0_yyy_xzzzzz, g_z_0_y_0_yyy_yyyyyy, g_z_0_y_0_yyy_yyyyyz, g_z_0_y_0_yyy_yyyyzz, g_z_0_y_0_yyy_yyyzzz, g_z_0_y_0_yyy_yyzzzz, g_z_0_y_0_yyy_yzzzzz, g_z_0_y_0_yyy_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_z_0_y_0_yyy_xxxxxx[k] = -g_z_0_y_0_yy_xxxxxx[k] * ab_y + g_z_0_y_0_yy_xxxxxxy[k];

                g_z_0_y_0_yyy_xxxxxy[k] = -g_z_0_y_0_yy_xxxxxy[k] * ab_y + g_z_0_y_0_yy_xxxxxyy[k];

                g_z_0_y_0_yyy_xxxxxz[k] = -g_z_0_y_0_yy_xxxxxz[k] * ab_y + g_z_0_y_0_yy_xxxxxyz[k];

                g_z_0_y_0_yyy_xxxxyy[k] = -g_z_0_y_0_yy_xxxxyy[k] * ab_y + g_z_0_y_0_yy_xxxxyyy[k];

                g_z_0_y_0_yyy_xxxxyz[k] = -g_z_0_y_0_yy_xxxxyz[k] * ab_y + g_z_0_y_0_yy_xxxxyyz[k];

                g_z_0_y_0_yyy_xxxxzz[k] = -g_z_0_y_0_yy_xxxxzz[k] * ab_y + g_z_0_y_0_yy_xxxxyzz[k];

                g_z_0_y_0_yyy_xxxyyy[k] = -g_z_0_y_0_yy_xxxyyy[k] * ab_y + g_z_0_y_0_yy_xxxyyyy[k];

                g_z_0_y_0_yyy_xxxyyz[k] = -g_z_0_y_0_yy_xxxyyz[k] * ab_y + g_z_0_y_0_yy_xxxyyyz[k];

                g_z_0_y_0_yyy_xxxyzz[k] = -g_z_0_y_0_yy_xxxyzz[k] * ab_y + g_z_0_y_0_yy_xxxyyzz[k];

                g_z_0_y_0_yyy_xxxzzz[k] = -g_z_0_y_0_yy_xxxzzz[k] * ab_y + g_z_0_y_0_yy_xxxyzzz[k];

                g_z_0_y_0_yyy_xxyyyy[k] = -g_z_0_y_0_yy_xxyyyy[k] * ab_y + g_z_0_y_0_yy_xxyyyyy[k];

                g_z_0_y_0_yyy_xxyyyz[k] = -g_z_0_y_0_yy_xxyyyz[k] * ab_y + g_z_0_y_0_yy_xxyyyyz[k];

                g_z_0_y_0_yyy_xxyyzz[k] = -g_z_0_y_0_yy_xxyyzz[k] * ab_y + g_z_0_y_0_yy_xxyyyzz[k];

                g_z_0_y_0_yyy_xxyzzz[k] = -g_z_0_y_0_yy_xxyzzz[k] * ab_y + g_z_0_y_0_yy_xxyyzzz[k];

                g_z_0_y_0_yyy_xxzzzz[k] = -g_z_0_y_0_yy_xxzzzz[k] * ab_y + g_z_0_y_0_yy_xxyzzzz[k];

                g_z_0_y_0_yyy_xyyyyy[k] = -g_z_0_y_0_yy_xyyyyy[k] * ab_y + g_z_0_y_0_yy_xyyyyyy[k];

                g_z_0_y_0_yyy_xyyyyz[k] = -g_z_0_y_0_yy_xyyyyz[k] * ab_y + g_z_0_y_0_yy_xyyyyyz[k];

                g_z_0_y_0_yyy_xyyyzz[k] = -g_z_0_y_0_yy_xyyyzz[k] * ab_y + g_z_0_y_0_yy_xyyyyzz[k];

                g_z_0_y_0_yyy_xyyzzz[k] = -g_z_0_y_0_yy_xyyzzz[k] * ab_y + g_z_0_y_0_yy_xyyyzzz[k];

                g_z_0_y_0_yyy_xyzzzz[k] = -g_z_0_y_0_yy_xyzzzz[k] * ab_y + g_z_0_y_0_yy_xyyzzzz[k];

                g_z_0_y_0_yyy_xzzzzz[k] = -g_z_0_y_0_yy_xzzzzz[k] * ab_y + g_z_0_y_0_yy_xyzzzzz[k];

                g_z_0_y_0_yyy_yyyyyy[k] = -g_z_0_y_0_yy_yyyyyy[k] * ab_y + g_z_0_y_0_yy_yyyyyyy[k];

                g_z_0_y_0_yyy_yyyyyz[k] = -g_z_0_y_0_yy_yyyyyz[k] * ab_y + g_z_0_y_0_yy_yyyyyyz[k];

                g_z_0_y_0_yyy_yyyyzz[k] = -g_z_0_y_0_yy_yyyyzz[k] * ab_y + g_z_0_y_0_yy_yyyyyzz[k];

                g_z_0_y_0_yyy_yyyzzz[k] = -g_z_0_y_0_yy_yyyzzz[k] * ab_y + g_z_0_y_0_yy_yyyyzzz[k];

                g_z_0_y_0_yyy_yyzzzz[k] = -g_z_0_y_0_yy_yyzzzz[k] * ab_y + g_z_0_y_0_yy_yyyzzzz[k];

                g_z_0_y_0_yyy_yzzzzz[k] = -g_z_0_y_0_yy_yzzzzz[k] * ab_y + g_z_0_y_0_yy_yyzzzzz[k];

                g_z_0_y_0_yyy_zzzzzz[k] = -g_z_0_y_0_yy_zzzzzz[k] * ab_y + g_z_0_y_0_yy_yzzzzzz[k];
            }

            /// Set up 2156-2184 components of targeted buffer : cbuffer.data(

            auto g_z_0_y_0_yyz_xxxxxx = cbuffer.data(fi_geom_1010_off + 2156 * ccomps * dcomps);

            auto g_z_0_y_0_yyz_xxxxxy = cbuffer.data(fi_geom_1010_off + 2157 * ccomps * dcomps);

            auto g_z_0_y_0_yyz_xxxxxz = cbuffer.data(fi_geom_1010_off + 2158 * ccomps * dcomps);

            auto g_z_0_y_0_yyz_xxxxyy = cbuffer.data(fi_geom_1010_off + 2159 * ccomps * dcomps);

            auto g_z_0_y_0_yyz_xxxxyz = cbuffer.data(fi_geom_1010_off + 2160 * ccomps * dcomps);

            auto g_z_0_y_0_yyz_xxxxzz = cbuffer.data(fi_geom_1010_off + 2161 * ccomps * dcomps);

            auto g_z_0_y_0_yyz_xxxyyy = cbuffer.data(fi_geom_1010_off + 2162 * ccomps * dcomps);

            auto g_z_0_y_0_yyz_xxxyyz = cbuffer.data(fi_geom_1010_off + 2163 * ccomps * dcomps);

            auto g_z_0_y_0_yyz_xxxyzz = cbuffer.data(fi_geom_1010_off + 2164 * ccomps * dcomps);

            auto g_z_0_y_0_yyz_xxxzzz = cbuffer.data(fi_geom_1010_off + 2165 * ccomps * dcomps);

            auto g_z_0_y_0_yyz_xxyyyy = cbuffer.data(fi_geom_1010_off + 2166 * ccomps * dcomps);

            auto g_z_0_y_0_yyz_xxyyyz = cbuffer.data(fi_geom_1010_off + 2167 * ccomps * dcomps);

            auto g_z_0_y_0_yyz_xxyyzz = cbuffer.data(fi_geom_1010_off + 2168 * ccomps * dcomps);

            auto g_z_0_y_0_yyz_xxyzzz = cbuffer.data(fi_geom_1010_off + 2169 * ccomps * dcomps);

            auto g_z_0_y_0_yyz_xxzzzz = cbuffer.data(fi_geom_1010_off + 2170 * ccomps * dcomps);

            auto g_z_0_y_0_yyz_xyyyyy = cbuffer.data(fi_geom_1010_off + 2171 * ccomps * dcomps);

            auto g_z_0_y_0_yyz_xyyyyz = cbuffer.data(fi_geom_1010_off + 2172 * ccomps * dcomps);

            auto g_z_0_y_0_yyz_xyyyzz = cbuffer.data(fi_geom_1010_off + 2173 * ccomps * dcomps);

            auto g_z_0_y_0_yyz_xyyzzz = cbuffer.data(fi_geom_1010_off + 2174 * ccomps * dcomps);

            auto g_z_0_y_0_yyz_xyzzzz = cbuffer.data(fi_geom_1010_off + 2175 * ccomps * dcomps);

            auto g_z_0_y_0_yyz_xzzzzz = cbuffer.data(fi_geom_1010_off + 2176 * ccomps * dcomps);

            auto g_z_0_y_0_yyz_yyyyyy = cbuffer.data(fi_geom_1010_off + 2177 * ccomps * dcomps);

            auto g_z_0_y_0_yyz_yyyyyz = cbuffer.data(fi_geom_1010_off + 2178 * ccomps * dcomps);

            auto g_z_0_y_0_yyz_yyyyzz = cbuffer.data(fi_geom_1010_off + 2179 * ccomps * dcomps);

            auto g_z_0_y_0_yyz_yyyzzz = cbuffer.data(fi_geom_1010_off + 2180 * ccomps * dcomps);

            auto g_z_0_y_0_yyz_yyzzzz = cbuffer.data(fi_geom_1010_off + 2181 * ccomps * dcomps);

            auto g_z_0_y_0_yyz_yzzzzz = cbuffer.data(fi_geom_1010_off + 2182 * ccomps * dcomps);

            auto g_z_0_y_0_yyz_zzzzzz = cbuffer.data(fi_geom_1010_off + 2183 * ccomps * dcomps);

            #pragma omp simd aligned(g_z_0_y_0_yyz_xxxxxx, g_z_0_y_0_yyz_xxxxxy, g_z_0_y_0_yyz_xxxxxz, g_z_0_y_0_yyz_xxxxyy, g_z_0_y_0_yyz_xxxxyz, g_z_0_y_0_yyz_xxxxzz, g_z_0_y_0_yyz_xxxyyy, g_z_0_y_0_yyz_xxxyyz, g_z_0_y_0_yyz_xxxyzz, g_z_0_y_0_yyz_xxxzzz, g_z_0_y_0_yyz_xxyyyy, g_z_0_y_0_yyz_xxyyyz, g_z_0_y_0_yyz_xxyyzz, g_z_0_y_0_yyz_xxyzzz, g_z_0_y_0_yyz_xxzzzz, g_z_0_y_0_yyz_xyyyyy, g_z_0_y_0_yyz_xyyyyz, g_z_0_y_0_yyz_xyyyzz, g_z_0_y_0_yyz_xyyzzz, g_z_0_y_0_yyz_xyzzzz, g_z_0_y_0_yyz_xzzzzz, g_z_0_y_0_yyz_yyyyyy, g_z_0_y_0_yyz_yyyyyz, g_z_0_y_0_yyz_yyyyzz, g_z_0_y_0_yyz_yyyzzz, g_z_0_y_0_yyz_yyzzzz, g_z_0_y_0_yyz_yzzzzz, g_z_0_y_0_yyz_zzzzzz, g_z_0_y_0_yz_xxxxxx, g_z_0_y_0_yz_xxxxxxy, g_z_0_y_0_yz_xxxxxy, g_z_0_y_0_yz_xxxxxyy, g_z_0_y_0_yz_xxxxxyz, g_z_0_y_0_yz_xxxxxz, g_z_0_y_0_yz_xxxxyy, g_z_0_y_0_yz_xxxxyyy, g_z_0_y_0_yz_xxxxyyz, g_z_0_y_0_yz_xxxxyz, g_z_0_y_0_yz_xxxxyzz, g_z_0_y_0_yz_xxxxzz, g_z_0_y_0_yz_xxxyyy, g_z_0_y_0_yz_xxxyyyy, g_z_0_y_0_yz_xxxyyyz, g_z_0_y_0_yz_xxxyyz, g_z_0_y_0_yz_xxxyyzz, g_z_0_y_0_yz_xxxyzz, g_z_0_y_0_yz_xxxyzzz, g_z_0_y_0_yz_xxxzzz, g_z_0_y_0_yz_xxyyyy, g_z_0_y_0_yz_xxyyyyy, g_z_0_y_0_yz_xxyyyyz, g_z_0_y_0_yz_xxyyyz, g_z_0_y_0_yz_xxyyyzz, g_z_0_y_0_yz_xxyyzz, g_z_0_y_0_yz_xxyyzzz, g_z_0_y_0_yz_xxyzzz, g_z_0_y_0_yz_xxyzzzz, g_z_0_y_0_yz_xxzzzz, g_z_0_y_0_yz_xyyyyy, g_z_0_y_0_yz_xyyyyyy, g_z_0_y_0_yz_xyyyyyz, g_z_0_y_0_yz_xyyyyz, g_z_0_y_0_yz_xyyyyzz, g_z_0_y_0_yz_xyyyzz, g_z_0_y_0_yz_xyyyzzz, g_z_0_y_0_yz_xyyzzz, g_z_0_y_0_yz_xyyzzzz, g_z_0_y_0_yz_xyzzzz, g_z_0_y_0_yz_xyzzzzz, g_z_0_y_0_yz_xzzzzz, g_z_0_y_0_yz_yyyyyy, g_z_0_y_0_yz_yyyyyyy, g_z_0_y_0_yz_yyyyyyz, g_z_0_y_0_yz_yyyyyz, g_z_0_y_0_yz_yyyyyzz, g_z_0_y_0_yz_yyyyzz, g_z_0_y_0_yz_yyyyzzz, g_z_0_y_0_yz_yyyzzz, g_z_0_y_0_yz_yyyzzzz, g_z_0_y_0_yz_yyzzzz, g_z_0_y_0_yz_yyzzzzz, g_z_0_y_0_yz_yzzzzz, g_z_0_y_0_yz_yzzzzzz, g_z_0_y_0_yz_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_z_0_y_0_yyz_xxxxxx[k] = -g_z_0_y_0_yz_xxxxxx[k] * ab_y + g_z_0_y_0_yz_xxxxxxy[k];

                g_z_0_y_0_yyz_xxxxxy[k] = -g_z_0_y_0_yz_xxxxxy[k] * ab_y + g_z_0_y_0_yz_xxxxxyy[k];

                g_z_0_y_0_yyz_xxxxxz[k] = -g_z_0_y_0_yz_xxxxxz[k] * ab_y + g_z_0_y_0_yz_xxxxxyz[k];

                g_z_0_y_0_yyz_xxxxyy[k] = -g_z_0_y_0_yz_xxxxyy[k] * ab_y + g_z_0_y_0_yz_xxxxyyy[k];

                g_z_0_y_0_yyz_xxxxyz[k] = -g_z_0_y_0_yz_xxxxyz[k] * ab_y + g_z_0_y_0_yz_xxxxyyz[k];

                g_z_0_y_0_yyz_xxxxzz[k] = -g_z_0_y_0_yz_xxxxzz[k] * ab_y + g_z_0_y_0_yz_xxxxyzz[k];

                g_z_0_y_0_yyz_xxxyyy[k] = -g_z_0_y_0_yz_xxxyyy[k] * ab_y + g_z_0_y_0_yz_xxxyyyy[k];

                g_z_0_y_0_yyz_xxxyyz[k] = -g_z_0_y_0_yz_xxxyyz[k] * ab_y + g_z_0_y_0_yz_xxxyyyz[k];

                g_z_0_y_0_yyz_xxxyzz[k] = -g_z_0_y_0_yz_xxxyzz[k] * ab_y + g_z_0_y_0_yz_xxxyyzz[k];

                g_z_0_y_0_yyz_xxxzzz[k] = -g_z_0_y_0_yz_xxxzzz[k] * ab_y + g_z_0_y_0_yz_xxxyzzz[k];

                g_z_0_y_0_yyz_xxyyyy[k] = -g_z_0_y_0_yz_xxyyyy[k] * ab_y + g_z_0_y_0_yz_xxyyyyy[k];

                g_z_0_y_0_yyz_xxyyyz[k] = -g_z_0_y_0_yz_xxyyyz[k] * ab_y + g_z_0_y_0_yz_xxyyyyz[k];

                g_z_0_y_0_yyz_xxyyzz[k] = -g_z_0_y_0_yz_xxyyzz[k] * ab_y + g_z_0_y_0_yz_xxyyyzz[k];

                g_z_0_y_0_yyz_xxyzzz[k] = -g_z_0_y_0_yz_xxyzzz[k] * ab_y + g_z_0_y_0_yz_xxyyzzz[k];

                g_z_0_y_0_yyz_xxzzzz[k] = -g_z_0_y_0_yz_xxzzzz[k] * ab_y + g_z_0_y_0_yz_xxyzzzz[k];

                g_z_0_y_0_yyz_xyyyyy[k] = -g_z_0_y_0_yz_xyyyyy[k] * ab_y + g_z_0_y_0_yz_xyyyyyy[k];

                g_z_0_y_0_yyz_xyyyyz[k] = -g_z_0_y_0_yz_xyyyyz[k] * ab_y + g_z_0_y_0_yz_xyyyyyz[k];

                g_z_0_y_0_yyz_xyyyzz[k] = -g_z_0_y_0_yz_xyyyzz[k] * ab_y + g_z_0_y_0_yz_xyyyyzz[k];

                g_z_0_y_0_yyz_xyyzzz[k] = -g_z_0_y_0_yz_xyyzzz[k] * ab_y + g_z_0_y_0_yz_xyyyzzz[k];

                g_z_0_y_0_yyz_xyzzzz[k] = -g_z_0_y_0_yz_xyzzzz[k] * ab_y + g_z_0_y_0_yz_xyyzzzz[k];

                g_z_0_y_0_yyz_xzzzzz[k] = -g_z_0_y_0_yz_xzzzzz[k] * ab_y + g_z_0_y_0_yz_xyzzzzz[k];

                g_z_0_y_0_yyz_yyyyyy[k] = -g_z_0_y_0_yz_yyyyyy[k] * ab_y + g_z_0_y_0_yz_yyyyyyy[k];

                g_z_0_y_0_yyz_yyyyyz[k] = -g_z_0_y_0_yz_yyyyyz[k] * ab_y + g_z_0_y_0_yz_yyyyyyz[k];

                g_z_0_y_0_yyz_yyyyzz[k] = -g_z_0_y_0_yz_yyyyzz[k] * ab_y + g_z_0_y_0_yz_yyyyyzz[k];

                g_z_0_y_0_yyz_yyyzzz[k] = -g_z_0_y_0_yz_yyyzzz[k] * ab_y + g_z_0_y_0_yz_yyyyzzz[k];

                g_z_0_y_0_yyz_yyzzzz[k] = -g_z_0_y_0_yz_yyzzzz[k] * ab_y + g_z_0_y_0_yz_yyyzzzz[k];

                g_z_0_y_0_yyz_yzzzzz[k] = -g_z_0_y_0_yz_yzzzzz[k] * ab_y + g_z_0_y_0_yz_yyzzzzz[k];

                g_z_0_y_0_yyz_zzzzzz[k] = -g_z_0_y_0_yz_zzzzzz[k] * ab_y + g_z_0_y_0_yz_yzzzzzz[k];
            }

            /// Set up 2184-2212 components of targeted buffer : cbuffer.data(

            auto g_z_0_y_0_yzz_xxxxxx = cbuffer.data(fi_geom_1010_off + 2184 * ccomps * dcomps);

            auto g_z_0_y_0_yzz_xxxxxy = cbuffer.data(fi_geom_1010_off + 2185 * ccomps * dcomps);

            auto g_z_0_y_0_yzz_xxxxxz = cbuffer.data(fi_geom_1010_off + 2186 * ccomps * dcomps);

            auto g_z_0_y_0_yzz_xxxxyy = cbuffer.data(fi_geom_1010_off + 2187 * ccomps * dcomps);

            auto g_z_0_y_0_yzz_xxxxyz = cbuffer.data(fi_geom_1010_off + 2188 * ccomps * dcomps);

            auto g_z_0_y_0_yzz_xxxxzz = cbuffer.data(fi_geom_1010_off + 2189 * ccomps * dcomps);

            auto g_z_0_y_0_yzz_xxxyyy = cbuffer.data(fi_geom_1010_off + 2190 * ccomps * dcomps);

            auto g_z_0_y_0_yzz_xxxyyz = cbuffer.data(fi_geom_1010_off + 2191 * ccomps * dcomps);

            auto g_z_0_y_0_yzz_xxxyzz = cbuffer.data(fi_geom_1010_off + 2192 * ccomps * dcomps);

            auto g_z_0_y_0_yzz_xxxzzz = cbuffer.data(fi_geom_1010_off + 2193 * ccomps * dcomps);

            auto g_z_0_y_0_yzz_xxyyyy = cbuffer.data(fi_geom_1010_off + 2194 * ccomps * dcomps);

            auto g_z_0_y_0_yzz_xxyyyz = cbuffer.data(fi_geom_1010_off + 2195 * ccomps * dcomps);

            auto g_z_0_y_0_yzz_xxyyzz = cbuffer.data(fi_geom_1010_off + 2196 * ccomps * dcomps);

            auto g_z_0_y_0_yzz_xxyzzz = cbuffer.data(fi_geom_1010_off + 2197 * ccomps * dcomps);

            auto g_z_0_y_0_yzz_xxzzzz = cbuffer.data(fi_geom_1010_off + 2198 * ccomps * dcomps);

            auto g_z_0_y_0_yzz_xyyyyy = cbuffer.data(fi_geom_1010_off + 2199 * ccomps * dcomps);

            auto g_z_0_y_0_yzz_xyyyyz = cbuffer.data(fi_geom_1010_off + 2200 * ccomps * dcomps);

            auto g_z_0_y_0_yzz_xyyyzz = cbuffer.data(fi_geom_1010_off + 2201 * ccomps * dcomps);

            auto g_z_0_y_0_yzz_xyyzzz = cbuffer.data(fi_geom_1010_off + 2202 * ccomps * dcomps);

            auto g_z_0_y_0_yzz_xyzzzz = cbuffer.data(fi_geom_1010_off + 2203 * ccomps * dcomps);

            auto g_z_0_y_0_yzz_xzzzzz = cbuffer.data(fi_geom_1010_off + 2204 * ccomps * dcomps);

            auto g_z_0_y_0_yzz_yyyyyy = cbuffer.data(fi_geom_1010_off + 2205 * ccomps * dcomps);

            auto g_z_0_y_0_yzz_yyyyyz = cbuffer.data(fi_geom_1010_off + 2206 * ccomps * dcomps);

            auto g_z_0_y_0_yzz_yyyyzz = cbuffer.data(fi_geom_1010_off + 2207 * ccomps * dcomps);

            auto g_z_0_y_0_yzz_yyyzzz = cbuffer.data(fi_geom_1010_off + 2208 * ccomps * dcomps);

            auto g_z_0_y_0_yzz_yyzzzz = cbuffer.data(fi_geom_1010_off + 2209 * ccomps * dcomps);

            auto g_z_0_y_0_yzz_yzzzzz = cbuffer.data(fi_geom_1010_off + 2210 * ccomps * dcomps);

            auto g_z_0_y_0_yzz_zzzzzz = cbuffer.data(fi_geom_1010_off + 2211 * ccomps * dcomps);

            #pragma omp simd aligned(g_z_0_y_0_yzz_xxxxxx, g_z_0_y_0_yzz_xxxxxy, g_z_0_y_0_yzz_xxxxxz, g_z_0_y_0_yzz_xxxxyy, g_z_0_y_0_yzz_xxxxyz, g_z_0_y_0_yzz_xxxxzz, g_z_0_y_0_yzz_xxxyyy, g_z_0_y_0_yzz_xxxyyz, g_z_0_y_0_yzz_xxxyzz, g_z_0_y_0_yzz_xxxzzz, g_z_0_y_0_yzz_xxyyyy, g_z_0_y_0_yzz_xxyyyz, g_z_0_y_0_yzz_xxyyzz, g_z_0_y_0_yzz_xxyzzz, g_z_0_y_0_yzz_xxzzzz, g_z_0_y_0_yzz_xyyyyy, g_z_0_y_0_yzz_xyyyyz, g_z_0_y_0_yzz_xyyyzz, g_z_0_y_0_yzz_xyyzzz, g_z_0_y_0_yzz_xyzzzz, g_z_0_y_0_yzz_xzzzzz, g_z_0_y_0_yzz_yyyyyy, g_z_0_y_0_yzz_yyyyyz, g_z_0_y_0_yzz_yyyyzz, g_z_0_y_0_yzz_yyyzzz, g_z_0_y_0_yzz_yyzzzz, g_z_0_y_0_yzz_yzzzzz, g_z_0_y_0_yzz_zzzzzz, g_z_0_y_0_zz_xxxxxx, g_z_0_y_0_zz_xxxxxxy, g_z_0_y_0_zz_xxxxxy, g_z_0_y_0_zz_xxxxxyy, g_z_0_y_0_zz_xxxxxyz, g_z_0_y_0_zz_xxxxxz, g_z_0_y_0_zz_xxxxyy, g_z_0_y_0_zz_xxxxyyy, g_z_0_y_0_zz_xxxxyyz, g_z_0_y_0_zz_xxxxyz, g_z_0_y_0_zz_xxxxyzz, g_z_0_y_0_zz_xxxxzz, g_z_0_y_0_zz_xxxyyy, g_z_0_y_0_zz_xxxyyyy, g_z_0_y_0_zz_xxxyyyz, g_z_0_y_0_zz_xxxyyz, g_z_0_y_0_zz_xxxyyzz, g_z_0_y_0_zz_xxxyzz, g_z_0_y_0_zz_xxxyzzz, g_z_0_y_0_zz_xxxzzz, g_z_0_y_0_zz_xxyyyy, g_z_0_y_0_zz_xxyyyyy, g_z_0_y_0_zz_xxyyyyz, g_z_0_y_0_zz_xxyyyz, g_z_0_y_0_zz_xxyyyzz, g_z_0_y_0_zz_xxyyzz, g_z_0_y_0_zz_xxyyzzz, g_z_0_y_0_zz_xxyzzz, g_z_0_y_0_zz_xxyzzzz, g_z_0_y_0_zz_xxzzzz, g_z_0_y_0_zz_xyyyyy, g_z_0_y_0_zz_xyyyyyy, g_z_0_y_0_zz_xyyyyyz, g_z_0_y_0_zz_xyyyyz, g_z_0_y_0_zz_xyyyyzz, g_z_0_y_0_zz_xyyyzz, g_z_0_y_0_zz_xyyyzzz, g_z_0_y_0_zz_xyyzzz, g_z_0_y_0_zz_xyyzzzz, g_z_0_y_0_zz_xyzzzz, g_z_0_y_0_zz_xyzzzzz, g_z_0_y_0_zz_xzzzzz, g_z_0_y_0_zz_yyyyyy, g_z_0_y_0_zz_yyyyyyy, g_z_0_y_0_zz_yyyyyyz, g_z_0_y_0_zz_yyyyyz, g_z_0_y_0_zz_yyyyyzz, g_z_0_y_0_zz_yyyyzz, g_z_0_y_0_zz_yyyyzzz, g_z_0_y_0_zz_yyyzzz, g_z_0_y_0_zz_yyyzzzz, g_z_0_y_0_zz_yyzzzz, g_z_0_y_0_zz_yyzzzzz, g_z_0_y_0_zz_yzzzzz, g_z_0_y_0_zz_yzzzzzz, g_z_0_y_0_zz_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_z_0_y_0_yzz_xxxxxx[k] = -g_z_0_y_0_zz_xxxxxx[k] * ab_y + g_z_0_y_0_zz_xxxxxxy[k];

                g_z_0_y_0_yzz_xxxxxy[k] = -g_z_0_y_0_zz_xxxxxy[k] * ab_y + g_z_0_y_0_zz_xxxxxyy[k];

                g_z_0_y_0_yzz_xxxxxz[k] = -g_z_0_y_0_zz_xxxxxz[k] * ab_y + g_z_0_y_0_zz_xxxxxyz[k];

                g_z_0_y_0_yzz_xxxxyy[k] = -g_z_0_y_0_zz_xxxxyy[k] * ab_y + g_z_0_y_0_zz_xxxxyyy[k];

                g_z_0_y_0_yzz_xxxxyz[k] = -g_z_0_y_0_zz_xxxxyz[k] * ab_y + g_z_0_y_0_zz_xxxxyyz[k];

                g_z_0_y_0_yzz_xxxxzz[k] = -g_z_0_y_0_zz_xxxxzz[k] * ab_y + g_z_0_y_0_zz_xxxxyzz[k];

                g_z_0_y_0_yzz_xxxyyy[k] = -g_z_0_y_0_zz_xxxyyy[k] * ab_y + g_z_0_y_0_zz_xxxyyyy[k];

                g_z_0_y_0_yzz_xxxyyz[k] = -g_z_0_y_0_zz_xxxyyz[k] * ab_y + g_z_0_y_0_zz_xxxyyyz[k];

                g_z_0_y_0_yzz_xxxyzz[k] = -g_z_0_y_0_zz_xxxyzz[k] * ab_y + g_z_0_y_0_zz_xxxyyzz[k];

                g_z_0_y_0_yzz_xxxzzz[k] = -g_z_0_y_0_zz_xxxzzz[k] * ab_y + g_z_0_y_0_zz_xxxyzzz[k];

                g_z_0_y_0_yzz_xxyyyy[k] = -g_z_0_y_0_zz_xxyyyy[k] * ab_y + g_z_0_y_0_zz_xxyyyyy[k];

                g_z_0_y_0_yzz_xxyyyz[k] = -g_z_0_y_0_zz_xxyyyz[k] * ab_y + g_z_0_y_0_zz_xxyyyyz[k];

                g_z_0_y_0_yzz_xxyyzz[k] = -g_z_0_y_0_zz_xxyyzz[k] * ab_y + g_z_0_y_0_zz_xxyyyzz[k];

                g_z_0_y_0_yzz_xxyzzz[k] = -g_z_0_y_0_zz_xxyzzz[k] * ab_y + g_z_0_y_0_zz_xxyyzzz[k];

                g_z_0_y_0_yzz_xxzzzz[k] = -g_z_0_y_0_zz_xxzzzz[k] * ab_y + g_z_0_y_0_zz_xxyzzzz[k];

                g_z_0_y_0_yzz_xyyyyy[k] = -g_z_0_y_0_zz_xyyyyy[k] * ab_y + g_z_0_y_0_zz_xyyyyyy[k];

                g_z_0_y_0_yzz_xyyyyz[k] = -g_z_0_y_0_zz_xyyyyz[k] * ab_y + g_z_0_y_0_zz_xyyyyyz[k];

                g_z_0_y_0_yzz_xyyyzz[k] = -g_z_0_y_0_zz_xyyyzz[k] * ab_y + g_z_0_y_0_zz_xyyyyzz[k];

                g_z_0_y_0_yzz_xyyzzz[k] = -g_z_0_y_0_zz_xyyzzz[k] * ab_y + g_z_0_y_0_zz_xyyyzzz[k];

                g_z_0_y_0_yzz_xyzzzz[k] = -g_z_0_y_0_zz_xyzzzz[k] * ab_y + g_z_0_y_0_zz_xyyzzzz[k];

                g_z_0_y_0_yzz_xzzzzz[k] = -g_z_0_y_0_zz_xzzzzz[k] * ab_y + g_z_0_y_0_zz_xyzzzzz[k];

                g_z_0_y_0_yzz_yyyyyy[k] = -g_z_0_y_0_zz_yyyyyy[k] * ab_y + g_z_0_y_0_zz_yyyyyyy[k];

                g_z_0_y_0_yzz_yyyyyz[k] = -g_z_0_y_0_zz_yyyyyz[k] * ab_y + g_z_0_y_0_zz_yyyyyyz[k];

                g_z_0_y_0_yzz_yyyyzz[k] = -g_z_0_y_0_zz_yyyyzz[k] * ab_y + g_z_0_y_0_zz_yyyyyzz[k];

                g_z_0_y_0_yzz_yyyzzz[k] = -g_z_0_y_0_zz_yyyzzz[k] * ab_y + g_z_0_y_0_zz_yyyyzzz[k];

                g_z_0_y_0_yzz_yyzzzz[k] = -g_z_0_y_0_zz_yyzzzz[k] * ab_y + g_z_0_y_0_zz_yyyzzzz[k];

                g_z_0_y_0_yzz_yzzzzz[k] = -g_z_0_y_0_zz_yzzzzz[k] * ab_y + g_z_0_y_0_zz_yyzzzzz[k];

                g_z_0_y_0_yzz_zzzzzz[k] = -g_z_0_y_0_zz_zzzzzz[k] * ab_y + g_z_0_y_0_zz_yzzzzzz[k];
            }

            /// Set up 2212-2240 components of targeted buffer : cbuffer.data(

            auto g_z_0_y_0_zzz_xxxxxx = cbuffer.data(fi_geom_1010_off + 2212 * ccomps * dcomps);

            auto g_z_0_y_0_zzz_xxxxxy = cbuffer.data(fi_geom_1010_off + 2213 * ccomps * dcomps);

            auto g_z_0_y_0_zzz_xxxxxz = cbuffer.data(fi_geom_1010_off + 2214 * ccomps * dcomps);

            auto g_z_0_y_0_zzz_xxxxyy = cbuffer.data(fi_geom_1010_off + 2215 * ccomps * dcomps);

            auto g_z_0_y_0_zzz_xxxxyz = cbuffer.data(fi_geom_1010_off + 2216 * ccomps * dcomps);

            auto g_z_0_y_0_zzz_xxxxzz = cbuffer.data(fi_geom_1010_off + 2217 * ccomps * dcomps);

            auto g_z_0_y_0_zzz_xxxyyy = cbuffer.data(fi_geom_1010_off + 2218 * ccomps * dcomps);

            auto g_z_0_y_0_zzz_xxxyyz = cbuffer.data(fi_geom_1010_off + 2219 * ccomps * dcomps);

            auto g_z_0_y_0_zzz_xxxyzz = cbuffer.data(fi_geom_1010_off + 2220 * ccomps * dcomps);

            auto g_z_0_y_0_zzz_xxxzzz = cbuffer.data(fi_geom_1010_off + 2221 * ccomps * dcomps);

            auto g_z_0_y_0_zzz_xxyyyy = cbuffer.data(fi_geom_1010_off + 2222 * ccomps * dcomps);

            auto g_z_0_y_0_zzz_xxyyyz = cbuffer.data(fi_geom_1010_off + 2223 * ccomps * dcomps);

            auto g_z_0_y_0_zzz_xxyyzz = cbuffer.data(fi_geom_1010_off + 2224 * ccomps * dcomps);

            auto g_z_0_y_0_zzz_xxyzzz = cbuffer.data(fi_geom_1010_off + 2225 * ccomps * dcomps);

            auto g_z_0_y_0_zzz_xxzzzz = cbuffer.data(fi_geom_1010_off + 2226 * ccomps * dcomps);

            auto g_z_0_y_0_zzz_xyyyyy = cbuffer.data(fi_geom_1010_off + 2227 * ccomps * dcomps);

            auto g_z_0_y_0_zzz_xyyyyz = cbuffer.data(fi_geom_1010_off + 2228 * ccomps * dcomps);

            auto g_z_0_y_0_zzz_xyyyzz = cbuffer.data(fi_geom_1010_off + 2229 * ccomps * dcomps);

            auto g_z_0_y_0_zzz_xyyzzz = cbuffer.data(fi_geom_1010_off + 2230 * ccomps * dcomps);

            auto g_z_0_y_0_zzz_xyzzzz = cbuffer.data(fi_geom_1010_off + 2231 * ccomps * dcomps);

            auto g_z_0_y_0_zzz_xzzzzz = cbuffer.data(fi_geom_1010_off + 2232 * ccomps * dcomps);

            auto g_z_0_y_0_zzz_yyyyyy = cbuffer.data(fi_geom_1010_off + 2233 * ccomps * dcomps);

            auto g_z_0_y_0_zzz_yyyyyz = cbuffer.data(fi_geom_1010_off + 2234 * ccomps * dcomps);

            auto g_z_0_y_0_zzz_yyyyzz = cbuffer.data(fi_geom_1010_off + 2235 * ccomps * dcomps);

            auto g_z_0_y_0_zzz_yyyzzz = cbuffer.data(fi_geom_1010_off + 2236 * ccomps * dcomps);

            auto g_z_0_y_0_zzz_yyzzzz = cbuffer.data(fi_geom_1010_off + 2237 * ccomps * dcomps);

            auto g_z_0_y_0_zzz_yzzzzz = cbuffer.data(fi_geom_1010_off + 2238 * ccomps * dcomps);

            auto g_z_0_y_0_zzz_zzzzzz = cbuffer.data(fi_geom_1010_off + 2239 * ccomps * dcomps);

            #pragma omp simd aligned(g_0_0_y_0_zz_xxxxxx, g_0_0_y_0_zz_xxxxxy, g_0_0_y_0_zz_xxxxxz, g_0_0_y_0_zz_xxxxyy, g_0_0_y_0_zz_xxxxyz, g_0_0_y_0_zz_xxxxzz, g_0_0_y_0_zz_xxxyyy, g_0_0_y_0_zz_xxxyyz, g_0_0_y_0_zz_xxxyzz, g_0_0_y_0_zz_xxxzzz, g_0_0_y_0_zz_xxyyyy, g_0_0_y_0_zz_xxyyyz, g_0_0_y_0_zz_xxyyzz, g_0_0_y_0_zz_xxyzzz, g_0_0_y_0_zz_xxzzzz, g_0_0_y_0_zz_xyyyyy, g_0_0_y_0_zz_xyyyyz, g_0_0_y_0_zz_xyyyzz, g_0_0_y_0_zz_xyyzzz, g_0_0_y_0_zz_xyzzzz, g_0_0_y_0_zz_xzzzzz, g_0_0_y_0_zz_yyyyyy, g_0_0_y_0_zz_yyyyyz, g_0_0_y_0_zz_yyyyzz, g_0_0_y_0_zz_yyyzzz, g_0_0_y_0_zz_yyzzzz, g_0_0_y_0_zz_yzzzzz, g_0_0_y_0_zz_zzzzzz, g_z_0_y_0_zz_xxxxxx, g_z_0_y_0_zz_xxxxxxz, g_z_0_y_0_zz_xxxxxy, g_z_0_y_0_zz_xxxxxyz, g_z_0_y_0_zz_xxxxxz, g_z_0_y_0_zz_xxxxxzz, g_z_0_y_0_zz_xxxxyy, g_z_0_y_0_zz_xxxxyyz, g_z_0_y_0_zz_xxxxyz, g_z_0_y_0_zz_xxxxyzz, g_z_0_y_0_zz_xxxxzz, g_z_0_y_0_zz_xxxxzzz, g_z_0_y_0_zz_xxxyyy, g_z_0_y_0_zz_xxxyyyz, g_z_0_y_0_zz_xxxyyz, g_z_0_y_0_zz_xxxyyzz, g_z_0_y_0_zz_xxxyzz, g_z_0_y_0_zz_xxxyzzz, g_z_0_y_0_zz_xxxzzz, g_z_0_y_0_zz_xxxzzzz, g_z_0_y_0_zz_xxyyyy, g_z_0_y_0_zz_xxyyyyz, g_z_0_y_0_zz_xxyyyz, g_z_0_y_0_zz_xxyyyzz, g_z_0_y_0_zz_xxyyzz, g_z_0_y_0_zz_xxyyzzz, g_z_0_y_0_zz_xxyzzz, g_z_0_y_0_zz_xxyzzzz, g_z_0_y_0_zz_xxzzzz, g_z_0_y_0_zz_xxzzzzz, g_z_0_y_0_zz_xyyyyy, g_z_0_y_0_zz_xyyyyyz, g_z_0_y_0_zz_xyyyyz, g_z_0_y_0_zz_xyyyyzz, g_z_0_y_0_zz_xyyyzz, g_z_0_y_0_zz_xyyyzzz, g_z_0_y_0_zz_xyyzzz, g_z_0_y_0_zz_xyyzzzz, g_z_0_y_0_zz_xyzzzz, g_z_0_y_0_zz_xyzzzzz, g_z_0_y_0_zz_xzzzzz, g_z_0_y_0_zz_xzzzzzz, g_z_0_y_0_zz_yyyyyy, g_z_0_y_0_zz_yyyyyyz, g_z_0_y_0_zz_yyyyyz, g_z_0_y_0_zz_yyyyyzz, g_z_0_y_0_zz_yyyyzz, g_z_0_y_0_zz_yyyyzzz, g_z_0_y_0_zz_yyyzzz, g_z_0_y_0_zz_yyyzzzz, g_z_0_y_0_zz_yyzzzz, g_z_0_y_0_zz_yyzzzzz, g_z_0_y_0_zz_yzzzzz, g_z_0_y_0_zz_yzzzzzz, g_z_0_y_0_zz_zzzzzz, g_z_0_y_0_zz_zzzzzzz, g_z_0_y_0_zzz_xxxxxx, g_z_0_y_0_zzz_xxxxxy, g_z_0_y_0_zzz_xxxxxz, g_z_0_y_0_zzz_xxxxyy, g_z_0_y_0_zzz_xxxxyz, g_z_0_y_0_zzz_xxxxzz, g_z_0_y_0_zzz_xxxyyy, g_z_0_y_0_zzz_xxxyyz, g_z_0_y_0_zzz_xxxyzz, g_z_0_y_0_zzz_xxxzzz, g_z_0_y_0_zzz_xxyyyy, g_z_0_y_0_zzz_xxyyyz, g_z_0_y_0_zzz_xxyyzz, g_z_0_y_0_zzz_xxyzzz, g_z_0_y_0_zzz_xxzzzz, g_z_0_y_0_zzz_xyyyyy, g_z_0_y_0_zzz_xyyyyz, g_z_0_y_0_zzz_xyyyzz, g_z_0_y_0_zzz_xyyzzz, g_z_0_y_0_zzz_xyzzzz, g_z_0_y_0_zzz_xzzzzz, g_z_0_y_0_zzz_yyyyyy, g_z_0_y_0_zzz_yyyyyz, g_z_0_y_0_zzz_yyyyzz, g_z_0_y_0_zzz_yyyzzz, g_z_0_y_0_zzz_yyzzzz, g_z_0_y_0_zzz_yzzzzz, g_z_0_y_0_zzz_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_z_0_y_0_zzz_xxxxxx[k] = -g_0_0_y_0_zz_xxxxxx[k] - g_z_0_y_0_zz_xxxxxx[k] * ab_z + g_z_0_y_0_zz_xxxxxxz[k];

                g_z_0_y_0_zzz_xxxxxy[k] = -g_0_0_y_0_zz_xxxxxy[k] - g_z_0_y_0_zz_xxxxxy[k] * ab_z + g_z_0_y_0_zz_xxxxxyz[k];

                g_z_0_y_0_zzz_xxxxxz[k] = -g_0_0_y_0_zz_xxxxxz[k] - g_z_0_y_0_zz_xxxxxz[k] * ab_z + g_z_0_y_0_zz_xxxxxzz[k];

                g_z_0_y_0_zzz_xxxxyy[k] = -g_0_0_y_0_zz_xxxxyy[k] - g_z_0_y_0_zz_xxxxyy[k] * ab_z + g_z_0_y_0_zz_xxxxyyz[k];

                g_z_0_y_0_zzz_xxxxyz[k] = -g_0_0_y_0_zz_xxxxyz[k] - g_z_0_y_0_zz_xxxxyz[k] * ab_z + g_z_0_y_0_zz_xxxxyzz[k];

                g_z_0_y_0_zzz_xxxxzz[k] = -g_0_0_y_0_zz_xxxxzz[k] - g_z_0_y_0_zz_xxxxzz[k] * ab_z + g_z_0_y_0_zz_xxxxzzz[k];

                g_z_0_y_0_zzz_xxxyyy[k] = -g_0_0_y_0_zz_xxxyyy[k] - g_z_0_y_0_zz_xxxyyy[k] * ab_z + g_z_0_y_0_zz_xxxyyyz[k];

                g_z_0_y_0_zzz_xxxyyz[k] = -g_0_0_y_0_zz_xxxyyz[k] - g_z_0_y_0_zz_xxxyyz[k] * ab_z + g_z_0_y_0_zz_xxxyyzz[k];

                g_z_0_y_0_zzz_xxxyzz[k] = -g_0_0_y_0_zz_xxxyzz[k] - g_z_0_y_0_zz_xxxyzz[k] * ab_z + g_z_0_y_0_zz_xxxyzzz[k];

                g_z_0_y_0_zzz_xxxzzz[k] = -g_0_0_y_0_zz_xxxzzz[k] - g_z_0_y_0_zz_xxxzzz[k] * ab_z + g_z_0_y_0_zz_xxxzzzz[k];

                g_z_0_y_0_zzz_xxyyyy[k] = -g_0_0_y_0_zz_xxyyyy[k] - g_z_0_y_0_zz_xxyyyy[k] * ab_z + g_z_0_y_0_zz_xxyyyyz[k];

                g_z_0_y_0_zzz_xxyyyz[k] = -g_0_0_y_0_zz_xxyyyz[k] - g_z_0_y_0_zz_xxyyyz[k] * ab_z + g_z_0_y_0_zz_xxyyyzz[k];

                g_z_0_y_0_zzz_xxyyzz[k] = -g_0_0_y_0_zz_xxyyzz[k] - g_z_0_y_0_zz_xxyyzz[k] * ab_z + g_z_0_y_0_zz_xxyyzzz[k];

                g_z_0_y_0_zzz_xxyzzz[k] = -g_0_0_y_0_zz_xxyzzz[k] - g_z_0_y_0_zz_xxyzzz[k] * ab_z + g_z_0_y_0_zz_xxyzzzz[k];

                g_z_0_y_0_zzz_xxzzzz[k] = -g_0_0_y_0_zz_xxzzzz[k] - g_z_0_y_0_zz_xxzzzz[k] * ab_z + g_z_0_y_0_zz_xxzzzzz[k];

                g_z_0_y_0_zzz_xyyyyy[k] = -g_0_0_y_0_zz_xyyyyy[k] - g_z_0_y_0_zz_xyyyyy[k] * ab_z + g_z_0_y_0_zz_xyyyyyz[k];

                g_z_0_y_0_zzz_xyyyyz[k] = -g_0_0_y_0_zz_xyyyyz[k] - g_z_0_y_0_zz_xyyyyz[k] * ab_z + g_z_0_y_0_zz_xyyyyzz[k];

                g_z_0_y_0_zzz_xyyyzz[k] = -g_0_0_y_0_zz_xyyyzz[k] - g_z_0_y_0_zz_xyyyzz[k] * ab_z + g_z_0_y_0_zz_xyyyzzz[k];

                g_z_0_y_0_zzz_xyyzzz[k] = -g_0_0_y_0_zz_xyyzzz[k] - g_z_0_y_0_zz_xyyzzz[k] * ab_z + g_z_0_y_0_zz_xyyzzzz[k];

                g_z_0_y_0_zzz_xyzzzz[k] = -g_0_0_y_0_zz_xyzzzz[k] - g_z_0_y_0_zz_xyzzzz[k] * ab_z + g_z_0_y_0_zz_xyzzzzz[k];

                g_z_0_y_0_zzz_xzzzzz[k] = -g_0_0_y_0_zz_xzzzzz[k] - g_z_0_y_0_zz_xzzzzz[k] * ab_z + g_z_0_y_0_zz_xzzzzzz[k];

                g_z_0_y_0_zzz_yyyyyy[k] = -g_0_0_y_0_zz_yyyyyy[k] - g_z_0_y_0_zz_yyyyyy[k] * ab_z + g_z_0_y_0_zz_yyyyyyz[k];

                g_z_0_y_0_zzz_yyyyyz[k] = -g_0_0_y_0_zz_yyyyyz[k] - g_z_0_y_0_zz_yyyyyz[k] * ab_z + g_z_0_y_0_zz_yyyyyzz[k];

                g_z_0_y_0_zzz_yyyyzz[k] = -g_0_0_y_0_zz_yyyyzz[k] - g_z_0_y_0_zz_yyyyzz[k] * ab_z + g_z_0_y_0_zz_yyyyzzz[k];

                g_z_0_y_0_zzz_yyyzzz[k] = -g_0_0_y_0_zz_yyyzzz[k] - g_z_0_y_0_zz_yyyzzz[k] * ab_z + g_z_0_y_0_zz_yyyzzzz[k];

                g_z_0_y_0_zzz_yyzzzz[k] = -g_0_0_y_0_zz_yyzzzz[k] - g_z_0_y_0_zz_yyzzzz[k] * ab_z + g_z_0_y_0_zz_yyzzzzz[k];

                g_z_0_y_0_zzz_yzzzzz[k] = -g_0_0_y_0_zz_yzzzzz[k] - g_z_0_y_0_zz_yzzzzz[k] * ab_z + g_z_0_y_0_zz_yzzzzzz[k];

                g_z_0_y_0_zzz_zzzzzz[k] = -g_0_0_y_0_zz_zzzzzz[k] - g_z_0_y_0_zz_zzzzzz[k] * ab_z + g_z_0_y_0_zz_zzzzzzz[k];
            }

            /// Set up 2240-2268 components of targeted buffer : cbuffer.data(

            auto g_z_0_z_0_xxx_xxxxxx = cbuffer.data(fi_geom_1010_off + 2240 * ccomps * dcomps);

            auto g_z_0_z_0_xxx_xxxxxy = cbuffer.data(fi_geom_1010_off + 2241 * ccomps * dcomps);

            auto g_z_0_z_0_xxx_xxxxxz = cbuffer.data(fi_geom_1010_off + 2242 * ccomps * dcomps);

            auto g_z_0_z_0_xxx_xxxxyy = cbuffer.data(fi_geom_1010_off + 2243 * ccomps * dcomps);

            auto g_z_0_z_0_xxx_xxxxyz = cbuffer.data(fi_geom_1010_off + 2244 * ccomps * dcomps);

            auto g_z_0_z_0_xxx_xxxxzz = cbuffer.data(fi_geom_1010_off + 2245 * ccomps * dcomps);

            auto g_z_0_z_0_xxx_xxxyyy = cbuffer.data(fi_geom_1010_off + 2246 * ccomps * dcomps);

            auto g_z_0_z_0_xxx_xxxyyz = cbuffer.data(fi_geom_1010_off + 2247 * ccomps * dcomps);

            auto g_z_0_z_0_xxx_xxxyzz = cbuffer.data(fi_geom_1010_off + 2248 * ccomps * dcomps);

            auto g_z_0_z_0_xxx_xxxzzz = cbuffer.data(fi_geom_1010_off + 2249 * ccomps * dcomps);

            auto g_z_0_z_0_xxx_xxyyyy = cbuffer.data(fi_geom_1010_off + 2250 * ccomps * dcomps);

            auto g_z_0_z_0_xxx_xxyyyz = cbuffer.data(fi_geom_1010_off + 2251 * ccomps * dcomps);

            auto g_z_0_z_0_xxx_xxyyzz = cbuffer.data(fi_geom_1010_off + 2252 * ccomps * dcomps);

            auto g_z_0_z_0_xxx_xxyzzz = cbuffer.data(fi_geom_1010_off + 2253 * ccomps * dcomps);

            auto g_z_0_z_0_xxx_xxzzzz = cbuffer.data(fi_geom_1010_off + 2254 * ccomps * dcomps);

            auto g_z_0_z_0_xxx_xyyyyy = cbuffer.data(fi_geom_1010_off + 2255 * ccomps * dcomps);

            auto g_z_0_z_0_xxx_xyyyyz = cbuffer.data(fi_geom_1010_off + 2256 * ccomps * dcomps);

            auto g_z_0_z_0_xxx_xyyyzz = cbuffer.data(fi_geom_1010_off + 2257 * ccomps * dcomps);

            auto g_z_0_z_0_xxx_xyyzzz = cbuffer.data(fi_geom_1010_off + 2258 * ccomps * dcomps);

            auto g_z_0_z_0_xxx_xyzzzz = cbuffer.data(fi_geom_1010_off + 2259 * ccomps * dcomps);

            auto g_z_0_z_0_xxx_xzzzzz = cbuffer.data(fi_geom_1010_off + 2260 * ccomps * dcomps);

            auto g_z_0_z_0_xxx_yyyyyy = cbuffer.data(fi_geom_1010_off + 2261 * ccomps * dcomps);

            auto g_z_0_z_0_xxx_yyyyyz = cbuffer.data(fi_geom_1010_off + 2262 * ccomps * dcomps);

            auto g_z_0_z_0_xxx_yyyyzz = cbuffer.data(fi_geom_1010_off + 2263 * ccomps * dcomps);

            auto g_z_0_z_0_xxx_yyyzzz = cbuffer.data(fi_geom_1010_off + 2264 * ccomps * dcomps);

            auto g_z_0_z_0_xxx_yyzzzz = cbuffer.data(fi_geom_1010_off + 2265 * ccomps * dcomps);

            auto g_z_0_z_0_xxx_yzzzzz = cbuffer.data(fi_geom_1010_off + 2266 * ccomps * dcomps);

            auto g_z_0_z_0_xxx_zzzzzz = cbuffer.data(fi_geom_1010_off + 2267 * ccomps * dcomps);

            #pragma omp simd aligned(g_z_0_z_0_xx_xxxxxx, g_z_0_z_0_xx_xxxxxxx, g_z_0_z_0_xx_xxxxxxy, g_z_0_z_0_xx_xxxxxxz, g_z_0_z_0_xx_xxxxxy, g_z_0_z_0_xx_xxxxxyy, g_z_0_z_0_xx_xxxxxyz, g_z_0_z_0_xx_xxxxxz, g_z_0_z_0_xx_xxxxxzz, g_z_0_z_0_xx_xxxxyy, g_z_0_z_0_xx_xxxxyyy, g_z_0_z_0_xx_xxxxyyz, g_z_0_z_0_xx_xxxxyz, g_z_0_z_0_xx_xxxxyzz, g_z_0_z_0_xx_xxxxzz, g_z_0_z_0_xx_xxxxzzz, g_z_0_z_0_xx_xxxyyy, g_z_0_z_0_xx_xxxyyyy, g_z_0_z_0_xx_xxxyyyz, g_z_0_z_0_xx_xxxyyz, g_z_0_z_0_xx_xxxyyzz, g_z_0_z_0_xx_xxxyzz, g_z_0_z_0_xx_xxxyzzz, g_z_0_z_0_xx_xxxzzz, g_z_0_z_0_xx_xxxzzzz, g_z_0_z_0_xx_xxyyyy, g_z_0_z_0_xx_xxyyyyy, g_z_0_z_0_xx_xxyyyyz, g_z_0_z_0_xx_xxyyyz, g_z_0_z_0_xx_xxyyyzz, g_z_0_z_0_xx_xxyyzz, g_z_0_z_0_xx_xxyyzzz, g_z_0_z_0_xx_xxyzzz, g_z_0_z_0_xx_xxyzzzz, g_z_0_z_0_xx_xxzzzz, g_z_0_z_0_xx_xxzzzzz, g_z_0_z_0_xx_xyyyyy, g_z_0_z_0_xx_xyyyyyy, g_z_0_z_0_xx_xyyyyyz, g_z_0_z_0_xx_xyyyyz, g_z_0_z_0_xx_xyyyyzz, g_z_0_z_0_xx_xyyyzz, g_z_0_z_0_xx_xyyyzzz, g_z_0_z_0_xx_xyyzzz, g_z_0_z_0_xx_xyyzzzz, g_z_0_z_0_xx_xyzzzz, g_z_0_z_0_xx_xyzzzzz, g_z_0_z_0_xx_xzzzzz, g_z_0_z_0_xx_xzzzzzz, g_z_0_z_0_xx_yyyyyy, g_z_0_z_0_xx_yyyyyz, g_z_0_z_0_xx_yyyyzz, g_z_0_z_0_xx_yyyzzz, g_z_0_z_0_xx_yyzzzz, g_z_0_z_0_xx_yzzzzz, g_z_0_z_0_xx_zzzzzz, g_z_0_z_0_xxx_xxxxxx, g_z_0_z_0_xxx_xxxxxy, g_z_0_z_0_xxx_xxxxxz, g_z_0_z_0_xxx_xxxxyy, g_z_0_z_0_xxx_xxxxyz, g_z_0_z_0_xxx_xxxxzz, g_z_0_z_0_xxx_xxxyyy, g_z_0_z_0_xxx_xxxyyz, g_z_0_z_0_xxx_xxxyzz, g_z_0_z_0_xxx_xxxzzz, g_z_0_z_0_xxx_xxyyyy, g_z_0_z_0_xxx_xxyyyz, g_z_0_z_0_xxx_xxyyzz, g_z_0_z_0_xxx_xxyzzz, g_z_0_z_0_xxx_xxzzzz, g_z_0_z_0_xxx_xyyyyy, g_z_0_z_0_xxx_xyyyyz, g_z_0_z_0_xxx_xyyyzz, g_z_0_z_0_xxx_xyyzzz, g_z_0_z_0_xxx_xyzzzz, g_z_0_z_0_xxx_xzzzzz, g_z_0_z_0_xxx_yyyyyy, g_z_0_z_0_xxx_yyyyyz, g_z_0_z_0_xxx_yyyyzz, g_z_0_z_0_xxx_yyyzzz, g_z_0_z_0_xxx_yyzzzz, g_z_0_z_0_xxx_yzzzzz, g_z_0_z_0_xxx_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_z_0_z_0_xxx_xxxxxx[k] = -g_z_0_z_0_xx_xxxxxx[k] * ab_x + g_z_0_z_0_xx_xxxxxxx[k];

                g_z_0_z_0_xxx_xxxxxy[k] = -g_z_0_z_0_xx_xxxxxy[k] * ab_x + g_z_0_z_0_xx_xxxxxxy[k];

                g_z_0_z_0_xxx_xxxxxz[k] = -g_z_0_z_0_xx_xxxxxz[k] * ab_x + g_z_0_z_0_xx_xxxxxxz[k];

                g_z_0_z_0_xxx_xxxxyy[k] = -g_z_0_z_0_xx_xxxxyy[k] * ab_x + g_z_0_z_0_xx_xxxxxyy[k];

                g_z_0_z_0_xxx_xxxxyz[k] = -g_z_0_z_0_xx_xxxxyz[k] * ab_x + g_z_0_z_0_xx_xxxxxyz[k];

                g_z_0_z_0_xxx_xxxxzz[k] = -g_z_0_z_0_xx_xxxxzz[k] * ab_x + g_z_0_z_0_xx_xxxxxzz[k];

                g_z_0_z_0_xxx_xxxyyy[k] = -g_z_0_z_0_xx_xxxyyy[k] * ab_x + g_z_0_z_0_xx_xxxxyyy[k];

                g_z_0_z_0_xxx_xxxyyz[k] = -g_z_0_z_0_xx_xxxyyz[k] * ab_x + g_z_0_z_0_xx_xxxxyyz[k];

                g_z_0_z_0_xxx_xxxyzz[k] = -g_z_0_z_0_xx_xxxyzz[k] * ab_x + g_z_0_z_0_xx_xxxxyzz[k];

                g_z_0_z_0_xxx_xxxzzz[k] = -g_z_0_z_0_xx_xxxzzz[k] * ab_x + g_z_0_z_0_xx_xxxxzzz[k];

                g_z_0_z_0_xxx_xxyyyy[k] = -g_z_0_z_0_xx_xxyyyy[k] * ab_x + g_z_0_z_0_xx_xxxyyyy[k];

                g_z_0_z_0_xxx_xxyyyz[k] = -g_z_0_z_0_xx_xxyyyz[k] * ab_x + g_z_0_z_0_xx_xxxyyyz[k];

                g_z_0_z_0_xxx_xxyyzz[k] = -g_z_0_z_0_xx_xxyyzz[k] * ab_x + g_z_0_z_0_xx_xxxyyzz[k];

                g_z_0_z_0_xxx_xxyzzz[k] = -g_z_0_z_0_xx_xxyzzz[k] * ab_x + g_z_0_z_0_xx_xxxyzzz[k];

                g_z_0_z_0_xxx_xxzzzz[k] = -g_z_0_z_0_xx_xxzzzz[k] * ab_x + g_z_0_z_0_xx_xxxzzzz[k];

                g_z_0_z_0_xxx_xyyyyy[k] = -g_z_0_z_0_xx_xyyyyy[k] * ab_x + g_z_0_z_0_xx_xxyyyyy[k];

                g_z_0_z_0_xxx_xyyyyz[k] = -g_z_0_z_0_xx_xyyyyz[k] * ab_x + g_z_0_z_0_xx_xxyyyyz[k];

                g_z_0_z_0_xxx_xyyyzz[k] = -g_z_0_z_0_xx_xyyyzz[k] * ab_x + g_z_0_z_0_xx_xxyyyzz[k];

                g_z_0_z_0_xxx_xyyzzz[k] = -g_z_0_z_0_xx_xyyzzz[k] * ab_x + g_z_0_z_0_xx_xxyyzzz[k];

                g_z_0_z_0_xxx_xyzzzz[k] = -g_z_0_z_0_xx_xyzzzz[k] * ab_x + g_z_0_z_0_xx_xxyzzzz[k];

                g_z_0_z_0_xxx_xzzzzz[k] = -g_z_0_z_0_xx_xzzzzz[k] * ab_x + g_z_0_z_0_xx_xxzzzzz[k];

                g_z_0_z_0_xxx_yyyyyy[k] = -g_z_0_z_0_xx_yyyyyy[k] * ab_x + g_z_0_z_0_xx_xyyyyyy[k];

                g_z_0_z_0_xxx_yyyyyz[k] = -g_z_0_z_0_xx_yyyyyz[k] * ab_x + g_z_0_z_0_xx_xyyyyyz[k];

                g_z_0_z_0_xxx_yyyyzz[k] = -g_z_0_z_0_xx_yyyyzz[k] * ab_x + g_z_0_z_0_xx_xyyyyzz[k];

                g_z_0_z_0_xxx_yyyzzz[k] = -g_z_0_z_0_xx_yyyzzz[k] * ab_x + g_z_0_z_0_xx_xyyyzzz[k];

                g_z_0_z_0_xxx_yyzzzz[k] = -g_z_0_z_0_xx_yyzzzz[k] * ab_x + g_z_0_z_0_xx_xyyzzzz[k];

                g_z_0_z_0_xxx_yzzzzz[k] = -g_z_0_z_0_xx_yzzzzz[k] * ab_x + g_z_0_z_0_xx_xyzzzzz[k];

                g_z_0_z_0_xxx_zzzzzz[k] = -g_z_0_z_0_xx_zzzzzz[k] * ab_x + g_z_0_z_0_xx_xzzzzzz[k];
            }

            /// Set up 2268-2296 components of targeted buffer : cbuffer.data(

            auto g_z_0_z_0_xxy_xxxxxx = cbuffer.data(fi_geom_1010_off + 2268 * ccomps * dcomps);

            auto g_z_0_z_0_xxy_xxxxxy = cbuffer.data(fi_geom_1010_off + 2269 * ccomps * dcomps);

            auto g_z_0_z_0_xxy_xxxxxz = cbuffer.data(fi_geom_1010_off + 2270 * ccomps * dcomps);

            auto g_z_0_z_0_xxy_xxxxyy = cbuffer.data(fi_geom_1010_off + 2271 * ccomps * dcomps);

            auto g_z_0_z_0_xxy_xxxxyz = cbuffer.data(fi_geom_1010_off + 2272 * ccomps * dcomps);

            auto g_z_0_z_0_xxy_xxxxzz = cbuffer.data(fi_geom_1010_off + 2273 * ccomps * dcomps);

            auto g_z_0_z_0_xxy_xxxyyy = cbuffer.data(fi_geom_1010_off + 2274 * ccomps * dcomps);

            auto g_z_0_z_0_xxy_xxxyyz = cbuffer.data(fi_geom_1010_off + 2275 * ccomps * dcomps);

            auto g_z_0_z_0_xxy_xxxyzz = cbuffer.data(fi_geom_1010_off + 2276 * ccomps * dcomps);

            auto g_z_0_z_0_xxy_xxxzzz = cbuffer.data(fi_geom_1010_off + 2277 * ccomps * dcomps);

            auto g_z_0_z_0_xxy_xxyyyy = cbuffer.data(fi_geom_1010_off + 2278 * ccomps * dcomps);

            auto g_z_0_z_0_xxy_xxyyyz = cbuffer.data(fi_geom_1010_off + 2279 * ccomps * dcomps);

            auto g_z_0_z_0_xxy_xxyyzz = cbuffer.data(fi_geom_1010_off + 2280 * ccomps * dcomps);

            auto g_z_0_z_0_xxy_xxyzzz = cbuffer.data(fi_geom_1010_off + 2281 * ccomps * dcomps);

            auto g_z_0_z_0_xxy_xxzzzz = cbuffer.data(fi_geom_1010_off + 2282 * ccomps * dcomps);

            auto g_z_0_z_0_xxy_xyyyyy = cbuffer.data(fi_geom_1010_off + 2283 * ccomps * dcomps);

            auto g_z_0_z_0_xxy_xyyyyz = cbuffer.data(fi_geom_1010_off + 2284 * ccomps * dcomps);

            auto g_z_0_z_0_xxy_xyyyzz = cbuffer.data(fi_geom_1010_off + 2285 * ccomps * dcomps);

            auto g_z_0_z_0_xxy_xyyzzz = cbuffer.data(fi_geom_1010_off + 2286 * ccomps * dcomps);

            auto g_z_0_z_0_xxy_xyzzzz = cbuffer.data(fi_geom_1010_off + 2287 * ccomps * dcomps);

            auto g_z_0_z_0_xxy_xzzzzz = cbuffer.data(fi_geom_1010_off + 2288 * ccomps * dcomps);

            auto g_z_0_z_0_xxy_yyyyyy = cbuffer.data(fi_geom_1010_off + 2289 * ccomps * dcomps);

            auto g_z_0_z_0_xxy_yyyyyz = cbuffer.data(fi_geom_1010_off + 2290 * ccomps * dcomps);

            auto g_z_0_z_0_xxy_yyyyzz = cbuffer.data(fi_geom_1010_off + 2291 * ccomps * dcomps);

            auto g_z_0_z_0_xxy_yyyzzz = cbuffer.data(fi_geom_1010_off + 2292 * ccomps * dcomps);

            auto g_z_0_z_0_xxy_yyzzzz = cbuffer.data(fi_geom_1010_off + 2293 * ccomps * dcomps);

            auto g_z_0_z_0_xxy_yzzzzz = cbuffer.data(fi_geom_1010_off + 2294 * ccomps * dcomps);

            auto g_z_0_z_0_xxy_zzzzzz = cbuffer.data(fi_geom_1010_off + 2295 * ccomps * dcomps);

            #pragma omp simd aligned(g_z_0_z_0_xxy_xxxxxx, g_z_0_z_0_xxy_xxxxxy, g_z_0_z_0_xxy_xxxxxz, g_z_0_z_0_xxy_xxxxyy, g_z_0_z_0_xxy_xxxxyz, g_z_0_z_0_xxy_xxxxzz, g_z_0_z_0_xxy_xxxyyy, g_z_0_z_0_xxy_xxxyyz, g_z_0_z_0_xxy_xxxyzz, g_z_0_z_0_xxy_xxxzzz, g_z_0_z_0_xxy_xxyyyy, g_z_0_z_0_xxy_xxyyyz, g_z_0_z_0_xxy_xxyyzz, g_z_0_z_0_xxy_xxyzzz, g_z_0_z_0_xxy_xxzzzz, g_z_0_z_0_xxy_xyyyyy, g_z_0_z_0_xxy_xyyyyz, g_z_0_z_0_xxy_xyyyzz, g_z_0_z_0_xxy_xyyzzz, g_z_0_z_0_xxy_xyzzzz, g_z_0_z_0_xxy_xzzzzz, g_z_0_z_0_xxy_yyyyyy, g_z_0_z_0_xxy_yyyyyz, g_z_0_z_0_xxy_yyyyzz, g_z_0_z_0_xxy_yyyzzz, g_z_0_z_0_xxy_yyzzzz, g_z_0_z_0_xxy_yzzzzz, g_z_0_z_0_xxy_zzzzzz, g_z_0_z_0_xy_xxxxxx, g_z_0_z_0_xy_xxxxxxx, g_z_0_z_0_xy_xxxxxxy, g_z_0_z_0_xy_xxxxxxz, g_z_0_z_0_xy_xxxxxy, g_z_0_z_0_xy_xxxxxyy, g_z_0_z_0_xy_xxxxxyz, g_z_0_z_0_xy_xxxxxz, g_z_0_z_0_xy_xxxxxzz, g_z_0_z_0_xy_xxxxyy, g_z_0_z_0_xy_xxxxyyy, g_z_0_z_0_xy_xxxxyyz, g_z_0_z_0_xy_xxxxyz, g_z_0_z_0_xy_xxxxyzz, g_z_0_z_0_xy_xxxxzz, g_z_0_z_0_xy_xxxxzzz, g_z_0_z_0_xy_xxxyyy, g_z_0_z_0_xy_xxxyyyy, g_z_0_z_0_xy_xxxyyyz, g_z_0_z_0_xy_xxxyyz, g_z_0_z_0_xy_xxxyyzz, g_z_0_z_0_xy_xxxyzz, g_z_0_z_0_xy_xxxyzzz, g_z_0_z_0_xy_xxxzzz, g_z_0_z_0_xy_xxxzzzz, g_z_0_z_0_xy_xxyyyy, g_z_0_z_0_xy_xxyyyyy, g_z_0_z_0_xy_xxyyyyz, g_z_0_z_0_xy_xxyyyz, g_z_0_z_0_xy_xxyyyzz, g_z_0_z_0_xy_xxyyzz, g_z_0_z_0_xy_xxyyzzz, g_z_0_z_0_xy_xxyzzz, g_z_0_z_0_xy_xxyzzzz, g_z_0_z_0_xy_xxzzzz, g_z_0_z_0_xy_xxzzzzz, g_z_0_z_0_xy_xyyyyy, g_z_0_z_0_xy_xyyyyyy, g_z_0_z_0_xy_xyyyyyz, g_z_0_z_0_xy_xyyyyz, g_z_0_z_0_xy_xyyyyzz, g_z_0_z_0_xy_xyyyzz, g_z_0_z_0_xy_xyyyzzz, g_z_0_z_0_xy_xyyzzz, g_z_0_z_0_xy_xyyzzzz, g_z_0_z_0_xy_xyzzzz, g_z_0_z_0_xy_xyzzzzz, g_z_0_z_0_xy_xzzzzz, g_z_0_z_0_xy_xzzzzzz, g_z_0_z_0_xy_yyyyyy, g_z_0_z_0_xy_yyyyyz, g_z_0_z_0_xy_yyyyzz, g_z_0_z_0_xy_yyyzzz, g_z_0_z_0_xy_yyzzzz, g_z_0_z_0_xy_yzzzzz, g_z_0_z_0_xy_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_z_0_z_0_xxy_xxxxxx[k] = -g_z_0_z_0_xy_xxxxxx[k] * ab_x + g_z_0_z_0_xy_xxxxxxx[k];

                g_z_0_z_0_xxy_xxxxxy[k] = -g_z_0_z_0_xy_xxxxxy[k] * ab_x + g_z_0_z_0_xy_xxxxxxy[k];

                g_z_0_z_0_xxy_xxxxxz[k] = -g_z_0_z_0_xy_xxxxxz[k] * ab_x + g_z_0_z_0_xy_xxxxxxz[k];

                g_z_0_z_0_xxy_xxxxyy[k] = -g_z_0_z_0_xy_xxxxyy[k] * ab_x + g_z_0_z_0_xy_xxxxxyy[k];

                g_z_0_z_0_xxy_xxxxyz[k] = -g_z_0_z_0_xy_xxxxyz[k] * ab_x + g_z_0_z_0_xy_xxxxxyz[k];

                g_z_0_z_0_xxy_xxxxzz[k] = -g_z_0_z_0_xy_xxxxzz[k] * ab_x + g_z_0_z_0_xy_xxxxxzz[k];

                g_z_0_z_0_xxy_xxxyyy[k] = -g_z_0_z_0_xy_xxxyyy[k] * ab_x + g_z_0_z_0_xy_xxxxyyy[k];

                g_z_0_z_0_xxy_xxxyyz[k] = -g_z_0_z_0_xy_xxxyyz[k] * ab_x + g_z_0_z_0_xy_xxxxyyz[k];

                g_z_0_z_0_xxy_xxxyzz[k] = -g_z_0_z_0_xy_xxxyzz[k] * ab_x + g_z_0_z_0_xy_xxxxyzz[k];

                g_z_0_z_0_xxy_xxxzzz[k] = -g_z_0_z_0_xy_xxxzzz[k] * ab_x + g_z_0_z_0_xy_xxxxzzz[k];

                g_z_0_z_0_xxy_xxyyyy[k] = -g_z_0_z_0_xy_xxyyyy[k] * ab_x + g_z_0_z_0_xy_xxxyyyy[k];

                g_z_0_z_0_xxy_xxyyyz[k] = -g_z_0_z_0_xy_xxyyyz[k] * ab_x + g_z_0_z_0_xy_xxxyyyz[k];

                g_z_0_z_0_xxy_xxyyzz[k] = -g_z_0_z_0_xy_xxyyzz[k] * ab_x + g_z_0_z_0_xy_xxxyyzz[k];

                g_z_0_z_0_xxy_xxyzzz[k] = -g_z_0_z_0_xy_xxyzzz[k] * ab_x + g_z_0_z_0_xy_xxxyzzz[k];

                g_z_0_z_0_xxy_xxzzzz[k] = -g_z_0_z_0_xy_xxzzzz[k] * ab_x + g_z_0_z_0_xy_xxxzzzz[k];

                g_z_0_z_0_xxy_xyyyyy[k] = -g_z_0_z_0_xy_xyyyyy[k] * ab_x + g_z_0_z_0_xy_xxyyyyy[k];

                g_z_0_z_0_xxy_xyyyyz[k] = -g_z_0_z_0_xy_xyyyyz[k] * ab_x + g_z_0_z_0_xy_xxyyyyz[k];

                g_z_0_z_0_xxy_xyyyzz[k] = -g_z_0_z_0_xy_xyyyzz[k] * ab_x + g_z_0_z_0_xy_xxyyyzz[k];

                g_z_0_z_0_xxy_xyyzzz[k] = -g_z_0_z_0_xy_xyyzzz[k] * ab_x + g_z_0_z_0_xy_xxyyzzz[k];

                g_z_0_z_0_xxy_xyzzzz[k] = -g_z_0_z_0_xy_xyzzzz[k] * ab_x + g_z_0_z_0_xy_xxyzzzz[k];

                g_z_0_z_0_xxy_xzzzzz[k] = -g_z_0_z_0_xy_xzzzzz[k] * ab_x + g_z_0_z_0_xy_xxzzzzz[k];

                g_z_0_z_0_xxy_yyyyyy[k] = -g_z_0_z_0_xy_yyyyyy[k] * ab_x + g_z_0_z_0_xy_xyyyyyy[k];

                g_z_0_z_0_xxy_yyyyyz[k] = -g_z_0_z_0_xy_yyyyyz[k] * ab_x + g_z_0_z_0_xy_xyyyyyz[k];

                g_z_0_z_0_xxy_yyyyzz[k] = -g_z_0_z_0_xy_yyyyzz[k] * ab_x + g_z_0_z_0_xy_xyyyyzz[k];

                g_z_0_z_0_xxy_yyyzzz[k] = -g_z_0_z_0_xy_yyyzzz[k] * ab_x + g_z_0_z_0_xy_xyyyzzz[k];

                g_z_0_z_0_xxy_yyzzzz[k] = -g_z_0_z_0_xy_yyzzzz[k] * ab_x + g_z_0_z_0_xy_xyyzzzz[k];

                g_z_0_z_0_xxy_yzzzzz[k] = -g_z_0_z_0_xy_yzzzzz[k] * ab_x + g_z_0_z_0_xy_xyzzzzz[k];

                g_z_0_z_0_xxy_zzzzzz[k] = -g_z_0_z_0_xy_zzzzzz[k] * ab_x + g_z_0_z_0_xy_xzzzzzz[k];
            }

            /// Set up 2296-2324 components of targeted buffer : cbuffer.data(

            auto g_z_0_z_0_xxz_xxxxxx = cbuffer.data(fi_geom_1010_off + 2296 * ccomps * dcomps);

            auto g_z_0_z_0_xxz_xxxxxy = cbuffer.data(fi_geom_1010_off + 2297 * ccomps * dcomps);

            auto g_z_0_z_0_xxz_xxxxxz = cbuffer.data(fi_geom_1010_off + 2298 * ccomps * dcomps);

            auto g_z_0_z_0_xxz_xxxxyy = cbuffer.data(fi_geom_1010_off + 2299 * ccomps * dcomps);

            auto g_z_0_z_0_xxz_xxxxyz = cbuffer.data(fi_geom_1010_off + 2300 * ccomps * dcomps);

            auto g_z_0_z_0_xxz_xxxxzz = cbuffer.data(fi_geom_1010_off + 2301 * ccomps * dcomps);

            auto g_z_0_z_0_xxz_xxxyyy = cbuffer.data(fi_geom_1010_off + 2302 * ccomps * dcomps);

            auto g_z_0_z_0_xxz_xxxyyz = cbuffer.data(fi_geom_1010_off + 2303 * ccomps * dcomps);

            auto g_z_0_z_0_xxz_xxxyzz = cbuffer.data(fi_geom_1010_off + 2304 * ccomps * dcomps);

            auto g_z_0_z_0_xxz_xxxzzz = cbuffer.data(fi_geom_1010_off + 2305 * ccomps * dcomps);

            auto g_z_0_z_0_xxz_xxyyyy = cbuffer.data(fi_geom_1010_off + 2306 * ccomps * dcomps);

            auto g_z_0_z_0_xxz_xxyyyz = cbuffer.data(fi_geom_1010_off + 2307 * ccomps * dcomps);

            auto g_z_0_z_0_xxz_xxyyzz = cbuffer.data(fi_geom_1010_off + 2308 * ccomps * dcomps);

            auto g_z_0_z_0_xxz_xxyzzz = cbuffer.data(fi_geom_1010_off + 2309 * ccomps * dcomps);

            auto g_z_0_z_0_xxz_xxzzzz = cbuffer.data(fi_geom_1010_off + 2310 * ccomps * dcomps);

            auto g_z_0_z_0_xxz_xyyyyy = cbuffer.data(fi_geom_1010_off + 2311 * ccomps * dcomps);

            auto g_z_0_z_0_xxz_xyyyyz = cbuffer.data(fi_geom_1010_off + 2312 * ccomps * dcomps);

            auto g_z_0_z_0_xxz_xyyyzz = cbuffer.data(fi_geom_1010_off + 2313 * ccomps * dcomps);

            auto g_z_0_z_0_xxz_xyyzzz = cbuffer.data(fi_geom_1010_off + 2314 * ccomps * dcomps);

            auto g_z_0_z_0_xxz_xyzzzz = cbuffer.data(fi_geom_1010_off + 2315 * ccomps * dcomps);

            auto g_z_0_z_0_xxz_xzzzzz = cbuffer.data(fi_geom_1010_off + 2316 * ccomps * dcomps);

            auto g_z_0_z_0_xxz_yyyyyy = cbuffer.data(fi_geom_1010_off + 2317 * ccomps * dcomps);

            auto g_z_0_z_0_xxz_yyyyyz = cbuffer.data(fi_geom_1010_off + 2318 * ccomps * dcomps);

            auto g_z_0_z_0_xxz_yyyyzz = cbuffer.data(fi_geom_1010_off + 2319 * ccomps * dcomps);

            auto g_z_0_z_0_xxz_yyyzzz = cbuffer.data(fi_geom_1010_off + 2320 * ccomps * dcomps);

            auto g_z_0_z_0_xxz_yyzzzz = cbuffer.data(fi_geom_1010_off + 2321 * ccomps * dcomps);

            auto g_z_0_z_0_xxz_yzzzzz = cbuffer.data(fi_geom_1010_off + 2322 * ccomps * dcomps);

            auto g_z_0_z_0_xxz_zzzzzz = cbuffer.data(fi_geom_1010_off + 2323 * ccomps * dcomps);

            #pragma omp simd aligned(g_z_0_z_0_xxz_xxxxxx, g_z_0_z_0_xxz_xxxxxy, g_z_0_z_0_xxz_xxxxxz, g_z_0_z_0_xxz_xxxxyy, g_z_0_z_0_xxz_xxxxyz, g_z_0_z_0_xxz_xxxxzz, g_z_0_z_0_xxz_xxxyyy, g_z_0_z_0_xxz_xxxyyz, g_z_0_z_0_xxz_xxxyzz, g_z_0_z_0_xxz_xxxzzz, g_z_0_z_0_xxz_xxyyyy, g_z_0_z_0_xxz_xxyyyz, g_z_0_z_0_xxz_xxyyzz, g_z_0_z_0_xxz_xxyzzz, g_z_0_z_0_xxz_xxzzzz, g_z_0_z_0_xxz_xyyyyy, g_z_0_z_0_xxz_xyyyyz, g_z_0_z_0_xxz_xyyyzz, g_z_0_z_0_xxz_xyyzzz, g_z_0_z_0_xxz_xyzzzz, g_z_0_z_0_xxz_xzzzzz, g_z_0_z_0_xxz_yyyyyy, g_z_0_z_0_xxz_yyyyyz, g_z_0_z_0_xxz_yyyyzz, g_z_0_z_0_xxz_yyyzzz, g_z_0_z_0_xxz_yyzzzz, g_z_0_z_0_xxz_yzzzzz, g_z_0_z_0_xxz_zzzzzz, g_z_0_z_0_xz_xxxxxx, g_z_0_z_0_xz_xxxxxxx, g_z_0_z_0_xz_xxxxxxy, g_z_0_z_0_xz_xxxxxxz, g_z_0_z_0_xz_xxxxxy, g_z_0_z_0_xz_xxxxxyy, g_z_0_z_0_xz_xxxxxyz, g_z_0_z_0_xz_xxxxxz, g_z_0_z_0_xz_xxxxxzz, g_z_0_z_0_xz_xxxxyy, g_z_0_z_0_xz_xxxxyyy, g_z_0_z_0_xz_xxxxyyz, g_z_0_z_0_xz_xxxxyz, g_z_0_z_0_xz_xxxxyzz, g_z_0_z_0_xz_xxxxzz, g_z_0_z_0_xz_xxxxzzz, g_z_0_z_0_xz_xxxyyy, g_z_0_z_0_xz_xxxyyyy, g_z_0_z_0_xz_xxxyyyz, g_z_0_z_0_xz_xxxyyz, g_z_0_z_0_xz_xxxyyzz, g_z_0_z_0_xz_xxxyzz, g_z_0_z_0_xz_xxxyzzz, g_z_0_z_0_xz_xxxzzz, g_z_0_z_0_xz_xxxzzzz, g_z_0_z_0_xz_xxyyyy, g_z_0_z_0_xz_xxyyyyy, g_z_0_z_0_xz_xxyyyyz, g_z_0_z_0_xz_xxyyyz, g_z_0_z_0_xz_xxyyyzz, g_z_0_z_0_xz_xxyyzz, g_z_0_z_0_xz_xxyyzzz, g_z_0_z_0_xz_xxyzzz, g_z_0_z_0_xz_xxyzzzz, g_z_0_z_0_xz_xxzzzz, g_z_0_z_0_xz_xxzzzzz, g_z_0_z_0_xz_xyyyyy, g_z_0_z_0_xz_xyyyyyy, g_z_0_z_0_xz_xyyyyyz, g_z_0_z_0_xz_xyyyyz, g_z_0_z_0_xz_xyyyyzz, g_z_0_z_0_xz_xyyyzz, g_z_0_z_0_xz_xyyyzzz, g_z_0_z_0_xz_xyyzzz, g_z_0_z_0_xz_xyyzzzz, g_z_0_z_0_xz_xyzzzz, g_z_0_z_0_xz_xyzzzzz, g_z_0_z_0_xz_xzzzzz, g_z_0_z_0_xz_xzzzzzz, g_z_0_z_0_xz_yyyyyy, g_z_0_z_0_xz_yyyyyz, g_z_0_z_0_xz_yyyyzz, g_z_0_z_0_xz_yyyzzz, g_z_0_z_0_xz_yyzzzz, g_z_0_z_0_xz_yzzzzz, g_z_0_z_0_xz_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_z_0_z_0_xxz_xxxxxx[k] = -g_z_0_z_0_xz_xxxxxx[k] * ab_x + g_z_0_z_0_xz_xxxxxxx[k];

                g_z_0_z_0_xxz_xxxxxy[k] = -g_z_0_z_0_xz_xxxxxy[k] * ab_x + g_z_0_z_0_xz_xxxxxxy[k];

                g_z_0_z_0_xxz_xxxxxz[k] = -g_z_0_z_0_xz_xxxxxz[k] * ab_x + g_z_0_z_0_xz_xxxxxxz[k];

                g_z_0_z_0_xxz_xxxxyy[k] = -g_z_0_z_0_xz_xxxxyy[k] * ab_x + g_z_0_z_0_xz_xxxxxyy[k];

                g_z_0_z_0_xxz_xxxxyz[k] = -g_z_0_z_0_xz_xxxxyz[k] * ab_x + g_z_0_z_0_xz_xxxxxyz[k];

                g_z_0_z_0_xxz_xxxxzz[k] = -g_z_0_z_0_xz_xxxxzz[k] * ab_x + g_z_0_z_0_xz_xxxxxzz[k];

                g_z_0_z_0_xxz_xxxyyy[k] = -g_z_0_z_0_xz_xxxyyy[k] * ab_x + g_z_0_z_0_xz_xxxxyyy[k];

                g_z_0_z_0_xxz_xxxyyz[k] = -g_z_0_z_0_xz_xxxyyz[k] * ab_x + g_z_0_z_0_xz_xxxxyyz[k];

                g_z_0_z_0_xxz_xxxyzz[k] = -g_z_0_z_0_xz_xxxyzz[k] * ab_x + g_z_0_z_0_xz_xxxxyzz[k];

                g_z_0_z_0_xxz_xxxzzz[k] = -g_z_0_z_0_xz_xxxzzz[k] * ab_x + g_z_0_z_0_xz_xxxxzzz[k];

                g_z_0_z_0_xxz_xxyyyy[k] = -g_z_0_z_0_xz_xxyyyy[k] * ab_x + g_z_0_z_0_xz_xxxyyyy[k];

                g_z_0_z_0_xxz_xxyyyz[k] = -g_z_0_z_0_xz_xxyyyz[k] * ab_x + g_z_0_z_0_xz_xxxyyyz[k];

                g_z_0_z_0_xxz_xxyyzz[k] = -g_z_0_z_0_xz_xxyyzz[k] * ab_x + g_z_0_z_0_xz_xxxyyzz[k];

                g_z_0_z_0_xxz_xxyzzz[k] = -g_z_0_z_0_xz_xxyzzz[k] * ab_x + g_z_0_z_0_xz_xxxyzzz[k];

                g_z_0_z_0_xxz_xxzzzz[k] = -g_z_0_z_0_xz_xxzzzz[k] * ab_x + g_z_0_z_0_xz_xxxzzzz[k];

                g_z_0_z_0_xxz_xyyyyy[k] = -g_z_0_z_0_xz_xyyyyy[k] * ab_x + g_z_0_z_0_xz_xxyyyyy[k];

                g_z_0_z_0_xxz_xyyyyz[k] = -g_z_0_z_0_xz_xyyyyz[k] * ab_x + g_z_0_z_0_xz_xxyyyyz[k];

                g_z_0_z_0_xxz_xyyyzz[k] = -g_z_0_z_0_xz_xyyyzz[k] * ab_x + g_z_0_z_0_xz_xxyyyzz[k];

                g_z_0_z_0_xxz_xyyzzz[k] = -g_z_0_z_0_xz_xyyzzz[k] * ab_x + g_z_0_z_0_xz_xxyyzzz[k];

                g_z_0_z_0_xxz_xyzzzz[k] = -g_z_0_z_0_xz_xyzzzz[k] * ab_x + g_z_0_z_0_xz_xxyzzzz[k];

                g_z_0_z_0_xxz_xzzzzz[k] = -g_z_0_z_0_xz_xzzzzz[k] * ab_x + g_z_0_z_0_xz_xxzzzzz[k];

                g_z_0_z_0_xxz_yyyyyy[k] = -g_z_0_z_0_xz_yyyyyy[k] * ab_x + g_z_0_z_0_xz_xyyyyyy[k];

                g_z_0_z_0_xxz_yyyyyz[k] = -g_z_0_z_0_xz_yyyyyz[k] * ab_x + g_z_0_z_0_xz_xyyyyyz[k];

                g_z_0_z_0_xxz_yyyyzz[k] = -g_z_0_z_0_xz_yyyyzz[k] * ab_x + g_z_0_z_0_xz_xyyyyzz[k];

                g_z_0_z_0_xxz_yyyzzz[k] = -g_z_0_z_0_xz_yyyzzz[k] * ab_x + g_z_0_z_0_xz_xyyyzzz[k];

                g_z_0_z_0_xxz_yyzzzz[k] = -g_z_0_z_0_xz_yyzzzz[k] * ab_x + g_z_0_z_0_xz_xyyzzzz[k];

                g_z_0_z_0_xxz_yzzzzz[k] = -g_z_0_z_0_xz_yzzzzz[k] * ab_x + g_z_0_z_0_xz_xyzzzzz[k];

                g_z_0_z_0_xxz_zzzzzz[k] = -g_z_0_z_0_xz_zzzzzz[k] * ab_x + g_z_0_z_0_xz_xzzzzzz[k];
            }

            /// Set up 2324-2352 components of targeted buffer : cbuffer.data(

            auto g_z_0_z_0_xyy_xxxxxx = cbuffer.data(fi_geom_1010_off + 2324 * ccomps * dcomps);

            auto g_z_0_z_0_xyy_xxxxxy = cbuffer.data(fi_geom_1010_off + 2325 * ccomps * dcomps);

            auto g_z_0_z_0_xyy_xxxxxz = cbuffer.data(fi_geom_1010_off + 2326 * ccomps * dcomps);

            auto g_z_0_z_0_xyy_xxxxyy = cbuffer.data(fi_geom_1010_off + 2327 * ccomps * dcomps);

            auto g_z_0_z_0_xyy_xxxxyz = cbuffer.data(fi_geom_1010_off + 2328 * ccomps * dcomps);

            auto g_z_0_z_0_xyy_xxxxzz = cbuffer.data(fi_geom_1010_off + 2329 * ccomps * dcomps);

            auto g_z_0_z_0_xyy_xxxyyy = cbuffer.data(fi_geom_1010_off + 2330 * ccomps * dcomps);

            auto g_z_0_z_0_xyy_xxxyyz = cbuffer.data(fi_geom_1010_off + 2331 * ccomps * dcomps);

            auto g_z_0_z_0_xyy_xxxyzz = cbuffer.data(fi_geom_1010_off + 2332 * ccomps * dcomps);

            auto g_z_0_z_0_xyy_xxxzzz = cbuffer.data(fi_geom_1010_off + 2333 * ccomps * dcomps);

            auto g_z_0_z_0_xyy_xxyyyy = cbuffer.data(fi_geom_1010_off + 2334 * ccomps * dcomps);

            auto g_z_0_z_0_xyy_xxyyyz = cbuffer.data(fi_geom_1010_off + 2335 * ccomps * dcomps);

            auto g_z_0_z_0_xyy_xxyyzz = cbuffer.data(fi_geom_1010_off + 2336 * ccomps * dcomps);

            auto g_z_0_z_0_xyy_xxyzzz = cbuffer.data(fi_geom_1010_off + 2337 * ccomps * dcomps);

            auto g_z_0_z_0_xyy_xxzzzz = cbuffer.data(fi_geom_1010_off + 2338 * ccomps * dcomps);

            auto g_z_0_z_0_xyy_xyyyyy = cbuffer.data(fi_geom_1010_off + 2339 * ccomps * dcomps);

            auto g_z_0_z_0_xyy_xyyyyz = cbuffer.data(fi_geom_1010_off + 2340 * ccomps * dcomps);

            auto g_z_0_z_0_xyy_xyyyzz = cbuffer.data(fi_geom_1010_off + 2341 * ccomps * dcomps);

            auto g_z_0_z_0_xyy_xyyzzz = cbuffer.data(fi_geom_1010_off + 2342 * ccomps * dcomps);

            auto g_z_0_z_0_xyy_xyzzzz = cbuffer.data(fi_geom_1010_off + 2343 * ccomps * dcomps);

            auto g_z_0_z_0_xyy_xzzzzz = cbuffer.data(fi_geom_1010_off + 2344 * ccomps * dcomps);

            auto g_z_0_z_0_xyy_yyyyyy = cbuffer.data(fi_geom_1010_off + 2345 * ccomps * dcomps);

            auto g_z_0_z_0_xyy_yyyyyz = cbuffer.data(fi_geom_1010_off + 2346 * ccomps * dcomps);

            auto g_z_0_z_0_xyy_yyyyzz = cbuffer.data(fi_geom_1010_off + 2347 * ccomps * dcomps);

            auto g_z_0_z_0_xyy_yyyzzz = cbuffer.data(fi_geom_1010_off + 2348 * ccomps * dcomps);

            auto g_z_0_z_0_xyy_yyzzzz = cbuffer.data(fi_geom_1010_off + 2349 * ccomps * dcomps);

            auto g_z_0_z_0_xyy_yzzzzz = cbuffer.data(fi_geom_1010_off + 2350 * ccomps * dcomps);

            auto g_z_0_z_0_xyy_zzzzzz = cbuffer.data(fi_geom_1010_off + 2351 * ccomps * dcomps);

            #pragma omp simd aligned(g_z_0_z_0_xyy_xxxxxx, g_z_0_z_0_xyy_xxxxxy, g_z_0_z_0_xyy_xxxxxz, g_z_0_z_0_xyy_xxxxyy, g_z_0_z_0_xyy_xxxxyz, g_z_0_z_0_xyy_xxxxzz, g_z_0_z_0_xyy_xxxyyy, g_z_0_z_0_xyy_xxxyyz, g_z_0_z_0_xyy_xxxyzz, g_z_0_z_0_xyy_xxxzzz, g_z_0_z_0_xyy_xxyyyy, g_z_0_z_0_xyy_xxyyyz, g_z_0_z_0_xyy_xxyyzz, g_z_0_z_0_xyy_xxyzzz, g_z_0_z_0_xyy_xxzzzz, g_z_0_z_0_xyy_xyyyyy, g_z_0_z_0_xyy_xyyyyz, g_z_0_z_0_xyy_xyyyzz, g_z_0_z_0_xyy_xyyzzz, g_z_0_z_0_xyy_xyzzzz, g_z_0_z_0_xyy_xzzzzz, g_z_0_z_0_xyy_yyyyyy, g_z_0_z_0_xyy_yyyyyz, g_z_0_z_0_xyy_yyyyzz, g_z_0_z_0_xyy_yyyzzz, g_z_0_z_0_xyy_yyzzzz, g_z_0_z_0_xyy_yzzzzz, g_z_0_z_0_xyy_zzzzzz, g_z_0_z_0_yy_xxxxxx, g_z_0_z_0_yy_xxxxxxx, g_z_0_z_0_yy_xxxxxxy, g_z_0_z_0_yy_xxxxxxz, g_z_0_z_0_yy_xxxxxy, g_z_0_z_0_yy_xxxxxyy, g_z_0_z_0_yy_xxxxxyz, g_z_0_z_0_yy_xxxxxz, g_z_0_z_0_yy_xxxxxzz, g_z_0_z_0_yy_xxxxyy, g_z_0_z_0_yy_xxxxyyy, g_z_0_z_0_yy_xxxxyyz, g_z_0_z_0_yy_xxxxyz, g_z_0_z_0_yy_xxxxyzz, g_z_0_z_0_yy_xxxxzz, g_z_0_z_0_yy_xxxxzzz, g_z_0_z_0_yy_xxxyyy, g_z_0_z_0_yy_xxxyyyy, g_z_0_z_0_yy_xxxyyyz, g_z_0_z_0_yy_xxxyyz, g_z_0_z_0_yy_xxxyyzz, g_z_0_z_0_yy_xxxyzz, g_z_0_z_0_yy_xxxyzzz, g_z_0_z_0_yy_xxxzzz, g_z_0_z_0_yy_xxxzzzz, g_z_0_z_0_yy_xxyyyy, g_z_0_z_0_yy_xxyyyyy, g_z_0_z_0_yy_xxyyyyz, g_z_0_z_0_yy_xxyyyz, g_z_0_z_0_yy_xxyyyzz, g_z_0_z_0_yy_xxyyzz, g_z_0_z_0_yy_xxyyzzz, g_z_0_z_0_yy_xxyzzz, g_z_0_z_0_yy_xxyzzzz, g_z_0_z_0_yy_xxzzzz, g_z_0_z_0_yy_xxzzzzz, g_z_0_z_0_yy_xyyyyy, g_z_0_z_0_yy_xyyyyyy, g_z_0_z_0_yy_xyyyyyz, g_z_0_z_0_yy_xyyyyz, g_z_0_z_0_yy_xyyyyzz, g_z_0_z_0_yy_xyyyzz, g_z_0_z_0_yy_xyyyzzz, g_z_0_z_0_yy_xyyzzz, g_z_0_z_0_yy_xyyzzzz, g_z_0_z_0_yy_xyzzzz, g_z_0_z_0_yy_xyzzzzz, g_z_0_z_0_yy_xzzzzz, g_z_0_z_0_yy_xzzzzzz, g_z_0_z_0_yy_yyyyyy, g_z_0_z_0_yy_yyyyyz, g_z_0_z_0_yy_yyyyzz, g_z_0_z_0_yy_yyyzzz, g_z_0_z_0_yy_yyzzzz, g_z_0_z_0_yy_yzzzzz, g_z_0_z_0_yy_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_z_0_z_0_xyy_xxxxxx[k] = -g_z_0_z_0_yy_xxxxxx[k] * ab_x + g_z_0_z_0_yy_xxxxxxx[k];

                g_z_0_z_0_xyy_xxxxxy[k] = -g_z_0_z_0_yy_xxxxxy[k] * ab_x + g_z_0_z_0_yy_xxxxxxy[k];

                g_z_0_z_0_xyy_xxxxxz[k] = -g_z_0_z_0_yy_xxxxxz[k] * ab_x + g_z_0_z_0_yy_xxxxxxz[k];

                g_z_0_z_0_xyy_xxxxyy[k] = -g_z_0_z_0_yy_xxxxyy[k] * ab_x + g_z_0_z_0_yy_xxxxxyy[k];

                g_z_0_z_0_xyy_xxxxyz[k] = -g_z_0_z_0_yy_xxxxyz[k] * ab_x + g_z_0_z_0_yy_xxxxxyz[k];

                g_z_0_z_0_xyy_xxxxzz[k] = -g_z_0_z_0_yy_xxxxzz[k] * ab_x + g_z_0_z_0_yy_xxxxxzz[k];

                g_z_0_z_0_xyy_xxxyyy[k] = -g_z_0_z_0_yy_xxxyyy[k] * ab_x + g_z_0_z_0_yy_xxxxyyy[k];

                g_z_0_z_0_xyy_xxxyyz[k] = -g_z_0_z_0_yy_xxxyyz[k] * ab_x + g_z_0_z_0_yy_xxxxyyz[k];

                g_z_0_z_0_xyy_xxxyzz[k] = -g_z_0_z_0_yy_xxxyzz[k] * ab_x + g_z_0_z_0_yy_xxxxyzz[k];

                g_z_0_z_0_xyy_xxxzzz[k] = -g_z_0_z_0_yy_xxxzzz[k] * ab_x + g_z_0_z_0_yy_xxxxzzz[k];

                g_z_0_z_0_xyy_xxyyyy[k] = -g_z_0_z_0_yy_xxyyyy[k] * ab_x + g_z_0_z_0_yy_xxxyyyy[k];

                g_z_0_z_0_xyy_xxyyyz[k] = -g_z_0_z_0_yy_xxyyyz[k] * ab_x + g_z_0_z_0_yy_xxxyyyz[k];

                g_z_0_z_0_xyy_xxyyzz[k] = -g_z_0_z_0_yy_xxyyzz[k] * ab_x + g_z_0_z_0_yy_xxxyyzz[k];

                g_z_0_z_0_xyy_xxyzzz[k] = -g_z_0_z_0_yy_xxyzzz[k] * ab_x + g_z_0_z_0_yy_xxxyzzz[k];

                g_z_0_z_0_xyy_xxzzzz[k] = -g_z_0_z_0_yy_xxzzzz[k] * ab_x + g_z_0_z_0_yy_xxxzzzz[k];

                g_z_0_z_0_xyy_xyyyyy[k] = -g_z_0_z_0_yy_xyyyyy[k] * ab_x + g_z_0_z_0_yy_xxyyyyy[k];

                g_z_0_z_0_xyy_xyyyyz[k] = -g_z_0_z_0_yy_xyyyyz[k] * ab_x + g_z_0_z_0_yy_xxyyyyz[k];

                g_z_0_z_0_xyy_xyyyzz[k] = -g_z_0_z_0_yy_xyyyzz[k] * ab_x + g_z_0_z_0_yy_xxyyyzz[k];

                g_z_0_z_0_xyy_xyyzzz[k] = -g_z_0_z_0_yy_xyyzzz[k] * ab_x + g_z_0_z_0_yy_xxyyzzz[k];

                g_z_0_z_0_xyy_xyzzzz[k] = -g_z_0_z_0_yy_xyzzzz[k] * ab_x + g_z_0_z_0_yy_xxyzzzz[k];

                g_z_0_z_0_xyy_xzzzzz[k] = -g_z_0_z_0_yy_xzzzzz[k] * ab_x + g_z_0_z_0_yy_xxzzzzz[k];

                g_z_0_z_0_xyy_yyyyyy[k] = -g_z_0_z_0_yy_yyyyyy[k] * ab_x + g_z_0_z_0_yy_xyyyyyy[k];

                g_z_0_z_0_xyy_yyyyyz[k] = -g_z_0_z_0_yy_yyyyyz[k] * ab_x + g_z_0_z_0_yy_xyyyyyz[k];

                g_z_0_z_0_xyy_yyyyzz[k] = -g_z_0_z_0_yy_yyyyzz[k] * ab_x + g_z_0_z_0_yy_xyyyyzz[k];

                g_z_0_z_0_xyy_yyyzzz[k] = -g_z_0_z_0_yy_yyyzzz[k] * ab_x + g_z_0_z_0_yy_xyyyzzz[k];

                g_z_0_z_0_xyy_yyzzzz[k] = -g_z_0_z_0_yy_yyzzzz[k] * ab_x + g_z_0_z_0_yy_xyyzzzz[k];

                g_z_0_z_0_xyy_yzzzzz[k] = -g_z_0_z_0_yy_yzzzzz[k] * ab_x + g_z_0_z_0_yy_xyzzzzz[k];

                g_z_0_z_0_xyy_zzzzzz[k] = -g_z_0_z_0_yy_zzzzzz[k] * ab_x + g_z_0_z_0_yy_xzzzzzz[k];
            }

            /// Set up 2352-2380 components of targeted buffer : cbuffer.data(

            auto g_z_0_z_0_xyz_xxxxxx = cbuffer.data(fi_geom_1010_off + 2352 * ccomps * dcomps);

            auto g_z_0_z_0_xyz_xxxxxy = cbuffer.data(fi_geom_1010_off + 2353 * ccomps * dcomps);

            auto g_z_0_z_0_xyz_xxxxxz = cbuffer.data(fi_geom_1010_off + 2354 * ccomps * dcomps);

            auto g_z_0_z_0_xyz_xxxxyy = cbuffer.data(fi_geom_1010_off + 2355 * ccomps * dcomps);

            auto g_z_0_z_0_xyz_xxxxyz = cbuffer.data(fi_geom_1010_off + 2356 * ccomps * dcomps);

            auto g_z_0_z_0_xyz_xxxxzz = cbuffer.data(fi_geom_1010_off + 2357 * ccomps * dcomps);

            auto g_z_0_z_0_xyz_xxxyyy = cbuffer.data(fi_geom_1010_off + 2358 * ccomps * dcomps);

            auto g_z_0_z_0_xyz_xxxyyz = cbuffer.data(fi_geom_1010_off + 2359 * ccomps * dcomps);

            auto g_z_0_z_0_xyz_xxxyzz = cbuffer.data(fi_geom_1010_off + 2360 * ccomps * dcomps);

            auto g_z_0_z_0_xyz_xxxzzz = cbuffer.data(fi_geom_1010_off + 2361 * ccomps * dcomps);

            auto g_z_0_z_0_xyz_xxyyyy = cbuffer.data(fi_geom_1010_off + 2362 * ccomps * dcomps);

            auto g_z_0_z_0_xyz_xxyyyz = cbuffer.data(fi_geom_1010_off + 2363 * ccomps * dcomps);

            auto g_z_0_z_0_xyz_xxyyzz = cbuffer.data(fi_geom_1010_off + 2364 * ccomps * dcomps);

            auto g_z_0_z_0_xyz_xxyzzz = cbuffer.data(fi_geom_1010_off + 2365 * ccomps * dcomps);

            auto g_z_0_z_0_xyz_xxzzzz = cbuffer.data(fi_geom_1010_off + 2366 * ccomps * dcomps);

            auto g_z_0_z_0_xyz_xyyyyy = cbuffer.data(fi_geom_1010_off + 2367 * ccomps * dcomps);

            auto g_z_0_z_0_xyz_xyyyyz = cbuffer.data(fi_geom_1010_off + 2368 * ccomps * dcomps);

            auto g_z_0_z_0_xyz_xyyyzz = cbuffer.data(fi_geom_1010_off + 2369 * ccomps * dcomps);

            auto g_z_0_z_0_xyz_xyyzzz = cbuffer.data(fi_geom_1010_off + 2370 * ccomps * dcomps);

            auto g_z_0_z_0_xyz_xyzzzz = cbuffer.data(fi_geom_1010_off + 2371 * ccomps * dcomps);

            auto g_z_0_z_0_xyz_xzzzzz = cbuffer.data(fi_geom_1010_off + 2372 * ccomps * dcomps);

            auto g_z_0_z_0_xyz_yyyyyy = cbuffer.data(fi_geom_1010_off + 2373 * ccomps * dcomps);

            auto g_z_0_z_0_xyz_yyyyyz = cbuffer.data(fi_geom_1010_off + 2374 * ccomps * dcomps);

            auto g_z_0_z_0_xyz_yyyyzz = cbuffer.data(fi_geom_1010_off + 2375 * ccomps * dcomps);

            auto g_z_0_z_0_xyz_yyyzzz = cbuffer.data(fi_geom_1010_off + 2376 * ccomps * dcomps);

            auto g_z_0_z_0_xyz_yyzzzz = cbuffer.data(fi_geom_1010_off + 2377 * ccomps * dcomps);

            auto g_z_0_z_0_xyz_yzzzzz = cbuffer.data(fi_geom_1010_off + 2378 * ccomps * dcomps);

            auto g_z_0_z_0_xyz_zzzzzz = cbuffer.data(fi_geom_1010_off + 2379 * ccomps * dcomps);

            #pragma omp simd aligned(g_z_0_z_0_xyz_xxxxxx, g_z_0_z_0_xyz_xxxxxy, g_z_0_z_0_xyz_xxxxxz, g_z_0_z_0_xyz_xxxxyy, g_z_0_z_0_xyz_xxxxyz, g_z_0_z_0_xyz_xxxxzz, g_z_0_z_0_xyz_xxxyyy, g_z_0_z_0_xyz_xxxyyz, g_z_0_z_0_xyz_xxxyzz, g_z_0_z_0_xyz_xxxzzz, g_z_0_z_0_xyz_xxyyyy, g_z_0_z_0_xyz_xxyyyz, g_z_0_z_0_xyz_xxyyzz, g_z_0_z_0_xyz_xxyzzz, g_z_0_z_0_xyz_xxzzzz, g_z_0_z_0_xyz_xyyyyy, g_z_0_z_0_xyz_xyyyyz, g_z_0_z_0_xyz_xyyyzz, g_z_0_z_0_xyz_xyyzzz, g_z_0_z_0_xyz_xyzzzz, g_z_0_z_0_xyz_xzzzzz, g_z_0_z_0_xyz_yyyyyy, g_z_0_z_0_xyz_yyyyyz, g_z_0_z_0_xyz_yyyyzz, g_z_0_z_0_xyz_yyyzzz, g_z_0_z_0_xyz_yyzzzz, g_z_0_z_0_xyz_yzzzzz, g_z_0_z_0_xyz_zzzzzz, g_z_0_z_0_yz_xxxxxx, g_z_0_z_0_yz_xxxxxxx, g_z_0_z_0_yz_xxxxxxy, g_z_0_z_0_yz_xxxxxxz, g_z_0_z_0_yz_xxxxxy, g_z_0_z_0_yz_xxxxxyy, g_z_0_z_0_yz_xxxxxyz, g_z_0_z_0_yz_xxxxxz, g_z_0_z_0_yz_xxxxxzz, g_z_0_z_0_yz_xxxxyy, g_z_0_z_0_yz_xxxxyyy, g_z_0_z_0_yz_xxxxyyz, g_z_0_z_0_yz_xxxxyz, g_z_0_z_0_yz_xxxxyzz, g_z_0_z_0_yz_xxxxzz, g_z_0_z_0_yz_xxxxzzz, g_z_0_z_0_yz_xxxyyy, g_z_0_z_0_yz_xxxyyyy, g_z_0_z_0_yz_xxxyyyz, g_z_0_z_0_yz_xxxyyz, g_z_0_z_0_yz_xxxyyzz, g_z_0_z_0_yz_xxxyzz, g_z_0_z_0_yz_xxxyzzz, g_z_0_z_0_yz_xxxzzz, g_z_0_z_0_yz_xxxzzzz, g_z_0_z_0_yz_xxyyyy, g_z_0_z_0_yz_xxyyyyy, g_z_0_z_0_yz_xxyyyyz, g_z_0_z_0_yz_xxyyyz, g_z_0_z_0_yz_xxyyyzz, g_z_0_z_0_yz_xxyyzz, g_z_0_z_0_yz_xxyyzzz, g_z_0_z_0_yz_xxyzzz, g_z_0_z_0_yz_xxyzzzz, g_z_0_z_0_yz_xxzzzz, g_z_0_z_0_yz_xxzzzzz, g_z_0_z_0_yz_xyyyyy, g_z_0_z_0_yz_xyyyyyy, g_z_0_z_0_yz_xyyyyyz, g_z_0_z_0_yz_xyyyyz, g_z_0_z_0_yz_xyyyyzz, g_z_0_z_0_yz_xyyyzz, g_z_0_z_0_yz_xyyyzzz, g_z_0_z_0_yz_xyyzzz, g_z_0_z_0_yz_xyyzzzz, g_z_0_z_0_yz_xyzzzz, g_z_0_z_0_yz_xyzzzzz, g_z_0_z_0_yz_xzzzzz, g_z_0_z_0_yz_xzzzzzz, g_z_0_z_0_yz_yyyyyy, g_z_0_z_0_yz_yyyyyz, g_z_0_z_0_yz_yyyyzz, g_z_0_z_0_yz_yyyzzz, g_z_0_z_0_yz_yyzzzz, g_z_0_z_0_yz_yzzzzz, g_z_0_z_0_yz_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_z_0_z_0_xyz_xxxxxx[k] = -g_z_0_z_0_yz_xxxxxx[k] * ab_x + g_z_0_z_0_yz_xxxxxxx[k];

                g_z_0_z_0_xyz_xxxxxy[k] = -g_z_0_z_0_yz_xxxxxy[k] * ab_x + g_z_0_z_0_yz_xxxxxxy[k];

                g_z_0_z_0_xyz_xxxxxz[k] = -g_z_0_z_0_yz_xxxxxz[k] * ab_x + g_z_0_z_0_yz_xxxxxxz[k];

                g_z_0_z_0_xyz_xxxxyy[k] = -g_z_0_z_0_yz_xxxxyy[k] * ab_x + g_z_0_z_0_yz_xxxxxyy[k];

                g_z_0_z_0_xyz_xxxxyz[k] = -g_z_0_z_0_yz_xxxxyz[k] * ab_x + g_z_0_z_0_yz_xxxxxyz[k];

                g_z_0_z_0_xyz_xxxxzz[k] = -g_z_0_z_0_yz_xxxxzz[k] * ab_x + g_z_0_z_0_yz_xxxxxzz[k];

                g_z_0_z_0_xyz_xxxyyy[k] = -g_z_0_z_0_yz_xxxyyy[k] * ab_x + g_z_0_z_0_yz_xxxxyyy[k];

                g_z_0_z_0_xyz_xxxyyz[k] = -g_z_0_z_0_yz_xxxyyz[k] * ab_x + g_z_0_z_0_yz_xxxxyyz[k];

                g_z_0_z_0_xyz_xxxyzz[k] = -g_z_0_z_0_yz_xxxyzz[k] * ab_x + g_z_0_z_0_yz_xxxxyzz[k];

                g_z_0_z_0_xyz_xxxzzz[k] = -g_z_0_z_0_yz_xxxzzz[k] * ab_x + g_z_0_z_0_yz_xxxxzzz[k];

                g_z_0_z_0_xyz_xxyyyy[k] = -g_z_0_z_0_yz_xxyyyy[k] * ab_x + g_z_0_z_0_yz_xxxyyyy[k];

                g_z_0_z_0_xyz_xxyyyz[k] = -g_z_0_z_0_yz_xxyyyz[k] * ab_x + g_z_0_z_0_yz_xxxyyyz[k];

                g_z_0_z_0_xyz_xxyyzz[k] = -g_z_0_z_0_yz_xxyyzz[k] * ab_x + g_z_0_z_0_yz_xxxyyzz[k];

                g_z_0_z_0_xyz_xxyzzz[k] = -g_z_0_z_0_yz_xxyzzz[k] * ab_x + g_z_0_z_0_yz_xxxyzzz[k];

                g_z_0_z_0_xyz_xxzzzz[k] = -g_z_0_z_0_yz_xxzzzz[k] * ab_x + g_z_0_z_0_yz_xxxzzzz[k];

                g_z_0_z_0_xyz_xyyyyy[k] = -g_z_0_z_0_yz_xyyyyy[k] * ab_x + g_z_0_z_0_yz_xxyyyyy[k];

                g_z_0_z_0_xyz_xyyyyz[k] = -g_z_0_z_0_yz_xyyyyz[k] * ab_x + g_z_0_z_0_yz_xxyyyyz[k];

                g_z_0_z_0_xyz_xyyyzz[k] = -g_z_0_z_0_yz_xyyyzz[k] * ab_x + g_z_0_z_0_yz_xxyyyzz[k];

                g_z_0_z_0_xyz_xyyzzz[k] = -g_z_0_z_0_yz_xyyzzz[k] * ab_x + g_z_0_z_0_yz_xxyyzzz[k];

                g_z_0_z_0_xyz_xyzzzz[k] = -g_z_0_z_0_yz_xyzzzz[k] * ab_x + g_z_0_z_0_yz_xxyzzzz[k];

                g_z_0_z_0_xyz_xzzzzz[k] = -g_z_0_z_0_yz_xzzzzz[k] * ab_x + g_z_0_z_0_yz_xxzzzzz[k];

                g_z_0_z_0_xyz_yyyyyy[k] = -g_z_0_z_0_yz_yyyyyy[k] * ab_x + g_z_0_z_0_yz_xyyyyyy[k];

                g_z_0_z_0_xyz_yyyyyz[k] = -g_z_0_z_0_yz_yyyyyz[k] * ab_x + g_z_0_z_0_yz_xyyyyyz[k];

                g_z_0_z_0_xyz_yyyyzz[k] = -g_z_0_z_0_yz_yyyyzz[k] * ab_x + g_z_0_z_0_yz_xyyyyzz[k];

                g_z_0_z_0_xyz_yyyzzz[k] = -g_z_0_z_0_yz_yyyzzz[k] * ab_x + g_z_0_z_0_yz_xyyyzzz[k];

                g_z_0_z_0_xyz_yyzzzz[k] = -g_z_0_z_0_yz_yyzzzz[k] * ab_x + g_z_0_z_0_yz_xyyzzzz[k];

                g_z_0_z_0_xyz_yzzzzz[k] = -g_z_0_z_0_yz_yzzzzz[k] * ab_x + g_z_0_z_0_yz_xyzzzzz[k];

                g_z_0_z_0_xyz_zzzzzz[k] = -g_z_0_z_0_yz_zzzzzz[k] * ab_x + g_z_0_z_0_yz_xzzzzzz[k];
            }

            /// Set up 2380-2408 components of targeted buffer : cbuffer.data(

            auto g_z_0_z_0_xzz_xxxxxx = cbuffer.data(fi_geom_1010_off + 2380 * ccomps * dcomps);

            auto g_z_0_z_0_xzz_xxxxxy = cbuffer.data(fi_geom_1010_off + 2381 * ccomps * dcomps);

            auto g_z_0_z_0_xzz_xxxxxz = cbuffer.data(fi_geom_1010_off + 2382 * ccomps * dcomps);

            auto g_z_0_z_0_xzz_xxxxyy = cbuffer.data(fi_geom_1010_off + 2383 * ccomps * dcomps);

            auto g_z_0_z_0_xzz_xxxxyz = cbuffer.data(fi_geom_1010_off + 2384 * ccomps * dcomps);

            auto g_z_0_z_0_xzz_xxxxzz = cbuffer.data(fi_geom_1010_off + 2385 * ccomps * dcomps);

            auto g_z_0_z_0_xzz_xxxyyy = cbuffer.data(fi_geom_1010_off + 2386 * ccomps * dcomps);

            auto g_z_0_z_0_xzz_xxxyyz = cbuffer.data(fi_geom_1010_off + 2387 * ccomps * dcomps);

            auto g_z_0_z_0_xzz_xxxyzz = cbuffer.data(fi_geom_1010_off + 2388 * ccomps * dcomps);

            auto g_z_0_z_0_xzz_xxxzzz = cbuffer.data(fi_geom_1010_off + 2389 * ccomps * dcomps);

            auto g_z_0_z_0_xzz_xxyyyy = cbuffer.data(fi_geom_1010_off + 2390 * ccomps * dcomps);

            auto g_z_0_z_0_xzz_xxyyyz = cbuffer.data(fi_geom_1010_off + 2391 * ccomps * dcomps);

            auto g_z_0_z_0_xzz_xxyyzz = cbuffer.data(fi_geom_1010_off + 2392 * ccomps * dcomps);

            auto g_z_0_z_0_xzz_xxyzzz = cbuffer.data(fi_geom_1010_off + 2393 * ccomps * dcomps);

            auto g_z_0_z_0_xzz_xxzzzz = cbuffer.data(fi_geom_1010_off + 2394 * ccomps * dcomps);

            auto g_z_0_z_0_xzz_xyyyyy = cbuffer.data(fi_geom_1010_off + 2395 * ccomps * dcomps);

            auto g_z_0_z_0_xzz_xyyyyz = cbuffer.data(fi_geom_1010_off + 2396 * ccomps * dcomps);

            auto g_z_0_z_0_xzz_xyyyzz = cbuffer.data(fi_geom_1010_off + 2397 * ccomps * dcomps);

            auto g_z_0_z_0_xzz_xyyzzz = cbuffer.data(fi_geom_1010_off + 2398 * ccomps * dcomps);

            auto g_z_0_z_0_xzz_xyzzzz = cbuffer.data(fi_geom_1010_off + 2399 * ccomps * dcomps);

            auto g_z_0_z_0_xzz_xzzzzz = cbuffer.data(fi_geom_1010_off + 2400 * ccomps * dcomps);

            auto g_z_0_z_0_xzz_yyyyyy = cbuffer.data(fi_geom_1010_off + 2401 * ccomps * dcomps);

            auto g_z_0_z_0_xzz_yyyyyz = cbuffer.data(fi_geom_1010_off + 2402 * ccomps * dcomps);

            auto g_z_0_z_0_xzz_yyyyzz = cbuffer.data(fi_geom_1010_off + 2403 * ccomps * dcomps);

            auto g_z_0_z_0_xzz_yyyzzz = cbuffer.data(fi_geom_1010_off + 2404 * ccomps * dcomps);

            auto g_z_0_z_0_xzz_yyzzzz = cbuffer.data(fi_geom_1010_off + 2405 * ccomps * dcomps);

            auto g_z_0_z_0_xzz_yzzzzz = cbuffer.data(fi_geom_1010_off + 2406 * ccomps * dcomps);

            auto g_z_0_z_0_xzz_zzzzzz = cbuffer.data(fi_geom_1010_off + 2407 * ccomps * dcomps);

            #pragma omp simd aligned(g_z_0_z_0_xzz_xxxxxx, g_z_0_z_0_xzz_xxxxxy, g_z_0_z_0_xzz_xxxxxz, g_z_0_z_0_xzz_xxxxyy, g_z_0_z_0_xzz_xxxxyz, g_z_0_z_0_xzz_xxxxzz, g_z_0_z_0_xzz_xxxyyy, g_z_0_z_0_xzz_xxxyyz, g_z_0_z_0_xzz_xxxyzz, g_z_0_z_0_xzz_xxxzzz, g_z_0_z_0_xzz_xxyyyy, g_z_0_z_0_xzz_xxyyyz, g_z_0_z_0_xzz_xxyyzz, g_z_0_z_0_xzz_xxyzzz, g_z_0_z_0_xzz_xxzzzz, g_z_0_z_0_xzz_xyyyyy, g_z_0_z_0_xzz_xyyyyz, g_z_0_z_0_xzz_xyyyzz, g_z_0_z_0_xzz_xyyzzz, g_z_0_z_0_xzz_xyzzzz, g_z_0_z_0_xzz_xzzzzz, g_z_0_z_0_xzz_yyyyyy, g_z_0_z_0_xzz_yyyyyz, g_z_0_z_0_xzz_yyyyzz, g_z_0_z_0_xzz_yyyzzz, g_z_0_z_0_xzz_yyzzzz, g_z_0_z_0_xzz_yzzzzz, g_z_0_z_0_xzz_zzzzzz, g_z_0_z_0_zz_xxxxxx, g_z_0_z_0_zz_xxxxxxx, g_z_0_z_0_zz_xxxxxxy, g_z_0_z_0_zz_xxxxxxz, g_z_0_z_0_zz_xxxxxy, g_z_0_z_0_zz_xxxxxyy, g_z_0_z_0_zz_xxxxxyz, g_z_0_z_0_zz_xxxxxz, g_z_0_z_0_zz_xxxxxzz, g_z_0_z_0_zz_xxxxyy, g_z_0_z_0_zz_xxxxyyy, g_z_0_z_0_zz_xxxxyyz, g_z_0_z_0_zz_xxxxyz, g_z_0_z_0_zz_xxxxyzz, g_z_0_z_0_zz_xxxxzz, g_z_0_z_0_zz_xxxxzzz, g_z_0_z_0_zz_xxxyyy, g_z_0_z_0_zz_xxxyyyy, g_z_0_z_0_zz_xxxyyyz, g_z_0_z_0_zz_xxxyyz, g_z_0_z_0_zz_xxxyyzz, g_z_0_z_0_zz_xxxyzz, g_z_0_z_0_zz_xxxyzzz, g_z_0_z_0_zz_xxxzzz, g_z_0_z_0_zz_xxxzzzz, g_z_0_z_0_zz_xxyyyy, g_z_0_z_0_zz_xxyyyyy, g_z_0_z_0_zz_xxyyyyz, g_z_0_z_0_zz_xxyyyz, g_z_0_z_0_zz_xxyyyzz, g_z_0_z_0_zz_xxyyzz, g_z_0_z_0_zz_xxyyzzz, g_z_0_z_0_zz_xxyzzz, g_z_0_z_0_zz_xxyzzzz, g_z_0_z_0_zz_xxzzzz, g_z_0_z_0_zz_xxzzzzz, g_z_0_z_0_zz_xyyyyy, g_z_0_z_0_zz_xyyyyyy, g_z_0_z_0_zz_xyyyyyz, g_z_0_z_0_zz_xyyyyz, g_z_0_z_0_zz_xyyyyzz, g_z_0_z_0_zz_xyyyzz, g_z_0_z_0_zz_xyyyzzz, g_z_0_z_0_zz_xyyzzz, g_z_0_z_0_zz_xyyzzzz, g_z_0_z_0_zz_xyzzzz, g_z_0_z_0_zz_xyzzzzz, g_z_0_z_0_zz_xzzzzz, g_z_0_z_0_zz_xzzzzzz, g_z_0_z_0_zz_yyyyyy, g_z_0_z_0_zz_yyyyyz, g_z_0_z_0_zz_yyyyzz, g_z_0_z_0_zz_yyyzzz, g_z_0_z_0_zz_yyzzzz, g_z_0_z_0_zz_yzzzzz, g_z_0_z_0_zz_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_z_0_z_0_xzz_xxxxxx[k] = -g_z_0_z_0_zz_xxxxxx[k] * ab_x + g_z_0_z_0_zz_xxxxxxx[k];

                g_z_0_z_0_xzz_xxxxxy[k] = -g_z_0_z_0_zz_xxxxxy[k] * ab_x + g_z_0_z_0_zz_xxxxxxy[k];

                g_z_0_z_0_xzz_xxxxxz[k] = -g_z_0_z_0_zz_xxxxxz[k] * ab_x + g_z_0_z_0_zz_xxxxxxz[k];

                g_z_0_z_0_xzz_xxxxyy[k] = -g_z_0_z_0_zz_xxxxyy[k] * ab_x + g_z_0_z_0_zz_xxxxxyy[k];

                g_z_0_z_0_xzz_xxxxyz[k] = -g_z_0_z_0_zz_xxxxyz[k] * ab_x + g_z_0_z_0_zz_xxxxxyz[k];

                g_z_0_z_0_xzz_xxxxzz[k] = -g_z_0_z_0_zz_xxxxzz[k] * ab_x + g_z_0_z_0_zz_xxxxxzz[k];

                g_z_0_z_0_xzz_xxxyyy[k] = -g_z_0_z_0_zz_xxxyyy[k] * ab_x + g_z_0_z_0_zz_xxxxyyy[k];

                g_z_0_z_0_xzz_xxxyyz[k] = -g_z_0_z_0_zz_xxxyyz[k] * ab_x + g_z_0_z_0_zz_xxxxyyz[k];

                g_z_0_z_0_xzz_xxxyzz[k] = -g_z_0_z_0_zz_xxxyzz[k] * ab_x + g_z_0_z_0_zz_xxxxyzz[k];

                g_z_0_z_0_xzz_xxxzzz[k] = -g_z_0_z_0_zz_xxxzzz[k] * ab_x + g_z_0_z_0_zz_xxxxzzz[k];

                g_z_0_z_0_xzz_xxyyyy[k] = -g_z_0_z_0_zz_xxyyyy[k] * ab_x + g_z_0_z_0_zz_xxxyyyy[k];

                g_z_0_z_0_xzz_xxyyyz[k] = -g_z_0_z_0_zz_xxyyyz[k] * ab_x + g_z_0_z_0_zz_xxxyyyz[k];

                g_z_0_z_0_xzz_xxyyzz[k] = -g_z_0_z_0_zz_xxyyzz[k] * ab_x + g_z_0_z_0_zz_xxxyyzz[k];

                g_z_0_z_0_xzz_xxyzzz[k] = -g_z_0_z_0_zz_xxyzzz[k] * ab_x + g_z_0_z_0_zz_xxxyzzz[k];

                g_z_0_z_0_xzz_xxzzzz[k] = -g_z_0_z_0_zz_xxzzzz[k] * ab_x + g_z_0_z_0_zz_xxxzzzz[k];

                g_z_0_z_0_xzz_xyyyyy[k] = -g_z_0_z_0_zz_xyyyyy[k] * ab_x + g_z_0_z_0_zz_xxyyyyy[k];

                g_z_0_z_0_xzz_xyyyyz[k] = -g_z_0_z_0_zz_xyyyyz[k] * ab_x + g_z_0_z_0_zz_xxyyyyz[k];

                g_z_0_z_0_xzz_xyyyzz[k] = -g_z_0_z_0_zz_xyyyzz[k] * ab_x + g_z_0_z_0_zz_xxyyyzz[k];

                g_z_0_z_0_xzz_xyyzzz[k] = -g_z_0_z_0_zz_xyyzzz[k] * ab_x + g_z_0_z_0_zz_xxyyzzz[k];

                g_z_0_z_0_xzz_xyzzzz[k] = -g_z_0_z_0_zz_xyzzzz[k] * ab_x + g_z_0_z_0_zz_xxyzzzz[k];

                g_z_0_z_0_xzz_xzzzzz[k] = -g_z_0_z_0_zz_xzzzzz[k] * ab_x + g_z_0_z_0_zz_xxzzzzz[k];

                g_z_0_z_0_xzz_yyyyyy[k] = -g_z_0_z_0_zz_yyyyyy[k] * ab_x + g_z_0_z_0_zz_xyyyyyy[k];

                g_z_0_z_0_xzz_yyyyyz[k] = -g_z_0_z_0_zz_yyyyyz[k] * ab_x + g_z_0_z_0_zz_xyyyyyz[k];

                g_z_0_z_0_xzz_yyyyzz[k] = -g_z_0_z_0_zz_yyyyzz[k] * ab_x + g_z_0_z_0_zz_xyyyyzz[k];

                g_z_0_z_0_xzz_yyyzzz[k] = -g_z_0_z_0_zz_yyyzzz[k] * ab_x + g_z_0_z_0_zz_xyyyzzz[k];

                g_z_0_z_0_xzz_yyzzzz[k] = -g_z_0_z_0_zz_yyzzzz[k] * ab_x + g_z_0_z_0_zz_xyyzzzz[k];

                g_z_0_z_0_xzz_yzzzzz[k] = -g_z_0_z_0_zz_yzzzzz[k] * ab_x + g_z_0_z_0_zz_xyzzzzz[k];

                g_z_0_z_0_xzz_zzzzzz[k] = -g_z_0_z_0_zz_zzzzzz[k] * ab_x + g_z_0_z_0_zz_xzzzzzz[k];
            }

            /// Set up 2408-2436 components of targeted buffer : cbuffer.data(

            auto g_z_0_z_0_yyy_xxxxxx = cbuffer.data(fi_geom_1010_off + 2408 * ccomps * dcomps);

            auto g_z_0_z_0_yyy_xxxxxy = cbuffer.data(fi_geom_1010_off + 2409 * ccomps * dcomps);

            auto g_z_0_z_0_yyy_xxxxxz = cbuffer.data(fi_geom_1010_off + 2410 * ccomps * dcomps);

            auto g_z_0_z_0_yyy_xxxxyy = cbuffer.data(fi_geom_1010_off + 2411 * ccomps * dcomps);

            auto g_z_0_z_0_yyy_xxxxyz = cbuffer.data(fi_geom_1010_off + 2412 * ccomps * dcomps);

            auto g_z_0_z_0_yyy_xxxxzz = cbuffer.data(fi_geom_1010_off + 2413 * ccomps * dcomps);

            auto g_z_0_z_0_yyy_xxxyyy = cbuffer.data(fi_geom_1010_off + 2414 * ccomps * dcomps);

            auto g_z_0_z_0_yyy_xxxyyz = cbuffer.data(fi_geom_1010_off + 2415 * ccomps * dcomps);

            auto g_z_0_z_0_yyy_xxxyzz = cbuffer.data(fi_geom_1010_off + 2416 * ccomps * dcomps);

            auto g_z_0_z_0_yyy_xxxzzz = cbuffer.data(fi_geom_1010_off + 2417 * ccomps * dcomps);

            auto g_z_0_z_0_yyy_xxyyyy = cbuffer.data(fi_geom_1010_off + 2418 * ccomps * dcomps);

            auto g_z_0_z_0_yyy_xxyyyz = cbuffer.data(fi_geom_1010_off + 2419 * ccomps * dcomps);

            auto g_z_0_z_0_yyy_xxyyzz = cbuffer.data(fi_geom_1010_off + 2420 * ccomps * dcomps);

            auto g_z_0_z_0_yyy_xxyzzz = cbuffer.data(fi_geom_1010_off + 2421 * ccomps * dcomps);

            auto g_z_0_z_0_yyy_xxzzzz = cbuffer.data(fi_geom_1010_off + 2422 * ccomps * dcomps);

            auto g_z_0_z_0_yyy_xyyyyy = cbuffer.data(fi_geom_1010_off + 2423 * ccomps * dcomps);

            auto g_z_0_z_0_yyy_xyyyyz = cbuffer.data(fi_geom_1010_off + 2424 * ccomps * dcomps);

            auto g_z_0_z_0_yyy_xyyyzz = cbuffer.data(fi_geom_1010_off + 2425 * ccomps * dcomps);

            auto g_z_0_z_0_yyy_xyyzzz = cbuffer.data(fi_geom_1010_off + 2426 * ccomps * dcomps);

            auto g_z_0_z_0_yyy_xyzzzz = cbuffer.data(fi_geom_1010_off + 2427 * ccomps * dcomps);

            auto g_z_0_z_0_yyy_xzzzzz = cbuffer.data(fi_geom_1010_off + 2428 * ccomps * dcomps);

            auto g_z_0_z_0_yyy_yyyyyy = cbuffer.data(fi_geom_1010_off + 2429 * ccomps * dcomps);

            auto g_z_0_z_0_yyy_yyyyyz = cbuffer.data(fi_geom_1010_off + 2430 * ccomps * dcomps);

            auto g_z_0_z_0_yyy_yyyyzz = cbuffer.data(fi_geom_1010_off + 2431 * ccomps * dcomps);

            auto g_z_0_z_0_yyy_yyyzzz = cbuffer.data(fi_geom_1010_off + 2432 * ccomps * dcomps);

            auto g_z_0_z_0_yyy_yyzzzz = cbuffer.data(fi_geom_1010_off + 2433 * ccomps * dcomps);

            auto g_z_0_z_0_yyy_yzzzzz = cbuffer.data(fi_geom_1010_off + 2434 * ccomps * dcomps);

            auto g_z_0_z_0_yyy_zzzzzz = cbuffer.data(fi_geom_1010_off + 2435 * ccomps * dcomps);

            #pragma omp simd aligned(g_z_0_z_0_yy_xxxxxx, g_z_0_z_0_yy_xxxxxxy, g_z_0_z_0_yy_xxxxxy, g_z_0_z_0_yy_xxxxxyy, g_z_0_z_0_yy_xxxxxyz, g_z_0_z_0_yy_xxxxxz, g_z_0_z_0_yy_xxxxyy, g_z_0_z_0_yy_xxxxyyy, g_z_0_z_0_yy_xxxxyyz, g_z_0_z_0_yy_xxxxyz, g_z_0_z_0_yy_xxxxyzz, g_z_0_z_0_yy_xxxxzz, g_z_0_z_0_yy_xxxyyy, g_z_0_z_0_yy_xxxyyyy, g_z_0_z_0_yy_xxxyyyz, g_z_0_z_0_yy_xxxyyz, g_z_0_z_0_yy_xxxyyzz, g_z_0_z_0_yy_xxxyzz, g_z_0_z_0_yy_xxxyzzz, g_z_0_z_0_yy_xxxzzz, g_z_0_z_0_yy_xxyyyy, g_z_0_z_0_yy_xxyyyyy, g_z_0_z_0_yy_xxyyyyz, g_z_0_z_0_yy_xxyyyz, g_z_0_z_0_yy_xxyyyzz, g_z_0_z_0_yy_xxyyzz, g_z_0_z_0_yy_xxyyzzz, g_z_0_z_0_yy_xxyzzz, g_z_0_z_0_yy_xxyzzzz, g_z_0_z_0_yy_xxzzzz, g_z_0_z_0_yy_xyyyyy, g_z_0_z_0_yy_xyyyyyy, g_z_0_z_0_yy_xyyyyyz, g_z_0_z_0_yy_xyyyyz, g_z_0_z_0_yy_xyyyyzz, g_z_0_z_0_yy_xyyyzz, g_z_0_z_0_yy_xyyyzzz, g_z_0_z_0_yy_xyyzzz, g_z_0_z_0_yy_xyyzzzz, g_z_0_z_0_yy_xyzzzz, g_z_0_z_0_yy_xyzzzzz, g_z_0_z_0_yy_xzzzzz, g_z_0_z_0_yy_yyyyyy, g_z_0_z_0_yy_yyyyyyy, g_z_0_z_0_yy_yyyyyyz, g_z_0_z_0_yy_yyyyyz, g_z_0_z_0_yy_yyyyyzz, g_z_0_z_0_yy_yyyyzz, g_z_0_z_0_yy_yyyyzzz, g_z_0_z_0_yy_yyyzzz, g_z_0_z_0_yy_yyyzzzz, g_z_0_z_0_yy_yyzzzz, g_z_0_z_0_yy_yyzzzzz, g_z_0_z_0_yy_yzzzzz, g_z_0_z_0_yy_yzzzzzz, g_z_0_z_0_yy_zzzzzz, g_z_0_z_0_yyy_xxxxxx, g_z_0_z_0_yyy_xxxxxy, g_z_0_z_0_yyy_xxxxxz, g_z_0_z_0_yyy_xxxxyy, g_z_0_z_0_yyy_xxxxyz, g_z_0_z_0_yyy_xxxxzz, g_z_0_z_0_yyy_xxxyyy, g_z_0_z_0_yyy_xxxyyz, g_z_0_z_0_yyy_xxxyzz, g_z_0_z_0_yyy_xxxzzz, g_z_0_z_0_yyy_xxyyyy, g_z_0_z_0_yyy_xxyyyz, g_z_0_z_0_yyy_xxyyzz, g_z_0_z_0_yyy_xxyzzz, g_z_0_z_0_yyy_xxzzzz, g_z_0_z_0_yyy_xyyyyy, g_z_0_z_0_yyy_xyyyyz, g_z_0_z_0_yyy_xyyyzz, g_z_0_z_0_yyy_xyyzzz, g_z_0_z_0_yyy_xyzzzz, g_z_0_z_0_yyy_xzzzzz, g_z_0_z_0_yyy_yyyyyy, g_z_0_z_0_yyy_yyyyyz, g_z_0_z_0_yyy_yyyyzz, g_z_0_z_0_yyy_yyyzzz, g_z_0_z_0_yyy_yyzzzz, g_z_0_z_0_yyy_yzzzzz, g_z_0_z_0_yyy_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_z_0_z_0_yyy_xxxxxx[k] = -g_z_0_z_0_yy_xxxxxx[k] * ab_y + g_z_0_z_0_yy_xxxxxxy[k];

                g_z_0_z_0_yyy_xxxxxy[k] = -g_z_0_z_0_yy_xxxxxy[k] * ab_y + g_z_0_z_0_yy_xxxxxyy[k];

                g_z_0_z_0_yyy_xxxxxz[k] = -g_z_0_z_0_yy_xxxxxz[k] * ab_y + g_z_0_z_0_yy_xxxxxyz[k];

                g_z_0_z_0_yyy_xxxxyy[k] = -g_z_0_z_0_yy_xxxxyy[k] * ab_y + g_z_0_z_0_yy_xxxxyyy[k];

                g_z_0_z_0_yyy_xxxxyz[k] = -g_z_0_z_0_yy_xxxxyz[k] * ab_y + g_z_0_z_0_yy_xxxxyyz[k];

                g_z_0_z_0_yyy_xxxxzz[k] = -g_z_0_z_0_yy_xxxxzz[k] * ab_y + g_z_0_z_0_yy_xxxxyzz[k];

                g_z_0_z_0_yyy_xxxyyy[k] = -g_z_0_z_0_yy_xxxyyy[k] * ab_y + g_z_0_z_0_yy_xxxyyyy[k];

                g_z_0_z_0_yyy_xxxyyz[k] = -g_z_0_z_0_yy_xxxyyz[k] * ab_y + g_z_0_z_0_yy_xxxyyyz[k];

                g_z_0_z_0_yyy_xxxyzz[k] = -g_z_0_z_0_yy_xxxyzz[k] * ab_y + g_z_0_z_0_yy_xxxyyzz[k];

                g_z_0_z_0_yyy_xxxzzz[k] = -g_z_0_z_0_yy_xxxzzz[k] * ab_y + g_z_0_z_0_yy_xxxyzzz[k];

                g_z_0_z_0_yyy_xxyyyy[k] = -g_z_0_z_0_yy_xxyyyy[k] * ab_y + g_z_0_z_0_yy_xxyyyyy[k];

                g_z_0_z_0_yyy_xxyyyz[k] = -g_z_0_z_0_yy_xxyyyz[k] * ab_y + g_z_0_z_0_yy_xxyyyyz[k];

                g_z_0_z_0_yyy_xxyyzz[k] = -g_z_0_z_0_yy_xxyyzz[k] * ab_y + g_z_0_z_0_yy_xxyyyzz[k];

                g_z_0_z_0_yyy_xxyzzz[k] = -g_z_0_z_0_yy_xxyzzz[k] * ab_y + g_z_0_z_0_yy_xxyyzzz[k];

                g_z_0_z_0_yyy_xxzzzz[k] = -g_z_0_z_0_yy_xxzzzz[k] * ab_y + g_z_0_z_0_yy_xxyzzzz[k];

                g_z_0_z_0_yyy_xyyyyy[k] = -g_z_0_z_0_yy_xyyyyy[k] * ab_y + g_z_0_z_0_yy_xyyyyyy[k];

                g_z_0_z_0_yyy_xyyyyz[k] = -g_z_0_z_0_yy_xyyyyz[k] * ab_y + g_z_0_z_0_yy_xyyyyyz[k];

                g_z_0_z_0_yyy_xyyyzz[k] = -g_z_0_z_0_yy_xyyyzz[k] * ab_y + g_z_0_z_0_yy_xyyyyzz[k];

                g_z_0_z_0_yyy_xyyzzz[k] = -g_z_0_z_0_yy_xyyzzz[k] * ab_y + g_z_0_z_0_yy_xyyyzzz[k];

                g_z_0_z_0_yyy_xyzzzz[k] = -g_z_0_z_0_yy_xyzzzz[k] * ab_y + g_z_0_z_0_yy_xyyzzzz[k];

                g_z_0_z_0_yyy_xzzzzz[k] = -g_z_0_z_0_yy_xzzzzz[k] * ab_y + g_z_0_z_0_yy_xyzzzzz[k];

                g_z_0_z_0_yyy_yyyyyy[k] = -g_z_0_z_0_yy_yyyyyy[k] * ab_y + g_z_0_z_0_yy_yyyyyyy[k];

                g_z_0_z_0_yyy_yyyyyz[k] = -g_z_0_z_0_yy_yyyyyz[k] * ab_y + g_z_0_z_0_yy_yyyyyyz[k];

                g_z_0_z_0_yyy_yyyyzz[k] = -g_z_0_z_0_yy_yyyyzz[k] * ab_y + g_z_0_z_0_yy_yyyyyzz[k];

                g_z_0_z_0_yyy_yyyzzz[k] = -g_z_0_z_0_yy_yyyzzz[k] * ab_y + g_z_0_z_0_yy_yyyyzzz[k];

                g_z_0_z_0_yyy_yyzzzz[k] = -g_z_0_z_0_yy_yyzzzz[k] * ab_y + g_z_0_z_0_yy_yyyzzzz[k];

                g_z_0_z_0_yyy_yzzzzz[k] = -g_z_0_z_0_yy_yzzzzz[k] * ab_y + g_z_0_z_0_yy_yyzzzzz[k];

                g_z_0_z_0_yyy_zzzzzz[k] = -g_z_0_z_0_yy_zzzzzz[k] * ab_y + g_z_0_z_0_yy_yzzzzzz[k];
            }

            /// Set up 2436-2464 components of targeted buffer : cbuffer.data(

            auto g_z_0_z_0_yyz_xxxxxx = cbuffer.data(fi_geom_1010_off + 2436 * ccomps * dcomps);

            auto g_z_0_z_0_yyz_xxxxxy = cbuffer.data(fi_geom_1010_off + 2437 * ccomps * dcomps);

            auto g_z_0_z_0_yyz_xxxxxz = cbuffer.data(fi_geom_1010_off + 2438 * ccomps * dcomps);

            auto g_z_0_z_0_yyz_xxxxyy = cbuffer.data(fi_geom_1010_off + 2439 * ccomps * dcomps);

            auto g_z_0_z_0_yyz_xxxxyz = cbuffer.data(fi_geom_1010_off + 2440 * ccomps * dcomps);

            auto g_z_0_z_0_yyz_xxxxzz = cbuffer.data(fi_geom_1010_off + 2441 * ccomps * dcomps);

            auto g_z_0_z_0_yyz_xxxyyy = cbuffer.data(fi_geom_1010_off + 2442 * ccomps * dcomps);

            auto g_z_0_z_0_yyz_xxxyyz = cbuffer.data(fi_geom_1010_off + 2443 * ccomps * dcomps);

            auto g_z_0_z_0_yyz_xxxyzz = cbuffer.data(fi_geom_1010_off + 2444 * ccomps * dcomps);

            auto g_z_0_z_0_yyz_xxxzzz = cbuffer.data(fi_geom_1010_off + 2445 * ccomps * dcomps);

            auto g_z_0_z_0_yyz_xxyyyy = cbuffer.data(fi_geom_1010_off + 2446 * ccomps * dcomps);

            auto g_z_0_z_0_yyz_xxyyyz = cbuffer.data(fi_geom_1010_off + 2447 * ccomps * dcomps);

            auto g_z_0_z_0_yyz_xxyyzz = cbuffer.data(fi_geom_1010_off + 2448 * ccomps * dcomps);

            auto g_z_0_z_0_yyz_xxyzzz = cbuffer.data(fi_geom_1010_off + 2449 * ccomps * dcomps);

            auto g_z_0_z_0_yyz_xxzzzz = cbuffer.data(fi_geom_1010_off + 2450 * ccomps * dcomps);

            auto g_z_0_z_0_yyz_xyyyyy = cbuffer.data(fi_geom_1010_off + 2451 * ccomps * dcomps);

            auto g_z_0_z_0_yyz_xyyyyz = cbuffer.data(fi_geom_1010_off + 2452 * ccomps * dcomps);

            auto g_z_0_z_0_yyz_xyyyzz = cbuffer.data(fi_geom_1010_off + 2453 * ccomps * dcomps);

            auto g_z_0_z_0_yyz_xyyzzz = cbuffer.data(fi_geom_1010_off + 2454 * ccomps * dcomps);

            auto g_z_0_z_0_yyz_xyzzzz = cbuffer.data(fi_geom_1010_off + 2455 * ccomps * dcomps);

            auto g_z_0_z_0_yyz_xzzzzz = cbuffer.data(fi_geom_1010_off + 2456 * ccomps * dcomps);

            auto g_z_0_z_0_yyz_yyyyyy = cbuffer.data(fi_geom_1010_off + 2457 * ccomps * dcomps);

            auto g_z_0_z_0_yyz_yyyyyz = cbuffer.data(fi_geom_1010_off + 2458 * ccomps * dcomps);

            auto g_z_0_z_0_yyz_yyyyzz = cbuffer.data(fi_geom_1010_off + 2459 * ccomps * dcomps);

            auto g_z_0_z_0_yyz_yyyzzz = cbuffer.data(fi_geom_1010_off + 2460 * ccomps * dcomps);

            auto g_z_0_z_0_yyz_yyzzzz = cbuffer.data(fi_geom_1010_off + 2461 * ccomps * dcomps);

            auto g_z_0_z_0_yyz_yzzzzz = cbuffer.data(fi_geom_1010_off + 2462 * ccomps * dcomps);

            auto g_z_0_z_0_yyz_zzzzzz = cbuffer.data(fi_geom_1010_off + 2463 * ccomps * dcomps);

            #pragma omp simd aligned(g_z_0_z_0_yyz_xxxxxx, g_z_0_z_0_yyz_xxxxxy, g_z_0_z_0_yyz_xxxxxz, g_z_0_z_0_yyz_xxxxyy, g_z_0_z_0_yyz_xxxxyz, g_z_0_z_0_yyz_xxxxzz, g_z_0_z_0_yyz_xxxyyy, g_z_0_z_0_yyz_xxxyyz, g_z_0_z_0_yyz_xxxyzz, g_z_0_z_0_yyz_xxxzzz, g_z_0_z_0_yyz_xxyyyy, g_z_0_z_0_yyz_xxyyyz, g_z_0_z_0_yyz_xxyyzz, g_z_0_z_0_yyz_xxyzzz, g_z_0_z_0_yyz_xxzzzz, g_z_0_z_0_yyz_xyyyyy, g_z_0_z_0_yyz_xyyyyz, g_z_0_z_0_yyz_xyyyzz, g_z_0_z_0_yyz_xyyzzz, g_z_0_z_0_yyz_xyzzzz, g_z_0_z_0_yyz_xzzzzz, g_z_0_z_0_yyz_yyyyyy, g_z_0_z_0_yyz_yyyyyz, g_z_0_z_0_yyz_yyyyzz, g_z_0_z_0_yyz_yyyzzz, g_z_0_z_0_yyz_yyzzzz, g_z_0_z_0_yyz_yzzzzz, g_z_0_z_0_yyz_zzzzzz, g_z_0_z_0_yz_xxxxxx, g_z_0_z_0_yz_xxxxxxy, g_z_0_z_0_yz_xxxxxy, g_z_0_z_0_yz_xxxxxyy, g_z_0_z_0_yz_xxxxxyz, g_z_0_z_0_yz_xxxxxz, g_z_0_z_0_yz_xxxxyy, g_z_0_z_0_yz_xxxxyyy, g_z_0_z_0_yz_xxxxyyz, g_z_0_z_0_yz_xxxxyz, g_z_0_z_0_yz_xxxxyzz, g_z_0_z_0_yz_xxxxzz, g_z_0_z_0_yz_xxxyyy, g_z_0_z_0_yz_xxxyyyy, g_z_0_z_0_yz_xxxyyyz, g_z_0_z_0_yz_xxxyyz, g_z_0_z_0_yz_xxxyyzz, g_z_0_z_0_yz_xxxyzz, g_z_0_z_0_yz_xxxyzzz, g_z_0_z_0_yz_xxxzzz, g_z_0_z_0_yz_xxyyyy, g_z_0_z_0_yz_xxyyyyy, g_z_0_z_0_yz_xxyyyyz, g_z_0_z_0_yz_xxyyyz, g_z_0_z_0_yz_xxyyyzz, g_z_0_z_0_yz_xxyyzz, g_z_0_z_0_yz_xxyyzzz, g_z_0_z_0_yz_xxyzzz, g_z_0_z_0_yz_xxyzzzz, g_z_0_z_0_yz_xxzzzz, g_z_0_z_0_yz_xyyyyy, g_z_0_z_0_yz_xyyyyyy, g_z_0_z_0_yz_xyyyyyz, g_z_0_z_0_yz_xyyyyz, g_z_0_z_0_yz_xyyyyzz, g_z_0_z_0_yz_xyyyzz, g_z_0_z_0_yz_xyyyzzz, g_z_0_z_0_yz_xyyzzz, g_z_0_z_0_yz_xyyzzzz, g_z_0_z_0_yz_xyzzzz, g_z_0_z_0_yz_xyzzzzz, g_z_0_z_0_yz_xzzzzz, g_z_0_z_0_yz_yyyyyy, g_z_0_z_0_yz_yyyyyyy, g_z_0_z_0_yz_yyyyyyz, g_z_0_z_0_yz_yyyyyz, g_z_0_z_0_yz_yyyyyzz, g_z_0_z_0_yz_yyyyzz, g_z_0_z_0_yz_yyyyzzz, g_z_0_z_0_yz_yyyzzz, g_z_0_z_0_yz_yyyzzzz, g_z_0_z_0_yz_yyzzzz, g_z_0_z_0_yz_yyzzzzz, g_z_0_z_0_yz_yzzzzz, g_z_0_z_0_yz_yzzzzzz, g_z_0_z_0_yz_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_z_0_z_0_yyz_xxxxxx[k] = -g_z_0_z_0_yz_xxxxxx[k] * ab_y + g_z_0_z_0_yz_xxxxxxy[k];

                g_z_0_z_0_yyz_xxxxxy[k] = -g_z_0_z_0_yz_xxxxxy[k] * ab_y + g_z_0_z_0_yz_xxxxxyy[k];

                g_z_0_z_0_yyz_xxxxxz[k] = -g_z_0_z_0_yz_xxxxxz[k] * ab_y + g_z_0_z_0_yz_xxxxxyz[k];

                g_z_0_z_0_yyz_xxxxyy[k] = -g_z_0_z_0_yz_xxxxyy[k] * ab_y + g_z_0_z_0_yz_xxxxyyy[k];

                g_z_0_z_0_yyz_xxxxyz[k] = -g_z_0_z_0_yz_xxxxyz[k] * ab_y + g_z_0_z_0_yz_xxxxyyz[k];

                g_z_0_z_0_yyz_xxxxzz[k] = -g_z_0_z_0_yz_xxxxzz[k] * ab_y + g_z_0_z_0_yz_xxxxyzz[k];

                g_z_0_z_0_yyz_xxxyyy[k] = -g_z_0_z_0_yz_xxxyyy[k] * ab_y + g_z_0_z_0_yz_xxxyyyy[k];

                g_z_0_z_0_yyz_xxxyyz[k] = -g_z_0_z_0_yz_xxxyyz[k] * ab_y + g_z_0_z_0_yz_xxxyyyz[k];

                g_z_0_z_0_yyz_xxxyzz[k] = -g_z_0_z_0_yz_xxxyzz[k] * ab_y + g_z_0_z_0_yz_xxxyyzz[k];

                g_z_0_z_0_yyz_xxxzzz[k] = -g_z_0_z_0_yz_xxxzzz[k] * ab_y + g_z_0_z_0_yz_xxxyzzz[k];

                g_z_0_z_0_yyz_xxyyyy[k] = -g_z_0_z_0_yz_xxyyyy[k] * ab_y + g_z_0_z_0_yz_xxyyyyy[k];

                g_z_0_z_0_yyz_xxyyyz[k] = -g_z_0_z_0_yz_xxyyyz[k] * ab_y + g_z_0_z_0_yz_xxyyyyz[k];

                g_z_0_z_0_yyz_xxyyzz[k] = -g_z_0_z_0_yz_xxyyzz[k] * ab_y + g_z_0_z_0_yz_xxyyyzz[k];

                g_z_0_z_0_yyz_xxyzzz[k] = -g_z_0_z_0_yz_xxyzzz[k] * ab_y + g_z_0_z_0_yz_xxyyzzz[k];

                g_z_0_z_0_yyz_xxzzzz[k] = -g_z_0_z_0_yz_xxzzzz[k] * ab_y + g_z_0_z_0_yz_xxyzzzz[k];

                g_z_0_z_0_yyz_xyyyyy[k] = -g_z_0_z_0_yz_xyyyyy[k] * ab_y + g_z_0_z_0_yz_xyyyyyy[k];

                g_z_0_z_0_yyz_xyyyyz[k] = -g_z_0_z_0_yz_xyyyyz[k] * ab_y + g_z_0_z_0_yz_xyyyyyz[k];

                g_z_0_z_0_yyz_xyyyzz[k] = -g_z_0_z_0_yz_xyyyzz[k] * ab_y + g_z_0_z_0_yz_xyyyyzz[k];

                g_z_0_z_0_yyz_xyyzzz[k] = -g_z_0_z_0_yz_xyyzzz[k] * ab_y + g_z_0_z_0_yz_xyyyzzz[k];

                g_z_0_z_0_yyz_xyzzzz[k] = -g_z_0_z_0_yz_xyzzzz[k] * ab_y + g_z_0_z_0_yz_xyyzzzz[k];

                g_z_0_z_0_yyz_xzzzzz[k] = -g_z_0_z_0_yz_xzzzzz[k] * ab_y + g_z_0_z_0_yz_xyzzzzz[k];

                g_z_0_z_0_yyz_yyyyyy[k] = -g_z_0_z_0_yz_yyyyyy[k] * ab_y + g_z_0_z_0_yz_yyyyyyy[k];

                g_z_0_z_0_yyz_yyyyyz[k] = -g_z_0_z_0_yz_yyyyyz[k] * ab_y + g_z_0_z_0_yz_yyyyyyz[k];

                g_z_0_z_0_yyz_yyyyzz[k] = -g_z_0_z_0_yz_yyyyzz[k] * ab_y + g_z_0_z_0_yz_yyyyyzz[k];

                g_z_0_z_0_yyz_yyyzzz[k] = -g_z_0_z_0_yz_yyyzzz[k] * ab_y + g_z_0_z_0_yz_yyyyzzz[k];

                g_z_0_z_0_yyz_yyzzzz[k] = -g_z_0_z_0_yz_yyzzzz[k] * ab_y + g_z_0_z_0_yz_yyyzzzz[k];

                g_z_0_z_0_yyz_yzzzzz[k] = -g_z_0_z_0_yz_yzzzzz[k] * ab_y + g_z_0_z_0_yz_yyzzzzz[k];

                g_z_0_z_0_yyz_zzzzzz[k] = -g_z_0_z_0_yz_zzzzzz[k] * ab_y + g_z_0_z_0_yz_yzzzzzz[k];
            }

            /// Set up 2464-2492 components of targeted buffer : cbuffer.data(

            auto g_z_0_z_0_yzz_xxxxxx = cbuffer.data(fi_geom_1010_off + 2464 * ccomps * dcomps);

            auto g_z_0_z_0_yzz_xxxxxy = cbuffer.data(fi_geom_1010_off + 2465 * ccomps * dcomps);

            auto g_z_0_z_0_yzz_xxxxxz = cbuffer.data(fi_geom_1010_off + 2466 * ccomps * dcomps);

            auto g_z_0_z_0_yzz_xxxxyy = cbuffer.data(fi_geom_1010_off + 2467 * ccomps * dcomps);

            auto g_z_0_z_0_yzz_xxxxyz = cbuffer.data(fi_geom_1010_off + 2468 * ccomps * dcomps);

            auto g_z_0_z_0_yzz_xxxxzz = cbuffer.data(fi_geom_1010_off + 2469 * ccomps * dcomps);

            auto g_z_0_z_0_yzz_xxxyyy = cbuffer.data(fi_geom_1010_off + 2470 * ccomps * dcomps);

            auto g_z_0_z_0_yzz_xxxyyz = cbuffer.data(fi_geom_1010_off + 2471 * ccomps * dcomps);

            auto g_z_0_z_0_yzz_xxxyzz = cbuffer.data(fi_geom_1010_off + 2472 * ccomps * dcomps);

            auto g_z_0_z_0_yzz_xxxzzz = cbuffer.data(fi_geom_1010_off + 2473 * ccomps * dcomps);

            auto g_z_0_z_0_yzz_xxyyyy = cbuffer.data(fi_geom_1010_off + 2474 * ccomps * dcomps);

            auto g_z_0_z_0_yzz_xxyyyz = cbuffer.data(fi_geom_1010_off + 2475 * ccomps * dcomps);

            auto g_z_0_z_0_yzz_xxyyzz = cbuffer.data(fi_geom_1010_off + 2476 * ccomps * dcomps);

            auto g_z_0_z_0_yzz_xxyzzz = cbuffer.data(fi_geom_1010_off + 2477 * ccomps * dcomps);

            auto g_z_0_z_0_yzz_xxzzzz = cbuffer.data(fi_geom_1010_off + 2478 * ccomps * dcomps);

            auto g_z_0_z_0_yzz_xyyyyy = cbuffer.data(fi_geom_1010_off + 2479 * ccomps * dcomps);

            auto g_z_0_z_0_yzz_xyyyyz = cbuffer.data(fi_geom_1010_off + 2480 * ccomps * dcomps);

            auto g_z_0_z_0_yzz_xyyyzz = cbuffer.data(fi_geom_1010_off + 2481 * ccomps * dcomps);

            auto g_z_0_z_0_yzz_xyyzzz = cbuffer.data(fi_geom_1010_off + 2482 * ccomps * dcomps);

            auto g_z_0_z_0_yzz_xyzzzz = cbuffer.data(fi_geom_1010_off + 2483 * ccomps * dcomps);

            auto g_z_0_z_0_yzz_xzzzzz = cbuffer.data(fi_geom_1010_off + 2484 * ccomps * dcomps);

            auto g_z_0_z_0_yzz_yyyyyy = cbuffer.data(fi_geom_1010_off + 2485 * ccomps * dcomps);

            auto g_z_0_z_0_yzz_yyyyyz = cbuffer.data(fi_geom_1010_off + 2486 * ccomps * dcomps);

            auto g_z_0_z_0_yzz_yyyyzz = cbuffer.data(fi_geom_1010_off + 2487 * ccomps * dcomps);

            auto g_z_0_z_0_yzz_yyyzzz = cbuffer.data(fi_geom_1010_off + 2488 * ccomps * dcomps);

            auto g_z_0_z_0_yzz_yyzzzz = cbuffer.data(fi_geom_1010_off + 2489 * ccomps * dcomps);

            auto g_z_0_z_0_yzz_yzzzzz = cbuffer.data(fi_geom_1010_off + 2490 * ccomps * dcomps);

            auto g_z_0_z_0_yzz_zzzzzz = cbuffer.data(fi_geom_1010_off + 2491 * ccomps * dcomps);

            #pragma omp simd aligned(g_z_0_z_0_yzz_xxxxxx, g_z_0_z_0_yzz_xxxxxy, g_z_0_z_0_yzz_xxxxxz, g_z_0_z_0_yzz_xxxxyy, g_z_0_z_0_yzz_xxxxyz, g_z_0_z_0_yzz_xxxxzz, g_z_0_z_0_yzz_xxxyyy, g_z_0_z_0_yzz_xxxyyz, g_z_0_z_0_yzz_xxxyzz, g_z_0_z_0_yzz_xxxzzz, g_z_0_z_0_yzz_xxyyyy, g_z_0_z_0_yzz_xxyyyz, g_z_0_z_0_yzz_xxyyzz, g_z_0_z_0_yzz_xxyzzz, g_z_0_z_0_yzz_xxzzzz, g_z_0_z_0_yzz_xyyyyy, g_z_0_z_0_yzz_xyyyyz, g_z_0_z_0_yzz_xyyyzz, g_z_0_z_0_yzz_xyyzzz, g_z_0_z_0_yzz_xyzzzz, g_z_0_z_0_yzz_xzzzzz, g_z_0_z_0_yzz_yyyyyy, g_z_0_z_0_yzz_yyyyyz, g_z_0_z_0_yzz_yyyyzz, g_z_0_z_0_yzz_yyyzzz, g_z_0_z_0_yzz_yyzzzz, g_z_0_z_0_yzz_yzzzzz, g_z_0_z_0_yzz_zzzzzz, g_z_0_z_0_zz_xxxxxx, g_z_0_z_0_zz_xxxxxxy, g_z_0_z_0_zz_xxxxxy, g_z_0_z_0_zz_xxxxxyy, g_z_0_z_0_zz_xxxxxyz, g_z_0_z_0_zz_xxxxxz, g_z_0_z_0_zz_xxxxyy, g_z_0_z_0_zz_xxxxyyy, g_z_0_z_0_zz_xxxxyyz, g_z_0_z_0_zz_xxxxyz, g_z_0_z_0_zz_xxxxyzz, g_z_0_z_0_zz_xxxxzz, g_z_0_z_0_zz_xxxyyy, g_z_0_z_0_zz_xxxyyyy, g_z_0_z_0_zz_xxxyyyz, g_z_0_z_0_zz_xxxyyz, g_z_0_z_0_zz_xxxyyzz, g_z_0_z_0_zz_xxxyzz, g_z_0_z_0_zz_xxxyzzz, g_z_0_z_0_zz_xxxzzz, g_z_0_z_0_zz_xxyyyy, g_z_0_z_0_zz_xxyyyyy, g_z_0_z_0_zz_xxyyyyz, g_z_0_z_0_zz_xxyyyz, g_z_0_z_0_zz_xxyyyzz, g_z_0_z_0_zz_xxyyzz, g_z_0_z_0_zz_xxyyzzz, g_z_0_z_0_zz_xxyzzz, g_z_0_z_0_zz_xxyzzzz, g_z_0_z_0_zz_xxzzzz, g_z_0_z_0_zz_xyyyyy, g_z_0_z_0_zz_xyyyyyy, g_z_0_z_0_zz_xyyyyyz, g_z_0_z_0_zz_xyyyyz, g_z_0_z_0_zz_xyyyyzz, g_z_0_z_0_zz_xyyyzz, g_z_0_z_0_zz_xyyyzzz, g_z_0_z_0_zz_xyyzzz, g_z_0_z_0_zz_xyyzzzz, g_z_0_z_0_zz_xyzzzz, g_z_0_z_0_zz_xyzzzzz, g_z_0_z_0_zz_xzzzzz, g_z_0_z_0_zz_yyyyyy, g_z_0_z_0_zz_yyyyyyy, g_z_0_z_0_zz_yyyyyyz, g_z_0_z_0_zz_yyyyyz, g_z_0_z_0_zz_yyyyyzz, g_z_0_z_0_zz_yyyyzz, g_z_0_z_0_zz_yyyyzzz, g_z_0_z_0_zz_yyyzzz, g_z_0_z_0_zz_yyyzzzz, g_z_0_z_0_zz_yyzzzz, g_z_0_z_0_zz_yyzzzzz, g_z_0_z_0_zz_yzzzzz, g_z_0_z_0_zz_yzzzzzz, g_z_0_z_0_zz_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_z_0_z_0_yzz_xxxxxx[k] = -g_z_0_z_0_zz_xxxxxx[k] * ab_y + g_z_0_z_0_zz_xxxxxxy[k];

                g_z_0_z_0_yzz_xxxxxy[k] = -g_z_0_z_0_zz_xxxxxy[k] * ab_y + g_z_0_z_0_zz_xxxxxyy[k];

                g_z_0_z_0_yzz_xxxxxz[k] = -g_z_0_z_0_zz_xxxxxz[k] * ab_y + g_z_0_z_0_zz_xxxxxyz[k];

                g_z_0_z_0_yzz_xxxxyy[k] = -g_z_0_z_0_zz_xxxxyy[k] * ab_y + g_z_0_z_0_zz_xxxxyyy[k];

                g_z_0_z_0_yzz_xxxxyz[k] = -g_z_0_z_0_zz_xxxxyz[k] * ab_y + g_z_0_z_0_zz_xxxxyyz[k];

                g_z_0_z_0_yzz_xxxxzz[k] = -g_z_0_z_0_zz_xxxxzz[k] * ab_y + g_z_0_z_0_zz_xxxxyzz[k];

                g_z_0_z_0_yzz_xxxyyy[k] = -g_z_0_z_0_zz_xxxyyy[k] * ab_y + g_z_0_z_0_zz_xxxyyyy[k];

                g_z_0_z_0_yzz_xxxyyz[k] = -g_z_0_z_0_zz_xxxyyz[k] * ab_y + g_z_0_z_0_zz_xxxyyyz[k];

                g_z_0_z_0_yzz_xxxyzz[k] = -g_z_0_z_0_zz_xxxyzz[k] * ab_y + g_z_0_z_0_zz_xxxyyzz[k];

                g_z_0_z_0_yzz_xxxzzz[k] = -g_z_0_z_0_zz_xxxzzz[k] * ab_y + g_z_0_z_0_zz_xxxyzzz[k];

                g_z_0_z_0_yzz_xxyyyy[k] = -g_z_0_z_0_zz_xxyyyy[k] * ab_y + g_z_0_z_0_zz_xxyyyyy[k];

                g_z_0_z_0_yzz_xxyyyz[k] = -g_z_0_z_0_zz_xxyyyz[k] * ab_y + g_z_0_z_0_zz_xxyyyyz[k];

                g_z_0_z_0_yzz_xxyyzz[k] = -g_z_0_z_0_zz_xxyyzz[k] * ab_y + g_z_0_z_0_zz_xxyyyzz[k];

                g_z_0_z_0_yzz_xxyzzz[k] = -g_z_0_z_0_zz_xxyzzz[k] * ab_y + g_z_0_z_0_zz_xxyyzzz[k];

                g_z_0_z_0_yzz_xxzzzz[k] = -g_z_0_z_0_zz_xxzzzz[k] * ab_y + g_z_0_z_0_zz_xxyzzzz[k];

                g_z_0_z_0_yzz_xyyyyy[k] = -g_z_0_z_0_zz_xyyyyy[k] * ab_y + g_z_0_z_0_zz_xyyyyyy[k];

                g_z_0_z_0_yzz_xyyyyz[k] = -g_z_0_z_0_zz_xyyyyz[k] * ab_y + g_z_0_z_0_zz_xyyyyyz[k];

                g_z_0_z_0_yzz_xyyyzz[k] = -g_z_0_z_0_zz_xyyyzz[k] * ab_y + g_z_0_z_0_zz_xyyyyzz[k];

                g_z_0_z_0_yzz_xyyzzz[k] = -g_z_0_z_0_zz_xyyzzz[k] * ab_y + g_z_0_z_0_zz_xyyyzzz[k];

                g_z_0_z_0_yzz_xyzzzz[k] = -g_z_0_z_0_zz_xyzzzz[k] * ab_y + g_z_0_z_0_zz_xyyzzzz[k];

                g_z_0_z_0_yzz_xzzzzz[k] = -g_z_0_z_0_zz_xzzzzz[k] * ab_y + g_z_0_z_0_zz_xyzzzzz[k];

                g_z_0_z_0_yzz_yyyyyy[k] = -g_z_0_z_0_zz_yyyyyy[k] * ab_y + g_z_0_z_0_zz_yyyyyyy[k];

                g_z_0_z_0_yzz_yyyyyz[k] = -g_z_0_z_0_zz_yyyyyz[k] * ab_y + g_z_0_z_0_zz_yyyyyyz[k];

                g_z_0_z_0_yzz_yyyyzz[k] = -g_z_0_z_0_zz_yyyyzz[k] * ab_y + g_z_0_z_0_zz_yyyyyzz[k];

                g_z_0_z_0_yzz_yyyzzz[k] = -g_z_0_z_0_zz_yyyzzz[k] * ab_y + g_z_0_z_0_zz_yyyyzzz[k];

                g_z_0_z_0_yzz_yyzzzz[k] = -g_z_0_z_0_zz_yyzzzz[k] * ab_y + g_z_0_z_0_zz_yyyzzzz[k];

                g_z_0_z_0_yzz_yzzzzz[k] = -g_z_0_z_0_zz_yzzzzz[k] * ab_y + g_z_0_z_0_zz_yyzzzzz[k];

                g_z_0_z_0_yzz_zzzzzz[k] = -g_z_0_z_0_zz_zzzzzz[k] * ab_y + g_z_0_z_0_zz_yzzzzzz[k];
            }

            /// Set up 2492-2520 components of targeted buffer : cbuffer.data(

            auto g_z_0_z_0_zzz_xxxxxx = cbuffer.data(fi_geom_1010_off + 2492 * ccomps * dcomps);

            auto g_z_0_z_0_zzz_xxxxxy = cbuffer.data(fi_geom_1010_off + 2493 * ccomps * dcomps);

            auto g_z_0_z_0_zzz_xxxxxz = cbuffer.data(fi_geom_1010_off + 2494 * ccomps * dcomps);

            auto g_z_0_z_0_zzz_xxxxyy = cbuffer.data(fi_geom_1010_off + 2495 * ccomps * dcomps);

            auto g_z_0_z_0_zzz_xxxxyz = cbuffer.data(fi_geom_1010_off + 2496 * ccomps * dcomps);

            auto g_z_0_z_0_zzz_xxxxzz = cbuffer.data(fi_geom_1010_off + 2497 * ccomps * dcomps);

            auto g_z_0_z_0_zzz_xxxyyy = cbuffer.data(fi_geom_1010_off + 2498 * ccomps * dcomps);

            auto g_z_0_z_0_zzz_xxxyyz = cbuffer.data(fi_geom_1010_off + 2499 * ccomps * dcomps);

            auto g_z_0_z_0_zzz_xxxyzz = cbuffer.data(fi_geom_1010_off + 2500 * ccomps * dcomps);

            auto g_z_0_z_0_zzz_xxxzzz = cbuffer.data(fi_geom_1010_off + 2501 * ccomps * dcomps);

            auto g_z_0_z_0_zzz_xxyyyy = cbuffer.data(fi_geom_1010_off + 2502 * ccomps * dcomps);

            auto g_z_0_z_0_zzz_xxyyyz = cbuffer.data(fi_geom_1010_off + 2503 * ccomps * dcomps);

            auto g_z_0_z_0_zzz_xxyyzz = cbuffer.data(fi_geom_1010_off + 2504 * ccomps * dcomps);

            auto g_z_0_z_0_zzz_xxyzzz = cbuffer.data(fi_geom_1010_off + 2505 * ccomps * dcomps);

            auto g_z_0_z_0_zzz_xxzzzz = cbuffer.data(fi_geom_1010_off + 2506 * ccomps * dcomps);

            auto g_z_0_z_0_zzz_xyyyyy = cbuffer.data(fi_geom_1010_off + 2507 * ccomps * dcomps);

            auto g_z_0_z_0_zzz_xyyyyz = cbuffer.data(fi_geom_1010_off + 2508 * ccomps * dcomps);

            auto g_z_0_z_0_zzz_xyyyzz = cbuffer.data(fi_geom_1010_off + 2509 * ccomps * dcomps);

            auto g_z_0_z_0_zzz_xyyzzz = cbuffer.data(fi_geom_1010_off + 2510 * ccomps * dcomps);

            auto g_z_0_z_0_zzz_xyzzzz = cbuffer.data(fi_geom_1010_off + 2511 * ccomps * dcomps);

            auto g_z_0_z_0_zzz_xzzzzz = cbuffer.data(fi_geom_1010_off + 2512 * ccomps * dcomps);

            auto g_z_0_z_0_zzz_yyyyyy = cbuffer.data(fi_geom_1010_off + 2513 * ccomps * dcomps);

            auto g_z_0_z_0_zzz_yyyyyz = cbuffer.data(fi_geom_1010_off + 2514 * ccomps * dcomps);

            auto g_z_0_z_0_zzz_yyyyzz = cbuffer.data(fi_geom_1010_off + 2515 * ccomps * dcomps);

            auto g_z_0_z_0_zzz_yyyzzz = cbuffer.data(fi_geom_1010_off + 2516 * ccomps * dcomps);

            auto g_z_0_z_0_zzz_yyzzzz = cbuffer.data(fi_geom_1010_off + 2517 * ccomps * dcomps);

            auto g_z_0_z_0_zzz_yzzzzz = cbuffer.data(fi_geom_1010_off + 2518 * ccomps * dcomps);

            auto g_z_0_z_0_zzz_zzzzzz = cbuffer.data(fi_geom_1010_off + 2519 * ccomps * dcomps);

            #pragma omp simd aligned(g_0_0_z_0_zz_xxxxxx, g_0_0_z_0_zz_xxxxxy, g_0_0_z_0_zz_xxxxxz, g_0_0_z_0_zz_xxxxyy, g_0_0_z_0_zz_xxxxyz, g_0_0_z_0_zz_xxxxzz, g_0_0_z_0_zz_xxxyyy, g_0_0_z_0_zz_xxxyyz, g_0_0_z_0_zz_xxxyzz, g_0_0_z_0_zz_xxxzzz, g_0_0_z_0_zz_xxyyyy, g_0_0_z_0_zz_xxyyyz, g_0_0_z_0_zz_xxyyzz, g_0_0_z_0_zz_xxyzzz, g_0_0_z_0_zz_xxzzzz, g_0_0_z_0_zz_xyyyyy, g_0_0_z_0_zz_xyyyyz, g_0_0_z_0_zz_xyyyzz, g_0_0_z_0_zz_xyyzzz, g_0_0_z_0_zz_xyzzzz, g_0_0_z_0_zz_xzzzzz, g_0_0_z_0_zz_yyyyyy, g_0_0_z_0_zz_yyyyyz, g_0_0_z_0_zz_yyyyzz, g_0_0_z_0_zz_yyyzzz, g_0_0_z_0_zz_yyzzzz, g_0_0_z_0_zz_yzzzzz, g_0_0_z_0_zz_zzzzzz, g_z_0_z_0_zz_xxxxxx, g_z_0_z_0_zz_xxxxxxz, g_z_0_z_0_zz_xxxxxy, g_z_0_z_0_zz_xxxxxyz, g_z_0_z_0_zz_xxxxxz, g_z_0_z_0_zz_xxxxxzz, g_z_0_z_0_zz_xxxxyy, g_z_0_z_0_zz_xxxxyyz, g_z_0_z_0_zz_xxxxyz, g_z_0_z_0_zz_xxxxyzz, g_z_0_z_0_zz_xxxxzz, g_z_0_z_0_zz_xxxxzzz, g_z_0_z_0_zz_xxxyyy, g_z_0_z_0_zz_xxxyyyz, g_z_0_z_0_zz_xxxyyz, g_z_0_z_0_zz_xxxyyzz, g_z_0_z_0_zz_xxxyzz, g_z_0_z_0_zz_xxxyzzz, g_z_0_z_0_zz_xxxzzz, g_z_0_z_0_zz_xxxzzzz, g_z_0_z_0_zz_xxyyyy, g_z_0_z_0_zz_xxyyyyz, g_z_0_z_0_zz_xxyyyz, g_z_0_z_0_zz_xxyyyzz, g_z_0_z_0_zz_xxyyzz, g_z_0_z_0_zz_xxyyzzz, g_z_0_z_0_zz_xxyzzz, g_z_0_z_0_zz_xxyzzzz, g_z_0_z_0_zz_xxzzzz, g_z_0_z_0_zz_xxzzzzz, g_z_0_z_0_zz_xyyyyy, g_z_0_z_0_zz_xyyyyyz, g_z_0_z_0_zz_xyyyyz, g_z_0_z_0_zz_xyyyyzz, g_z_0_z_0_zz_xyyyzz, g_z_0_z_0_zz_xyyyzzz, g_z_0_z_0_zz_xyyzzz, g_z_0_z_0_zz_xyyzzzz, g_z_0_z_0_zz_xyzzzz, g_z_0_z_0_zz_xyzzzzz, g_z_0_z_0_zz_xzzzzz, g_z_0_z_0_zz_xzzzzzz, g_z_0_z_0_zz_yyyyyy, g_z_0_z_0_zz_yyyyyyz, g_z_0_z_0_zz_yyyyyz, g_z_0_z_0_zz_yyyyyzz, g_z_0_z_0_zz_yyyyzz, g_z_0_z_0_zz_yyyyzzz, g_z_0_z_0_zz_yyyzzz, g_z_0_z_0_zz_yyyzzzz, g_z_0_z_0_zz_yyzzzz, g_z_0_z_0_zz_yyzzzzz, g_z_0_z_0_zz_yzzzzz, g_z_0_z_0_zz_yzzzzzz, g_z_0_z_0_zz_zzzzzz, g_z_0_z_0_zz_zzzzzzz, g_z_0_z_0_zzz_xxxxxx, g_z_0_z_0_zzz_xxxxxy, g_z_0_z_0_zzz_xxxxxz, g_z_0_z_0_zzz_xxxxyy, g_z_0_z_0_zzz_xxxxyz, g_z_0_z_0_zzz_xxxxzz, g_z_0_z_0_zzz_xxxyyy, g_z_0_z_0_zzz_xxxyyz, g_z_0_z_0_zzz_xxxyzz, g_z_0_z_0_zzz_xxxzzz, g_z_0_z_0_zzz_xxyyyy, g_z_0_z_0_zzz_xxyyyz, g_z_0_z_0_zzz_xxyyzz, g_z_0_z_0_zzz_xxyzzz, g_z_0_z_0_zzz_xxzzzz, g_z_0_z_0_zzz_xyyyyy, g_z_0_z_0_zzz_xyyyyz, g_z_0_z_0_zzz_xyyyzz, g_z_0_z_0_zzz_xyyzzz, g_z_0_z_0_zzz_xyzzzz, g_z_0_z_0_zzz_xzzzzz, g_z_0_z_0_zzz_yyyyyy, g_z_0_z_0_zzz_yyyyyz, g_z_0_z_0_zzz_yyyyzz, g_z_0_z_0_zzz_yyyzzz, g_z_0_z_0_zzz_yyzzzz, g_z_0_z_0_zzz_yzzzzz, g_z_0_z_0_zzz_zzzzzz  : 64)
            for (size_t k = 0; k < nelems; k++)
            {
                g_z_0_z_0_zzz_xxxxxx[k] = -g_0_0_z_0_zz_xxxxxx[k] - g_z_0_z_0_zz_xxxxxx[k] * ab_z + g_z_0_z_0_zz_xxxxxxz[k];

                g_z_0_z_0_zzz_xxxxxy[k] = -g_0_0_z_0_zz_xxxxxy[k] - g_z_0_z_0_zz_xxxxxy[k] * ab_z + g_z_0_z_0_zz_xxxxxyz[k];

                g_z_0_z_0_zzz_xxxxxz[k] = -g_0_0_z_0_zz_xxxxxz[k] - g_z_0_z_0_zz_xxxxxz[k] * ab_z + g_z_0_z_0_zz_xxxxxzz[k];

                g_z_0_z_0_zzz_xxxxyy[k] = -g_0_0_z_0_zz_xxxxyy[k] - g_z_0_z_0_zz_xxxxyy[k] * ab_z + g_z_0_z_0_zz_xxxxyyz[k];

                g_z_0_z_0_zzz_xxxxyz[k] = -g_0_0_z_0_zz_xxxxyz[k] - g_z_0_z_0_zz_xxxxyz[k] * ab_z + g_z_0_z_0_zz_xxxxyzz[k];

                g_z_0_z_0_zzz_xxxxzz[k] = -g_0_0_z_0_zz_xxxxzz[k] - g_z_0_z_0_zz_xxxxzz[k] * ab_z + g_z_0_z_0_zz_xxxxzzz[k];

                g_z_0_z_0_zzz_xxxyyy[k] = -g_0_0_z_0_zz_xxxyyy[k] - g_z_0_z_0_zz_xxxyyy[k] * ab_z + g_z_0_z_0_zz_xxxyyyz[k];

                g_z_0_z_0_zzz_xxxyyz[k] = -g_0_0_z_0_zz_xxxyyz[k] - g_z_0_z_0_zz_xxxyyz[k] * ab_z + g_z_0_z_0_zz_xxxyyzz[k];

                g_z_0_z_0_zzz_xxxyzz[k] = -g_0_0_z_0_zz_xxxyzz[k] - g_z_0_z_0_zz_xxxyzz[k] * ab_z + g_z_0_z_0_zz_xxxyzzz[k];

                g_z_0_z_0_zzz_xxxzzz[k] = -g_0_0_z_0_zz_xxxzzz[k] - g_z_0_z_0_zz_xxxzzz[k] * ab_z + g_z_0_z_0_zz_xxxzzzz[k];

                g_z_0_z_0_zzz_xxyyyy[k] = -g_0_0_z_0_zz_xxyyyy[k] - g_z_0_z_0_zz_xxyyyy[k] * ab_z + g_z_0_z_0_zz_xxyyyyz[k];

                g_z_0_z_0_zzz_xxyyyz[k] = -g_0_0_z_0_zz_xxyyyz[k] - g_z_0_z_0_zz_xxyyyz[k] * ab_z + g_z_0_z_0_zz_xxyyyzz[k];

                g_z_0_z_0_zzz_xxyyzz[k] = -g_0_0_z_0_zz_xxyyzz[k] - g_z_0_z_0_zz_xxyyzz[k] * ab_z + g_z_0_z_0_zz_xxyyzzz[k];

                g_z_0_z_0_zzz_xxyzzz[k] = -g_0_0_z_0_zz_xxyzzz[k] - g_z_0_z_0_zz_xxyzzz[k] * ab_z + g_z_0_z_0_zz_xxyzzzz[k];

                g_z_0_z_0_zzz_xxzzzz[k] = -g_0_0_z_0_zz_xxzzzz[k] - g_z_0_z_0_zz_xxzzzz[k] * ab_z + g_z_0_z_0_zz_xxzzzzz[k];

                g_z_0_z_0_zzz_xyyyyy[k] = -g_0_0_z_0_zz_xyyyyy[k] - g_z_0_z_0_zz_xyyyyy[k] * ab_z + g_z_0_z_0_zz_xyyyyyz[k];

                g_z_0_z_0_zzz_xyyyyz[k] = -g_0_0_z_0_zz_xyyyyz[k] - g_z_0_z_0_zz_xyyyyz[k] * ab_z + g_z_0_z_0_zz_xyyyyzz[k];

                g_z_0_z_0_zzz_xyyyzz[k] = -g_0_0_z_0_zz_xyyyzz[k] - g_z_0_z_0_zz_xyyyzz[k] * ab_z + g_z_0_z_0_zz_xyyyzzz[k];

                g_z_0_z_0_zzz_xyyzzz[k] = -g_0_0_z_0_zz_xyyzzz[k] - g_z_0_z_0_zz_xyyzzz[k] * ab_z + g_z_0_z_0_zz_xyyzzzz[k];

                g_z_0_z_0_zzz_xyzzzz[k] = -g_0_0_z_0_zz_xyzzzz[k] - g_z_0_z_0_zz_xyzzzz[k] * ab_z + g_z_0_z_0_zz_xyzzzzz[k];

                g_z_0_z_0_zzz_xzzzzz[k] = -g_0_0_z_0_zz_xzzzzz[k] - g_z_0_z_0_zz_xzzzzz[k] * ab_z + g_z_0_z_0_zz_xzzzzzz[k];

                g_z_0_z_0_zzz_yyyyyy[k] = -g_0_0_z_0_zz_yyyyyy[k] - g_z_0_z_0_zz_yyyyyy[k] * ab_z + g_z_0_z_0_zz_yyyyyyz[k];

                g_z_0_z_0_zzz_yyyyyz[k] = -g_0_0_z_0_zz_yyyyyz[k] - g_z_0_z_0_zz_yyyyyz[k] * ab_z + g_z_0_z_0_zz_yyyyyzz[k];

                g_z_0_z_0_zzz_yyyyzz[k] = -g_0_0_z_0_zz_yyyyzz[k] - g_z_0_z_0_zz_yyyyzz[k] * ab_z + g_z_0_z_0_zz_yyyyzzz[k];

                g_z_0_z_0_zzz_yyyzzz[k] = -g_0_0_z_0_zz_yyyzzz[k] - g_z_0_z_0_zz_yyyzzz[k] * ab_z + g_z_0_z_0_zz_yyyzzzz[k];

                g_z_0_z_0_zzz_yyzzzz[k] = -g_0_0_z_0_zz_yyzzzz[k] - g_z_0_z_0_zz_yyzzzz[k] * ab_z + g_z_0_z_0_zz_yyzzzzz[k];

                g_z_0_z_0_zzz_yzzzzz[k] = -g_0_0_z_0_zz_yzzzzz[k] - g_z_0_z_0_zz_yzzzzz[k] * ab_z + g_z_0_z_0_zz_yzzzzzz[k];

                g_z_0_z_0_zzz_zzzzzz[k] = -g_0_0_z_0_zz_zzzzzz[k] - g_z_0_z_0_zz_zzzzzz[k] * ab_z + g_z_0_z_0_zz_zzzzzzz[k];
            }
        }
    }
}

} // erirec namespace

