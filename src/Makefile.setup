#
#                              VELOXCHEM
#         ----------------------------------------------------
#                     An Electronic Structure Code
#
#  Copyright Â© 2018-2024 by VeloxChem developers. All rights reserved.
#
#  SPDX-License-Identifier: LGPL-3.0-or-later
#
#  This file is part of VeloxChem.
#
#  VeloxChem is free software: you can redistribute it and/or modify it under
#  the terms of the GNU Lesser General Public License as published by the Free
#  Software Foundation, either version 3 of the License, or (at your option)
#  any later version.
#
#  VeloxChem is distributed in the hope that it will be useful, but WITHOUT
#  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
#  FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public
#  License for more details.
#
#  You should have received a copy of the GNU Lesser General Public License
#  along with VeloxChem. If not, see <https://www.gnu.org/licenses/>.

USE_MPI := true
USE_GPU := true
USE_MKL := false
USE_XTB := false

CUDA_LIB_DIR := /path/to/cuda/lib64
MPI_INC_DIR  := /path/to/mpi/include

CXX    := mpicxx
PYTHON := python3
DEVCC  := nvcc -gencode arch=compute_80,code=sm_80

CXX_REL_FLG := -fopenmp -std=c++17
CXX_DEB_FLG := -fopenmp -std=c++17

PYTHON_INC := $(shell $(PYTHON)-config --includes)
PYTHON_INC += -I$(shell $(PYTHON) -c "import mpi4py; print(mpi4py.get_include())")
PYTHON_INC += -I$(shell $(PYTHON) -c "import numpy; print(numpy.get_include())")
PYTHON_INC += $(shell $(PYTHON) -m pybind11 --includes)

CXX_REL_FLG += -fPIC $(PYTHON_INC)
CXX_DEB_FLG += -fPIC $(PYTHON_INC)

DEVCC_REL_FLG := -Xcompiler -fPIC -Xcompiler -fopenmp -std=c++17 -I$(MPI_INC_DIR)
DEVCC_DEB_FLG := -Xcompiler -fPIC -Xcompiler -fopenmp -std=c++17 -I$(MPI_INC_DIR)
DEVICE_LIB := -L$(CUDA_LIB_DIR) -lcudart -lcublas -lcusolver

MACLIBS :=

LTOFLAG :=

# Generic settings

# Compiler flags

CXX_REL_FLG += -std=c++17 -O3 -Wall
CXX_DEB_FLG += -std=c++17 -O3 -Wall -g

# Preprocessor flags

CPP_REL_FLG := -DVLX_ALIGN=64
CPP_DEB_FLG := -DVLX_ALIGN=64 -DVAR_DEBUG=1

ifeq ($(USE_MPI),true)
  CPP_REL_FLG += -DENABLE_MPI=1
  CPP_DEB_FLG += -DENABLE_MPI=1
else
  CPP_REL_FLG += -DENABLE_MPI=0
  CPP_DEB_FLG += -DENABLE_MPI=0
endif

ifeq ($(USE_GPU),true)
  CPP_REL_FLG += -DENABLE_GPU
  CPP_DEB_FLG += -DENABLE_GPU
endif

ifeq ($(USE_MKL),true)
  CPP_REL_FLG += -DENABLE_MKL
  CPP_DEB_FLG += -DENABLE_MKL
endif

# Extra flag for MacOS

LIB_LIST := $(MACLIBS)

# flag for GPU devices

LIB_LIST += $(DEVICE_LIB)

# XTB interface (optional)

ifeq ($(USE_XTB),true)
  CPP_REL_FLG += -DENABLE_XTB -DXTB_PARAMS="$(XTB_PATH)"
  CPP_DEB_FLG += -DENABLE_XTB -DXTB_PARAMS="$(XTB_PATH)"
  CXX_REL_FLG += $(XTB_INC)
  CXX_DEB_FLG += $(XTB_INC)
  LIB_LIST += $(XTB_LIB)
endif

# Native shell commands

CP := cp -f
MV := mv -f
RM := rm -f

# Native libraries generation tools

AR      := ar
ARFLAGS := rc
