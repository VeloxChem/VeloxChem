name: build

on:
  push:
    branches:
      - master
      - simd_master_test
      - multipsi_newcore

jobs:
  vlx_ci:
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash -l {0}

    container:
      image: ghcr.io/veloxchem/meta-vlx/vlx-ci_gnu:sha-1aa36de

    env:
      VLX_NUM_BUILD_JOBS: 4

    steps:
      - name: checkout code
        uses: actions/checkout@v3

      - name: build and test
        run: |
          echo "=== System Info ==="
          uname -a
          free -m
          df -h
          ulimit -a
          ulimit -s unlimited
          lscpu | egrep 'Thread|Core|Socket|^CPU\('
          echo "=== GNU Compiler ==="
          #mpicc --version
          #mpicc -show
          #mpicxx --version
          #mpicxx -show
          gcc --version
          g++ --version
          echo "=== Python ==="
          which python
          python -V
          echo "=== Python venv ==="
          python -m venv --clear venv
          source venv/bin/activate
          which python
          python -V
          echo "=== Python dependencies ==="
          python -m pip install --upgrade pip setuptools wheel
          CC=gcc MPICC=mpicc python -m pip install mpi4py --no-binary=mpi4py
          CC=gcc CXX=g++ python -m pip install MDAnalysis
          git config --global --add safe.directory $PWD
          git clone -b 3.4.0 https://gitlab.com/libeigen/eigen.git
          export EIGEN_INCLUDE_DIR=$(pwd)/eigen
          CXX=g++ python -m pip install \
            git+https://gitlab.com/FraME-projects/PyFraME.git@35188b620c84f74a73e2c28d737abee4386a503a
          echo "=== VeloxChem build ==="
          export XTBHOME=/usr/local
          export CMAKE_PREFIX_PATH=$CMAKE_PREFIX_PATH:/usr/local
          SKBUILD_CONFIGURE_OPTIONS="-DVLX_LA_VENDOR=OpenBLAS -DCMAKE_CXX_COMPILER=g++" \
            python -m pip install -v .[test,qmmm]
          echo "=== VeloxChem test ==="
          python -c "import veloxchem; print(veloxchem.__version__)"
          OMP_NUM_THREADS=2 mpiexec -n 2 python -m pytest --capture=no --log-cli-level=INFO \
            --pyargs veloxchem -m "solvers" --durations=10
          OMP_NUM_THREADS=4 python -m pytest --cov=veloxchem --capture=no --log-cli-level=INFO \
            --pyargs veloxchem -m "not timeconsuming" --durations=10
